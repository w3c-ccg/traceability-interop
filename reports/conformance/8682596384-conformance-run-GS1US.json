{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e74c3abd-9056-4567-939d-adafb7bf79c7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4557897d-bed1-4b70-8ffa-65e08688713a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "166967bb-d626-4b4b-adfe-980fb09afc23",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8cc28e8e-306e-4d2e-82fa-3e24d8fb233c"
                }
              }
            ]
          },
          {
            "id": "85f18283-c4bf-4479-8cb9-02a781f36cab",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0ef83a4f-50c9-420e-add4-005adcc055a6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0e85f9f5-7fdb-4e00-998e-85abd64b019c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ffb953aa-4fd0-4840-bfb1-31e31e10f5df",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "48783d86-9f2f-4721-bfbe-ec134f1ac901",
            "name": "Positive Testing",
            "item": [
              {
                "id": "87a7bfab-678f-45c2-a6e9-f3d07a41a4bc",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3e9ebe2-84e6-4856-abc3-328eb5fdd7ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "06874ea3-589e-462f-a342-b1b87f3cbbe4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2bb0d2ac-9985-4c6a-a47f-b99bf39881a0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e9dbaa93-4d2b-4f1a-beb8-21babae99790"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2fa24355-34d7-4ca0-b6f8-40d382f2a602",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "388caf93-cacd-43f1-bf28-323994f4e92d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d0fed5a-b38f-4603-80cd-e4dfb8080f84",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7e0a7c38-de23-4141-b12f-a49f3ba98d98"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90c84fd1-7ad8-4b28-9837-5b3785a0530e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4f261db-5764-45b7-aa05-96ec7428ce64"
            }
          }
        ]
      },
      {
        "id": "46b60bc8-bb64-407f-b336-772c81e5412c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "814058cb-f4a1-497d-a300-0a6f0ea6090c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ae22d33f-bce2-4b80-a8b7-7f6ceb41384f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "727b3c25-776a-418b-961f-c9cf8eded4cd",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "899211df-a5cb-4714-b69c-e88fa6ee8daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1992c02-56ba-454a-b1a9-c804c5d66d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584828da-1db2-42e5-8e34-e970cce4a028",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f21a8f-3be5-4a6f-a36b-5c899d82ec13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "963144e1-b26e-4f3e-8958-a5f915a9c766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32724f9d-af73-4870-b695-8b0b8c9c5a77",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c025350-430e-4a2d-9940-77278daf7a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "708c4f07-fafd-4c1c-935b-7d62a21107f1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "02ad2d9f-719f-43e1-b7fa-6b31179c05d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ebeeebe-222e-4958-bcde-9279d073b17d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e069dac2-b0b7-47ff-9b56-610b43573315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93d53719-8383-450c-ae3f-dc0e278cecf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa4ea20-0651-4aeb-b1c5-4c3e9c4e0387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eba5d3b-baa0-4bd3-8fd6-4435678a8fae"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d679d09d-7758-44db-83d5-f900820428ba",
            "name": "Positive Testing",
            "item": [
              {
                "id": "86e7057c-dbee-4d19-8d36-550b9e17bdfb",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc1ce72a-3898-4766-8958-d2a6d065526b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "155637b5-70eb-46de-98c7-a101ddf51b4c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8c47aae-d317-4a0e-bcea-33e370877a3e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "fee4c99f-24a1-4f02-bf62-12596587f452"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "44de6eb8-af43-4a04-9b59-c31a926f6192",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "83228a47-cd95-47eb-ba09-8d718b166401"
            }
          }
        ]
      },
      {
        "id": "86836ffc-d9d8-400d-90c0-dddc5f598fcd",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0c0dca13-094f-4689-8f10-65aed35db231",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8afee84c-0ba7-400f-91a9-256878c3e789",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "848b2347-96e5-4b37-8011-ee458c0846da",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e0e784-9792-492f-ab89-934624e75e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eddb9b82-ebd2-4e43-8782-061cabe7b015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfdf1cd-08f8-4f61-8b09-7ae4edf519a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20004242-ed8c-4df4-a737-1dad22e1a2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36352a5-30d3-49fe-af1b-5bf2304d0889",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25c45ca-2f25-41f6-8ad4-6c259926b77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4635020-0901-4fd4-8f0d-43f667c789c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7419bbf-0a76-41e1-9a6c-58936a3dfaf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2fbcd80-4b01-4dae-b1d8-349bfb9dd45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121d5051-3e57-44a3-b78b-1eb9d133c6b2",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6172297c-da3c-46af-92f4-c37534a64461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d9cc3f-12d6-4737-ac7f-917ef0829b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbcb98f2-9c96-42d6-b236-2501237b7b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e61c9ac2-0875-4792-9765-6d5b6bfc1d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea7231b-4dca-4c33-bd1e-7d66127fba00",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6c36f9-c11a-4bd6-b607-d8006f9696af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caaef358-8640-4be4-87f4-3ec964c09bc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6545d1d-af21-4837-8b5a-02c0a5ef1a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ec7d953-5e6d-4a65-a788-79b0330a07df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d158459-cf34-4da8-b022-f81ae17ce05a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c142dc-5eee-4197-aaf1-ffd6f60ab86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10b1dd97-a20f-4a52-b04e-3a8d2d2b14bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6a0bb1-1823-4ad4-9b64-10f6145790d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66e9f44d-0167-438f-9c12-452edc0be1cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b828970-6322-44a6-8009-0c410a10e2f0",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c66e00-cb70-4c2c-ac32-bafa8003bb17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93385766-e3a6-43f3-a3f9-dded13075c29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c95c5d6-d4d0-418e-b2b5-bf427fcb8987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eeef0106-0560-4998-820c-b01b29931a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b770335-9ec3-40d3-839d-6f18d5529b6b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa0926d-e354-45b3-ac21-10a7a6762de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68cca1cc-2e5d-4af4-8261-e65fa8775751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f58f789-1ee8-4de2-b863-b3afb4fce15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "608a3224-32d6-4dc8-9496-b16e904a36c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad7403d-85ee-4256-8d4c-f328932c3653",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f62d559-f93d-4b77-a88d-290466f35977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26dd300f-28f6-4870-b8db-3d0cc0ee402f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48322a7-726b-421a-b804-0ea052df2f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14614803-ac6c-4726-9203-79f11bb2e4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5d3504-598e-4233-89df-207744b38f0d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee34a22-9af1-47d2-baa2-4d2ea38b868b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9133be67-3399-4919-846c-0dab40ab6a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf01ef8-1e30-4d88-a4d0-1e7bc5d0bcbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "418d0209-8fa6-44d5-8c8f-29c39978148e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ee8f14-1dfb-41e9-856c-2696241fdd16",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d7dc49-6725-4648-a2a9-1158393cbfd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c14c7c56-0a46-4e8a-aa09-36d8c77fd866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f3831c-c1a8-4c6f-958b-74c083f32ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "564d60d6-a42b-49d5-b8c5-dafe14e4dc29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5597b7-9bb5-4eb7-8433-c8d00ccb9aaa",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beccd43e-c4bd-4ada-a235-f36cfc1df8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e8525f3-f821-4f28-b874-aa4900f0af94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "037b7f77-6160-4d32-b293-db0156d3167a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "718b8436-d874-4882-bb88-4ab142e950d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d248b47-1272-4927-b458-b8567b3e7b7e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "664569d2-c565-4f6f-be0e-00793de5b935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ba726d6-71ae-4998-b4f2-f24004e51621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3f0cc2-fedc-4fec-8ce8-ca908d1513ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "500cd9cf-bc5e-41bc-b36f-49024c048f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3e9539-e845-4c2a-8055-e5e65104442d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d05a43a-d712-49af-8576-f0947d830e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba2e094-3570-44a7-8bd5-a77303e371ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5812e3c0-70e1-4596-b376-5b68ca02c168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d9b0eee-91a9-46dc-8a48-5d1799e7cf4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7b038b-86cf-4553-9d06-c906151eaa08",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2700963a-e42e-4751-87f0-f37cdb540913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31d5c31d-16e3-4f27-8363-4cb2e1f1ca50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30897457-6548-4dde-9444-f0804249ebdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "329176b3-8f7c-4f5d-a281-bfa9773f08d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "817334db-258a-4b3d-9304-629b7cd48ad0",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0884daf-a1fd-4fbf-805f-10baf7a0bdd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8611d3d-5a24-4893-9e9a-13091b08f075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e706f53-6d18-44a0-9650-906829fb6619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07dbf4f2-53fe-424f-b351-9f364dcb5c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574d69fb-efda-4d62-91ef-1c91188dc3ae",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7117fb25-58dd-4089-a484-a8e927b97b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c24a1b7-13aa-46ce-b49d-e2259bfa0925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe9ee10-61b8-4b71-b333-b5d992673d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d95b9538-1989-4386-99f5-bc675e6ba072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c4f989-fbd8-4d4c-a8c4-6dbd9511a136",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64d49ac-3a25-43d9-8219-55b0dda2d78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "563c4534-a274-4ff9-b51b-a90687b173fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b2fdbe-0669-44b4-bc98-c1fe0ab24212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a3fe391-ebae-4527-bdff-610b4fbf7b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9cee4a1-ba89-48ab-9542-8c17320c5806",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "325dde72-6604-4899-82cf-e98291b98193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "302aa246-5514-4aa4-8e0c-086fe063a438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff58068-1f77-4625-9f39-189010cff8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3baff45-4025-434d-8bae-f6f5659c8665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9aaaa07-24ec-4b49-8344-8d63da6a83c9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27854c1-4610-489e-b421-d48dc2eda29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb83185-532b-4d13-9009-179d878b4b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc86f042-b016-4f54-b7b7-b40c54670a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d61989d-76c5-4351-b907-5102e65ca71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8f8fcc-4357-4412-a977-c98c871f6f4e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ebf0d4b-1e5b-4d63-b74d-1b88564ca00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8af4bb-6102-4182-9494-6e254c5fa6da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96759ff6-0a7c-4adf-8400-297ae553a087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b401e007-1a9d-4d22-a5b2-c3a8aef74c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7329a8-4554-4dab-a7fc-205ea02b97db",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e83402-5152-439e-a4b7-edf805c7e9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9abc525b-a262-4593-b8b2-3ba3c4c56e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0538d9b-e7b5-4b4a-bc6a-05c0a87396b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2fe504b-a2e3-4160-b129-bfc98ad0501c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eecf4a9-7da0-486a-85d3-3c0c5745ee21",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ee6fa6-4874-4952-af1a-66a9bef57611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd100c53-cfdb-479d-98c9-80c202813f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2004bf-0a85-44a6-9ade-7722814374f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eff8774f-b6ac-4bca-b14e-ae4982f9dffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f43688-922c-4b47-8c95-4ca065a1b98f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9c35f2-657f-40d4-ad04-5cc3560cf748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "833a6d0d-1819-4481-ba23-c7cd1fa04270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400f0743-23d9-4051-88fa-73429e24ac4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1cbf8046-0db9-45de-a0ad-0ae66d02fbce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f529b8-c07e-4fc9-81ae-304cb828b4bd",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce7ef1a-d15c-4fd8-9f98-7e0287892c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f726fd42-30dc-4834-87fd-858a1eaff292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1fef217-676c-4c6a-938a-ccffaa231bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "016d2ad0-b55a-4d96-bc3a-673a950a9e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9643b3fc-92fe-4231-8990-2aa37fbc2682",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ab332d-091a-4293-920c-7ecaf4d18ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d02f9c8-3725-41cc-8591-7092b8af389b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90dc8653-d511-43ff-afb1-70b075aeaac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "30206b05-dae6-4a61-b8df-83e696cafe3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe60432c-a8ff-4b29-8b35-86f83803fb31",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed71e1c-3971-4850-98dc-c7c19664eb7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3d9850d-9592-4984-a06f-aa8ee83cc40e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af427bb8-796c-469a-9397-00eb6f31cbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe4baa1a-a9cc-4526-b1eb-7429cf374bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13880101-0e19-4684-ac18-855ef2f4d91e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ea35ae-3010-4f7b-88bb-835d05709c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40aeb759-2764-410d-be52-5298df361550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d65e61c-0a19-4569-a70e-970e4162a01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "78331527-ffe0-4251-a4cd-939f6dd4c7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00cc6075-f988-4137-8dd9-b8a8edc82b85",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c65073-6c81-4648-bc4d-5ce7eb212594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d62b4b6-0782-4da2-a668-1d629439151c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd82defe-3dc3-4a2f-9efd-c31fb3d6a83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b11ce15-67cc-4819-899f-e2c74ecefab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d42e56-a798-4b66-a673-9686997ca0bf",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e63608a-d345-4527-8655-77ea7b5e4c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6ae1bd7-85aa-469e-a1da-9f753bc11594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db2f585f-751f-44fb-896a-1a5379d6307c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "65a1b91d-6209-4559-ab86-5935cecdf654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fcf3ff5-2ade-4dd7-a946-f0c97c7ac06f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0d78c8-3e4c-4ca2-9e08-a464be6b5e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec594c2f-7ac1-4d0d-adba-124108989e86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a59975c2-592d-4483-b86c-1dcde991847c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "419f267a-255e-471f-b8c4-f697a0f1699c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d448e91-7543-4aa3-a49b-f81bc9dc324e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8742a28c-64e6-4df9-9205-9867892eb70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3afe9dc-1465-4765-a3c0-46713222c349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34f3fbf-a3b6-4f50-bee6-f59af3617766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "586586b9-2f30-47dd-918c-b0d0f397fdda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07415948-c8ff-4f21-a1c9-a86d0b48b34b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d36313-05df-419e-9456-c7208eb8dce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30059bb9-4ccf-4482-8ed6-51019cae3a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c70d63-8e8f-4aaa-a7d1-8395b40b87b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ae722a3-76f6-4baf-aeeb-841bd981c6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97d83e6-ebd3-4659-868f-8fb85660f0eb",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b01cbbb-1a9e-4c17-ba67-fe47d118765c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2c0f4e4-c62c-43f5-97d9-e0c9600990fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec13cecf-1b3a-4e4b-84e6-b6e6503168bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3033ff99-eead-4d0b-83f6-d95bc7987084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73be8454-2039-4846-9c3b-ae7382abe2de",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0d7066-acb9-4616-b30c-f0a5cb2f7929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8def892f-af34-4653-820e-720a86e529a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9376d0e6-c5dd-47de-9411-dddfa4ad02fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89c93cf2-a2d3-4aec-9f4d-da6eaa7b52e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fa2fdc-a614-48fd-afff-95c2ec4eafa4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfbecc41-3eba-43da-a7b0-02775b8674d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99956f99-2042-4bcb-8b8f-da975765d67b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bedeff1-6292-490e-99c8-9bee5ef24222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "59ce229b-b08e-49b0-b014-fd0a149997ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7806e8cc-add7-4b12-a0c9-3792e1a134ab",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9349f4e-a9a0-4977-b63b-addd94ff69da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab18c28d-038d-417d-8515-cf233f1b3448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18808d5-8868-4df7-b9f2-31b65ca3d52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "09ea7477-1a58-4d57-a86e-b0f794720c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f593a2-e477-4fbe-a407-4067795db9af",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c94c7ea-4c50-4b75-a79d-7c618ac249b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68f21239-61b9-4132-82c5-6d0ef7001150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9fa7fe-5a6d-429f-9644-277b8645663c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "72347dfc-d127-4cbb-a0fa-77f821a20823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6335a2ae-5b56-4e9b-b7bd-2169a7c33985",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "627de1a5-ad08-4fa4-a90b-acf30a10cd01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b33240-7974-461a-95a7-b6a66eb574a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5159b8-ed95-4e44-9cbd-765111a40575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac1c2454-df8e-4871-8d98-9b8f32db808f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5be172b-726a-487b-a2f4-4f3461ee2cd4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d4d2f3-cdc2-4307-9d6c-65f4848e8db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4ffa3bd-0743-41c7-a4fd-21d88962ea4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdc2025-4eb4-4705-9c4e-1d762171bc36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c1bd4c-7be0-441c-99a7-bd78d3b89f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21adbee-83b2-4b3d-8ed9-8df6fe9f16f2",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f84056-9e3a-469d-961d-7d4feca153d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c695940-2d5b-488f-86ed-afa27a93be31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426e2b96-e710-45bf-b233-769d15a39437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f8605f9-b5fc-42e7-a3e4-2965161893e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78a6a97-20d9-4e4c-9e18-c78c8f880052",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1b0c8c-9dbc-40d2-9034-829eca67a268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c78503bf-271f-4771-9c05-312909ea2a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43772582-8c9e-4f95-b287-b221674ab101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b0d9b46-db43-4f5c-b7ff-c5638428041b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c16e94f-38df-44ec-b3b4-61bc702c8242",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf98e96c-c91c-4e00-8616-a8f8c5a1f284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea58dc2-e407-427c-bd9e-2b4ec7715622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e1555c-191e-420e-9681-6108d17b711a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "23e2a65c-57f8-4d5f-aa86-b5d469afe743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ef9435-4aa0-4c38-926b-21b6a8057e66",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e67e93d-5a8f-4a3f-aad6-881c500154e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c05e78f-4531-4e9f-981d-3d4232a98c46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09a6af4-e176-416c-b888-e4a75bc6f1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "647bcff9-0d4e-4b9c-adba-a9d3f8174e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd58698-0bd0-4517-8886-b6c6bda0a408",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae2a383-581f-433f-ad81-e5c1b935c9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76c4e2a1-62e0-4a4b-80a9-7c33e34bb423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8fc89c7-d9f5-4794-a853-a0cfc9d11e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa90b5da-fc91-49a3-b278-d8cba041169b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e53a3c1-ea57-45b4-a9e5-453e60516e4e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "382abb01-2e0c-47c1-a894-fbae6f927949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "618a3207-2b09-44d8-9e16-b3c8df3f9b54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494088d9-94ed-4918-aaca-d305b4fd1eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b31be5fe-bcac-4f77-8c9a-93a928d31da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32fc1d9a-3383-40c5-a643-546f733515b0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e88554-f2eb-4872-829e-2f7e0f41114a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "125e3333-29d1-478e-ae86-5b0e4541f7c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb04813-1034-4987-8075-07ba7bcb6464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "99cafb20-69ed-495e-a31e-f33c01498e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb80451-2216-40b6-8de6-ad66757c3e9b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "627686dc-5e89-4a9b-9822-a53f659c4a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "845a0501-5016-463c-b957-511431dcc4f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75bd2f8-083f-4264-bbbf-4ec592fe4c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4265bf2-19f5-461a-a621-5e9f226aca9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88adb337-1734-4b71-a026-a669b01f6eb6",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e529d1c-6f25-47b3-9ab8-8d75f2043c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93b98fa-e2b2-41bb-b9c8-e2aed911ab82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9e47a2-fa1a-4eab-92de-f1665f8fed7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04192805-87e4-4143-836f-2a0facc2d3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f14bd6c-782b-4f12-85bb-1ff9d40bfa1a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2d8cb4-0655-4872-9fa7-16a8628d07e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6156b7cb-3828-4077-b673-8f6650cf5aea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b0d7d9-2a45-43d8-88da-47fd684a7a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b9ce82-c3f9-470d-9c54-78eee109ebe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95793f05-ac57-4ebf-aa7f-38b201d07413",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa39ba3-cd17-46d9-a66e-b2d53b016ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd8aff8c-5775-490d-85a7-d8dfeb8c00cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783a3c54-2d47-43b3-a52a-a39f56317413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20437be4-824c-48be-b9e6-8144ab4586b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e761773e-a466-48bd-9c26-e84bc05f0f79",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6678439-56c4-43f6-90f2-c9b8deba1b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a7afae3-d05b-4ed2-9b88-6fe817e16b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26099d89-6868-492e-8ccb-61ed4b4e9ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "364c9920-30c2-4faa-85e6-76cbd630b196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39799da0-8ad3-4f90-aa92-e57e2a4f5123",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9054da-2c50-4eb5-97f4-7bfe895002c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4196bba4-6951-4a70-9980-885c682ff201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1849956-8fd7-47b4-b676-256a93b32424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a2035ba-a31b-402d-a547-ef3e4abb80b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf74acb-657e-4f4d-adc7-4683195551e5",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8d56f6-6a7e-4665-a76a-e377c38b71a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c98a4db4-0469-4452-a2d0-2fd29c9439d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee1d164-d08c-458b-94b3-01dcd02fc8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef286348-fd5a-465c-8643-f8ea4096971e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ecee68-f23e-4b13-8f6a-0d3986ea350f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd79e3b-8600-4b03-a59a-c7ee9e947ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f0e8df-0888-405b-8525-34203d7acf65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6da8dec-6f3e-4841-9f6b-7588ddf9ffb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f0958d7-b108-4acc-b604-e9e88c250fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa598ff-6cb8-4bdd-b4f6-ce82047d3e67",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65553722-6b65-4bfd-9950-98cc96187be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d210fcd5-2c4e-44ae-996b-6f0b8b9b85a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0db91a-bef0-4024-908e-7d476567a500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35ded9d5-712f-4704-b12c-11d8f77e63ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9074c9-b06e-4732-9ee9-ed0cc814c0ab",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15721beb-5ae7-4212-97ca-8f77a91225c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3343f860-33b1-4bf1-8cd2-9f16215ec363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd65420-aa77-4422-88be-41a6c93929d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e775d033-662e-4642-9b82-6eb3965fa40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6314e71d-185f-4f91-85a9-b7937454d116",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ec9126-d11d-4425-9ae2-36242edcf0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48383746-cf7c-4a2b-8a3a-8ba2673e9fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b87a3e7-7597-4769-9275-d052d4a41402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "25fc0ee4-c2ef-46a0-a8ab-192ca5822e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224f7743-d211-42ce-8f7d-8210354cdec6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b932a9a8-2f1e-4428-920a-a5df53d6564c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "179e5dea-8531-4189-8807-e242310c5f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4bd6c6-1d3d-44b6-9f6f-99b3956b89e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7506e3c4-05c9-471f-9de9-8183c83f9421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c482dca6-ec19-407d-a2fe-2c36ed9eab24",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "942a8efd-7e6d-4bc4-ab5e-2b7bbc01437e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7945b01b-5861-419e-88cc-90eeee76745c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6ae10d-867d-41f4-97e5-1ed1f3679b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef43d3ed-ccc5-4463-a946-eb6ed5acebad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf0572c-3ef6-4487-a29b-0f202a6b9898",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02014e75-8d1c-423f-a91c-54213b720262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf430b6-3b6c-449d-a91a-a6837b40b1aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46fbef2-d0cc-45a4-b57c-7344f0027f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f5724c0-ad7b-4897-90cf-7c2b79c4722c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d583726-2783-422c-8c31-270edb2fcf71",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a36125e-1e54-4a7c-9a35-806cecae23f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c6c1ad-b08b-4b90-8e32-44c0dd8fc5d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced8f5d5-4938-4b5c-b5c3-25c625b80291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ede8882a-4ea3-420c-a5b9-021d949894d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65dd3a9-f5da-4e5a-9ea5-2d9f1d05c9ee",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3607b3a5-a5d2-4be8-aee3-07392cfd99a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "939485d9-d6e9-4048-8dde-6885805a9442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a20acf1-1586-4d77-8cc1-e65f6f4ff51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7db4877c-4642-440d-a326-00a76365908d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5901e04-6844-45eb-b67f-9c0e50478f19",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3ed5f5-712e-4a5d-a304-f75ffe6a0486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c6db0c-5aea-440d-a037-91f92fa1b093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ef9358-3b58-4855-b31c-13be61135953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "510d2b21-746b-4d53-a489-52d0d800f704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bedaee0b-5c06-4ecc-b747-6857f66e745d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37396cc-7c2d-441c-a127-1a3151fdaba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23c3ae2a-014f-4966-9a7e-d360616d11de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891c0df5-3735-4164-9643-ba88170913d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "199ecb68-f1b8-4225-b6e2-b8784a80bb25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbec96a6-69e0-4a38-9d70-b225f8b2dfb9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ddc51b-c567-4e48-9780-b3f87380eafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16d039e2-d8bf-4c1d-95b0-0ec5de78713b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4b9d9a-772e-4f46-aef1-f8cab7ec5204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a93d2f3-8051-422c-a6af-833b6066cba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743fbd41-e0f4-4e9f-872d-b55d36c7ce66",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf846e8-f178-4c95-949f-de067d7fb3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08d85352-6b36-4bd5-b533-ed822a71352c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71076fa-6ab6-4996-9d1b-dcac292dc4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f8fff42-d148-4a31-a16c-7f7389df8d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eead1de2-faa4-4b57-914f-3281b849860f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1b2eb9-2bf2-44e5-94da-f0d5a3a00374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe5303d9-7020-4906-9dda-a5e51911c7cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebfed643-e3e3-4156-902d-6c747839d732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "34b6fe38-76d3-4cb4-a55c-8e7931f5c893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f2cdbc-30ac-4c95-8145-9a5219a49d7d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5e902f-09a9-45e0-8ea1-ec22bed82698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3797699-d9a6-4b3e-af64-5b17f3dec584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4a1d92-5a6e-4cce-8fd4-934d73317e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "df4e87a2-269e-4014-8fbd-9c84fee2d798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3902732-d67f-4fdb-a807-d332248042f1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2499b3a5-ce1a-406f-a324-77d471909053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92cbc44d-a817-4101-b4db-090af7954b77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01900080-0004-42dc-b6a4-1dc9e3d1eb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "08b59888-1c66-47d0-b637-c64941b6a484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bde1d57-aebb-48a9-8369-60dc45fe7c17",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f13a53-116e-4a67-81bc-05182e017053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12994461-0d51-444f-8233-bcbda29116b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba35ee9b-c99f-48e3-926e-b0a8fbc0b8cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0204a530-f63f-4d93-924f-8bab2b51d6f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c1d1d3-0a4d-463e-8f68-7c855cde5a89",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "356d3535-f718-4635-b5e3-22eaecb7a8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da7af01-1717-4b78-aae5-37677ed009bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3775e9cc-f5a2-46d4-b3f4-ecf03ba11efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df235ca0-aeca-4ddd-931f-49621966a741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95fefb3-341d-4a64-af60-b579b8701174",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a023c2b-613a-46bf-a26b-ccc50adc0d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c0e43d-296b-4cd2-a976-e47b68827f4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec62cfd-e2a3-4d09-a2fc-d6151995f2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ada5136-1aa4-461c-a62c-d3b2c4a07cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73802b1-090d-4083-ac8f-f70eaf3b46e6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb50b502-d13e-434e-9fb0-73a3648ea823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "521ad70e-f457-4f0c-8f2f-68d08fe2e091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9493feda-4bb2-4860-8d50-eeee7f6f2f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0742c45e-8746-4423-ad2b-8b3985f6ee60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73a18ae-308c-402b-9a21-29ad032b5169",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a06cd3-d9e2-4211-830e-baf62c978c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b41e8e98-442f-4f88-915b-33899f9c6e20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943ff2d9-3d08-41ff-af2a-46278952ce54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ba4fe1df-a019-491b-bc29-346621032a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ae69c7-07a0-403b-85bb-f62bda03d558",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9c5465-6c5f-44ed-9e4a-7309529553cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c690149d-2de5-460e-ba73-4b9de2411c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772cac1b-87e0-4234-8fa4-1e57b629aa8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "43797db2-9e7e-4850-9b5d-0a0df9d0919a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b35cde-4b31-4a16-9c84-90686e7cefdc",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3f5d35-8bb2-43f8-ab3f-6613632e00fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ad0a21a-92da-458d-be9c-82dd3589c90f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4b7908-61b0-4735-8535-f1d31660f750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54fd16cb-a9e0-4a32-bc18-7d8b9245abb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d956ac32-42a7-442b-b3eb-beda931d35c6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a221c13-1c83-4dd8-8a5a-52af37df9b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d9272bd-1567-4e66-b342-847466df2be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c00e27-253c-4570-a3bc-faa42d7c118f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a76d6766-c6a1-473f-8540-b878ac3964cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87f1ca3-4416-442e-9df4-40f47e65d296",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00624fd9-5b9b-42dd-b762-072135077b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e543ce91-b49f-4726-ace4-8a2652c63e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0a9ce3-fe35-4b38-9b78-be7b320e989e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd4baaec-5ada-4afe-abb6-fb40e3065368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d019113-54d5-4985-94e9-f0cecfb9346a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5101eea8-cd07-4976-8c78-8f387aa939ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "928d7a4a-b8bb-4a4f-8a83-09f314e5aa8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef758edd-ca90-4f95-89d3-eb57e25470cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4f358fa-f2c9-470b-90e2-50d79a619aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4bef1bb-f41d-4682-9c30-64d7188cb3e3",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980fe183-cbbf-4a9b-9932-fe7d779243e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "970a1872-7c0c-4707-abd2-b90cb403676b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836512a8-8351-4efb-9a48-63b5f803cc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "077697e6-924f-44b5-9214-22fe08c1b320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2247f2c1-2780-4c75-90d1-19113122874e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a71314-c66a-44b0-a732-12fe18f6871e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92565393-09b2-485f-aee6-a7cddaee11d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8d8952-c40b-4331-baa3-bb0572061494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "28824996-3a39-4d43-be6f-13450b554b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9f2cbb-32f5-4847-b4c2-2d97e0462e91",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "326cc0f9-5bce-47f3-8219-3f364c4f0cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d54d5b5-a0fe-4972-9a72-b25df212a50a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4e0088-07e9-4444-9d0d-99917f5e338d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "49b8808d-b305-4245-824b-24e64e81c6e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd183b6-123f-4ac0-8a68-34fe7e17c278",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1199ddc2-de87-4fa1-8ea9-e9f7383c3ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25987888-1df0-4064-b4e1-7f837edb64c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db4a20d-2ee1-47e7-afec-0fc83807cb67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01ad17d2-99d7-43ae-93d9-b92bae3882cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed6a606-275e-4f6b-ada3-ccb0e4efe101",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c88f86-736a-4889-8659-db16ce118044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10121ad2-fcda-49f9-828f-706cb3352721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046c771b-1c4c-4c1f-b3d0-2f43d8421e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27004708-0542-4cb3-b8e7-30256f1620ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116fff25-68df-4d66-aff7-2034483c6c8d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "847dcd38-ee5e-4819-9567-bdacedd83cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c601f5ae-71e0-4c2f-a16c-dde77376e008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb1d01a-65db-4965-a370-114c217bc0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "706cde26-1a0d-45df-ae7f-8df22299d8b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3e3bae-144e-4049-901e-43f8d398a711",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08cd579a-84ef-4ff4-9b9d-564a7fd078a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "447f8e1b-d7d0-4c27-9232-ca526ca27e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc763aa-4125-4765-9533-76a2d8efd0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd704434-d6d0-42e5-8345-21012602a696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a6c89b-63c1-4cfb-9dd1-86fbf832d501",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2194ab-2850-4f6f-be6d-1dab41238688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afa272a2-c51f-4d77-bc07-e65f29cd69d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c1bd28-ede3-40c5-b013-3fb4f21c9ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "83b41f4c-1b25-49a8-b045-5ad010ef0751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af468c0a-1596-442f-ab5e-3c390222832e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b82b4f-596e-4c16-97a3-d8b0582694b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a8f8300-d171-4b1d-ba08-77911b75aa76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dcc73aa-c413-4665-9d6a-cd2d0e7bb312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd13728-d818-4caf-8de2-a34c61fdc8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5d6aac-f982-4f49-8557-6f7233aa685f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c6868d-fe61-4fcd-8cd2-51e9dbba5ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c49af2ca-fbc5-401a-80ee-1edb3a672650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85705d32-dc3e-490d-9dc7-c05173f0731e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b74053c-5f3b-4175-b643-514f7b49efc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63da0c14-cf11-46cc-8c0a-aa88c446ccec",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4a15e1-fbd1-4b89-8e15-bfc866279197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eabe0c0-5795-4f54-9206-c5ade8fdd784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761cdbc7-0d7a-42c7-805e-1caaae0fe0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b9f1997-7458-461e-9ed6-00f8c6247773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e8bf04-f511-4efe-9da4-2c4a264f41c2",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1dba39c-b6f3-4ad5-94c7-206af04005dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af1f66b7-b532-4859-bf07-99632158fc38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22671076-8218-4dd0-8b17-676b1bbb1bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "43c00f04-6369-43dd-8718-97c3173fd966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8611e0ba-a884-4645-9f27-de3f8e9df170",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1341b68-e567-4ceb-b2e7-c02ed957355d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "34e5d3b6-cb49-4323-a5dd-c611befc77a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5c6a1e-2ef6-4255-b7a1-5e4eb19097f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "32ce340f-ef53-4dec-915b-0bdc0a3d2950"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "34245bb0-0e46-4dd2-bb8c-0338fc9978d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "61d784a2-ca3e-40c9-b35c-daa2662bff10",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1102f887-9d14-4d8b-993e-7309901462f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4d30355-c3b0-41c0-a360-19788e477fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e323b4f4-daa0-4fac-8c78-c70bd171b2d4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0fcc870-c324-4e44-8daf-0ee0612778e1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f3aafee-dd9e-4515-8308-e8bf7f80264f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d47a720-1d27-4657-824d-8546e88ffd3e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97f0bb64-8f16-4cd4-9d0b-b413c1c9a7f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ee3a50b-d50b-44af-956e-e253be59a028"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b2f00597-8a78-4a02-87b8-372341550baf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2a79fc49-30c4-4323-8d22-223284a7f4fd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bb4c357a-d80d-4e39-8fc7-5bc83d6daf90",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "91edd327-f141-4eeb-8e62-e9a01787f65a"
                }
              }
            ]
          },
          {
            "id": "411438f2-57b6-40bb-9281-662dc6796401",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c9766b2c-8507-43ad-be7b-898926b46ae0",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "c334d36a-f456-4191-b584-4dfe406390d1",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604dccdf-44ed-42db-926f-b3e6e96fd5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a753f4e1-bd6c-48b8-9f1a-d8793231810b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a73ca1a-c084-47b1-a487-433f7a11b609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7475de60-c4f2-45b6-8238-be74df7ee971"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c348cae1-d34a-417c-8c04-20d947b76e0f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58b9e6d4-eeb0-481a-bf3c-51460bf61495",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "23adaf6c-f67c-44a7-98d2-aa87dea6d96e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dae42ef5-f374-4cca-ba7c-246d70380c13",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4c394ba3-8ffc-4f1c-b70d-2afef0368541"
                    }
                  }
                ]
              },
              {
                "id": "d34341e4-1af0-4bcf-83e2-c6acf6c88746",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f50cc807-9d51-4b90-a466-16d78773d2d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "35db9ed4-8f4a-439d-bc42-3421fa9a7d14"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "baa0bd15-328b-4db3-abf7-e36ccb1ff288",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c63b9195-4c0d-48ec-9fcb-b0a4e6913fef"
                    }
                  }
                ]
              },
              {
                "id": "cb78b845-b7fd-4669-a496-d417a1ce4132",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37d8263b-c224-4ed7-8c9b-e4355f1bde9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3796c3fc-3159-40da-92a2-964448d1d85f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f54ea189-b71d-4010-87f7-904bb666034a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2e58e5d2-9c84-4826-939a-d86ca2deeb9d"
                    }
                  }
                ]
              },
              {
                "id": "fee98ab3-af2c-4122-bd0e-78aab7d28b49",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "204db2a8-83c4-44bb-8a4e-335bf8e0840f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d28ad91a-a163-4400-ad9b-1a326137e5d8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5508ddfc-aa13-4ffa-87fe-a44340a4de8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1387d182-64a0-4af1-aee6-ab3a179cb140"
                    }
                  }
                ]
              },
              {
                "id": "8e7bdc6f-30d1-43d5-bc4e-c258a8b6bc62",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d205700e-2de2-4fc9-b164-7d05d8d4b035",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3c8b2c4f-7802-4bad-87ef-3e01bb817a5c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91cbdfc6-d6b5-4835-be78-5781bb8bf7a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f94d76f4-f244-4bb9-aadd-69df6cc70fcb"
                    }
                  }
                ]
              },
              {
                "id": "f8c30240-6c60-42a5-a2f6-646ff91f951c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92353fa9-4dfd-4a33-ae2a-109b7c2d0e9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e7c2630-c6ce-47b1-a38e-c36eccafa015"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aced13fe-7026-44b8-88f2-efeb5d35802e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f2891463-ecd6-4d55-93ed-cdeffbff2225"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a6a51b80-a1d3-47df-be87-51dc855d4ab5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3ca34654-d7d7-4600-8337-7da1a2dab373"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9f996123-463b-49e3-a087-5b3bc6bdce36",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d7548685-63ff-4f3d-8290-6174b423a945"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "36ecac68-21af-40b0-ab3f-da801543da9e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4b1a4f77-fdbe-4051-8943-13bfb8ec46c0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f643b085-6b8f-4091-956c-4592e270ab8c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "844f3c60-170f-49ae-ba56-e2917a0b4436"
            }
          }
        ]
      },
      {
        "id": "87a5c4b6-c691-4636-bd22-cf038c468268",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "424f7ce3-091e-47a0-ba3c-dbc1df4d1de7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b166b3bb-0f58-4535-9f49-9549d057d80c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3c65d5e7-f99b-43f5-8e3b-cfb0521f71be",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "483e6474-a149-49e4-add2-2287fa0adcd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7fa32cc-a36d-47b6-8ed6-3034f4120885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514795a0-8fa5-4018-920b-1aaa20758e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6ac1d8b-bb59-4ebd-8df3-05d87c72904c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5840d6e-5e30-4eec-8ada-2a77cba26f62",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4a4dd2-c83e-4bd1-957b-49fa8be2a221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f07aa6c-ca61-44a9-baca-94ad4d98f895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ac9a3e-4f08-4136-b169-9a61fe502860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e88ba77-95a5-49d3-9323-184fdba710e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6312bd2f-c054-41c3-b3e9-15e3f20a782c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7528d2c-1540-4158-9622-50f57edb25e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8308c03c-b13d-4a7f-a80c-918ef12fec44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc472e3-79d0-40cc-9187-9cb19cb6980b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f052da08-15b5-46f0-b795-94daf3958a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5610a0f1-20d4-48e6-bb73-e3e06055364d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5309c40e-fe18-4423-a415-89c7edc0178c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ba0cc56-7485-4762-83bc-9f82048e6621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5267e9ea-9a4b-420c-8638-a4499744f9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70891a2f-a511-4c35-9bcd-cb68262038e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4972eb72-36ae-4215-bf2c-34e563a0ff51",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae835c0-4420-447c-add8-190a8570a59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a241482d-6be9-4091-ae1a-b830de97f647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e9011a-b42f-4f21-a1f0-191b93e16f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "badb888b-bcb1-487f-9d86-ac5bfd7ab287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e15aea-f60d-4119-a989-9579422d3ab1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d1a601-26ee-4480-8dfc-d7ff2f764da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11a3312-e864-407f-aafd-0459c9cece27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cbc4b7-042a-4d57-8431-34944c655794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba578b15-6d27-49e6-8f73-21ad591f095e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6fb7785-43b2-4220-a07f-7bb8db8e1a7d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "391665ec-c291-42b1-860b-319d4bd04d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c848906-90be-498b-9e95-f2af432b4a85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08af854b-2015-475e-833c-084430059742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "af8f0810-b1ec-4e95-a674-7a12d9289dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4d2cb5-a055-44cd-9789-16a2911ae501",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11efb71f-f8a5-40f3-be49-f7859b4dbfeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1125f2e1-2f7a-4ecf-be4d-6565d8e60f5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dbd020a-a67f-4611-b60f-99da0f43d396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2a26436-8a9b-4a90-8ec4-7dd8fa81accc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d63a23-eb78-4422-a06b-13536573a3e2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e9fc8f-0852-444f-a004-657df81a28a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f2af376-d667-4ee4-8699-5a36ff662de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef868699-77d6-45ff-a7b4-bbd492bf705a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9717bae-d78e-4927-923b-250ce7d9a9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2959ceb1-fd2a-4a70-825b-4e12a33e4c8d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fcf8acb-217e-4b28-93c2-82fdba45313a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd70f261-7578-4fa4-8164-6645a1c8dae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4026ffb7-9144-42a7-9add-b8b424d7ba16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6aaea953-86db-45fd-8a4f-fdf464526689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32069557-d9ae-440e-b280-d4b842847fc6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e6861e-b84a-4a67-ae3f-d0cef1c9f899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f01e01f4-1122-491d-8e02-07abd7916df9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb670bd3-bcb2-4dd8-aeb3-83e211642840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "66b77ab7-94d3-4d15-b11b-5ce48616d433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3629ebcd-5df6-497f-a7d5-9fa81eea095c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d50489-7f2b-4b04-815d-18d4137f156c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e85e93-412e-4ffa-a152-2767dff53a11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5cec1c4-7ffb-4194-afcd-5f4177581925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be0165c3-dc68-4f27-923e-a6a958984bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32e449b-e41a-4a71-bf73-86a91f94a6e7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960e7d9f-bde6-4624-8418-8c96155b1d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62428cdb-ca3d-4e51-a077-cfe66e9c57bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d8bb4d-d2bb-4354-a37f-f3915f43a1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4952c72f-84d2-4ef2-9223-ef4e25187a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53f3f4c-e7a9-464f-9402-e96f9c4518ea",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbffd3ea-68b3-4bc4-bbb3-555df62d8ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef8e72f7-0cf1-4cb6-9385-48da9944f15c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41e5255-de0d-47c3-9b2a-bfd1435ecd44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd5da9d-c46d-4bf2-8faf-5b08b7bd5c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20b083d-35af-4eac-a8ef-1a87dc4202e9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e05657a-a20b-469a-b8e5-3bb57a27a490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce198cd5-874f-4270-8360-389dc7b30d02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d9f15f-a4c1-4996-b06f-11685b3d8ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6627bcce-7a19-4e72-b03c-6304492b0ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b68296b-6a37-41ef-a7bf-690852e1a1f2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388567f7-eb82-44ac-ae7b-6926b52f84a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40a4cd6b-7ad6-4fce-a585-3e64badb1b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785a7084-478c-4f80-a2c7-a77bd96f4f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7eadce2-7c5a-4d37-8d01-f5eb696746ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9ae159-b1de-4534-b407-4883944c0d6f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0513a93a-3d1b-4d74-a96b-bdc8f400a7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "358085b5-712c-4d15-a1eb-822c76997ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecfbd8b5-ae61-4f7e-a578-5d1fe26820c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6972dead-ebba-41f2-a6d1-98b58df5e94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0fffbe1-bbc8-43d1-8345-e7eedf43ba1c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e30b14-99bf-423b-b39c-363abe97e2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "279eda0a-9f67-4db7-b21a-b44a00b60ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a6de13-4467-49a2-938f-48e7f93609bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "76892ef1-8e1b-4844-b226-32201ad528c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6730296e-5138-44c9-8c8d-43585b1959a8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea0c327-dc46-4ea5-ae9d-03542cb3088f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1fafbc9-467e-4656-8400-29463a42c4c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b18e70b-cb9c-4c85-a5a0-536b49e02627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e09f397c-cfa8-4317-8365-f92d84fcb576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b84ba48-bf6b-49ac-8e03-3abbc15e84b7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "261eaa97-ddda-492c-9c34-e75221169793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b78a724a-e77d-49d5-856f-d2aa8d3872c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e11293-9d0f-49d1-8b5b-3ecee42712bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5fe3cb2-ba3d-402c-b25f-df4ede525df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ec9198-a605-43cf-a6ca-0d3cd13b4f37",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386ca1ea-da20-4490-ab39-564f5b9a2c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36a402ca-cdd4-4888-885f-535c8e45fbb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6a5d1f-ed88-4087-ad76-52d027d9afac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af2713a5-8337-4e06-b100-975cc387e516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1688b09f-3ea4-4df5-a67c-5caaa3d7efd0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbaea878-53d1-47d5-a35b-8bf55cd42751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36fc35ce-cbf5-43ce-89bc-e42df53f5658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6216213d-af31-43a9-942d-83de654858e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9784ceb8-e83f-427d-8f89-f56ab9fe1e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd553a46-3641-4bb4-b88e-61cc2d550b73",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37930587-ff8f-482b-a887-7825f2753f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a2721e5-d9b9-4226-98a4-ac5d31797610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde6821d-f2d5-4188-ba99-92db654e0fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65df7ae9-08e1-4e75-afb8-0752bf6afa7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6136b1-ae91-4653-8084-0bdcbb218af1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d580d3-2fc0-4373-b254-9f9276f43d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d8f9fae-cee8-4a1c-bdb0-b9bf674e8a24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd8e08d-8f2b-4576-87af-5c24b20ff792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbd99674-cd95-43db-abea-24a5de7cb7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9fa1d4-d8db-4e04-9ee9-9730f7cf33ba",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7cb57bb-9843-4a3e-bb00-be330f911488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2e40c16-2e73-4a7b-bea3-18b84bc42dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99d44da-8c03-4092-9c71-e46100a7ef80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90f1e5d3-d0b8-4cd2-a65e-2a30bc49796b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e53810-fc92-474f-a176-82a597227a61",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4960ee-2af0-410b-a36c-3f5b97a19c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d6cfd8-82b8-46d0-949e-cfc5bd6423f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ff9a94-707c-4f4a-94b9-bfa64d561c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85b050bd-8e3c-4866-8343-d916f1d3922a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a98f20f-8ebd-4cd7-85ad-0e04968c3996",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05db364-22ee-4a3b-bd8d-941c112bcd01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31d7fe52-9a9c-4885-8a3d-57bfa92f45fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a3ed46-3d73-43ab-81c7-e20a6dc0e72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a9f3a1f-3c25-4bc1-a24a-39cbcf081cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b3f245-1d59-4060-8fd3-f1c62f89bc12",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8981b025-9540-4f86-924f-897a1419c405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87db13b1-a120-4e1b-9f1f-e2b82fe5b944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635fddb3-857d-4b43-b25f-378ba6006d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ed3d5b-c12f-4582-a62b-eb6276a4ba5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49176c0d-c05d-4a37-b568-0f97e806d930",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d613ab9c-f680-4222-9ba3-7cd04cc49904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c4b5e49-3973-40ee-9636-30a569b1abd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc975529-5189-4f7f-aedf-40d9a1f25f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34e9f36b-5b16-4890-8986-feb469cebbc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6285b6e-9db8-4cb4-b1cc-5a8dc61312b9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1aa9fb-9668-41d5-919e-d9b97d0a9a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9635a709-79b4-4955-a50e-3406b13eb47b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad414b1-b241-47a7-8c19-0dbc7923e4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1341a4e-3e8c-41a2-832a-5fd2ec024f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "984dd9e1-e603-48b5-ad79-9a88472136e3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59eaade4-1b81-47c0-927e-d71a0652a7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f53a2779-39b4-4769-a543-2fbf6740031a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb686b96-96a4-40be-93ec-9c89b878d3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be3bfb8f-279e-4a6d-8bf2-c908f15b180a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bdc6960-d1cd-4f1d-9fac-c89bda1c3e22",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa14fa0-3ebe-49d8-a7ed-6dfa58a519a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a833eb3-d310-40d7-9420-415fbd8d9bc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90541de8-ade0-470f-81a4-04f128c22a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dad69c8-47ad-4208-bd94-53407f14e0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c0f829-a8dc-4dfb-84c1-91e3f7754241",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d122a33-345d-486e-abc2-4339f72021c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0711a9b-959c-4d28-94b6-35d1c1e5eb2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0945a42-ffb7-41c4-a54d-a4b88f189903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16f09e06-0d69-40e8-875c-7d9a817a722b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca8c0740-7af9-4fc7-ab0f-caee8d53ef22",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3154be40-3a72-431f-b795-3d72f79114c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18becfb5-43ab-4f37-8a96-62adbbfe4584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a3eeb3-c148-4ea1-9ba4-951e62fdf6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c0ef790-4ed4-4b6a-b55c-4da4a3fc843e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6252f7-e4de-4e98-a8f0-4d4d71574469",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9133a10-5444-4558-ba65-01b6ad3227ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ca1ae7-996a-4c31-8b15-e708ff9b4c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3406e28b-845b-4f20-b2e5-5534eda39805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc90b91d-7aa1-4892-a212-b94c230ea374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e13b16-3507-4867-9550-57e1aa56ea77",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92887f7-5bec-4885-9fff-5e579765d406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3782fc3e-f062-400b-b05f-04e095024fcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b75fd80-412b-4f4d-84ca-3d50e4bc3afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ddfe57d-8a9e-455d-b121-a83403c750f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c68298-bd04-4353-b7e2-ed43d97779ec",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84083366-03fc-42f4-9b28-4a938c034b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e7e03f9-dcc8-49af-b62c-8cc4fef1be21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b24350b-1396-4851-8e27-a551f696a047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4de836e-e488-4a24-85ef-0aa2e851ccf0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a2ce9308-f820-414f-bc65-8dce9e5ad2fe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f8cab61f-251c-4ea9-9f5e-e7712e6b83ee",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f6605f-c48f-4e3e-996e-0573b5fda61f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "be1edb90-cf04-4e35-ba25-be883cd69f5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "689c112d-0a70-4651-9e59-63eaa61ea080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55d0db84-9518-49d3-8e72-525ec490ef03"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "526fe087-501f-4761-b894-3fd6a8507d57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9cf7dc70-a869-4228-ae2e-d442211e26c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "95efa783-76a2-4bd5-9d31-8791f6bf3c4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63215b89-006c-4948-995b-3aef675cd39a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6bbca396-7546-41a3-b53d-3b035e2c8be7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7145bdfd-a1de-4d1a-86dc-631979469404"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "996e424c-7b82-451a-b5d6-f98c79dd028b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "544e474a-bd14-4c45-9c87-d1755649decc"
            }
          }
        ]
      },
      {
        "id": "eadebb66-4369-45b3-baf5-f83916821655",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4d8f51ab-7d30-4fd3-b349-d29b785e2c90",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2cbafb0a-b3e2-47b0-ac65-f8dac3d0334a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6844cf94-a554-4200-8d94-d691896f2f96",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55b3f1b-17d9-4c3d-9f82-575cbd22fb8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c6b19d-614b-454d-a1a0-fbb757420b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2362d2d-1947-4f8d-8675-9488c837076e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a376552b-abe2-45b7-b8d9-e8f135dfe69b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dbc6936-59ef-48e4-9cee-3579579ac5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a81363-c9bc-411b-9cda-70b268363d15",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "816d829d-4dcc-4bfa-aa32-c645a1288949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f66c4516-1da5-44f4-af73-6aab9778084c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b14e355-80f9-417f-a083-53b0bd792ac7",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed9d0cc-ebc2-4317-a390-21ed47e35b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed57fbef-a52c-4ac3-9e89-287dac78f5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1dc58d-0d5e-4ea0-8b75-fe408bda830d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3144fc-9759-4a65-b941-66bed786472b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f8c2cde-5288-4550-8fad-6ff7fac4c147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36dc219f-18a6-46a1-bdf1-d728db0250fc",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b9377c-89c4-45b0-88fc-94dbbac616d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "753aa34f-f6a0-4144-9b74-580ab01481d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38644844-29a0-4e85-9a48-bf636757f901",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df652506-5153-49ce-ae2c-da4beac172e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c61d70-aff6-4f31-8e27-b31e9a714b12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d47583-72de-4aa3-b123-030706a83be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c701b792-740d-4c2e-9de8-7d32f61f5293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20daa2ef-eaa8-46d2-b887-9ea13db42ea5",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbcc6171-cffa-40f1-8f29-a315b8c84ccb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37e34c83-1ee5-4f79-b369-0f58b710d85c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea51079c-de40-45f8-be82-f6bfd5ac5b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa5cd007-1293-4215-8b99-3a35fd3aecb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e526d9f0-84e8-492d-966e-7704f09d372c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0742424-b8bc-46ca-8873-b0343039accd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ddb5f1b-2325-4fc2-b241-abcd5f9c27de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad3fe9a-ec65-458a-861d-b34c8985dc21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "282f16d0-813d-48b1-9fed-9604bee1b811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144659f9-21af-47fc-be96-47838e45ce86",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7588b7-d93d-44f4-b801-b99a6d64481a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0db0d79-7006-40e7-950d-add8e27ddd23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52698697-ddf3-4b41-bc30-1a476840eddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6a492b4-dac7-4217-ac5e-db17225eca0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d7a463-fd61-4d82-972d-c38799ec3efa",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed8c8e8-357c-4223-a778-714834443b7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e4fa351-0aaa-47ca-ace1-df556741bf06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e19009-7b22-4e1c-8392-53fe9d4b87b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc294523-3a84-4db5-be85-926efabf7e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ffd655f-7366-49d7-90a1-f3f95fc64063",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860fd23b-4bc5-4a63-b2aa-29e012aeefdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34b7bcd7-a2ed-40e9-8f02-c576f78504a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c936647b-edd9-4837-88a9-5733398e3aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd9cbc85-95e0-4b57-8d6d-4739402f4ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32bc8462-24d6-47f1-b378-7505e6bc1007",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b3406a-6bde-418b-98e1-4551116f4191",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6242c991-e75d-42a1-94a8-184feb0688bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1e082f-a347-49cc-84e1-6a1952b48fea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fa6b12c-135d-4846-ab44-7902fc9365be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e835c60e-3f5f-4a7f-937b-69b4ab6b8a9f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af25db36-5d1d-4954-88f7-8572cc0e81b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c96b97d-5ac0-4fd1-8875-b3387035cf09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede29c6b-e08d-4b91-98ae-f46c65169733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e7b155e-0d21-4596-b9c8-048ff2027694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aee988b-e142-44e8-92cb-bc298b8809cd",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c315169-8f7f-4d94-92dd-58c773d9a292",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27d3551c-690f-4cfc-87d8-21fec7025a65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "437a39e2-7e1c-41ec-a8d7-3f9a9c53a5b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a149800d-75a6-4df7-998d-792f5d19bfdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67599d9-8586-4aac-a79c-e04422d3a05b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025bb2ec-8124-4e1e-bb5d-89cc5c63d6a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c53b5434-49be-4292-b712-dac78b259ed9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6699957b-ba4a-4279-a143-7cf0e59175a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2b502d7-f03a-4041-9f67-478f20497f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f10a32-32c7-46e1-a8fa-56b108d3b8cc",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8aa2861-aded-406c-b2e9-ebe7f43ac4e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7868c65-718e-4682-88a9-213b51e12e57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6f72fc-6cf3-4775-9769-cb4cc8365260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bf412ab-d400-4162-9cac-974c91f4d9e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6909b966-5cb3-4d13-8770-3f1a2f82951b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074c7bba-8d59-4a02-9065-605800330bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d65b54b4-558e-4491-b907-a3d60cc2adbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59d3fd7-f4dd-47ae-91db-92fbb794fa56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009b774c-a713-4072-b007-9c30016c83d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63eaa33a-0077-4936-8d6e-1da1a5f89283",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed78a92-dbf4-4384-b880-79b71425f92a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ef43fc-d68c-4ebc-957a-bd2964e0fc1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0417a43-6da1-40ce-bbe4-5cb60eda4777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f86eeb-b5b3-4991-8abb-26047e6aa86a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fc52fc-5dda-4d50-b94f-1c4b2f95a8f8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815d19f2-1f3c-40c9-bc00-3033bcc58221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b52fa16-ba5d-42b9-93f8-4d96a21e08df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f90c33b-8a1e-4693-91b5-3bf775d919f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26dca50d-83b9-448a-a89e-763df7ae3192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23708e6e-abff-4b8d-8916-b4b062428289",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6591bc76-78bd-4e91-8432-36c12c24818c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b0c201-6895-4755-bc17-10bb989160ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5765edf0-8b39-4166-a22b-0fe358b14f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ae15f5-12b1-40eb-9dd7-f6c8866298a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35de43a6-7c91-4b74-a078-92d9e43f157a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28060100-9e0b-452f-98b5-09480417c0f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86fa7c7a-4363-4108-bb0e-414017a209de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5fe5ec-5015-4fe7-ab32-dc84f3d53dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47ec9808-98ff-4ec9-a8c2-300a20209e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b5a696-888d-4e8e-a548-0ee737324235",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9bccfa-b164-47a1-9698-c63dfc2d43ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9445e037-2023-4504-8e6e-1dfcf13e29a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83df7fb5-3b31-42e9-ae08-33a86c6d0164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82e103d3-ed62-48a6-8452-5c21e71072c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d649a105-42a7-4114-8c52-15d972feedd9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eaf9568-a9fc-421d-ac9d-2758168774cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ed565ee-6949-445a-9430-69fb4b94e8c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85fba408-efff-4d99-813a-9a8cc091833c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f5ef6f2-64a7-4e7c-8881-360e2838be74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3598fc05-4ae1-435b-b007-061883cc73b9",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d803b778-b607-4549-90c8-a9146ae377e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b99836a-e93d-4be6-80c4-e270fb40a5cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "222e1ba8-e480-4933-981d-a25efad6ed5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee5b253-a9d1-4ec2-85f9-ee7a22d15e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c30784-13cc-4a27-b56e-b888f48c2359",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1cf079-6a64-4787-9d75-649e5718f713",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5086dbe8-3d5f-4fb2-9427-88425a232ccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a45ec9-2708-4691-8c2f-3a1b9ffc0456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b96607a8-585b-4587-8a47-06428ecc4232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92e1056-f20f-417b-be35-e1a80f0a32ed",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20122f47-0442-4634-b16e-1ad5031bcab6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be623f13-32e6-45ff-ad10-ce16aecf3b6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e91756-6ccd-4304-885f-0a73e65e38df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e093f14-efb5-4c55-b446-dec2705c3a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52592b5-d994-4047-a329-3d52de467e89",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e9a62c-e8f9-4708-96f9-1849dec3e401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa18c8a-9169-4cbe-ab6c-3d155ddde88b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd66676-a871-4de2-9d9b-42b7352a10df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "980b63c2-6c32-4dd4-9c44-a77aed7b79b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03e22bb-085a-4f6a-8ec1-573055f132a7",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec19557-b716-4ed2-9970-177fd6490e4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbb06d8a-e1d4-4bbb-a713-3ce08066ef92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0891cb-1382-419a-a07f-560d8edb3a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e70e156-1012-42a6-bfe7-b3fb8d1771df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1349b1-0801-49b2-8141-469ecc55fef4",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c46fba-91e5-4007-98bc-d4b5d021f2a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5faf2e6-b57e-43f4-8587-2e72507d79aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6496bb7a-6dc4-4779-8bf9-b773c0a51d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "734a4be1-0544-4160-b24f-30d45df877f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8f6957-a10b-497a-b4eb-9c5ea8242749",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb80dc0-45ee-407b-bf64-36e4f9fa830a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "717174e5-5fab-4043-a650-d648f9ded663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc48b0ff-15de-4751-acb2-97ed61be4f39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "205c0d47-1c5e-422c-be0e-cb7cea4c2325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203624ad-4b20-4fd4-a1c4-d26610b5f6ae",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a800989-c633-44b6-b848-4119e61833f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ccd4dd3-3921-4aad-a27d-7e8a852fec0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "604878d1-b52b-4c4c-a4e5-95f6c0078e9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b79e0035-3881-4528-9bc0-1178ada056b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abada536-b6ee-44f7-bb1c-014ae0b665bc",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842197cb-ad4e-4dc3-8869-908a3db33015",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e17b22b7-78ff-40a8-8fa6-4a1e6ce2a02c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b386d90-e8a8-482a-80ee-d12821641a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c47b08f5-4c0d-40df-9f50-fe949918eaed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921fe9c8-91c5-4ca3-ac19-137ea27ed2bf",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3a4278-915a-4a51-acde-0ceb11fa07d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7a950aa-b101-47c3-9cbb-e40d0e5b0890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b159a8-1da5-46dd-8511-6e148dd456a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65f38134-4960-4984-b16a-525df9dca8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61481cca-bd9d-4822-a7fb-0be1665cf352",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee64ef8-8a63-41c2-868e-dc672a4ac0c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "222be873-3364-4663-9e84-da6bc1cfce14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5cd093e-84a5-4287-b9e1-597fad6b2506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cab4edf2-1e5e-49a2-b6ab-7b8354e568ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415dbde3-acf3-40b4-9692-80eb7d25cef2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07c15d4-3f22-4b64-a1f0-54ab51c8002b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a2fb39c-8062-4d38-aa34-2e6cff7c3557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "707e7820-f37c-47b9-b187-2fd75e9c79a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cdea2b8-7572-495c-ab99-123c373a3a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ea304b-7eb1-43ef-828e-bcd2255b44a5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14fa8cb-e1bb-4124-a8b2-75f5fffddfb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f8a21e7-0862-4c8e-ac32-7a204c001d18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab68b0f0-9926-44ba-918e-3cc7693e0612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fafc2ff-fdfe-4d1e-93cc-293e64d2fa8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c393ad1-cc80-46b4-bafe-1e49b2d7b346",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ca4e27-3964-41fb-a94e-2f29df2492e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0774464c-1c95-45ff-8ab4-c19edafae601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41a5e72-3f25-43bb-9023-14a432ab9eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74babc9d-9e37-4aa8-8d48-5c887a718555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7099ab52-cb69-47e6-b8e8-f28181570999",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ab3758-ef96-48d6-97e9-1e6109c01fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "741ddb8c-cd65-4684-96e4-be8fa72f1f35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e714d7b-88d7-4966-bab5-5de09c5b94bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587a227b-4a67-4986-91a8-80ba7f5cce40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb769a0-c511-4546-a6ee-95257b8ac924",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29747425-a312-45ca-9b44-fbef3ec57ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84bb8221-5fe2-40ff-86c8-44c70cebb4f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83769801-722e-426e-b7ac-eb04788ce64a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f95a8728-d44a-4383-9966-91c99b5c9312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a6a414-0c80-43b0-8b8b-c6b55a26cbdf",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d134855e-18c5-4862-ad4a-4872998931a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c229801d-3eb5-4f8a-8ebc-f5a9fb3f7934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e7a23d-5867-4a6a-91ff-85c8443dbc61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff4d880d-2061-4a7f-b58a-60a7e7455c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9433781c-f4af-4c05-a5d7-cfaca2f1a3d5",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4299d5d-3ec5-4478-85f5-796ff7e0fb01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a87392-ce73-45b6-8b08-1cd1ec116d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52551ba0-29b4-482e-a45c-ddc1c9430ac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d0345d1-5fd2-4c4f-b78c-8f6edc465b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8739884-8b51-487f-8f70-993dbc7c04c4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b54fcc1-5815-49c0-a76c-e24504f573d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8219dab-8e0e-4330-a293-8aa18246ccc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e162da09-39ee-4c11-affc-828810bb7cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f78f6d1d-721a-4137-a619-1576341a6985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0dce055-50d9-4fb1-a3e9-c11ee04e66c2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d669db8-eddd-4a1a-8e17-aefdacfcee7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9edadf90-bb1b-4264-be66-9b410e778c23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef19e60-df29-423d-9fe2-718a21e1c776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "744ffa2d-fb26-4366-807f-88bb29acee54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9290182-23fd-422e-b794-4d4efb04abed",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4682f520-a999-43b1-95e7-2db919b1c0db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff16615-3b85-474c-a8d2-7390aca2ff85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf57d6cd-82a5-498d-8ab0-a78f184f89a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ce8fe9a-3e38-4ca8-a5e2-fa66d8bfa001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ddc8cb-0cd7-487a-8c10-df2cbb27d4d0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b02e70a-5e62-4dbb-bcba-9fa8ccb88714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d3c3dc6-e6f6-4686-ba4f-25d49a266889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "942db1e1-4bd5-41d2-af72-ddcf0b1d958d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ded4ce6-6aac-4790-b717-a5a6854ae068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e32470-cb27-4597-be46-7d8dba4f7ff4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ff04ec-126a-4035-ab67-e783f4e2ad65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b641305-d67c-4ac6-b635-364652d37630"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d319961-b593-4787-bc01-e34db84b5a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "207c66e8-34b3-45ca-8366-1aad14462dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea776a2-fad9-4822-b7e6-438dfe862dfb",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1ad231-033c-4cb4-af1d-b769278a4ca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2e0ca4-2ff3-4485-bc0e-ebd1e3ac2c76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7655e4-32c2-4bea-aa9b-4fe84cdfd488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6978718-3bab-4847-ae77-c4f7c789dfd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e320f8d4-2a1c-4795-9429-7119e80cf708",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9282516-0b08-468d-972c-6d109c713e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adad62f7-5c98-4c6c-8f37-b52c4fa0d4e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a105e49-4517-41fc-9e9f-19cf4a9f7ceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab0714d9-ea5f-4f60-a34c-136458ba3c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f891f4-e7f3-421f-95f8-4bff92c01dba",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d8dc0b-b3e1-40e3-afe7-7b28139e3abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0270afb2-b9c3-4ef6-8e8c-e34dc83579be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d62291-f786-46ac-9309-9cba35bfb0e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a998cf5e-ef13-47d3-8077-e78a50e666a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec35ae1b-46a8-4550-8b49-12a49d2c5a0b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f249c96f-4ca0-4c19-aac4-30813a0f5a13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12485053-0b79-4fe7-8063-1b408ca3359b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a129ab-153f-4fce-8f4d-0a184b5bfb20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7d78a67-3032-492c-bb08-d8aba2e04336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090cc941-a467-4f3e-a47e-552bde913be6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1247dd-8813-4d87-b593-1fa215baf54d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af50b71b-258f-466c-a697-f6b1f10cf1b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dfd6254-1da9-4463-a1c5-2ecba31364bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abd3971a-37db-46eb-8a12-b99f8ee4528e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ff29be-fca3-49a3-8842-ea87bc1c1236",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff0eac0-2e59-4d5f-a600-df56dd717942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40110502-cdd8-40d3-b47c-7d98ac9f95d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0085a5a-83c7-43ae-8b79-100caac41d58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03de2ccb-8821-4194-86a2-e543e470185c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afdbafd4-ac07-4a17-a87d-5402af098d23",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fd7b50-ea1c-4c43-875e-a222a28ac8d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20eb7671-79cb-412e-8c58-77e526bffeb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a7a331-fc16-44dc-a484-7b55ab440d3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "813e0e85-cefe-4d5e-a21a-02d753d40f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1a7d2a-4a3d-401c-a6d2-da0140975f53",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdaae7a6-2546-426b-94f4-78019217f983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "499a4e9f-e7e5-49b6-bf10-7f0fddd25974"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5ce7e3-bc97-4918-953f-9918bd0abf00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b89c7bf-009c-45e9-bae6-8596d95403c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c9c908-7f30-404a-bcba-40b51e56789c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06c1e96-9af9-4919-968d-e52b2a267ff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "122260a8-917d-4df5-b5d8-e03350116831"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1735fe10-466c-4fe6-9226-75815bf7583b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c488b71f-751a-4283-b8df-5c3e3337727d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b5e317-4ac8-43da-9584-28c2a7f1c797",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26035a8-f6c5-455a-b8c7-90fc21b43a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5f236c-cee0-4e1a-9329-c46febf3562f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa3ddbf-a8b3-4fdf-be72-08a5ac5cf003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05ed2196-4016-4c21-a0f0-285e979505e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a10e086-8317-4ea2-bb4d-2f948c2da923",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d594e586-3974-4296-9261-e5acb218a84a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cbd581b-5199-4899-8a0b-17ef3f1f4b6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6b15ee-b71c-4b74-ac8f-3e1631d84b94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b74a37-0901-4948-ac49-e34a36eb7658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e700c1b1-4884-4165-9d22-82f6162a26b2",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a18e01-7749-4a9c-a3dd-9e716d7ad4b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f903e884-92d4-4a58-91c3-bdc173c57f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "024f1011-5618-4bb3-8bf0-59307ba4d2ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b75cb52-c8ef-4db4-84b3-b430067b7e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb2f73a-d718-4566-b20f-aaa7cdbffa6f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8173213d-b8f2-4980-98df-ffa92d409779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6572805-7e1c-4cc6-b294-da84a9d6d8d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db53a810-676c-4562-a728-da0251f7b1b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6abc3adb-d980-45b6-8d33-e396393ddb23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ea2994-12ca-4ad6-8256-bfa34ed74ee4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8594368b-0e5d-44e8-8168-8102cef41015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dd55400-a952-4e89-9442-2e60c7eb7b0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9c76d9-2d87-4d46-bc0d-ec29895d455f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49c80d5b-1b3d-43dc-9fda-05acad0c9d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f14e21-9eb4-45b6-b0a1-fb56216c4e82",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742e2eb9-a0a1-46f6-8f63-ce5aaa812d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae760556-a8b2-4bbb-a3b6-d331d4676cc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a87b1c5-4db4-439c-9b14-d2adcb4f8837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5daeafa-3bf4-440e-9254-d786ac127cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "130ba743-cb39-4b74-a8af-a1857e709f0f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed32526-ed83-4010-8d23-d9e44b7551ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef6f7319-6071-4b1c-b67d-434374490152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43cae11f-9e7d-406a-884f-9e143b2d2ca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4082443-0a4b-4fbf-8653-df6361d95b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e781b3-5224-448b-9e1f-36c3dbf80f10",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8398d2-e6cd-4676-86f9-afb23e7819c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaeaf624-d2fa-4430-8195-f5e50190644f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e902766-00a8-47a2-9e8c-90a92d032c96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33db0224-9e4f-43c0-a869-f02525fadb66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d7a9cd-066e-4402-aec1-56a0359afbb4",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1517768-3662-4fb7-b90b-dbb9a67a3b3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ca40fe7-144d-4934-90f7-6b9c235d4a28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b15b66-3397-4f49-a204-578d6e682fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62157759-e937-40e7-8265-c49b48bf6716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9f6d5c-0c46-4809-9e3c-27d4b022ba16",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2bbf7c-16b1-48b2-a3a9-81dcc4a26e20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ab78d05-f37b-4d8e-a561-c4bc2fbcb931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b44a5f-37b3-4fb9-a612-5d0f3939ed92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0dbe6e5-1b8c-4ac6-9480-29b45c1c75da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1afe700-48f8-4cf3-aba7-1cab99082b96",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c67107-683d-4e1e-824d-dafaaea98a93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d3f9b0c-27f8-413e-96c6-637d6a6af414"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa1ec66-4c27-4897-afb1-206d2f058baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c479ec-96ba-474f-830e-fba2583ff413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa5e064-2c67-45e6-8b70-c581d2cb017b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78c341c-81ba-4a00-a591-93ba1ade2507",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "994d0b51-543a-4ce3-a568-fdfa65a6f68c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3a82e8-fe7f-4450-84c6-30cdf7fef676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a752bca-291e-47ee-9a98-897a22038b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "939d12f6-8984-4337-81d2-3a88885a26e6",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4d9ce8-5fc7-4125-9d59-28c67c410cc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b2c04dc-1524-41bd-813f-8bd2710f1db9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1129fd-c328-4161-ae95-01074bb52906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77578832-2de8-4465-9c04-6586794334cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9c2561-95ca-4629-9ceb-dfe5d719ce10",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6ad76d-23b4-4e0c-87a0-5541db0958e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4af01ef8-f876-429a-bd51-aa473be59c48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c96ee4-e241-4cb2-a0a6-729502b647f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0216e3a7-55a3-4d85-a1b5-4b7459ba461c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a1166f-f755-4d62-8600-50c136caa9a3",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963185a9-5fc2-40ea-baa2-4e1ed5acdeef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a6d315a-c55e-44f2-94a5-532f312f5df4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd04f58-dfb7-47c6-bb6c-21ee03dc802c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa47f622-3e95-49ae-8717-52a66fa0c5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f1eeff-50a7-4b98-a38f-39b16e5f3290",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac54fc2-d102-4e97-8d89-725b31aab708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00f93ff1-3f31-41ae-a141-c303a47d80b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6be310e-aff5-4434-bfc3-bccfc961c89e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f595de-d606-47ba-aa23-2c97b30e8b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e67a83e-fdd9-4162-8ed7-9b2d6a402d9e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4a94e6-c3f2-436c-95a0-dc7026c321d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2441c80e-84f2-4afe-88c9-39e0c5a8bd21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3aa7a9-c342-42d0-b1d7-1d607ca72fa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40cf39a-dea7-4c01-94b0-5da9c45a3b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa18c95-c362-424b-aa1a-53b3c4bf32da",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39e8799-4d44-4fb2-b954-845628c1730c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7093d4d-827e-45b5-bde7-a1eecf29b4ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8b7e85-fc45-4463-9b9c-dbd034136266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b076293-976f-4d4d-ae7e-5d517d0e3b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656e7c87-8beb-4258-b65d-ddc53ee8a84b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a493c3-a1cb-4fe3-853f-2beec57aa859",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da383a09-2667-4cd5-a723-cbf519e7a8cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8197d1d0-5808-4856-b2de-92701d5c438b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c43e8d5d-62f1-423f-96e1-e0aaa3641163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de478ab8-3f97-4ee6-8a8e-52eb0d6ae872",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1dc83d-b93b-41a6-a877-f712ec4137dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54f8c002-631b-424e-90a9-f1ebdbffce1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6baf5249-dd99-467b-95fb-2eb6f0b33ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "216a5b7b-b88c-47fd-8062-4b48d48c05aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92e395a-d880-4291-ab25-e70f5424a6ea",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90c0505-be02-4c70-8a16-28c6f8101506",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86f525f7-b277-4cd7-a8ff-2ca7421bb3a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0d86b1-a0e2-406a-b740-640c84463719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d85e704f-8481-4273-9cc7-929bd5cdae18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70fbfc8c-a90b-43a4-aa59-bd9a5eba0b90",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d23926-5ada-4774-9d92-c379d16a3323",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed107db9-dc29-48a4-a004-068089125e40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64228d42-20e1-4e18-ae47-35e3d8490210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa585156-e71c-40ce-b04d-f24f782aefdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1cbd19-f7e8-41b2-8e43-aab6f90b285f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3c61b6-ea7d-40a8-a92c-c0f623cb2e24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b654e39-236c-4e14-8df6-c74ac4b8d5a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3662a4cc-b9ff-408a-a02a-f2f6953714a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "416bf1c8-477a-4a62-9573-3798168159b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966ffa05-29a6-4002-b0b9-4b8374d86108",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be59e12-65c5-459f-88aa-9a94a4f6ffd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69f1ab63-3dd0-4f59-9ce5-3f8247fb8012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d60f80-49a9-4e0f-b9e1-f080bd3dad68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62f5d57c-2158-4cc8-b6b9-fa1e1a037177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d6f2a43-076f-4e5d-97a8-73d896c52e75",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1db6ff7-b9ad-4998-b025-899f0041dde9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "427ad438-49f9-4745-8c27-0eeb3f937c94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e0d884-a641-4481-bc3a-98cdff62b8dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "793a48c0-1375-42e7-a322-0277ab36eeef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13d8d2a-68d6-4bbe-86d9-803f8591a7c6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9186d5d-dd8a-4a3c-9bd0-21cf9ce30ad2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1782e67f-3e8a-4681-b4a3-dec7723267db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2afb3352-d3b2-4c51-a02b-4ff1b1966841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc17fff-8048-420b-bc1f-ead2707d80cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81979850-182b-441b-8253-446e56d9c6d1",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2347bdc3-1922-49db-87a5-6a4bf9a9b20d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9b8d484-dcc5-4ad8-8a37-85e502bd45b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad95375c-aac0-4c10-af95-9ba7063c9bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4b4746c-f223-4008-9947-1f48c16f2b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc43120b-d23d-4cb4-9590-c5abc8458799",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a32833-54a4-491c-9c87-c11b0f5480b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ca7084c-52b5-4c6f-ac61-3c363b239518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9d5576-8387-474f-8da1-f169857489bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "544ba86c-1e0b-449c-96e2-9786a56c089e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa30ccca-cdb6-4843-98ea-cfc4f165cdca",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b7cecf-4577-4783-a705-3f21cf2d5f8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d6fd9d9-3b35-451e-849c-12e36a394971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de79e169-9713-46f2-afd1-a79ee73884bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "815844fa-d059-4a65-ad89-df2403841fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f3d2b3-5a43-4efb-b006-c91b77604801",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f990605f-d918-42ca-b0ef-adaad90ed611",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fa559f1-14f4-4553-8250-b6484c8c0d05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23a7837-2152-43de-9114-7fd5ba8e7828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a31102-2f7f-4199-ac55-6e0b35ea01aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb811de-68cc-4b55-bb6e-420c0d29c9e8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8fd7aa7-3ec9-4447-be5a-862c2924c1c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "451e1c07-937c-4439-b0af-a694a6b33519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b104544-ac2d-4ef3-87d2-67db6fc44d36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "427b4c3e-006c-42ab-8eb0-26bf36841f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2265547-7bd1-41cd-9194-64c1e509627b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dffe6f1-3fc1-4071-8e63-be2eda5fdffa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6034184-ddea-4236-ade2-43092e594216"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5713df3e-23de-494f-872c-9e6c189d0891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a22ba884-ee99-4727-9871-ab1b7bf10bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc937ffa-a896-4750-8605-416acb38eac4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db55d47-d68e-43fe-9bb5-b2890fe09ad7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "361a9d3d-6dc8-4b36-be3a-6dbd47bbcca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8e2468-f139-4a17-bc07-624d6d340564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f4f5821-91fe-4a05-908e-f2e548579b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df006aa9-4800-4447-b911-b88b9cb0ed86",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090b97c3-8bc1-479b-8fd2-0bf47d762568",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c817281-66b1-4deb-bb19-141d53da9ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84279e5-f8fd-4873-98f8-2de15b27afc8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6e1b39-5eb1-4ced-86fc-9cbcba7eef32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af3a36e-a88d-4598-980f-86cdef238449",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e897b74-4c6b-4590-a975-fe5495760acd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5596ca24-c504-4e16-89b5-b994a8181acb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb96c1e7-8681-4db0-8565-54c9efc262b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15eab9fd-0183-473a-9d0e-39d3ff7ceb69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8a1e15-005b-4672-bcb8-4eb752a03d01",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492c1a55-4226-4f8a-b7c6-9e4f248589ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0cd2e86-626d-40d6-be49-2452230a02b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced47721-2699-4f8d-b5e3-85523d56c332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6be0ffcb-1c04-433e-816d-4730986354b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d195c37-8fa6-4e63-bcf3-44c7ca5a1943",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6bc8da5-f6d4-4a21-93c2-1c93c443e685",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffa3e866-2954-4346-9b87-75e643fd4098"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31e4fc8-c00b-4095-9d51-b259c890a78d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18fe0217-23d7-4b90-977c-f274f86faf79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b578cb6e-1e12-4719-9a01-ceb7cb87e0ae",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81458a55-87c0-4468-9532-04c2fee70b38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae2b93cb-8510-4284-8419-a4c3ef8456df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fecf8c0-f63c-452f-b9eb-2640b5fd5076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da81d2f4-6e8a-409c-baab-f5e4bc69a63c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0ee9b8-09fe-4014-a1d0-639db539d229",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bccd69b9-df58-4d0c-a56b-d8d1f2926705",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a71bd7b-cc4a-44e9-ba31-beb0f57999e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b281db8-f44f-4316-b6eb-8395090eace0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f0cc5fb-d0ca-41cb-80f0-d7488659f8b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfb316b-0717-43c1-910c-ee907d7f57da",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4eb9bcd-fae4-4f4f-ac5d-5b73053480db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b97fc36-5b65-477b-8f50-ae667d356554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "307e9301-e195-447e-96e7-c0d27c81444b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c04ffb7f-ca87-482c-9192-bd136fe95e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6ab38e-6d53-4c64-8848-427403a22448",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb52488-cc6f-450c-bf6c-847de241011d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99eb0c80-7ff8-47e4-a647-2e83dc6e6d81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f00097-905a-4446-a23a-b275d41bbc36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdd630f2-15ba-4bd8-b43a-f706025f8c75"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8e27b68-14ae-4c7e-a5b6-b1f5a8c7b26b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "740c16e6-db1e-4138-8b7a-339761b0fae8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "91a6645b-cfe5-457b-ba8d-6ab854540bff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bb05784c-7b9b-4dc7-89a4-449a99887107"
                    }
                  }
                ]
              },
              {
                "id": "ea016b9d-9c71-425e-8bb3-4fa4206c5774",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "948ca869-0e49-4315-8616-586b5cb9396c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81ff682-cbd2-4f61-bc5a-275099e6667f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "47e8b72c-5578-4c64-bd61-8e2bb67a19c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71944c47-689f-4354-ae2f-2ad8e0f105a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c49e117f-a9b1-4090-9c25-8051e14acae2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79842153-88b8-4a8f-bade-e0b8b071b7ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de20078d-db09-4dcb-b858-32057d54b203"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd2a9e2e-7ffa-4405-b4d7-f9f595ed21ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e1ac385-af50-4efd-b27e-ef33eb827f94"
                    }
                  }
                ]
              },
              {
                "id": "0b2cd37a-59c5-4b41-a9b3-8401d4b2114b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "154fe2c2-3d4f-49b9-8aac-844978e72309",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac64019-e58e-4788-b169-3e3bee041b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "fd86da67-0cf3-49fe-8625-334cdef70bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e86f159-47aa-4961-ad01-210885c1df33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa07ec8-77e4-4834-b94d-2cca5518b043"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ce63dc43-2a06-4309-a99f-414e0d440518",
            "name": "Positive Testing",
            "item": [
              {
                "id": "239cd410-5048-423a-b8d7-4f2ee611eeb9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cb34d1d-ae17-4454-b3e4-32562f8c03d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "46237605-2afc-45e1-a7a0-8f019e906594"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65efce73-299c-45e8-b4bc-0639d97dd5d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3be54793-7fe7-466c-a392-116f55f2001d"
                    }
                  }
                ]
              },
              {
                "id": "fbb640fd-9785-40b1-b7a4-d95ef6eaed0a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3dd2ae7e-d779-4985-b77a-fb9665f78beb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d6b63a3a-421f-4855-b1f2-a4620e0e2b8b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0bdcda7-48df-400d-9e4b-627a468fc25a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a84c24d0-157b-4e4b-8bc6-a4216da6db64"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2fc57e7f-35ec-45bb-9c38-e3e24ac51e32",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "453c4293-a45f-4436-92f5-fcfdf9b97bdf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68ed03b1-aeef-4985-a428-e41e8e3cfa39",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c5a1516-fda5-45aa-b630-cedc35d09a7f"
            }
          }
        ]
      },
      {
        "id": "af4ab854-4a90-4b3d-bab9-cffbcab36d66",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "49dd6d3a-1f5a-4802-a0e2-0468ee96bdea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a3717830-3674-4d58-a76b-2b15e2330f1e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "86693e70-fb36-4890-bf02-3362bfece93f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63211915-14f2-42cd-87ed-2bc1a973d9e9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9d6a0c7a-dd2c-49ab-95f3-c5500c3f738a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a2de6b-bc85-4da7-8c36-6922494189ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ddf8fc45-c293-49c8-a0dc-4b6c401d7fbf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e139c5c0-0850-4f35-847b-4154283ad051",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2869c840-b8d2-490c-9065-4bbf46c121fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8accdfc-2533-4407-9d9c-3fc038496eb1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae0a9d95-53bf-4ce4-818a-eaa0f1e98859"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78f8f1b6-d241-4f65-ab9e-e143dde146eb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8527d92b-5ff9-4aeb-86e8-e314c2881e6e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b960c8d3-e662-423b-8af8-0ed16c0e17e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9319a7eb-27c3-4f6a-9c15-15f9d75b12bf"
            }
          }
        ]
      },
      {
        "id": "b72e2965-743b-4681-8a31-86eff4425b22",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2700db14-c592-4243-a613-369beafc351c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cb361753-08f2-44d2-9127-e4007344b9b2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c839988c-97c3-4447-ac23-ee85ecb3916a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7996ff4d-b101-4f9e-b0f3-bf9ce2219bb2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93f9571d-cf0f-49cc-893e-18c83ce689af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b9e305-641f-446d-8aad-2c9aad8461d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e444c3b5-69e9-428a-a47f-c781e9349f1a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80ac7018-ee9a-4200-90d2-20c30ca39d0a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82260e7f-c2bb-443d-a787-d32d50745a89"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "49abecff-8248-4e4a-b924-f0dc6e4032e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3869320-1ed1-4067-9eae-fc0a3c6bdc82"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7e47528-f564-4b5d-b2c8-a2edbed08cfb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e468e94c-3faa-41c6-8105-cca37a5da9fa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99ed21d7-65e1-42f3-8ab2-79837b4e35f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ce80e7a0-8fb4-4253-bbee-6932978ad539"
            }
          }
        ]
      },
      {
        "id": "35007d70-7f51-4783-b701-64435c9d4b46",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a18e5f9b-d022-4698-9456-4c34a93bf243",
            "name": "Negative Testing",
            "item": [
              {
                "id": "214a412d-fec4-467e-b837-e7f2a20bfff0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "209b31e8-566a-403e-9c32-3cf81fea7db2",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6981ccc1-c444-44d6-818d-cbba01f259bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81252ee1-2913-4247-a547-a1ca749a25df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "117af6a1-22e6-45b5-a83b-bc69a42fa1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7d14e9e-7251-42f2-9b8c-44e7e16ab23e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9836a883-0248-463e-bb3f-f3643e2c416f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd7c9e24-9d26-48b1-bc18-ef0f7b6c683c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2eb9517-6d34-4f03-8169-365580b3ba8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ced49e6d-b003-48a7-b099-c28cfc2a2cbb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1df2ea8e-c913-4587-a6e3-ce0aabc0c881",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e3f21df3-e85d-4e86-81a4-eee42ce6b676"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a08f04e6-ff5d-42be-aa18-14172325fbe4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "680fb909-77a9-4853-9988-1573f2c6dddc"
            }
          }
        ]
      },
      {
        "id": "f68cb1bc-4fcc-4d58-bf4a-1276ec25b28c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bfc39b2d-f125-45d6-96eb-30bac4a6c33e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b20ed7ec-52db-4277-bf60-f64c383e83af",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "682d08e7-af1e-4e87-8120-a8731cb73715",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1edf39a2-2791-4b6b-bebc-f4eb0c0d9cb0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9710076-1d7d-44dc-bc91-abcc06e62994",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 65.58333333333333,
      "responseMin": 4,
      "responseMax": 5093,
      "responseSd": 393.3346511781797,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1713150269868,
      "completed": 1713150294729
    },
    "executions": [
      {
        "id": "4557897d-bed1-4b70-8ffa-65e08688713a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "fb4b208b-6577-402e-a161-ab2a666c9a12",
          "httpRequestId": "d2a096db-3d0a-457a-adbe-e02d5296d3a3"
        },
        "item": {
          "id": "4557897d-bed1-4b70-8ffa-65e08688713a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "897a0fd7-b47c-4590-9133-3f8cb018f200",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 0
        }
      },
      {
        "id": "85f18283-c4bf-4479-8cb9-02a781f36cab",
        "cursor": {
          "ref": "8094fecb-e2ea-497b-be41-af5a3ce382ab",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f56c0122-6abf-43e0-9153-8a9ac17da9e4"
        },
        "item": {
          "id": "85f18283-c4bf-4479-8cb9-02a781f36cab",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "94454380-e884-4674-b37d-464a48bd6bb4",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "87a7bfab-678f-45c2-a6e9-f3d07a41a4bc",
        "cursor": {
          "ref": "c287a45a-cf75-4b7a-bd83-8229f99522fb",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "aa43049d-4d6a-45e9-b014-e926fd2161f9"
        },
        "item": {
          "id": "87a7bfab-678f-45c2-a6e9-f3d07a41a4bc",
          "name": "did_json"
        },
        "response": {
          "id": "78ce3b9e-5e5c-4281-a92f-24d16ac7c62e",
          "status": "OK",
          "code": 200,
          "responseTime": 193,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727b3c25-776a-418b-961f-c9cf8eded4cd",
        "cursor": {
          "ref": "69609562-c8b2-4828-a63d-648d05752962",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3a63a366-21ec-4764-9c57-f29e912d179c"
        },
        "item": {
          "id": "727b3c25-776a-418b-961f-c9cf8eded4cd",
          "name": "did:invalid"
        },
        "response": {
          "id": "04067e2d-412a-4ea1-aa2a-1dc82bc501b9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 597,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727b3c25-776a-418b-961f-c9cf8eded4cd",
        "cursor": {
          "ref": "69609562-c8b2-4828-a63d-648d05752962",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3a63a366-21ec-4764-9c57-f29e912d179c"
        },
        "item": {
          "id": "727b3c25-776a-418b-961f-c9cf8eded4cd",
          "name": "did:invalid"
        },
        "response": {
          "id": "04067e2d-412a-4ea1-aa2a-1dc82bc501b9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 597,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584828da-1db2-42e5-8e34-e970cce4a028",
        "cursor": {
          "ref": "a91c219c-3732-437b-ac5e-d0d40bac7848",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2da2e918-e7b6-48ef-8548-e3558135d156"
        },
        "item": {
          "id": "584828da-1db2-42e5-8e34-e970cce4a028",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "96fafaac-9385-4ca1-a5f3-4a2c97cec5c3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 14,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32724f9d-af73-4870-b695-8b0b8c9c5a77",
        "cursor": {
          "ref": "b2e1e92d-454c-422f-9953-f881dcb027ca",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7aaf57ba-d39a-412b-818d-0b86d4e6bf45"
        },
        "item": {
          "id": "32724f9d-af73-4870-b695-8b0b8c9c5a77",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "466c2bdf-ae52-4fb3-98ab-218ddbeae9b8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 21,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebeeebe-222e-4958-bcde-9279d073b17d",
        "cursor": {
          "ref": "e0cb8158-4779-4ce8-98c6-87e83429a8ba",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "497a4205-771d-4908-a60f-f0ad72188af4"
        },
        "item": {
          "id": "5ebeeebe-222e-4958-bcde-9279d073b17d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0522c481-d1e5-4c5f-9c0f-45c3aa5ba5cb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e7057c-dbee-4d19-8d36-550b9e17bdfb",
        "cursor": {
          "ref": "0c3933aa-861c-446f-b943-51ab3878248d",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c6babd01-ddcf-40c5-a459-a759e7f9addc"
        },
        "item": {
          "id": "86e7057c-dbee-4d19-8d36-550b9e17bdfb",
          "name": "identifiers"
        },
        "response": {
          "id": "47834551-bc52-49b8-bfb7-a6ff26c615b3",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848b2347-96e5-4b37-8011-ee458c0846da",
        "cursor": {
          "ref": "9a0e42ed-a65f-49bd-a4d1-d792787b7a14",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7072e316-bd2e-492e-9b43-51a22c085017"
        },
        "item": {
          "id": "848b2347-96e5-4b37-8011-ee458c0846da",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "22a36363-d2ad-49fc-9231-74d7823c1cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36352a5-30d3-49fe-af1b-5bf2304d0889",
        "cursor": {
          "ref": "0b5756cb-383a-4010-bb32-8d4af309c7d3",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "366a1855-35b8-44be-96a8-9902cf940b0e"
        },
        "item": {
          "id": "a36352a5-30d3-49fe-af1b-5bf2304d0889",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "dad30171-f2b2-4b59-bddd-b308cf1837c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121d5051-3e57-44a3-b78b-1eb9d133c6b2",
        "cursor": {
          "ref": "c04b52ac-2fc5-4823-a534-15cb422cea04",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "bc710cbc-f9a6-4d57-adbb-3978797bc1ed"
        },
        "item": {
          "id": "121d5051-3e57-44a3-b78b-1eb9d133c6b2",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c320e363-e99e-401e-8ca0-fb65d578d24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea7231b-4dca-4c33-bd1e-7d66127fba00",
        "cursor": {
          "ref": "acd21610-9c09-4e49-b82b-8f060b37d3f8",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "88eb48ce-2f41-44e3-8f01-83f2a63125d9"
        },
        "item": {
          "id": "3ea7231b-4dca-4c33-bd1e-7d66127fba00",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a523ba6e-0995-4c91-8776-3aee6bf2282f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d158459-cf34-4da8-b022-f81ae17ce05a",
        "cursor": {
          "ref": "b1c1d092-e54c-4df1-9fad-564b14ebd48a",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7af6e2ec-0f84-493a-b1a9-dd435760f9a4"
        },
        "item": {
          "id": "2d158459-cf34-4da8-b022-f81ae17ce05a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6f114f5b-a064-4340-aab7-987e9a20f043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b828970-6322-44a6-8009-0c410a10e2f0",
        "cursor": {
          "ref": "7e959f6c-b435-4e4c-b2f8-22eb985e6611",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4cf29020-4afb-4c6a-9626-45bdf09d133f"
        },
        "item": {
          "id": "1b828970-6322-44a6-8009-0c410a10e2f0",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f5722b70-10fa-4fa9-bbdf-34a32536850e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b770335-9ec3-40d3-839d-6f18d5529b6b",
        "cursor": {
          "ref": "3933fab5-0aef-4ec5-b37a-198ad3ffb7fe",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a135c1c4-2f0d-491c-aaeb-c1d302901782"
        },
        "item": {
          "id": "0b770335-9ec3-40d3-839d-6f18d5529b6b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "665181c3-d0c9-486a-b20d-c559708c99e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad7403d-85ee-4256-8d4c-f328932c3653",
        "cursor": {
          "ref": "31d6cd0e-7f6c-4b65-99ad-cbe0fa500561",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3018c023-86b1-4d86-9260-ca7954b040b5"
        },
        "item": {
          "id": "7ad7403d-85ee-4256-8d4c-f328932c3653",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "381015c7-bbd4-43ee-bf6a-af8f10fb2d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5d3504-598e-4233-89df-207744b38f0d",
        "cursor": {
          "ref": "b2aac1b9-1f09-451b-b21a-063c0f204e00",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "217e9e65-c2f7-49c7-b869-1b6547621483"
        },
        "item": {
          "id": "be5d3504-598e-4233-89df-207744b38f0d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "def5c87d-c540-475a-8bdb-4ae0df4ee64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ee8f14-1dfb-41e9-856c-2696241fdd16",
        "cursor": {
          "ref": "a0537096-98cf-467d-8a70-5beb9f92c549",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "983fe637-d5e3-462e-9b18-115167000745"
        },
        "item": {
          "id": "82ee8f14-1dfb-41e9-856c-2696241fdd16",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "adbb3255-fc35-4f69-9bb6-049e719d48b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5597b7-9bb5-4eb7-8433-c8d00ccb9aaa",
        "cursor": {
          "ref": "01218eb1-d164-4c33-98ec-e1e0339dfeca",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "113f2030-fef3-468a-bd30-81ad66a49bab"
        },
        "item": {
          "id": "9a5597b7-9bb5-4eb7-8433-c8d00ccb9aaa",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8b39783f-3b96-4516-9c9c-e7ebf190ea50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d248b47-1272-4927-b458-b8567b3e7b7e",
        "cursor": {
          "ref": "45190c1c-1da7-4527-8a2a-c4fc44327430",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9e5c1333-e51a-4953-a0e8-b024c4326931"
        },
        "item": {
          "id": "5d248b47-1272-4927-b458-b8567b3e7b7e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "cac8e184-971d-402a-bcbd-6767212f6f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3e9539-e845-4c2a-8055-e5e65104442d",
        "cursor": {
          "ref": "1b9e6a32-f588-4487-81fd-c67b1f5bd3d8",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4acfeafe-8f85-4558-a992-71a4fd4dac8e"
        },
        "item": {
          "id": "5f3e9539-e845-4c2a-8055-e5e65104442d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8dc7f2ba-2d46-40f7-836b-e5caf3716136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7b038b-86cf-4553-9d06-c906151eaa08",
        "cursor": {
          "ref": "f2a04233-be98-4e49-a35d-d1c7f556bda3",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "edad5227-4a2d-45d5-92fd-953a627cc079"
        },
        "item": {
          "id": "ac7b038b-86cf-4553-9d06-c906151eaa08",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "59f2fd6f-ecea-4013-9c51-42739f3bee39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817334db-258a-4b3d-9304-629b7cd48ad0",
        "cursor": {
          "ref": "ec89da42-1a87-4439-9d02-b05adb24a369",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0658ebf7-a531-4b69-88a3-106a3061bc35"
        },
        "item": {
          "id": "817334db-258a-4b3d-9304-629b7cd48ad0",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f345aa3a-b76c-44cb-a620-aea1758c3b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574d69fb-efda-4d62-91ef-1c91188dc3ae",
        "cursor": {
          "ref": "93564732-24dd-4cf6-92c8-b2752d194d0e",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3fd70c02-35ce-4759-91db-f363d762a9e5"
        },
        "item": {
          "id": "574d69fb-efda-4d62-91ef-1c91188dc3ae",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b84046bf-7810-464f-96c1-22f1964a5aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c4f989-fbd8-4d4c-a8c4-6dbd9511a136",
        "cursor": {
          "ref": "73362dd9-f070-4cda-98b6-a10b22b08336",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "63ba2cef-7814-428b-b97d-71eb71895c76"
        },
        "item": {
          "id": "d6c4f989-fbd8-4d4c-a8c4-6dbd9511a136",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "716cbc61-a4b7-4034-8ffa-77c077a7bc5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9cee4a1-ba89-48ab-9542-8c17320c5806",
        "cursor": {
          "ref": "beb3b1d6-299f-4cca-9e37-e8a1b5841596",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5efebb2a-309d-4bae-9f91-fc1ea8b1c002"
        },
        "item": {
          "id": "a9cee4a1-ba89-48ab-9542-8c17320c5806",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8034351c-724e-4b49-a000-d44225d632cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9aaaa07-24ec-4b49-8344-8d63da6a83c9",
        "cursor": {
          "ref": "0e6bfa8c-fcc7-4982-b23e-a132613ed1ce",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a15ea5fa-05c7-403d-b0fa-096597b1e8cf"
        },
        "item": {
          "id": "e9aaaa07-24ec-4b49-8344-8d63da6a83c9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "87a34b16-1d8c-434a-a87b-6a27614612cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8f8fcc-4357-4412-a977-c98c871f6f4e",
        "cursor": {
          "ref": "312a4e7a-2a8c-4958-99e7-ee36f4217502",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8fe3d2c5-9b6a-42a9-af55-5f2ae0b2e881"
        },
        "item": {
          "id": "0a8f8fcc-4357-4412-a977-c98c871f6f4e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e9df3443-c865-4167-acc2-a2bc54bd1e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7329a8-4554-4dab-a7fc-205ea02b97db",
        "cursor": {
          "ref": "f89a2e6c-0358-4950-96de-52a56a9e65fa",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c5867ac0-d455-42a5-9875-8a3aec070c9d"
        },
        "item": {
          "id": "8d7329a8-4554-4dab-a7fc-205ea02b97db",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f75dccb4-f38f-46c7-b3c4-78f90e61991c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eecf4a9-7da0-486a-85d3-3c0c5745ee21",
        "cursor": {
          "ref": "ecb5e84e-b550-47d1-b386-c6add67fe9b6",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "96772bdb-d9a8-4e35-b2cb-111d0a690b96"
        },
        "item": {
          "id": "9eecf4a9-7da0-486a-85d3-3c0c5745ee21",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "984fd2bc-9e96-48e8-bf2a-312600637797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f43688-922c-4b47-8c95-4ca065a1b98f",
        "cursor": {
          "ref": "15699e22-2102-4e39-9aa5-8170b2295f72",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c5c91302-d5bf-4c11-958d-88c4de7ecbb6"
        },
        "item": {
          "id": "c2f43688-922c-4b47-8c95-4ca065a1b98f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "29e24050-285b-44a0-af28-a3993bbcc67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f529b8-c07e-4fc9-81ae-304cb828b4bd",
        "cursor": {
          "ref": "a4be1ccf-cb68-42fd-ac07-7929135f47fb",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3ad88410-74e5-4dd5-92da-65dc6389397b"
        },
        "item": {
          "id": "20f529b8-c07e-4fc9-81ae-304cb828b4bd",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "26f8f624-adfa-48f0-99c1-88a27f2cbd03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9643b3fc-92fe-4231-8990-2aa37fbc2682",
        "cursor": {
          "ref": "f1b03a09-5e44-4cbe-b13f-369c88eb345a",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ce42aeec-5e54-47bd-af9b-04bab32f5b5d"
        },
        "item": {
          "id": "9643b3fc-92fe-4231-8990-2aa37fbc2682",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a0a9fb38-209f-46b1-bca9-e0cb3f995ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe60432c-a8ff-4b29-8b35-86f83803fb31",
        "cursor": {
          "ref": "088c23d4-4a23-4940-b4f1-cd3a863578da",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "35736f16-9ee9-4d60-a07f-75b9628133b0"
        },
        "item": {
          "id": "fe60432c-a8ff-4b29-8b35-86f83803fb31",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e021e014-b322-465c-bd8d-7379e2d73d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13880101-0e19-4684-ac18-855ef2f4d91e",
        "cursor": {
          "ref": "56c7627d-b51b-4035-81f6-500132fc0d80",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8a2e857d-6274-4cf9-b23a-1ca88fcec69c"
        },
        "item": {
          "id": "13880101-0e19-4684-ac18-855ef2f4d91e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1d82e390-a639-414c-a593-a421b99b4d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00cc6075-f988-4137-8dd9-b8a8edc82b85",
        "cursor": {
          "ref": "ba98a2b1-7599-4079-9774-fb6e96c75173",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b1aabd1c-b1eb-489b-89f3-4b094c895c70"
        },
        "item": {
          "id": "00cc6075-f988-4137-8dd9-b8a8edc82b85",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9631dc2b-947f-4b03-9a5a-c9b4520be27b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d42e56-a798-4b66-a673-9686997ca0bf",
        "cursor": {
          "ref": "6fd8eb61-70b9-455f-815f-7cf8766a0645",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c6b907d7-7089-4bc8-b9ff-af20b62195f9"
        },
        "item": {
          "id": "79d42e56-a798-4b66-a673-9686997ca0bf",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e7ed2e53-1608-4eed-9d12-350556c8a22c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcf3ff5-2ade-4dd7-a946-f0c97c7ac06f",
        "cursor": {
          "ref": "2311dcc3-407a-40fd-81a3-3d06e7e3e110",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "219a144a-8e41-4642-9e3d-5adff8f08b41"
        },
        "item": {
          "id": "0fcf3ff5-2ade-4dd7-a946-f0c97c7ac06f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "28b783bc-3195-41d5-a005-3814b7e6359f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d448e91-7543-4aa3-a49b-f81bc9dc324e",
        "cursor": {
          "ref": "f743423c-66e0-4b45-9c13-fb1f1ee9d591",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "44d88026-3349-4476-b2b7-767d742abeaf"
        },
        "item": {
          "id": "3d448e91-7543-4aa3-a49b-f81bc9dc324e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "77352ad0-5dac-4f23-8d85-cd988697cd46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07415948-c8ff-4f21-a1c9-a86d0b48b34b",
        "cursor": {
          "ref": "e721f030-c5c1-4d1a-8c68-0695f013a9be",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8d8d3926-12f7-4c19-97ac-bd70eb275477"
        },
        "item": {
          "id": "07415948-c8ff-4f21-a1c9-a86d0b48b34b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "cf5c1f7d-80df-4419-b32b-b7acabbd8b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97d83e6-ebd3-4659-868f-8fb85660f0eb",
        "cursor": {
          "ref": "85666069-aa5e-4fd0-9622-2d44b1c48246",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "bbbdbb28-1a0e-4384-9b93-d8b19e59f7ba"
        },
        "item": {
          "id": "b97d83e6-ebd3-4659-868f-8fb85660f0eb",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2d1c46d5-a867-4405-b258-9f86d1330095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73be8454-2039-4846-9c3b-ae7382abe2de",
        "cursor": {
          "ref": "d594bbbd-bcab-4041-b5e2-c70b52802056",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "cfbb0283-1db4-44c9-9e27-34fe4ebd712b"
        },
        "item": {
          "id": "73be8454-2039-4846-9c3b-ae7382abe2de",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6bfa9640-9150-4f16-82d9-4be6412afba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fa2fdc-a614-48fd-afff-95c2ec4eafa4",
        "cursor": {
          "ref": "032d2097-0d1c-4dcc-946e-a226e852624f",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "bd33a22b-cc5c-4b19-acdf-cc59f58d6fc0"
        },
        "item": {
          "id": "a0fa2fdc-a614-48fd-afff-95c2ec4eafa4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "14efcc8d-8948-4d8d-9d2a-c0a6dd3634f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7806e8cc-add7-4b12-a0c9-3792e1a134ab",
        "cursor": {
          "ref": "6fc49052-d5ed-46de-93a5-82ce453cdbda",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "598c09e1-03ad-444d-8cf4-61ae6f340b80"
        },
        "item": {
          "id": "7806e8cc-add7-4b12-a0c9-3792e1a134ab",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "aa3dc1c1-b1a5-4287-b3b8-6782972cf6a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f593a2-e477-4fbe-a407-4067795db9af",
        "cursor": {
          "ref": "8a6ee974-719e-4f11-acd5-b674081201e0",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2c624929-1c62-4105-9779-21500696b34c"
        },
        "item": {
          "id": "16f593a2-e477-4fbe-a407-4067795db9af",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d4db9fe5-de80-405c-b114-69146b1d75a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6335a2ae-5b56-4e9b-b7bd-2169a7c33985",
        "cursor": {
          "ref": "f794417a-56a3-4dfd-9a15-ce8eb86b0118",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cce9a098-3946-4292-aa71-33d964ca115c"
        },
        "item": {
          "id": "6335a2ae-5b56-4e9b-b7bd-2169a7c33985",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8a3dfa1d-fb75-46c6-aa72-bde4001a8439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5be172b-726a-487b-a2f4-4f3461ee2cd4",
        "cursor": {
          "ref": "0b9e1322-95a3-4282-bf99-15bf63f8f7a9",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "48965aba-5491-47b4-b6aa-17e9bf8983bc"
        },
        "item": {
          "id": "f5be172b-726a-487b-a2f4-4f3461ee2cd4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d9956ef0-7db2-41ff-af10-4815fcc8e692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21adbee-83b2-4b3d-8ed9-8df6fe9f16f2",
        "cursor": {
          "ref": "104da229-baa3-4773-b3f6-86aa5e362d98",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "20f021c7-0e73-4abd-ae15-eca87a3f4278"
        },
        "item": {
          "id": "f21adbee-83b2-4b3d-8ed9-8df6fe9f16f2",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "de4d3d7f-bbb2-4c75-be00-c8bdc415d36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78a6a97-20d9-4e4c-9e18-c78c8f880052",
        "cursor": {
          "ref": "c46b2fef-c6ff-4dcb-9d73-d45453eed7d7",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "221d2b59-826f-4b6a-9a7b-0738511507ad"
        },
        "item": {
          "id": "a78a6a97-20d9-4e4c-9e18-c78c8f880052",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b7a920c6-b1bb-4b87-9e7d-b3a9318677fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c16e94f-38df-44ec-b3b4-61bc702c8242",
        "cursor": {
          "ref": "dce5cd1e-b346-4cab-9d3b-de652fc35278",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "41681bd6-a157-4080-b19c-7cd9672ec4fa"
        },
        "item": {
          "id": "5c16e94f-38df-44ec-b3b4-61bc702c8242",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "511e22b4-6fbe-4fe0-b189-3905346bdbd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ef9435-4aa0-4c38-926b-21b6a8057e66",
        "cursor": {
          "ref": "111d9514-ed76-4437-bbaf-fc0334c9da10",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "42a539d3-0b59-4b40-869c-f734ff2c77a7"
        },
        "item": {
          "id": "52ef9435-4aa0-4c38-926b-21b6a8057e66",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "eacf6486-3063-48cc-a580-822446959bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd58698-0bd0-4517-8886-b6c6bda0a408",
        "cursor": {
          "ref": "cce2ce24-323a-43cc-a8d9-b2a7d3527e16",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2e18b85b-6ffa-49b4-8bf9-9c0a83b4d5ed"
        },
        "item": {
          "id": "0fd58698-0bd0-4517-8886-b6c6bda0a408",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7b584520-bdb1-40ff-8a96-dd0f5b852add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e53a3c1-ea57-45b4-a9e5-453e60516e4e",
        "cursor": {
          "ref": "8bb94205-f9de-481d-b0c0-a4da4d09e32d",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "68b04644-0b64-484b-80cf-76bb7d06b3f2"
        },
        "item": {
          "id": "1e53a3c1-ea57-45b4-a9e5-453e60516e4e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "80451dc9-662e-429a-90a6-5e66b5b3369e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32fc1d9a-3383-40c5-a643-546f733515b0",
        "cursor": {
          "ref": "d96b135d-3801-4c0d-b276-bf0aba05e156",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bd437593-ccbe-4688-bd8f-f913ebaa7427"
        },
        "item": {
          "id": "32fc1d9a-3383-40c5-a643-546f733515b0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f1a1a668-c9c0-4415-9164-d7a82953464b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb80451-2216-40b6-8de6-ad66757c3e9b",
        "cursor": {
          "ref": "e8c0f279-cc82-483e-975b-de2ce6d827e0",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "847ce16e-4953-4a7c-b8a3-c7beacec7cbb"
        },
        "item": {
          "id": "8eb80451-2216-40b6-8de6-ad66757c3e9b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "bc5fbf5b-516d-48d8-aa30-0507601735cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88adb337-1734-4b71-a026-a669b01f6eb6",
        "cursor": {
          "ref": "16df8436-0855-4c3d-ada9-fa5c26ed39c6",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "93e0dedc-232b-4fb1-a3f3-1c6d41566786"
        },
        "item": {
          "id": "88adb337-1734-4b71-a026-a669b01f6eb6",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "73bb1315-ca7e-45c1-a6a5-99ac8ba3917c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f14bd6c-782b-4f12-85bb-1ff9d40bfa1a",
        "cursor": {
          "ref": "fdc8fdfb-4430-4f37-b918-87b134bd9546",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "63a901a1-3f53-4a3a-872b-e9c82397a4f1"
        },
        "item": {
          "id": "9f14bd6c-782b-4f12-85bb-1ff9d40bfa1a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b0e22bf0-c23f-4e65-931e-0bccafcc2bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95793f05-ac57-4ebf-aa7f-38b201d07413",
        "cursor": {
          "ref": "1e3c71a6-8443-42fc-99a3-e801792f1500",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "90a17b03-9b31-48c2-86a8-513c39d4c0f4"
        },
        "item": {
          "id": "95793f05-ac57-4ebf-aa7f-38b201d07413",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1ee77858-6661-4652-b999-242ab758385e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e761773e-a466-48bd-9c26-e84bc05f0f79",
        "cursor": {
          "ref": "39d8b167-da66-4e5d-afa7-ca5d11a4c6c6",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d7a6dece-ff4c-4e68-8bc5-dd938ce3a357"
        },
        "item": {
          "id": "e761773e-a466-48bd-9c26-e84bc05f0f79",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a8e0c815-d9e6-4864-b68e-0c0cd634a018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39799da0-8ad3-4f90-aa92-e57e2a4f5123",
        "cursor": {
          "ref": "15caeb6e-14b2-49d2-8360-de8aa3c7a403",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "21c5d383-3e63-4492-8bef-cb7ee36c5832"
        },
        "item": {
          "id": "39799da0-8ad3-4f90-aa92-e57e2a4f5123",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "17533552-6f93-431c-bbf2-e421d06261ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf74acb-657e-4f4d-adc7-4683195551e5",
        "cursor": {
          "ref": "b902d606-2154-4edf-a35a-e3cea1e5f9ee",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c4c3c5a1-031a-44b8-a29d-5dc24e0e2350"
        },
        "item": {
          "id": "ebf74acb-657e-4f4d-adc7-4683195551e5",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ecbafaee-480f-4b75-ad0b-cd11418a3ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ecee68-f23e-4b13-8f6a-0d3986ea350f",
        "cursor": {
          "ref": "5340d935-804a-4b96-89af-d7b51c13ac6b",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "42078d1f-4456-434f-99c3-c88af3fb1f24"
        },
        "item": {
          "id": "f0ecee68-f23e-4b13-8f6a-0d3986ea350f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "41243f39-6486-4710-a1e7-4b55c4e6a6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa598ff-6cb8-4bdd-b4f6-ce82047d3e67",
        "cursor": {
          "ref": "c7ac8e7b-44ea-43ed-a075-ba06eca5a121",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a5f6030b-6e83-4c23-b94e-4e97c389503e"
        },
        "item": {
          "id": "cfa598ff-6cb8-4bdd-b4f6-ce82047d3e67",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "fb4454eb-6a16-4ec0-abd0-d97dd447c29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9074c9-b06e-4732-9ee9-ed0cc814c0ab",
        "cursor": {
          "ref": "b135b85a-d167-4d29-a45c-ec0fe58d27d7",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "13823ac5-a00b-4694-9248-77f1549f857b"
        },
        "item": {
          "id": "de9074c9-b06e-4732-9ee9-ed0cc814c0ab",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d9313eb2-41ba-49ae-80ef-0004c73842b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6314e71d-185f-4f91-85a9-b7937454d116",
        "cursor": {
          "ref": "9e4cadd9-c553-48b0-9b0e-05c73d10b05a",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c3bfd623-06da-449d-b2a1-ca953888de8b"
        },
        "item": {
          "id": "6314e71d-185f-4f91-85a9-b7937454d116",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "423ab0e8-718d-469a-ab5d-03ae98c84849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224f7743-d211-42ce-8f7d-8210354cdec6",
        "cursor": {
          "ref": "1d8eebf0-f998-4d03-bc12-b6b5383e467a",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5194e0d4-36a9-47f2-9c6a-0d04890d846f"
        },
        "item": {
          "id": "224f7743-d211-42ce-8f7d-8210354cdec6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "1c26ffde-767c-485d-8848-9f729d0dada7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c482dca6-ec19-407d-a2fe-2c36ed9eab24",
        "cursor": {
          "ref": "9b777886-bc6d-4c8b-b466-f9601a878f7c",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d8ae102d-62fc-4a5a-9a46-26edff8c6d07"
        },
        "item": {
          "id": "c482dca6-ec19-407d-a2fe-2c36ed9eab24",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6601ffff-1dda-4480-b1de-b439ecd0922e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf0572c-3ef6-4487-a29b-0f202a6b9898",
        "cursor": {
          "ref": "616d5875-e5ec-4ef8-a041-cccc7df455dd",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f8ae069a-27e5-45e4-819e-0e9e8f8c9762"
        },
        "item": {
          "id": "4bf0572c-3ef6-4487-a29b-0f202a6b9898",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6d43b984-35e2-4f2e-8eab-11228b83d8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d583726-2783-422c-8c31-270edb2fcf71",
        "cursor": {
          "ref": "ef0b42f5-4e17-433e-92cc-df183cd1b87c",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b4f25dc1-1e37-4564-a393-749f6bacebf9"
        },
        "item": {
          "id": "1d583726-2783-422c-8c31-270edb2fcf71",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "57ea4cc3-5938-4f66-b7a9-fb771b541e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65dd3a9-f5da-4e5a-9ea5-2d9f1d05c9ee",
        "cursor": {
          "ref": "54d1ace2-ba0d-45bc-9cce-626df855575e",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8677cc74-60ff-494f-86c7-d764a474f52b"
        },
        "item": {
          "id": "e65dd3a9-f5da-4e5a-9ea5-2d9f1d05c9ee",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "34955023-0ca8-4777-95ce-9f6660693ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5901e04-6844-45eb-b67f-9c0e50478f19",
        "cursor": {
          "ref": "1e33b229-6c3e-4a18-90c8-1649efc2cafd",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6eb55d76-cfd9-4a5a-8542-19319a64d51c"
        },
        "item": {
          "id": "d5901e04-6844-45eb-b67f-9c0e50478f19",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "db559694-2fad-4a6e-874b-3fac55abfbb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bedaee0b-5c06-4ecc-b747-6857f66e745d",
        "cursor": {
          "ref": "47a31daf-c6d3-4117-819d-2fe7107fe52d",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ceef49a0-cd78-49e7-81d8-fa095a8aff39"
        },
        "item": {
          "id": "bedaee0b-5c06-4ecc-b747-6857f66e745d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "784b01c4-f26b-4765-8498-6df07977bd71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbec96a6-69e0-4a38-9d70-b225f8b2dfb9",
        "cursor": {
          "ref": "fa2bdd47-a86f-4b68-af1f-4090e3f821ae",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c0818971-23d7-40d2-975d-394ebcca49de"
        },
        "item": {
          "id": "dbec96a6-69e0-4a38-9d70-b225f8b2dfb9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "30a32b21-c999-46a0-b78e-f8d72828f30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743fbd41-e0f4-4e9f-872d-b55d36c7ce66",
        "cursor": {
          "ref": "4965d550-0f82-442a-89e3-f2b7248199e6",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "022d1659-1edd-421c-a091-12e0837ff798"
        },
        "item": {
          "id": "743fbd41-e0f4-4e9f-872d-b55d36c7ce66",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4ba24c26-8835-4464-b3c2-9fbf174ae064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eead1de2-faa4-4b57-914f-3281b849860f",
        "cursor": {
          "ref": "e184822b-69e3-459a-b164-4aee436f8468",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "14f1626a-06dc-4ad1-a459-de97f1e63bbd"
        },
        "item": {
          "id": "eead1de2-faa4-4b57-914f-3281b849860f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1a76579b-54a2-468d-831d-7ca74f9f6ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f2cdbc-30ac-4c95-8145-9a5219a49d7d",
        "cursor": {
          "ref": "e1436369-6e06-4e63-aed7-c773fdf7115e",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c6ed2ede-c247-47c7-a144-8baca1cce44a"
        },
        "item": {
          "id": "e4f2cdbc-30ac-4c95-8145-9a5219a49d7d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "cfcb4af1-cead-48e8-aa53-ddab52b7e55b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3902732-d67f-4fdb-a807-d332248042f1",
        "cursor": {
          "ref": "9bde35ca-ca49-408e-a11c-0043d3a4eed0",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1b12bd7d-68b4-49bc-bf71-3f5bea57a246"
        },
        "item": {
          "id": "d3902732-d67f-4fdb-a807-d332248042f1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "62d60dd3-9b53-4b76-8ebd-92ff770a5f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bde1d57-aebb-48a9-8369-60dc45fe7c17",
        "cursor": {
          "ref": "1fec81f2-2180-440d-aae9-ec8fc2f789cb",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "41ffcedd-2720-4960-8fee-1a7272247fe1"
        },
        "item": {
          "id": "5bde1d57-aebb-48a9-8369-60dc45fe7c17",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a1cae79e-8b29-40f5-9e70-81df17928064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c1d1d3-0a4d-463e-8f68-7c855cde5a89",
        "cursor": {
          "ref": "cdeb0a12-da45-4cf8-a3cc-f83337c032f3",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9fd78788-dff4-44bb-aaca-f9e5eb9cee0a"
        },
        "item": {
          "id": "26c1d1d3-0a4d-463e-8f68-7c855cde5a89",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4ab2d774-7d45-41da-a732-59f8d2d5a83b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95fefb3-341d-4a64-af60-b579b8701174",
        "cursor": {
          "ref": "c79f4d67-164b-4d97-bb0b-838d9e6059d9",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "630a732b-650d-40fc-96c0-bd20e90fa841"
        },
        "item": {
          "id": "c95fefb3-341d-4a64-af60-b579b8701174",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8e741d3f-d9e0-4d11-b927-125a4cd595d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73802b1-090d-4083-ac8f-f70eaf3b46e6",
        "cursor": {
          "ref": "654dffe6-7b50-400b-b62f-cf90bc634798",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "76b1cceb-17ee-402b-90e6-bea9c96a5a15"
        },
        "item": {
          "id": "d73802b1-090d-4083-ac8f-f70eaf3b46e6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6a4e4a3f-c851-4917-a72a-b601b382509f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73a18ae-308c-402b-9a21-29ad032b5169",
        "cursor": {
          "ref": "25bf6a83-c4f7-465a-9468-3b8f0f31331b",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "bc018faf-5af2-4b77-bcfd-b6e2d8757776"
        },
        "item": {
          "id": "d73a18ae-308c-402b-9a21-29ad032b5169",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ee882f00-0bdf-4458-8a70-371e4096368b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ae69c7-07a0-403b-85bb-f62bda03d558",
        "cursor": {
          "ref": "112b9345-efc1-4ecf-8bef-5b7b01b4b7c2",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "89fd7383-1ca6-46f5-aa3a-028edfd3dd8f"
        },
        "item": {
          "id": "b4ae69c7-07a0-403b-85bb-f62bda03d558",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "486fb374-c2be-44a9-a87c-69799df2bd79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b35cde-4b31-4a16-9c84-90686e7cefdc",
        "cursor": {
          "ref": "80b8e2f8-99b6-4ac5-a736-7784b393e52c",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6446ecd7-60a5-43cf-b80d-f0c308771376"
        },
        "item": {
          "id": "50b35cde-4b31-4a16-9c84-90686e7cefdc",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9c6b4e2a-8f14-4da2-a322-07a5fa7a1906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d956ac32-42a7-442b-b3eb-beda931d35c6",
        "cursor": {
          "ref": "23ff79f2-0da6-462d-988e-5321bd3f2032",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7c8cd1a3-1472-48b4-9b84-f994af0d7b34"
        },
        "item": {
          "id": "d956ac32-42a7-442b-b3eb-beda931d35c6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "150aafb6-200a-4fbf-bee0-cb7845cfdad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87f1ca3-4416-442e-9df4-40f47e65d296",
        "cursor": {
          "ref": "65eeef09-4e6e-41b6-a37d-eaa7c920294e",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c256eb33-5fdf-4cc0-90f1-65b51a1f4443"
        },
        "item": {
          "id": "a87f1ca3-4416-442e-9df4-40f47e65d296",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1d7af2bf-0d75-441f-9171-7145556f9e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d019113-54d5-4985-94e9-f0cecfb9346a",
        "cursor": {
          "ref": "1bfbe405-b4ec-433d-9351-f97b0216ce02",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a237fd78-15b5-4dba-8e4a-6b062c8cf463"
        },
        "item": {
          "id": "2d019113-54d5-4985-94e9-f0cecfb9346a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f62b5533-95a7-42d4-80f6-703880d1e79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4bef1bb-f41d-4682-9c30-64d7188cb3e3",
        "cursor": {
          "ref": "3eedf681-f732-4906-971e-224393e8d61e",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9571a303-fa3c-496c-a248-0f00a549e612"
        },
        "item": {
          "id": "f4bef1bb-f41d-4682-9c30-64d7188cb3e3",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1f68aaf1-da40-445c-89f9-cb8e3cd2cb47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2247f2c1-2780-4c75-90d1-19113122874e",
        "cursor": {
          "ref": "e2ed28ff-8817-49d6-975f-434669b7e60f",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a9a34a9a-483d-4c63-89b7-8272d6a75c06"
        },
        "item": {
          "id": "2247f2c1-2780-4c75-90d1-19113122874e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "16d5df75-cff8-42e3-ba1d-5082c3e7a24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9f2cbb-32f5-4847-b4c2-2d97e0462e91",
        "cursor": {
          "ref": "67373bad-c7f8-4b90-9f74-87a5ba1b8045",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a1c122af-547a-4e6c-a84d-ccaa24c3c0bf"
        },
        "item": {
          "id": "6a9f2cbb-32f5-4847-b4c2-2d97e0462e91",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "afbd5212-b36c-4b51-a1af-82b18748f496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd183b6-123f-4ac0-8a68-34fe7e17c278",
        "cursor": {
          "ref": "75e63b2e-80bc-4eab-8e24-e629cd9c53b3",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6f950444-a126-451d-8fb2-66e83fdc5e3e"
        },
        "item": {
          "id": "dcd183b6-123f-4ac0-8a68-34fe7e17c278",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b54d69e9-1577-4994-ba6e-8ea8062c9a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed6a606-275e-4f6b-ada3-ccb0e4efe101",
        "cursor": {
          "ref": "3c29688f-7cf7-47e7-9c97-6729b1b61474",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e90e860c-e574-4f97-a332-627c909aa4a9"
        },
        "item": {
          "id": "bed6a606-275e-4f6b-ada3-ccb0e4efe101",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2d571f01-f2b7-4e61-bbb2-08d00e935424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116fff25-68df-4d66-aff7-2034483c6c8d",
        "cursor": {
          "ref": "9b59567f-8755-44e9-900f-b08c9e9c28e0",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fc87d4b4-54f6-4437-808b-28257d0a4a94"
        },
        "item": {
          "id": "116fff25-68df-4d66-aff7-2034483c6c8d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "bfa2f7a8-c098-42e8-9ef4-3189a83be279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3e3bae-144e-4049-901e-43f8d398a711",
        "cursor": {
          "ref": "feb52de7-72fc-47ca-b56a-942e8b22100b",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4ae89a6a-ebe3-414c-87e5-4a4224d0c7cf"
        },
        "item": {
          "id": "ef3e3bae-144e-4049-901e-43f8d398a711",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3c821fbc-54e9-40b2-b63d-92a9b19b6d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a6c89b-63c1-4cfb-9dd1-86fbf832d501",
        "cursor": {
          "ref": "5aebd77f-9fc6-45db-a9ce-4f9628fdf861",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "976604a5-28ec-42ae-987a-852cfba0de9e"
        },
        "item": {
          "id": "c6a6c89b-63c1-4cfb-9dd1-86fbf832d501",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7e697681-0f91-4c02-84f7-d19dcc91b130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af468c0a-1596-442f-ab5e-3c390222832e",
        "cursor": {
          "ref": "c8d103d1-2b86-4922-8089-77c545c8b549",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3b900ac3-8093-4b38-96bb-2e2b573d3fae"
        },
        "item": {
          "id": "af468c0a-1596-442f-ab5e-3c390222832e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9e8a9e8d-686b-41ef-85e5-633b2f1f3dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5d6aac-f982-4f49-8557-6f7233aa685f",
        "cursor": {
          "ref": "d9a48571-0d5e-439c-89e5-998f6aecbf14",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0bcd4a61-1bb9-4bf3-8371-4477b16a3ecd"
        },
        "item": {
          "id": "0c5d6aac-f982-4f49-8557-6f7233aa685f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b010e2d6-c839-4bec-91e6-3870d6a9e240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63da0c14-cf11-46cc-8c0a-aa88c446ccec",
        "cursor": {
          "ref": "74fa6ed5-5433-4c36-a19a-f0d83855e5b3",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "fd3316e8-2bf3-4e3a-abc4-c8eb7c233f8b"
        },
        "item": {
          "id": "63da0c14-cf11-46cc-8c0a-aa88c446ccec",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ea335a12-5b32-46dc-9131-10084f38d7a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e8bf04-f511-4efe-9da4-2c4a264f41c2",
        "cursor": {
          "ref": "524edf0e-72c1-4905-9b41-34593b3c67c6",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "71932f23-7539-4e38-bff1-a9a07382703d"
        },
        "item": {
          "id": "46e8bf04-f511-4efe-9da4-2c4a264f41c2",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9248dbe2-122b-4eb0-8521-61b89c57db3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8611e0ba-a884-4645-9f27-de3f8e9df170",
        "cursor": {
          "ref": "9318c329-1751-4f99-b0fe-f61b0bb58e6e",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "25634220-52e1-4d91-8a3f-6aa6f8c3ae92"
        },
        "item": {
          "id": "8611e0ba-a884-4645-9f27-de3f8e9df170",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9db53189-f8cc-41cf-bd4e-ef69fa893a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d784a2-ca3e-40c9-b35c-daa2662bff10",
        "cursor": {
          "ref": "4f55c3b7-a075-4d88-84ad-77e3b2db3b5d",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "dcf73778-2c6b-41ba-ae37-405cbc9c22be"
        },
        "item": {
          "id": "61d784a2-ca3e-40c9-b35c-daa2662bff10",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2540c5a4-16cb-4ab2-87f1-eb7e669b9698",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c334d36a-f456-4191-b584-4dfe406390d1",
        "cursor": {
          "ref": "80475a66-447e-4664-9e51-37cb2dd3a772",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9188809e-faf9-4e79-9c91-20003b2a7f1d"
        },
        "item": {
          "id": "c334d36a-f456-4191-b584-4dfe406390d1",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "7292c844-85cc-4241-94b8-ab38f27fed2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "c348cae1-d34a-417c-8c04-20d947b76e0f",
        "cursor": {
          "ref": "99aba2fa-4b33-4e86-9060-11c3e0afda2b",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0783a79a-e2be-4e8a-9010-2ddf9db8c301"
        },
        "item": {
          "id": "c348cae1-d34a-417c-8c04-20d947b76e0f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4896974f-25ca-479d-8e19-9540b6ea2d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "d34341e4-1af0-4bcf-83e2-c6acf6c88746",
        "cursor": {
          "ref": "d18f96ea-3932-4110-9a60-ae2cf6c42bd8",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "84f37915-a78b-469c-ac25-abe23b2be957"
        },
        "item": {
          "id": "d34341e4-1af0-4bcf-83e2-c6acf6c88746",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "acce4003-80ad-45f3-abc9-254fe7898cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "cb78b845-b7fd-4669-a496-d417a1ce4132",
        "cursor": {
          "ref": "21831bd3-a67e-413e-b62a-98c179888a42",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "96eefad9-37ab-4eb7-9bf4-136f39c01899"
        },
        "item": {
          "id": "cb78b845-b7fd-4669-a496-d417a1ce4132",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c6f0bfd7-cb40-456a-ac63-5f47ccd80e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "fee98ab3-af2c-4122-bd0e-78aab7d28b49",
        "cursor": {
          "ref": "4675d1ba-fb5c-4d93-ae3d-b699ff5902d5",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "df0291c4-e84f-4f12-b0de-43a91f46bdd7"
        },
        "item": {
          "id": "fee98ab3-af2c-4122-bd0e-78aab7d28b49",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "eb67db5b-22cd-4e3c-ae8a-929406f17fb7",
          "status": "Created",
          "code": 201,
          "responseTime": 5093,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7bdc6f-30d1-43d5-bc4e-c258a8b6bc62",
        "cursor": {
          "ref": "a47cb62d-56bb-4db0-a30a-dd5e8859bec2",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3a52f918-921d-4fc1-8f59-dc7f4b783b0e"
        },
        "item": {
          "id": "8e7bdc6f-30d1-43d5-bc4e-c258a8b6bc62",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "80a4bd64-08a8-428b-b8a0-5a7c8c8b009a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "f8c30240-6c60-42a5-a2f6-646ff91f951c",
        "cursor": {
          "ref": "12f69a6d-da0e-4eb0-b4d2-f692a7110c4f",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e2fdafd8-dd2d-43ad-a3c6-58bbb7811e58"
        },
        "item": {
          "id": "f8c30240-6c60-42a5-a2f6-646ff91f951c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "fa27de7c-872b-4ca8-98b8-a9c495e2bad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "3c65d5e7-f99b-43f5-8e3b-cfb0521f71be",
        "cursor": {
          "ref": "5eb8c9b0-0c87-42b5-913a-638202e6ee7b",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3407791e-08b9-4fdc-bb53-b2bce974821f"
        },
        "item": {
          "id": "3c65d5e7-f99b-43f5-8e3b-cfb0521f71be",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "36bcc384-a57f-429a-bade-366a676f2f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5840d6e-5e30-4eec-8ada-2a77cba26f62",
        "cursor": {
          "ref": "81db54a3-f4a8-46e7-a1a0-76f7cf273b26",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f4fb3a9a-5802-4bdb-89fb-9df296c5eeda"
        },
        "item": {
          "id": "d5840d6e-5e30-4eec-8ada-2a77cba26f62",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7d6a9a5f-fa73-4517-921b-d66497c72172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6312bd2f-c054-41c3-b3e9-15e3f20a782c",
        "cursor": {
          "ref": "2e371032-67b3-4b40-b45b-39aaf4c58e80",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "58714c7b-243d-4e91-ae34-a388e5fe4078"
        },
        "item": {
          "id": "6312bd2f-c054-41c3-b3e9-15e3f20a782c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "06449a10-57c9-4eca-b50b-62ec5ae3eb64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5610a0f1-20d4-48e6-bb73-e3e06055364d",
        "cursor": {
          "ref": "2d7d0cf0-3fb6-4987-abd6-f9dbb747556a",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "25e51239-6ac6-45a2-aa5b-3df7da4781f7"
        },
        "item": {
          "id": "5610a0f1-20d4-48e6-bb73-e3e06055364d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4dcff635-d374-43f9-9ac2-4c8be4e4873c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4972eb72-36ae-4215-bf2c-34e563a0ff51",
        "cursor": {
          "ref": "a2158f03-c17d-4a69-b387-1075addd80d5",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "17128690-7e48-4b5b-8250-bcc5442d1367"
        },
        "item": {
          "id": "4972eb72-36ae-4215-bf2c-34e563a0ff51",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b599eeac-89ed-44ca-bfe7-37bee7665d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e15aea-f60d-4119-a989-9579422d3ab1",
        "cursor": {
          "ref": "d5a22160-ebab-4be8-a5e3-651d0b1fcb2e",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "eaee783b-f1c3-428a-b1ed-a73e59318830"
        },
        "item": {
          "id": "f2e15aea-f60d-4119-a989-9579422d3ab1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "62ae9f4c-a49a-47d2-ac0b-34823fd9b065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6fb7785-43b2-4220-a07f-7bb8db8e1a7d",
        "cursor": {
          "ref": "0a650a5c-a53d-4381-8f8c-198df1b3eb84",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "15974293-33e8-4e82-91a4-098327ed9e80"
        },
        "item": {
          "id": "b6fb7785-43b2-4220-a07f-7bb8db8e1a7d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d0ffbf65-e386-4fa4-90b5-17054fc8c884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4d2cb5-a055-44cd-9789-16a2911ae501",
        "cursor": {
          "ref": "8cedd924-e55e-4578-9f93-8bc33657be43",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "63ea6c63-0848-4a3a-b838-b4148aa11c0a"
        },
        "item": {
          "id": "1c4d2cb5-a055-44cd-9789-16a2911ae501",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e24c6979-3014-4007-917f-e868bee40e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d63a23-eb78-4422-a06b-13536573a3e2",
        "cursor": {
          "ref": "d67c4092-1a77-428a-8934-0dd17d7c46c5",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "66438f54-8d84-4099-9ecc-72da19c919d8"
        },
        "item": {
          "id": "36d63a23-eb78-4422-a06b-13536573a3e2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cb9fe563-5637-4be5-a5e3-56020fd86a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2959ceb1-fd2a-4a70-825b-4e12a33e4c8d",
        "cursor": {
          "ref": "123cf685-6ea4-4f91-9d82-ab570ae9491b",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1fdff7e9-0dc5-4fab-af6d-737f6ce8fdd2"
        },
        "item": {
          "id": "2959ceb1-fd2a-4a70-825b-4e12a33e4c8d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5876c9f2-897b-4f60-a4ee-ba57274a73e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32069557-d9ae-440e-b280-d4b842847fc6",
        "cursor": {
          "ref": "6ddf7541-5c90-45e4-a6d9-bff0b1018775",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6886acda-d0ee-41ca-af07-4cdd399405f4"
        },
        "item": {
          "id": "32069557-d9ae-440e-b280-d4b842847fc6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a5548f8c-b090-4858-9182-5b76741ce782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3629ebcd-5df6-497f-a7d5-9fa81eea095c",
        "cursor": {
          "ref": "44667a21-82f8-477f-946d-062455c3358c",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "020d9e69-56d8-48a2-8120-c49b21c63867"
        },
        "item": {
          "id": "3629ebcd-5df6-497f-a7d5-9fa81eea095c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "175206a4-6135-4c4b-b37f-87423a7846b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32e449b-e41a-4a71-bf73-86a91f94a6e7",
        "cursor": {
          "ref": "cb6da52f-dcc2-4f1a-9296-8e1afbc7ead3",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "78ee80fb-c63c-44a2-8238-148660202e39"
        },
        "item": {
          "id": "d32e449b-e41a-4a71-bf73-86a91f94a6e7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f7b2d623-2f62-47ae-ba1e-852a27832515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53f3f4c-e7a9-464f-9402-e96f9c4518ea",
        "cursor": {
          "ref": "a3d2fd13-eb75-4c8b-8240-d07e9010b8bc",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "120dcc03-3c72-4571-b9ee-53b39d3d53a9"
        },
        "item": {
          "id": "f53f3f4c-e7a9-464f-9402-e96f9c4518ea",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b08c56f4-2bf2-4350-afff-dac6b457d24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20b083d-35af-4eac-a8ef-1a87dc4202e9",
        "cursor": {
          "ref": "68897de1-20e0-45d3-9fbd-417e933d6413",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "202a2df4-b267-4760-9b3a-a8d6d2a41e96"
        },
        "item": {
          "id": "b20b083d-35af-4eac-a8ef-1a87dc4202e9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3e546cfe-3789-497d-a204-9ac792217f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b68296b-6a37-41ef-a7bf-690852e1a1f2",
        "cursor": {
          "ref": "b985442b-a5b3-495f-8975-518a8db43e0c",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4a579dba-a0fe-420d-b75b-a4b7f8147de5"
        },
        "item": {
          "id": "6b68296b-6a37-41ef-a7bf-690852e1a1f2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ddfcce8c-53e3-4a47-8461-fdc1ead7c31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9ae159-b1de-4534-b407-4883944c0d6f",
        "cursor": {
          "ref": "0e605fc6-1082-4512-96fd-73ff7ff5dde3",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "728d604c-94c8-4b59-9b7b-7faa53e0b673"
        },
        "item": {
          "id": "1d9ae159-b1de-4534-b407-4883944c0d6f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f3ff3dbd-9d7a-45ff-89dd-783580a52f1f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "e0fffbe1-bbc8-43d1-8345-e7eedf43ba1c",
        "cursor": {
          "ref": "1b030220-3165-4bee-b0c9-cf7cadbbb3a9",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7a67ab44-5554-4cd8-9b0d-d810310313d4"
        },
        "item": {
          "id": "e0fffbe1-bbc8-43d1-8345-e7eedf43ba1c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "83fcfc47-bb22-4302-983a-a4f6fe3e4c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6730296e-5138-44c9-8c8d-43585b1959a8",
        "cursor": {
          "ref": "daf2b012-5138-4d82-ba10-39ca959b2aae",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ede647b3-1417-4e65-89a4-794ea9f6c7d0"
        },
        "item": {
          "id": "6730296e-5138-44c9-8c8d-43585b1959a8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "390aa678-19e7-419a-a96b-4d0ab85d8799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b84ba48-bf6b-49ac-8e03-3abbc15e84b7",
        "cursor": {
          "ref": "dab43e59-52a0-4201-a682-3b27a9a1d05e",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7fcf71ac-f61a-41d7-b43f-8b4bfbc9139c"
        },
        "item": {
          "id": "9b84ba48-bf6b-49ac-8e03-3abbc15e84b7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3410ad1d-e230-4ddb-9196-39f75ea91472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ec9198-a605-43cf-a6ca-0d3cd13b4f37",
        "cursor": {
          "ref": "29fcb18c-c8a0-498c-8a3a-2caec8bf1312",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "93758ff1-8a50-420f-97de-2fe31bfc37c9"
        },
        "item": {
          "id": "c9ec9198-a605-43cf-a6ca-0d3cd13b4f37",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "03ac3614-7e09-4581-8cf8-a6ff8ecddcd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1688b09f-3ea4-4df5-a67c-5caaa3d7efd0",
        "cursor": {
          "ref": "49dbca8d-5fc3-4855-8399-2729896f7aec",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f9def307-dfe0-48d6-a6cc-9e97d2564365"
        },
        "item": {
          "id": "1688b09f-3ea4-4df5-a67c-5caaa3d7efd0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3cdcef7e-f792-423b-8699-3e041bd483b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd553a46-3641-4bb4-b88e-61cc2d550b73",
        "cursor": {
          "ref": "f7a2d9d2-052c-435e-99eb-1d052c0134f2",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "147a7b37-cee6-40bc-8286-0739a8886814"
        },
        "item": {
          "id": "cd553a46-3641-4bb4-b88e-61cc2d550b73",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0a55705e-fec3-4774-82de-9a8520c5ea26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6136b1-ae91-4653-8084-0bdcbb218af1",
        "cursor": {
          "ref": "0a6c4086-93fb-4cc9-8b08-d40fdb1e49ff",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a42b70dc-8c03-442b-8e10-6244d1f1deb8"
        },
        "item": {
          "id": "2f6136b1-ae91-4653-8084-0bdcbb218af1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cd3c9036-b49d-4e34-8a5a-8a711cdd01d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9fa1d4-d8db-4e04-9ee9-9730f7cf33ba",
        "cursor": {
          "ref": "1ee841f3-684d-47ec-81ab-144ab9a2f6d6",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "20cbe7ee-a2b8-4c54-8d77-731e580ee6eb"
        },
        "item": {
          "id": "fe9fa1d4-d8db-4e04-9ee9-9730f7cf33ba",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "82b8ede6-806d-4ddb-b275-136c356fbc53",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "d7e53810-fc92-474f-a176-82a597227a61",
        "cursor": {
          "ref": "d31d9875-bfbc-42e4-ac54-a13c1f0191f8",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a442a4a7-1281-40e9-afdb-a74cc905ec13"
        },
        "item": {
          "id": "d7e53810-fc92-474f-a176-82a597227a61",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d6ed8e02-605e-43e1-a079-d47c37cb2c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a98f20f-8ebd-4cd7-85ad-0e04968c3996",
        "cursor": {
          "ref": "fbe3becf-4c35-4417-81ee-b9933305dd0c",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c792f791-343b-4388-9756-ddbd182c730f"
        },
        "item": {
          "id": "4a98f20f-8ebd-4cd7-85ad-0e04968c3996",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "dbb7cdc6-c70a-4737-9fe0-77ba9aef3a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b3f245-1d59-4060-8fd3-f1c62f89bc12",
        "cursor": {
          "ref": "0275df49-579c-4b2b-be2c-9f1abbcf5411",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3e8efa58-7f4c-42bb-8ef5-bf0912db4382"
        },
        "item": {
          "id": "c4b3f245-1d59-4060-8fd3-f1c62f89bc12",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c85f0213-4dbf-4a27-9c71-84b73e025257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49176c0d-c05d-4a37-b568-0f97e806d930",
        "cursor": {
          "ref": "2477ae5a-e1d1-4fa3-8af4-88f0a46c43de",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "366dad28-f5e9-4294-807f-c1a0e28f1200"
        },
        "item": {
          "id": "49176c0d-c05d-4a37-b568-0f97e806d930",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1eafbe0e-cf00-459a-9345-d1e295118406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6285b6e-9db8-4cb4-b1cc-5a8dc61312b9",
        "cursor": {
          "ref": "6d654cb9-06bf-46f3-b78f-190fe828ebf4",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2fd4a512-3ea3-46dc-a0a3-0180c358a98b"
        },
        "item": {
          "id": "d6285b6e-9db8-4cb4-b1cc-5a8dc61312b9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "075546db-ad76-4348-b5f6-16589c21621e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "984dd9e1-e603-48b5-ad79-9a88472136e3",
        "cursor": {
          "ref": "27eee72e-1397-4575-a894-1b226f7be04e",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f9e9617b-5185-4d03-9830-767588e8a2fd"
        },
        "item": {
          "id": "984dd9e1-e603-48b5-ad79-9a88472136e3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "605ff308-c81a-4627-90d4-bcaa3e598e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bdc6960-d1cd-4f1d-9fac-c89bda1c3e22",
        "cursor": {
          "ref": "d655374c-0a02-4ca2-977e-862db9e4fb9d",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b759b9e2-17e6-4717-8cd4-11db83a963a9"
        },
        "item": {
          "id": "2bdc6960-d1cd-4f1d-9fac-c89bda1c3e22",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "fe40dcaf-278d-49e3-9d42-8e0ff4303ff5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "14c0f829-a8dc-4dfb-84c1-91e3f7754241",
        "cursor": {
          "ref": "795ec836-20ec-42b7-b81d-c5a555fc75a9",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "58867197-5acb-42b2-a67d-7e08a9cac30e"
        },
        "item": {
          "id": "14c0f829-a8dc-4dfb-84c1-91e3f7754241",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c480ea3d-7a22-40d0-ad6e-3202ee263eb6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "ca8c0740-7af9-4fc7-ab0f-caee8d53ef22",
        "cursor": {
          "ref": "5b52b894-aa0f-4308-8476-8e856984faaa",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "37cf5097-cbf7-4ad1-ac1b-eaadda6a48ad"
        },
        "item": {
          "id": "ca8c0740-7af9-4fc7-ab0f-caee8d53ef22",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "fcdde7e5-4aec-494a-b9ff-8aa3f10b7d6a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "0d6252f7-e4de-4e98-a8f0-4d4d71574469",
        "cursor": {
          "ref": "3b7e4682-3ec8-4bb7-a56b-fd7e0a89ba23",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "20cfb138-c541-4f7e-bfeb-09eab1eb7142"
        },
        "item": {
          "id": "0d6252f7-e4de-4e98-a8f0-4d4d71574469",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3ab69255-51a6-4a2a-b8f7-b7577e78d18a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 12,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "e8e13b16-3507-4867-9550-57e1aa56ea77",
        "cursor": {
          "ref": "6ece6eeb-b568-47a9-84a6-6798fa8df204",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "16600777-572c-4a57-b3e2-e47568b38f5f"
        },
        "item": {
          "id": "e8e13b16-3507-4867-9550-57e1aa56ea77",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d31e1679-25c6-42f0-b087-a35f526e058c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 12,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "c0c68298-bd04-4353-b7e2-ed43d97779ec",
        "cursor": {
          "ref": "7deb82c3-0272-4420-ba99-91620cafbcb0",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a577fe33-58f7-4056-8681-9dd60e1e670f"
        },
        "item": {
          "id": "c0c68298-bd04-4353-b7e2-ed43d97779ec",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8dfd3830-e064-4821-81d9-f2355e75dc2b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "f8cab61f-251c-4ea9-9f5e-e7712e6b83ee",
        "cursor": {
          "ref": "11994a1a-eb28-48b8-858b-be629f0dab2e",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f2651202-1112-4125-b5c4-4eb00e229c24"
        },
        "item": {
          "id": "f8cab61f-251c-4ea9-9f5e-e7712e6b83ee",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f5ec5c07-9992-4a88-8a82-3bc671318d55",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6844cf94-a554-4200-8d94-d691896f2f96",
        "cursor": {
          "ref": "acba3f5a-7d59-4eef-958a-270f9fd29119",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "591c4a9c-be09-4c6d-a524-c59d52930bac"
        },
        "item": {
          "id": "6844cf94-a554-4200-8d94-d691896f2f96",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f72f1fda-deea-49c0-b6da-c9fa8f3f0459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2362d2d-1947-4f8d-8675-9488c837076e",
        "cursor": {
          "ref": "6b06f8a4-5744-45eb-a60f-f1fc81c60681",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c713b692-08d6-411a-a83f-4fafe3fba3de"
        },
        "item": {
          "id": "d2362d2d-1947-4f8d-8675-9488c837076e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9f8f3014-e167-4b87-bc5c-c2945e982125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a81363-c9bc-411b-9cda-70b268363d15",
        "cursor": {
          "ref": "f6d717dc-4b1e-4c2c-a9f7-017e3e8f9841",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6f39dada-4224-41f0-a2b9-efc43fda63b3"
        },
        "item": {
          "id": "b3a81363-c9bc-411b-9cda-70b268363d15",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a16f1ed7-2b38-4608-9fe3-e7bc3fd03a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b14e355-80f9-417f-a083-53b0bd792ac7",
        "cursor": {
          "ref": "838ae10b-077b-40f7-809d-2f918730d8d8",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "135c1253-1242-40f4-a29a-f679fd575ec4"
        },
        "item": {
          "id": "0b14e355-80f9-417f-a083-53b0bd792ac7",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "04c7f26e-8194-43fc-9053-0af12131713a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1dc58d-0d5e-4ea0-8b75-fe408bda830d",
        "cursor": {
          "ref": "0a5f5477-fed1-457c-84c5-da68fb019d6f",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "667e6a37-d685-4a80-980a-1f286f44567e"
        },
        "item": {
          "id": "9d1dc58d-0d5e-4ea0-8b75-fe408bda830d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c7283530-6d58-45dd-81e5-84e05dcf0ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36dc219f-18a6-46a1-bdf1-d728db0250fc",
        "cursor": {
          "ref": "06b413ab-2fd6-4843-8f4e-86fea4b5c095",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1a2d1137-6197-43a5-a98b-2f41743c4310"
        },
        "item": {
          "id": "36dc219f-18a6-46a1-bdf1-d728db0250fc",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2deb13ba-25f0-4314-af1a-3fca83e2c18b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38644844-29a0-4e85-9a48-bf636757f901",
        "cursor": {
          "ref": "64cbe0be-cce8-4910-8699-2e81d39e730e",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "bd82a2fb-6993-4f6f-9a0c-e076a1273554"
        },
        "item": {
          "id": "38644844-29a0-4e85-9a48-bf636757f901",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "078e6b0b-630b-4bc6-857b-09cece036d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20daa2ef-eaa8-46d2-b887-9ea13db42ea5",
        "cursor": {
          "ref": "df15dd7b-a2b0-4127-8a3a-4e923f25b627",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "56bd99d0-dbad-4a8c-a1e1-ee89f826dcc9"
        },
        "item": {
          "id": "20daa2ef-eaa8-46d2-b887-9ea13db42ea5",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7a2115b2-e741-434b-8c47-f1f1da8aed2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e526d9f0-84e8-492d-966e-7704f09d372c",
        "cursor": {
          "ref": "5de8b5c8-67f8-4577-b1df-96ebba784927",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5f156df5-8b4a-42f7-bd74-a9fc5619d497"
        },
        "item": {
          "id": "e526d9f0-84e8-492d-966e-7704f09d372c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "963981e7-78bb-4015-9f42-576eaec07b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144659f9-21af-47fc-be96-47838e45ce86",
        "cursor": {
          "ref": "232307c3-f79f-4d78-b129-446760af89bb",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "54eb8757-b937-4bb3-ad0e-57948d943fb1"
        },
        "item": {
          "id": "144659f9-21af-47fc-be96-47838e45ce86",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "cd66a10a-a1cc-486f-8765-39eaceaeb634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d7a463-fd61-4d82-972d-c38799ec3efa",
        "cursor": {
          "ref": "03c371ce-a3c2-4cf8-9385-2eec342549a0",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2442f4d4-c619-4a00-b0e4-b2287941c2d9"
        },
        "item": {
          "id": "40d7a463-fd61-4d82-972d-c38799ec3efa",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5d9213ec-5019-445d-80f3-4ca48b42afa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffd655f-7366-49d7-90a1-f3f95fc64063",
        "cursor": {
          "ref": "edd05c6a-b1bc-4f86-8029-bca0644e4d4c",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "80f2df62-fd44-4aba-986c-4df9e7b27d90"
        },
        "item": {
          "id": "8ffd655f-7366-49d7-90a1-f3f95fc64063",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9593379a-1edd-4ff4-89c2-baf7fb03948e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32bc8462-24d6-47f1-b378-7505e6bc1007",
        "cursor": {
          "ref": "a30ecf8b-5d5d-4638-aaf7-93f5e3222811",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "555825ae-8e43-4273-abd8-dc1397040f9c"
        },
        "item": {
          "id": "32bc8462-24d6-47f1-b378-7505e6bc1007",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "93f873eb-f3c7-4fdb-8856-80eb656e5652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e835c60e-3f5f-4a7f-937b-69b4ab6b8a9f",
        "cursor": {
          "ref": "957917f6-cb21-4382-8125-2e716e642c24",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d7c66df1-a72d-40ab-8d80-43546117c902"
        },
        "item": {
          "id": "e835c60e-3f5f-4a7f-937b-69b4ab6b8a9f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "eaf304a8-d8df-4e28-a154-65bc1cfc4a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aee988b-e142-44e8-92cb-bc298b8809cd",
        "cursor": {
          "ref": "b36e6d64-94fc-478d-8583-06b5f3992572",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "17082138-d270-4be7-b78c-b6cec788a795"
        },
        "item": {
          "id": "0aee988b-e142-44e8-92cb-bc298b8809cd",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9b628c42-3944-4b01-bba2-9e50cf1688d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67599d9-8586-4aac-a79c-e04422d3a05b",
        "cursor": {
          "ref": "15231c0d-c338-4356-82b9-fd852f14c12f",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ba183b89-6a32-4eae-9a39-acea73ba6e18"
        },
        "item": {
          "id": "c67599d9-8586-4aac-a79c-e04422d3a05b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6d292cb3-7d2c-4a9c-8e52-88be9a1b22e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f10a32-32c7-46e1-a8fa-56b108d3b8cc",
        "cursor": {
          "ref": "d862697d-806a-4584-ac72-b49254bf7a3b",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5e9a13d0-101c-48a1-8516-40ae7ef17453"
        },
        "item": {
          "id": "c3f10a32-32c7-46e1-a8fa-56b108d3b8cc",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a6d2c051-0375-46ff-bf29-883739213d8d",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "6909b966-5cb3-4d13-8770-3f1a2f82951b",
        "cursor": {
          "ref": "812a7dbb-9e79-4dcb-8aa9-9e27250d82b6",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "13e9c6d0-a1d9-4953-8ca6-f6d9b02e3c8c"
        },
        "item": {
          "id": "6909b966-5cb3-4d13-8770-3f1a2f82951b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0b0b59b6-d864-41a5-8bed-a1d538be80e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63eaa33a-0077-4936-8d6e-1da1a5f89283",
        "cursor": {
          "ref": "144f11b1-0e34-4c8d-9dbc-10459a39895d",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b5038d94-e01c-454a-94e5-c128663ab137"
        },
        "item": {
          "id": "63eaa33a-0077-4936-8d6e-1da1a5f89283",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "401e2b10-4d7b-4426-98a6-14892601f610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fc52fc-5dda-4d50-b94f-1c4b2f95a8f8",
        "cursor": {
          "ref": "5dd137e4-9857-4234-b73b-274e6f4ef469",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d17b4df4-8ade-480b-b6c6-8f08e02597c8"
        },
        "item": {
          "id": "51fc52fc-5dda-4d50-b94f-1c4b2f95a8f8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7fa1255d-dca9-41fc-9545-a86914321298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23708e6e-abff-4b8d-8916-b4b062428289",
        "cursor": {
          "ref": "22169062-0973-4da9-839f-3bd0ec3b8539",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1396d27c-9850-4b94-8b7d-c7709c83b240"
        },
        "item": {
          "id": "23708e6e-abff-4b8d-8916-b4b062428289",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9b19cf95-00bb-45e8-90cf-3a096fd2571b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35de43a6-7c91-4b74-a078-92d9e43f157a",
        "cursor": {
          "ref": "dfae8972-34d9-48ef-a56a-f8197d664675",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5337ff01-1028-467d-b84c-7f1713729798"
        },
        "item": {
          "id": "35de43a6-7c91-4b74-a078-92d9e43f157a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "97661fd8-6c97-44cc-a790-384cd3ab2c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b5a696-888d-4e8e-a548-0ee737324235",
        "cursor": {
          "ref": "5b501532-2b2d-4f41-a3a8-2f5503b3bda8",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e8dfb659-9e8c-450e-b534-850ae9c9fd23"
        },
        "item": {
          "id": "b8b5a696-888d-4e8e-a548-0ee737324235",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8c5003f0-5150-4c55-bd45-d3bc386973bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d649a105-42a7-4114-8c52-15d972feedd9",
        "cursor": {
          "ref": "b6b8e9b4-ed2d-4863-93da-553fefe94497",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "056800ee-fc0c-4a75-922b-a7f10c9e9963"
        },
        "item": {
          "id": "d649a105-42a7-4114-8c52-15d972feedd9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "74bbef4b-db86-468b-a0cd-0f730b107a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3598fc05-4ae1-435b-b007-061883cc73b9",
        "cursor": {
          "ref": "447c4b91-752d-4732-8243-fc3aed7f5ec7",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "664cc05a-08c6-4379-a882-62440936d17e"
        },
        "item": {
          "id": "3598fc05-4ae1-435b-b007-061883cc73b9",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5ce11e99-fe14-49c4-b3b8-95ef5aa76240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c30784-13cc-4a27-b56e-b888f48c2359",
        "cursor": {
          "ref": "76cc9625-fc95-4c83-8e8f-d5ca64fa8a2d",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e39c15ca-eea2-494d-bc3d-7eda95ff56e1"
        },
        "item": {
          "id": "c5c30784-13cc-4a27-b56e-b888f48c2359",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e0fdbc6d-aca3-4467-851c-5e130e5a1acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92e1056-f20f-417b-be35-e1a80f0a32ed",
        "cursor": {
          "ref": "9c05a051-6972-48c2-a802-0105721ac837",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "48548a3d-ef51-4945-bb13-281272641f70"
        },
        "item": {
          "id": "d92e1056-f20f-417b-be35-e1a80f0a32ed",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "df4d1ca6-6a54-4d60-96f1-5118eb367c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52592b5-d994-4047-a329-3d52de467e89",
        "cursor": {
          "ref": "3a390f7b-225d-42a4-8f87-d55432d9cff0",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "850bb0b5-73f7-45e5-adab-cbb7653d0b8d"
        },
        "item": {
          "id": "e52592b5-d994-4047-a329-3d52de467e89",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "876f22b5-38c6-4fea-bb0a-478e5bfd08c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03e22bb-085a-4f6a-8ec1-573055f132a7",
        "cursor": {
          "ref": "efa636e6-4d8a-4e2c-a4a7-fc18fc661059",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "89a22e1d-ad90-4b4d-8d82-a11e984de729"
        },
        "item": {
          "id": "f03e22bb-085a-4f6a-8ec1-573055f132a7",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c341ae97-7aa9-448f-8294-cc42251627da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1349b1-0801-49b2-8141-469ecc55fef4",
        "cursor": {
          "ref": "9b0b6fe0-0f15-4bb4-b56d-cd34e53e880f",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f794b7c4-8a7e-40ae-93fd-a04f14fd1b89"
        },
        "item": {
          "id": "aa1349b1-0801-49b2-8141-469ecc55fef4",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5e4cc5bb-584f-4221-9491-d57c32044f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8f6957-a10b-497a-b4eb-9c5ea8242749",
        "cursor": {
          "ref": "12f8e93a-73eb-4302-b494-f6a302ba9cf2",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "bb8bb365-06b6-487f-8045-54ef2aaf11eb"
        },
        "item": {
          "id": "2d8f6957-a10b-497a-b4eb-9c5ea8242749",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "eb4d827e-41b0-43fe-aa77-43e0c255eb7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203624ad-4b20-4fd4-a1c4-d26610b5f6ae",
        "cursor": {
          "ref": "d49d16ce-692f-4b30-9a62-fae027e7e26c",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "54874ae2-004e-4a6a-ae87-3ff508d4013e"
        },
        "item": {
          "id": "203624ad-4b20-4fd4-a1c4-d26610b5f6ae",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2f1cdedc-d8d3-4268-9c76-b893f23bc34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abada536-b6ee-44f7-bb1c-014ae0b665bc",
        "cursor": {
          "ref": "0a406c99-8836-4299-90fe-9081ca5c2a30",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a699d49b-d976-4e58-85b9-0c8dff3a2e1b"
        },
        "item": {
          "id": "abada536-b6ee-44f7-bb1c-014ae0b665bc",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a7db7731-190c-49d3-8f22-744b2e08f514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921fe9c8-91c5-4ca3-ac19-137ea27ed2bf",
        "cursor": {
          "ref": "139677c8-6759-4954-b7b2-5f37d58228d4",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8a1b1ad9-bd5a-47cf-a2d9-d6216a79599b"
        },
        "item": {
          "id": "921fe9c8-91c5-4ca3-ac19-137ea27ed2bf",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7827ab60-3208-4618-a56f-474e57010b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61481cca-bd9d-4822-a7fb-0be1665cf352",
        "cursor": {
          "ref": "fc9dce8a-772b-4cc5-ab71-3023f374a229",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "395cc1ea-2380-450d-8e6d-692f9db1d0a0"
        },
        "item": {
          "id": "61481cca-bd9d-4822-a7fb-0be1665cf352",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a1240527-9d57-41b2-86ca-2af515ba5524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415dbde3-acf3-40b4-9692-80eb7d25cef2",
        "cursor": {
          "ref": "6d140497-68f6-4a8e-b47b-8ab0c437272a",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "22c2b0ee-72e1-4c8c-adcb-1ce27cfd61fc"
        },
        "item": {
          "id": "415dbde3-acf3-40b4-9692-80eb7d25cef2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3d9deee9-84ef-414e-92f1-3d857ba28eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ea304b-7eb1-43ef-828e-bcd2255b44a5",
        "cursor": {
          "ref": "af26f921-06a7-4e8e-97a1-4c931a7923d3",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c5ad7499-dfba-4e89-8884-9373bcb18117"
        },
        "item": {
          "id": "22ea304b-7eb1-43ef-828e-bcd2255b44a5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1bd27348-5d84-412c-8580-d235ae3a487c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c393ad1-cc80-46b4-bafe-1e49b2d7b346",
        "cursor": {
          "ref": "7336a7b6-6f85-476a-99f2-232ba2e36ca6",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6eca25ad-aa6d-4ae6-a14a-358480b53f09"
        },
        "item": {
          "id": "5c393ad1-cc80-46b4-bafe-1e49b2d7b346",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "bcc2a3be-061f-45f2-8e1c-ce24a7d0f749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7099ab52-cb69-47e6-b8e8-f28181570999",
        "cursor": {
          "ref": "37305b64-8dec-4e77-9652-a4f43895abfb",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3a6084a1-11dc-454d-9e4f-d8b6101e293d"
        },
        "item": {
          "id": "7099ab52-cb69-47e6-b8e8-f28181570999",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "19a002aa-2bad-4883-88a0-04b79767f821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb769a0-c511-4546-a6ee-95257b8ac924",
        "cursor": {
          "ref": "c58abbad-cfcc-472d-a56c-aca195161838",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "523c7f40-d4c7-4a63-ad98-de4d080697e5"
        },
        "item": {
          "id": "4fb769a0-c511-4546-a6ee-95257b8ac924",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7445316f-d711-43d5-9b54-86d474cb29ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a6a414-0c80-43b0-8b8b-c6b55a26cbdf",
        "cursor": {
          "ref": "9b9845f1-0a4d-4863-8cce-742423ca9616",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4611b896-0640-4333-9334-c7226756eb31"
        },
        "item": {
          "id": "53a6a414-0c80-43b0-8b8b-c6b55a26cbdf",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "49604c0b-4d36-4ab2-ad4a-e0b0910aed1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9433781c-f4af-4c05-a5d7-cfaca2f1a3d5",
        "cursor": {
          "ref": "e2cccd49-a40d-40c9-adf2-a2fed22b3e01",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2c8919a3-5355-4f73-8468-ad4f6d453245"
        },
        "item": {
          "id": "9433781c-f4af-4c05-a5d7-cfaca2f1a3d5",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1058ea50-62d9-4849-90a7-24455ea82bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8739884-8b51-487f-8f70-993dbc7c04c4",
        "cursor": {
          "ref": "53ba6316-f531-40ed-a6dd-5033ed3bd3b2",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "dfe8a9ec-12d3-42b3-a24e-d50eff00fa5f"
        },
        "item": {
          "id": "e8739884-8b51-487f-8f70-993dbc7c04c4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6c6171ba-6d65-4018-b9f0-263c690fb339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0dce055-50d9-4fb1-a3e9-c11ee04e66c2",
        "cursor": {
          "ref": "6fb519d5-9455-4415-a180-b3a8be98fbc8",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "93fb421b-a230-4305-91e1-ca7729936feb"
        },
        "item": {
          "id": "e0dce055-50d9-4fb1-a3e9-c11ee04e66c2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "eff57e80-9e06-4c6f-a2c1-8ffe95199337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9290182-23fd-422e-b794-4d4efb04abed",
        "cursor": {
          "ref": "92154c60-1189-4eef-8919-301a064d4b23",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e12bca76-b674-4d49-834c-4f7ad8c62a67"
        },
        "item": {
          "id": "b9290182-23fd-422e-b794-4d4efb04abed",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b3655fc8-8763-467c-9b43-543299694c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ddc8cb-0cd7-487a-8c10-df2cbb27d4d0",
        "cursor": {
          "ref": "0f2934c3-cba6-4b44-8e90-24b5f0a9f375",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2b28ef51-8fbc-4d2a-833a-cfc1f75c18a3"
        },
        "item": {
          "id": "f3ddc8cb-0cd7-487a-8c10-df2cbb27d4d0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c3092297-db7b-4f1c-aa88-0638428ba319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e32470-cb27-4597-be46-7d8dba4f7ff4",
        "cursor": {
          "ref": "3e4f2348-cc13-4c23-aace-ec3717d0eaf1",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c5eefd8b-e394-4f2e-ad3b-09e283fce466"
        },
        "item": {
          "id": "87e32470-cb27-4597-be46-7d8dba4f7ff4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "af2fff22-1747-4e31-81bc-15a53bb9cdb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea776a2-fad9-4822-b7e6-438dfe862dfb",
        "cursor": {
          "ref": "2496460e-1b6f-44ce-b56e-7e2b26ca8117",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8b44666a-8e7e-4493-bb0d-d5ca8f852df9"
        },
        "item": {
          "id": "1ea776a2-fad9-4822-b7e6-438dfe862dfb",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "39a166fb-4fdf-4db0-930c-a4cacf547ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e320f8d4-2a1c-4795-9429-7119e80cf708",
        "cursor": {
          "ref": "ad772fa7-0eeb-4e75-932f-ca18f7e317fe",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5bce0b92-0471-4467-bf65-c3738913620b"
        },
        "item": {
          "id": "e320f8d4-2a1c-4795-9429-7119e80cf708",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "cfe31b3f-c5c3-4dcb-8076-b7e51d0b4a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f891f4-e7f3-421f-95f8-4bff92c01dba",
        "cursor": {
          "ref": "d6a5f676-a273-4557-b728-f89850c280be",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a2b363a3-0197-44ac-8fe0-5ba13491ace4"
        },
        "item": {
          "id": "78f891f4-e7f3-421f-95f8-4bff92c01dba",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1ffb9752-b6b3-4bcc-97d4-f2f45787ae70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec35ae1b-46a8-4550-8b49-12a49d2c5a0b",
        "cursor": {
          "ref": "508257f8-d004-4bc2-9b0d-7b7d725024cc",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "aabf8886-05f5-4531-841f-7725021bc154"
        },
        "item": {
          "id": "ec35ae1b-46a8-4550-8b49-12a49d2c5a0b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2a72c884-513f-434e-a134-fb51a8f45c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090cc941-a467-4f3e-a47e-552bde913be6",
        "cursor": {
          "ref": "d7370132-39d7-447c-9031-9854d166e992",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "898d57ca-7a2d-4c9a-b0a5-a666e9b2f301"
        },
        "item": {
          "id": "090cc941-a467-4f3e-a47e-552bde913be6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e0204a88-d2b9-4196-990c-78e6eccda37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ff29be-fca3-49a3-8842-ea87bc1c1236",
        "cursor": {
          "ref": "4b9946cd-6948-4cf3-8d80-659884faa85b",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a9533d97-b4b8-4466-bc61-e7003c78fad2"
        },
        "item": {
          "id": "47ff29be-fca3-49a3-8842-ea87bc1c1236",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "5c123751-eb73-4047-bae0-061e60e0ea48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afdbafd4-ac07-4a17-a87d-5402af098d23",
        "cursor": {
          "ref": "a00e620a-9c3f-4f93-a359-ce62c1367236",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "27e2f89d-78ee-43ef-8f62-2b5050fafdfc"
        },
        "item": {
          "id": "afdbafd4-ac07-4a17-a87d-5402af098d23",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "60821a33-00b3-463b-b56d-57a007fd51ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1a7d2a-4a3d-401c-a6d2-da0140975f53",
        "cursor": {
          "ref": "d25218fe-3a39-4994-b8d6-acbe05ca5ccf",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a7424f58-d69a-4511-abf0-d223409ee467"
        },
        "item": {
          "id": "ec1a7d2a-4a3d-401c-a6d2-da0140975f53",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2ee21004-3636-428a-a3fd-1894a652652e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c9c908-7f30-404a-bcba-40b51e56789c",
        "cursor": {
          "ref": "99a2194f-455b-488b-904e-3148992f62f4",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a940e290-b8a4-4f0d-abee-0184681ec61e"
        },
        "item": {
          "id": "21c9c908-7f30-404a-bcba-40b51e56789c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a4dc34bb-bd86-41dc-ac84-4e2b4d811d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b5e317-4ac8-43da-9584-28c2a7f1c797",
        "cursor": {
          "ref": "8b1c7d16-e6cf-47e6-bee1-cdb3c2b2af97",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4d1ffa73-a0ac-452f-80b7-8825816cf954"
        },
        "item": {
          "id": "e7b5e317-4ac8-43da-9584-28c2a7f1c797",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "715b899d-e02f-42ea-b7d3-2245b8f3bd90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a10e086-8317-4ea2-bb4d-2f948c2da923",
        "cursor": {
          "ref": "31335a37-37c7-4cd8-a8b6-1543cc3f8a85",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1e47a861-b76a-40c0-895f-8c23d1528b0e"
        },
        "item": {
          "id": "7a10e086-8317-4ea2-bb4d-2f948c2da923",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f29b43ba-52e0-4f5c-9110-0fd66b02a2ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e700c1b1-4884-4165-9d22-82f6162a26b2",
        "cursor": {
          "ref": "be67e571-576b-491f-b861-d31e21433c3d",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f0906796-0137-4568-b560-d8979bb275d3"
        },
        "item": {
          "id": "e700c1b1-4884-4165-9d22-82f6162a26b2",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2cf23a88-a9f6-4845-ba06-bade5373e146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb2f73a-d718-4566-b20f-aaa7cdbffa6f",
        "cursor": {
          "ref": "ac8d1e94-31ee-4fc1-9393-566d619c28ad",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "abcfd464-258a-40d8-894c-3979d04a36e9"
        },
        "item": {
          "id": "bfb2f73a-d718-4566-b20f-aaa7cdbffa6f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "61a59a5f-ae5d-4764-a85e-77c00171a4e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 899,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ea2994-12ca-4ad6-8256-bfa34ed74ee4",
        "cursor": {
          "ref": "bceb3888-24f0-4308-85c7-b338de60dd68",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "83ce1178-4f0f-4468-b5b6-1f3b244ee9ef"
        },
        "item": {
          "id": "38ea2994-12ca-4ad6-8256-bfa34ed74ee4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "289aca4e-e011-4066-8b8d-e33ce2bdbcfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f14e21-9eb4-45b6-b0a1-fb56216c4e82",
        "cursor": {
          "ref": "b5607487-1d7e-4188-a225-9900bd57457a",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e31e35df-e69b-4051-8421-80a02e5a7c84"
        },
        "item": {
          "id": "d1f14e21-9eb4-45b6-b0a1-fb56216c4e82",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "87b1a02e-42dd-4bd5-a3d9-6748e481d9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130ba743-cb39-4b74-a8af-a1857e709f0f",
        "cursor": {
          "ref": "347a9ac5-1486-43a3-8cb2-5ede3384e853",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ead5bbaa-6e10-4b62-8b32-df661f1bdf03"
        },
        "item": {
          "id": "130ba743-cb39-4b74-a8af-a1857e709f0f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5c0d4189-e600-46f5-8aa4-c2e3694f92c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e781b3-5224-448b-9e1f-36c3dbf80f10",
        "cursor": {
          "ref": "15d3de48-bbb0-49e8-9548-8211d4f778fb",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "31c2a087-3444-4bba-a50f-c7acf3441234"
        },
        "item": {
          "id": "97e781b3-5224-448b-9e1f-36c3dbf80f10",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e5d5be9b-b899-4c31-a7d6-637bdeb7c99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d7a9cd-066e-4402-aec1-56a0359afbb4",
        "cursor": {
          "ref": "4eceae1d-ba14-4ccb-86fc-3cf4fa6bf389",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "12f3b8ee-16e7-4f1d-a204-c8e94f6232da"
        },
        "item": {
          "id": "d0d7a9cd-066e-4402-aec1-56a0359afbb4",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3aa90441-b96c-4465-b74d-1ea654f2f5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9f6d5c-0c46-4809-9e3c-27d4b022ba16",
        "cursor": {
          "ref": "813a58cd-a08b-4300-af12-00c00f5d9b8b",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "05e84fd4-c830-4152-870f-8da1e48b1190"
        },
        "item": {
          "id": "bb9f6d5c-0c46-4809-9e3c-27d4b022ba16",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "dc4a5a6d-a5e4-411f-83af-f36926046fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1afe700-48f8-4cf3-aba7-1cab99082b96",
        "cursor": {
          "ref": "375636b3-3aa1-413e-8900-30a34e1f6c3c",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0299a128-0fce-4716-aac5-c836e70f9cb3"
        },
        "item": {
          "id": "b1afe700-48f8-4cf3-aba7-1cab99082b96",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d4f4ecef-d06a-4e4d-9966-1dd553109dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa5e064-2c67-45e6-8b70-c581d2cb017b",
        "cursor": {
          "ref": "c04b88f1-f794-4201-88ca-a94cffa78336",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "80e91c9d-87ab-44e4-9651-954e54801c7b"
        },
        "item": {
          "id": "6fa5e064-2c67-45e6-8b70-c581d2cb017b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a6986819-cfa6-44ca-aa57-82c20c5629e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939d12f6-8984-4337-81d2-3a88885a26e6",
        "cursor": {
          "ref": "59fa61d9-755f-4921-afc3-8b5755c9a629",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "99482abd-2ee7-4322-83f3-06e7c3725284"
        },
        "item": {
          "id": "939d12f6-8984-4337-81d2-3a88885a26e6",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8fe98f43-0a41-48fe-a5df-f785a413a546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9c2561-95ca-4629-9ceb-dfe5d719ce10",
        "cursor": {
          "ref": "21ed9f56-2086-45b4-bd43-2abd9689e4ae",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8a091495-8a9c-43d2-bf69-8c3c915fed19"
        },
        "item": {
          "id": "0d9c2561-95ca-4629-9ceb-dfe5d719ce10",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "81541f0c-ffb7-4a01-a07e-4e212e7f7695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a1166f-f755-4d62-8600-50c136caa9a3",
        "cursor": {
          "ref": "d3ce244a-79a5-4f1f-a5c5-3ed747174230",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c9e85147-551d-49f0-a510-b4195455bd5c"
        },
        "item": {
          "id": "49a1166f-f755-4d62-8600-50c136caa9a3",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "584eb03a-faee-4413-a597-d4ae0ab3185c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f1eeff-50a7-4b98-a38f-39b16e5f3290",
        "cursor": {
          "ref": "9f9bc566-d5c2-4a66-8dec-54ba5d5ed2ee",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "039687ae-6529-4a07-9cc2-91865f672bbe"
        },
        "item": {
          "id": "f0f1eeff-50a7-4b98-a38f-39b16e5f3290",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c8360b86-331a-4675-b6a2-129c301eda38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e67a83e-fdd9-4162-8ed7-9b2d6a402d9e",
        "cursor": {
          "ref": "e39b41b3-a3d0-455c-8654-6a4380ee93ad",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1c1bc96d-fedc-458e-960f-9bca8369bb9a"
        },
        "item": {
          "id": "1e67a83e-fdd9-4162-8ed7-9b2d6a402d9e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d41cf92f-1854-4406-9799-5da0f98fd894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa18c95-c362-424b-aa1a-53b3c4bf32da",
        "cursor": {
          "ref": "a3bfd52a-72e7-4847-aa3d-d2919d5b9bcc",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "90de3d65-10a0-4758-8544-92b87c423c99"
        },
        "item": {
          "id": "5aa18c95-c362-424b-aa1a-53b3c4bf32da",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b6a26f08-80ee-4bea-8427-138f1dc4d040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656e7c87-8beb-4258-b65d-ddc53ee8a84b",
        "cursor": {
          "ref": "94b9cb53-64b9-4ed7-9049-fabe2ab58233",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "bfedbefc-c607-4d18-ba22-fd50d9583c3e"
        },
        "item": {
          "id": "656e7c87-8beb-4258-b65d-ddc53ee8a84b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "83e43fbf-638f-4a0b-a6c3-b91ae457c73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de478ab8-3f97-4ee6-8a8e-52eb0d6ae872",
        "cursor": {
          "ref": "5c977c39-50fc-4e8d-90b5-3bf942d8e657",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9a2f010f-6a2d-4331-9fbf-754c90875bd7"
        },
        "item": {
          "id": "de478ab8-3f97-4ee6-8a8e-52eb0d6ae872",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f8109c7d-d79e-40b7-9822-88446e36d56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92e395a-d880-4291-ab25-e70f5424a6ea",
        "cursor": {
          "ref": "b964098e-08a2-4ecc-ae2a-2e52a870dfd8",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e16bcec6-3302-429a-8159-54d0c44255db"
        },
        "item": {
          "id": "a92e395a-d880-4291-ab25-e70f5424a6ea",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c091d909-5182-454b-8d8f-d0044083e193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70fbfc8c-a90b-43a4-aa59-bd9a5eba0b90",
        "cursor": {
          "ref": "b1db2818-2320-43db-ac36-bee319b2eda7",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c7fced3c-cbb6-4fd3-9270-9128b64ec224"
        },
        "item": {
          "id": "70fbfc8c-a90b-43a4-aa59-bd9a5eba0b90",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3eee8796-f4cf-482e-84ec-e2cdb5995848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1cbd19-f7e8-41b2-8e43-aab6f90b285f",
        "cursor": {
          "ref": "a439ba05-2684-4d99-91e3-340cead34dbb",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fa811c8c-6d65-4adb-a776-7f9489491e38"
        },
        "item": {
          "id": "aa1cbd19-f7e8-41b2-8e43-aab6f90b285f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "89c9d0a6-4525-42be-a76d-41fdd54b88aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966ffa05-29a6-4002-b0b9-4b8374d86108",
        "cursor": {
          "ref": "0c1b00cd-0fe8-4cd5-ae07-8cf4251dddcc",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1fe87344-04e6-427f-85a5-2a6e98dbd6aa"
        },
        "item": {
          "id": "966ffa05-29a6-4002-b0b9-4b8374d86108",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c23ea781-937b-4ade-815d-7ca2466c50bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6f2a43-076f-4e5d-97a8-73d896c52e75",
        "cursor": {
          "ref": "9d9daca3-0cee-45bb-9acb-63936f7ab16d",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "409e2c81-0630-4798-a867-1e0439b1630f"
        },
        "item": {
          "id": "6d6f2a43-076f-4e5d-97a8-73d896c52e75",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "18130538-28e3-496a-b36a-ad9e67d26798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13d8d2a-68d6-4bbe-86d9-803f8591a7c6",
        "cursor": {
          "ref": "98d04da5-5f2e-4102-a50d-4f9c3e9b027e",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ae074c0a-398e-4577-a106-d7e705456474"
        },
        "item": {
          "id": "f13d8d2a-68d6-4bbe-86d9-803f8591a7c6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b8484afb-7929-43ce-953c-1d92fd2e13fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81979850-182b-441b-8253-446e56d9c6d1",
        "cursor": {
          "ref": "24a69261-e3fa-42e5-9eb5-91177915e6a6",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "89003fd5-913b-4f41-9f1c-5c9c6c285589"
        },
        "item": {
          "id": "81979850-182b-441b-8253-446e56d9c6d1",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "520c245c-e0ee-4d7a-af28-e7afda7d0fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc43120b-d23d-4cb4-9590-c5abc8458799",
        "cursor": {
          "ref": "b9198c0e-8527-4cfd-b327-a4b7a6e7c2bd",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8f01492f-204a-4ad5-9b71-442d24ec90f8"
        },
        "item": {
          "id": "bc43120b-d23d-4cb4-9590-c5abc8458799",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "bdd79e23-a12a-4687-8f84-7ff90d37ea13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa30ccca-cdb6-4843-98ea-cfc4f165cdca",
        "cursor": {
          "ref": "4e1e22d8-4f7e-4c0a-8d6d-096cd4a74b69",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f7b9fea8-521b-4c2f-91ca-827b4e883092"
        },
        "item": {
          "id": "aa30ccca-cdb6-4843-98ea-cfc4f165cdca",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5bcfdaf1-8304-43ae-a602-56bdb1f79a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f3d2b3-5a43-4efb-b006-c91b77604801",
        "cursor": {
          "ref": "56cb41e6-7cf1-42af-afd9-83cf2ec23d62",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6c08199c-30ce-4d93-9822-76864781313c"
        },
        "item": {
          "id": "e1f3d2b3-5a43-4efb-b006-c91b77604801",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b62a1207-670c-4aaa-9d46-5f799154da52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb811de-68cc-4b55-bb6e-420c0d29c9e8",
        "cursor": {
          "ref": "216ec377-2c12-4e3e-875c-82a225c7e93d",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "96d01480-1c90-4701-bf72-ddf813a9d97b"
        },
        "item": {
          "id": "cfb811de-68cc-4b55-bb6e-420c0d29c9e8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b85fed4b-534d-46ff-9c3f-7b347385e117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2265547-7bd1-41cd-9194-64c1e509627b",
        "cursor": {
          "ref": "c76aebe6-eb8e-4b09-b4c3-9d44085e5b3a",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d11680a7-b33e-45a3-a3ec-a3c985eef66a"
        },
        "item": {
          "id": "d2265547-7bd1-41cd-9194-64c1e509627b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2e2d9241-c455-4706-9472-7131d4d2121b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc937ffa-a896-4750-8605-416acb38eac4",
        "cursor": {
          "ref": "20cdff1e-5208-40fa-ba30-f4373a0f2e19",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "77e784fd-d080-4100-9b75-8104c1f39900"
        },
        "item": {
          "id": "fc937ffa-a896-4750-8605-416acb38eac4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f3915d5f-00db-43a5-82ef-fde11bb956f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df006aa9-4800-4447-b911-b88b9cb0ed86",
        "cursor": {
          "ref": "ed4a0e73-fecb-429a-9253-066d68d4f8ac",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5c27014d-40df-4131-b491-1cb1165d77dd"
        },
        "item": {
          "id": "df006aa9-4800-4447-b911-b88b9cb0ed86",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6f415bb2-f178-481f-82ea-15570729c5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af3a36e-a88d-4598-980f-86cdef238449",
        "cursor": {
          "ref": "9a0e38a2-cc03-4c95-862d-571e73ea2fe5",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6e63769f-2fb7-428e-bd11-cec213237527"
        },
        "item": {
          "id": "8af3a36e-a88d-4598-980f-86cdef238449",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f3074089-d148-46f5-8cdc-74997504b2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8a1e15-005b-4672-bcb8-4eb752a03d01",
        "cursor": {
          "ref": "6b905b61-7731-4868-bcdb-b4e3c182a802",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "220d670c-a914-46e7-b29c-94f4ddd2dde7"
        },
        "item": {
          "id": "1a8a1e15-005b-4672-bcb8-4eb752a03d01",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2be1ac59-050f-4858-a49f-bf102f23a720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d195c37-8fa6-4e63-bcf3-44c7ca5a1943",
        "cursor": {
          "ref": "93607ae1-ea9e-4e9f-b0d6-7e1ff7a23363",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6cc5a593-4db1-4bcc-9e45-ac1bbbf3551c"
        },
        "item": {
          "id": "3d195c37-8fa6-4e63-bcf3-44c7ca5a1943",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b780b313-6f1e-4ef6-9f3e-9b799cecd57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b578cb6e-1e12-4719-9a01-ceb7cb87e0ae",
        "cursor": {
          "ref": "af494024-4b0b-4177-b97e-d809c04172ae",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0cab04f4-b350-48db-bc6a-76e40d194994"
        },
        "item": {
          "id": "b578cb6e-1e12-4719-9a01-ceb7cb87e0ae",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7bca6b80-0bea-4219-8de3-d2d00625f06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0ee9b8-09fe-4014-a1d0-639db539d229",
        "cursor": {
          "ref": "7f943316-4e87-4f5f-8dd0-68618396c64a",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7de31478-66bb-48b6-8931-eb9d71ab876e"
        },
        "item": {
          "id": "2a0ee9b8-09fe-4014-a1d0-639db539d229",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "587cd49b-6fb2-493e-9216-47153a460a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfb316b-0717-43c1-910c-ee907d7f57da",
        "cursor": {
          "ref": "d3b9f425-8e25-4e66-a0af-f95d1c41b262",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "fa33f485-534d-44d0-a698-f1cb78f22f24"
        },
        "item": {
          "id": "2dfb316b-0717-43c1-910c-ee907d7f57da",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0ff93b2d-7dc1-4e69-a186-6001efec61d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6ab38e-6d53-4c64-8848-427403a22448",
        "cursor": {
          "ref": "923cbbb9-f72a-4b29-bce2-764eb57a131d",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a70d3c09-393a-472a-b58f-179a1a219735"
        },
        "item": {
          "id": "8d6ab38e-6d53-4c64-8848-427403a22448",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "960e2b55-1b65-4aec-9bb6-fe87cdaad9dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948ca869-0e49-4315-8616-586b5cb9396c",
        "cursor": {
          "ref": "80265684-01cf-4b58-b0cc-a8703d638f31",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "21763b77-9b63-4907-8c9d-eb10876c03ad"
        },
        "item": {
          "id": "948ca869-0e49-4315-8616-586b5cb9396c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "71981ee6-0b09-4d85-a3e1-b0ade55a6fcf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154fe2c2-3d4f-49b9-8aac-844978e72309",
        "cursor": {
          "ref": "9881c9a8-55eb-43a5-8adc-9781c51a1271",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6c004edd-02d1-4a3a-8af3-51eaf02bd214"
        },
        "item": {
          "id": "154fe2c2-3d4f-49b9-8aac-844978e72309",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "75af2d95-cecb-48d1-926d-ab1e98f1add0",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "239cd410-5048-423a-b8d7-4f2ee611eeb9",
        "cursor": {
          "ref": "8e02cf2f-7d97-4aca-a329-5e5522d0cb59",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "366212ae-9b67-4faf-827c-2cce6a86f851"
        },
        "item": {
          "id": "239cd410-5048-423a-b8d7-4f2ee611eeb9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c8d9a486-2d60-47d5-85bf-a8f96bfcb047",
          "status": "OK",
          "code": 200,
          "responseTime": 2359,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb640fd-9785-40b1-b7a4-d95ef6eaed0a",
        "cursor": {
          "ref": "f6c21a0e-fd2b-4b5c-b01c-f2ce4bc2bd49",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "aa115859-a1c1-4e38-9de8-a2b34f8971dd"
        },
        "item": {
          "id": "fbb640fd-9785-40b1-b7a4-d95ef6eaed0a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c6302220-bbab-444c-892d-141dd8c6a889",
          "status": "OK",
          "code": 200,
          "responseTime": 2552,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "86693e70-fb36-4890-bf02-3362bfece93f",
        "cursor": {
          "ref": "9c091735-4593-41f3-860f-70f4ee6dc916",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "426b1edd-eb7d-4e10-a9a1-7ab1d28b9b13"
        },
        "item": {
          "id": "86693e70-fb36-4890-bf02-3362bfece93f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9a04144e-134b-4919-abf6-b4ad089cf94c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86693e70-fb36-4890-bf02-3362bfece93f",
        "cursor": {
          "ref": "9c091735-4593-41f3-860f-70f4ee6dc916",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "426b1edd-eb7d-4e10-a9a1-7ab1d28b9b13"
        },
        "item": {
          "id": "86693e70-fb36-4890-bf02-3362bfece93f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9a04144e-134b-4919-abf6-b4ad089cf94c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c839988c-97c3-4447-ac23-ee85ecb3916a",
        "cursor": {
          "ref": "ed705e4e-19e1-4d75-8c32-b901a3c67c06",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "998b71c2-629d-4f72-bd04-34d63382b234"
        },
        "item": {
          "id": "c839988c-97c3-4447-ac23-ee85ecb3916a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "79f6d8b0-a0a3-4cc2-b099-f8859c2d5474",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209b31e8-566a-403e-9c32-3cf81fea7db2",
        "cursor": {
          "ref": "c270b3dd-e30a-4925-9e0b-d5d9878aa29a",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f1e9485f-c0a8-40ba-9b09-2252ff592c88"
        },
        "item": {
          "id": "209b31e8-566a-403e-9c32-3cf81fea7db2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f6c67b2f-52e1-499d-891a-0f56c192db84",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}