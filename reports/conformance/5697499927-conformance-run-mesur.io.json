{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9d60969e-6abd-44e6-b8f3-13e661e7a30f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5868a180-7f80-4ef6-a8e9-7332f7300364",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "70660a39-98df-4be9-9e06-1842b012e3ea",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d2f7c3d6-4408-4558-8dff-8582c28c9a29"
                }
              }
            ]
          },
          {
            "id": "3a1885de-7ac9-47f3-8e30-d7f23191532c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "78d4dec4-f3fa-475e-8d18-b0351a74bd16",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3d915689-82a7-4741-8c63-9031359845dc"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "daf990fd-ac24-49d0-88a0-f06c2162e0d9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "171ee816-297b-4806-894e-48022899d23b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "11576630-46b8-4349-ac27-22813e3cd63a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01b03dda-a30e-45b3-9da9-9e6a767d005f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d10bb1e9-9d21-4120-a5d6-5c34d1e36f90"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "82d72749-707a-4eab-afc6-38928ae1e37f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2b1a7f64-0569-4a57-8511-fc8931649190"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "98fb9b98-db94-4de2-9682-f4d4848b2145",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "94c8524e-284c-4f13-affa-ffd021616ecf"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3b39c54-61b8-4728-b25c-3174584f2982",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "97dd4f80-e3f7-4ddc-a753-8b690a849333"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d01e363-f613-4c26-9a01-592a21c254c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dcb90235-d2b6-4719-a94b-0cd23c952da9"
            }
          }
        ]
      },
      {
        "id": "2bc08050-f158-4960-999f-7de24a3d810b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "827c309b-9ecd-4e25-be32-c448e2a71e1b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "584f6988-7bea-4907-80a2-a9cc4d8ead4b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fe12ae3a-2a3a-4cbc-9409-6820a8a73935",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede9e32a-2e29-4f9b-a8b2-7b739a828200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7449ee90-fa4e-48e2-b176-cf73d6dda064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ca5d69-b52a-472e-91c2-84bb02d511a9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11842d36-0d56-4710-9a68-e2d1b327fb1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31026670-ff08-4285-b068-b6ced2242118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08dd8d4f-7320-4fa6-8034-e3297a582e2d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02427f28-0273-4cb3-940f-d450c101f038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "759024ff-b99a-4e98-9e0c-a51ba4b7e1bc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ad78d591-8b19-44ed-95ba-c3c19e4fc050",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "129e73ea-bd28-4d57-a266-f888d31c33a6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72220dd5-82f5-476d-9611-e310a365f1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d41acd94-60da-476f-bcc2-9d417af2efe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4c792a-177d-4112-81a3-be4cd7a1efc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c2a818c-d8c2-4ebc-b590-a32414f7e4e4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8b248c33-301b-4c92-accf-c268e0b171f9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c55445ac-99a9-4cbd-8150-c3db8e9e3801",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02d29b5d-d800-4a97-b5da-5b94c8480a6e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "47bd0eac-321f-408c-85fd-569cc2812412"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "18e4cb7d-a8f3-4453-aa33-8c70f67d92e0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "fb0d4188-07c4-4496-8429-dd3bed656301"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "55816a5a-698a-4db2-b70a-3ef4fbb8f38f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a32f2f0e-db36-419d-8fbe-6b4712dc922c"
            }
          }
        ]
      },
      {
        "id": "aa67a34d-f70c-4fca-9708-79ce8c2d1b69",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a35eb869-085e-49ba-9545-0d63c728f97b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "11e74b2f-d246-4354-9002-df73a4a083fe",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "44c41913-29a0-454a-ac64-10d7682b4cb2",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4b6b7a-3bf6-44e3-80dc-0acbcc5f5758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25efc6d-534a-454a-8391-7e77c32acc4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6be8bf-c78c-47dc-8a98-e35a9d9b2edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "453b7689-45ae-4960-acc3-7a1807f5c94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd9f274-2e6a-4bc5-a971-1319fe0b8777",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb120ac-1709-4b36-82f5-73332fff6db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecef1952-b8f5-4df1-b8b7-11e23e835c76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295b4dfe-3f74-4622-bb2d-c4b48fdb8d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a794b535-a76a-4792-bb22-48e60d961c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16647eb9-dc36-47df-9de3-2ea804dc453a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c336ad1-61e3-4c22-bc53-51fa206ef95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "123d9515-fb5b-4e84-9729-402ac1ac2ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa395da-c1f8-4cf6-bae1-54c33abe4c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7133bd05-d329-4dd6-825d-e18d85b70e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17bb72db-c269-408f-87dd-8d7639866371",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7cd1067-9f95-418e-93df-b154a8ccd4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc0799f-5667-4a4f-9be5-5254cf4ee933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0cdceb-1a8f-4b2d-a577-fe504eac0223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad3fcd72-83f8-4a7e-bb67-47933971bb74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa17ec4-e755-418b-9337-e768049bd86c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e5ef10-fc8f-4093-a1f8-8742dabac52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d4c9acd-49d7-45fe-808c-cdf83500af1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6fed90-2eab-4f81-b4b4-d0ef3c711748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14f25de4-7c24-4e02-9513-c3140e1ce8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1cb9ea5-e838-4d95-91a9-65b940ce2ec5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7749c404-416d-4f6f-8799-79b723ca6f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "019ee915-6caa-4ea3-aab1-2723e67ba2a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f647c57b-0ec4-45fc-9b67-7b6bd8f70d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd54d094-891e-4544-862a-4b10fda58f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bafdb55c-43fc-4a45-8b99-524109a3eb1d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1bceda-59b1-4b5d-8472-f6eea0680508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b12218bc-ea18-4dc2-81b4-ecda4079c4d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2904c2aa-6b4f-4a49-886f-e80f8b3c0a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b643f9c0-a038-4358-81fc-5606bdd09ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276313d2-a759-4e2d-bdee-06e1eab56a5b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4712f0-86fb-4db0-958d-865cd8ce266d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c77707-43dc-4a30-90cb-2954e9fae838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce18ba7-5aa1-4753-9e6e-f235d5733135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0423e3c2-b626-4b88-acc5-105e53c9b217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b19e17ef-cea6-4503-84d0-70e1578fa3b8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2751aa94-9496-444a-8dd4-d236013db0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f107194-be5a-43f9-a554-7eacac6c7392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218bd1e5-08ed-4a4b-9d6e-696d2e0f0494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f23a5b2e-bb2b-4c3f-8541-137ced15d37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a507379-4ba9-41da-bb27-c8676e4cc3ad",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02d24a7-3b28-4edc-8eea-a6511d0c07d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4143df2b-d103-474b-86f5-e1b4453a8a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797877ee-ff86-4a33-b7f3-93923d3e7f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7310edc1-f253-4f6c-a828-a8af27a9c169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8516b3e-4e9e-4206-b3b0-32ded02f877f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a51cfa-5e43-46a2-a7ac-ab107ad8ce9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6135f02-3f87-4ad2-8d54-7ea538c4fa66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c115b68f-fa4f-4987-800c-9c369428ae62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "072ef81d-c4eb-4582-aebf-f5fdd8596649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14eba77f-2f74-4b07-aaa8-57ffb64ff604",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f638efda-62c3-4158-9c25-9a47dbfeb912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e106d0d-5b52-4a48-b903-50852002569f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb26a67e-95fe-4797-80fe-792674c2bfe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3121102c-c85e-44a3-a72c-4f17eaa2612f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd7bec7-1083-4bbf-991d-e54a38edcc88",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde88baf-d929-4d66-8899-96b359e3cfe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4d09761-93f9-4111-80c6-2c4cda5a1534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5b38d5-2d22-4e76-9a17-1c617dd111ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d058ffbf-5c50-4242-a59f-e752a256d730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6dcd7f2-f6bc-4e88-9736-3cec0f62c43a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb7d241-7b56-4fe0-ac09-e95bd85eb92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97e972c6-081e-43b8-b949-cfc63f8eadd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480d61b8-204f-41bd-a3d7-e596e216758e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c8707b8-de11-4dcc-8d02-ea4719974b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7b8b36-c636-4563-8197-2a811b280bf5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "630fbe46-c38d-4361-b894-ea0b8744ed2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d0b3e4-1ac7-42a8-92e9-2160bcb9c9be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fb71df-3690-4e62-a683-87002d4ee96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "818dfaff-c612-4aea-b50e-ad1970a7696e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa793a9-817b-4077-a6ce-6bce56cbf703",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3e53ad-cdb3-4bde-a989-982582130ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0298f718-6b9a-4c9b-83dc-e2dca1b00045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "308f5d0c-37d7-4e4d-afd2-0b49dbbfc0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c48bf6ed-b532-4cc7-b302-24cef903f4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c9fb7f-d69d-49f8-ada8-d2a52768eded",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee19325-cd8b-4b1f-8559-76192af31c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcc900b8-b6a3-4b00-a0b4-66c668ea4609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375758bf-5954-4876-beac-df3c00132418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18df040c-2eac-47cc-8ac1-62be5e3680e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3044fc54-fcf4-469a-8ba3-bcaec15100d3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e8bf6b-c227-453f-a230-30290992279a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a07727f-c0c7-4c16-aa8d-d920e4fa8f8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd12091c-94a2-4937-948a-6fb3cd6d75ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "429647bb-24b5-42e5-9923-80c9d6b36a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f733c3cc-aab0-40c3-b2bf-e973fd051323",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b84f0ff-6b08-4d2a-8b8c-0f8c1c9577c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0382a4c-76c5-41da-a69d-addfcb10757b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20a28f5-684b-460a-a330-3041fea66105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36c69213-cdd9-41f6-a577-78fd3e49dd66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587bae24-7dee-48ef-a5ae-694f80bb1be7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73328d3d-a2cb-4782-bbff-8b9a0b956282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b2e2016-030a-4eb4-acab-ee36926d9b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d039d55c-dec8-480a-a730-e4adebbf2102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa4ceb5-7812-4972-a1e4-72ec827f212a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e5ee9d-08a7-4d70-9da7-a996c09d4456",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb15c38-1751-446d-90e9-50eb373895b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5418f2ea-0f37-4db7-a1a2-e80eb3e8e3b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5829a926-8c96-42bd-b3b0-56400441a50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ef82356-e05a-492f-a6c6-1a26ce396e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0002c1-4a8c-4790-b2c3-e66eef3d98b5",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "014c52f4-9628-45f0-a098-f3995bc0192e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e09f062-a43a-4129-8025-7019929c2c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01fb5dff-b979-4f55-b37a-b393f0313f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f3b7592-e6a3-4765-82c7-20c241e95efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3766216-f07f-4712-9ee6-bab98d2e97d9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37c4e99-8312-4946-8588-880c606aecfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d133d748-2c65-4ed6-9795-17857f29f86c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0c7a86-125e-4d16-afbf-50928818133a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "03cedde0-9c98-480c-a405-3534c56a321a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3a2e52-5d4c-4a3c-93ac-1a4837012148",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00d8e0f-cb36-4c25-b6ae-b05363ff7bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57994c8-48de-43ef-8dc7-dbb4ecdced86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3bd4d8-8767-442e-b0b0-8fce05939488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "64438499-6ded-4c82-8231-20fdc36a48cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0804592-050e-4656-895a-2330c4226ab3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff9cb33-7fa5-41bf-bcd3-9c79a1c20a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fd71ee7-1dfa-4246-ba29-f84a7cace287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8327271-473d-475c-94c7-2dc47000cec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f1e99c7-6759-4344-b03e-03d8eb596de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c3550f-4b21-4e8a-a0b8-89ec64c1a23a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "343f84df-8a42-42c9-b016-c9fae4b56eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdaa9615-5353-4de1-9995-c7f08f0edc35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d73dc3-68bf-4f82-8181-061c4d69347a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c09dfbb3-3341-4d8e-ad82-ec4d5852aac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6dc17d7-dc26-48c7-9572-14a1c741451d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b5b958-4813-4755-941f-a8a15a4885d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60805662-577c-4702-95a2-d8f0d8f968cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a07033-ee7f-4cc1-827f-b1dc1584b904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6efcd216-304a-45b7-b52b-5f693f487ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462b70bb-03bf-44cb-afed-66b1e8e62217",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba81c37f-3b9a-44e4-9b60-7646cc5690a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07caeece-fdaf-4d53-835c-80660ea18990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905ffde6-6ecd-43cc-adea-891caeaf6a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5dd46b3-6bc6-4d3b-b740-473c77230e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68764782-8bd2-41e0-a551-933fcccac043",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6e8917-d6d6-449d-b7cd-7a7e7cf256f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52449dbc-64f6-4edb-9203-d6258311873d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93bf9edd-99e2-480d-8a7a-af5970252ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "45ae8864-a658-40fa-b137-35521d90ce7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbfdd57e-0c60-4ff1-80c3-02960241f7e1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be457726-5c9b-42fe-81b8-0834b2b61f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f09fa94e-5c18-49d7-8eb1-2a55c9ab8b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4028c8-ce83-4a20-861c-82e0295630c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a62e9083-a235-4ef5-9d6e-ffc714f73a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9084a1b9-5e26-46c0-82b0-2a3f32021f07",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9821b7fa-03af-479f-b7cc-5e98e67ee0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a872c6b1-f047-45e7-8e66-d2894e7e99e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba67892-ff3f-4b13-a672-52567d7f32fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "497363ef-4222-4a5a-a064-f03e268f191e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd106732-92b0-47b8-96eb-827e1d794ecd",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3ee9cd-c1b9-49b1-8193-2d5667654919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72d36cb7-6a1f-41d8-99b4-096d9f8e8ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ce860d-c20e-4a5e-a8cf-1e738400399d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e9df849-c7b3-4721-a56b-fb7c4ce71451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70cc2b5f-55ae-4b5d-b861-2ba1eb48118c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31324f30-7bdc-46b6-9274-3ee2a46f8ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b739624-6726-4165-852c-efa1c5b2caac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01437228-aba7-40b1-b649-3954fd2c4e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "efab9474-dee8-4cba-bf0e-8e48bf10fadc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a89e258-5109-4b50-9998-ce75665858c5",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "357e0910-b633-43b2-9055-3fa38a2087b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3518420-2db8-46d1-af06-870da34b2968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d79862-4697-445e-ad91-a11bf31ba415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c620f0c2-6d2e-4bdc-a07b-d96996b7d7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25faece9-e377-4434-a083-b1dadc1fa7a2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3420c2c-7fcd-4647-824c-4490a47b698b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87335c39-a145-4076-9f18-7e9ffa33a499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a365735a-ea85-4ae9-9a47-2561a910610a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "fcae3847-aeaa-4819-832c-3ee7a3ce349b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac82b5d-eb74-4b5c-9903-666ca7d36785",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b821c8-37cb-4fac-a8d9-7b12a04f3ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a02884e3-e337-46a4-9b71-5df4cd5af31e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b43a83-bbe3-49b6-b626-774d45b6554d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3b138a1-823c-47d3-95d9-758d89967cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe55a7e-49ac-4bfa-be76-e1ad7863b5d9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51c61fd-9a24-473a-9ad4-3260986b9f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e100404-764c-458c-86db-4ffccb309a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40a14a2-5e90-48b4-af04-1362bc244fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "697eb8a6-71e2-4638-afbc-2ab14357b4b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772e9702-c450-425b-8f49-fc39c28c69e6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc41c08d-8394-4e3c-9b2b-68e32a7015d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f137096-81eb-4fcd-840a-18c4c78e48d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c0696c-257d-4051-b824-7e0358d9fd6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5fa4294-7b9d-4aa7-93db-b6f558368bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8797d56-abc3-4aa3-899a-c9353b04e251",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fef1bc6-0e4b-4250-ac27-4191fa6861dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f4f4e0-252e-4e1b-a555-f8884ab39df7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c254983-8ddb-406c-a79f-5fd66f4f3002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "54088dac-48a8-4a04-9146-a0a8ad4e5af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0f3ad9-1aff-494d-9e7a-64e8302b1c83",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a350b7-ae2c-4f26-88ab-8cea180a4e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2bfe197-89f0-4210-a595-2992cd6ad9a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e262a9-6264-475c-b74d-1451922f8815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9648a98-c0ca-4d15-82f4-9e162a9afb9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ddb1976-6a4b-4400-883d-70ad3528a62e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00d6aa0-962a-4180-b291-1f3b1a171540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "843b16e5-2aad-4db9-b8b4-0dceff8647c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c212fd-065a-4de0-a958-5a297a31ef5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "799e6df6-b249-4035-8509-2cfd5019be6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfb5dc0-5db0-4718-9623-9b2252782ab2",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f9235d-744e-48ff-9c98-5d16b344a468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8758fb10-3c45-4f6f-8c74-56f043e20d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcfd9b0e-6842-42d1-b883-0d8c91c9d558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9f9cb688-0a76-4717-a99b-8c8295f334ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a656bfa-6394-43ad-a3ae-bd1bf7e52914",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f23345-e41b-42cb-a1ae-86a7292dbcbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e54f6845-4dec-4d91-b47d-3101764384a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559cbc3b-8c64-4bbe-85f3-4cce9c4c4e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "26bfca14-84f4-448b-a6e3-319414f6c1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a418f60-2de9-4309-80d7-b147d458ae61",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed47ded-cbf5-48b6-a7a2-fd8a757b4efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e84bb899-96e2-4f65-a6bf-581d57542ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3509ae1f-ba8f-43e0-acb5-578b8f1fe548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ded71e2e-a39d-4a4e-a3e9-d3bc979cd755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402de200-0166-4e36-bb8a-ea20a2b57af3",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "547d31b4-979a-4746-acfe-738c03ab461a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c54a6c8-ea49-4217-ad09-306b72dd51e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3523d1d3-3401-4ce8-a6a4-8a205e969feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3089d85d-1729-4b05-ae9f-a45247d5670c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5b32a9-ad53-4fb0-9af9-d63fa3106e4a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c6ca65-772d-4065-885a-c0ba12fbf790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f893540-69ff-41ca-aa59-0401854c95ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e013327c-ea44-470f-ac71-8427d6e8ca5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d52f8773-64cd-4c09-b3e8-4bc116ecd289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672827ef-3c52-4623-b8bd-bbc224ff2ec7",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5148fd34-7474-468d-a1b3-49642609f2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb1bafed-699f-4ddd-abe4-a15a56b37162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a676d4-a6c3-43d7-87d5-373d4f9d1bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af8c12f6-3002-432c-a769-ea0e011b200e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e37d13-0c36-4353-b8eb-60edbacc7083",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b79ae00-4e7e-4f28-9d56-f8eae21e1ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "982923f6-c195-4e48-ba5b-91235faf49d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4fc261-6c90-47ce-8655-feea4946f430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "16cb8489-0043-43ce-b449-a33950e61d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc7cc23-9088-460b-81e9-407eb9c53325",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d307af1-b1ce-421b-a7da-bbc2778e450c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0007bb1-8f58-4fbb-a9f0-fe77066c2acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2f532b-03b7-4564-8a46-7e6d17307224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c5ddc70-e3de-44a4-a211-559f54276d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21507146-ffad-4467-8f4b-ab8b4ebb5dbd",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a724e3-1482-4df6-af89-ae58520249fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "020b00f7-5fbb-48ae-8b7a-2d1bd63a33c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743540af-6367-4c58-abe1-e9d0031ac423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc617fb-38c7-4206-bb04-630a506c661c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf48b85-63de-40ca-a126-bef4a72be493",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8409d12f-8fec-4f82-8c22-f6c8391f0903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab10859f-ca2b-4b2d-8c04-8700d740b9d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed20336d-076a-4746-8fba-c00f83ae903f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c36bd7c-5465-471d-b736-c6c6e082a865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46373437-a0b3-4f92-b780-9fc71821c3c6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ad712b-1351-401a-955c-7f8d6457ddd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c60e26fc-82cf-4642-8170-d80b34e50076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78604be4-9da4-4831-8489-f1ea339eadf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d575e8f-4899-4aef-8fa6-160945169597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6bf579-4f86-48d2-951c-2798f8bee164",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71678b5f-0414-41ec-8c90-cd14d71a4a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "377282f3-c20b-4868-b3de-1b2e4daadf4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0c7188-08a6-4858-9750-ec23a3a7ca17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4a0c13f-6f53-4d13-b9dd-4481fc46cd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6262464-7f07-4c6b-be12-f8fa6a0ba646",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e98e5ba-8688-426e-962f-cfa02ed9f732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28366b60-4147-4b44-a1ff-24986e38a298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6d0937-6ede-4e0f-989c-8a9eb0d9eac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6741a1bc-7855-4227-90e7-8ad15233accb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1452310a-ab2b-42e9-90d6-47e16cb4256b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85295c71-d487-4df8-9c8d-049d98f05b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94540572-f3ef-4077-b523-333f67c6ac6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525a779a-c661-43dd-987c-84a7bab37654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1f6974d-352c-4d47-9b3b-36737759fb51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f60f98-4191-4f8f-879d-b63d98d060aa",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9634a3b-ec26-4c78-8ee8-96d8b0b27f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43f05bf8-9d27-407f-b5e8-f81ef2eac8dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ecf0fb-b3b1-4c4f-8588-28c903310eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c98238-e557-407f-851c-bc3b6e49e6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60107ea1-6bf4-4174-afa9-457706048992",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bdd834e-d780-425c-95ea-7234bb87da37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04b5bc99-4420-4e50-ab62-a300597da727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75e39e8-c1bb-46da-8fdb-e8b207930e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "921c702d-0807-4013-8cda-205a01ebf739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f626b6a-9cad-447e-a8f5-8a31ced8042e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f2af28-ba14-4d6a-931e-478b56a7de85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d86b43-2438-4e36-b273-347c16bc46d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa28cee-afef-47be-b6fb-59f3fae3bb0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8067d98f-5258-4ac8-9519-c4689810353d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16e684b-68b7-4284-a461-3d82c6831ea0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3ea7c5-ad82-487a-a342-60167e990558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3732c38d-b91d-4039-affb-3146f32a7088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "417a7b1e-a8be-4439-a3b7-33d2dea6bf89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "252e7bc1-43eb-4362-b346-9a372bd84874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e99180-c574-429a-a62e-91908ec5b2e5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e19c79-e54e-4f46-95d7-9eb9d690969d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de1384c1-4dd3-4f02-93f2-e0330fb72de7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7d920f-85d6-414c-8908-38a495d3ebc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e46d20c-2deb-4fc8-8e61-540d007207c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d5d736-e0c6-4d5d-bb2f-d6a1c332f63c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1c4d0c-3c0d-42b3-afe8-fb9b1d67db30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "732af044-0a8f-42f0-bf01-6b9339a0aa04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6df007-a84e-484b-8aa5-6dcf97488118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e95393ed-2dca-4e96-86fb-6927c15c9eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccfc3d0a-09c5-414f-a5f8-0fbe75562074",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ea128a-91db-4d46-bf91-8fbd38896fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a1a26bb-c8bc-4458-8dc1-0a4742f86fe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c3e904-bf5d-413e-ab7c-349fec526546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cae3d3b-e0be-4a98-a7b6-fe992a0220b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4048de7-6f99-4945-9614-2024bbd8ce30",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7f1221-b4b0-4cac-956c-380a3b3dc1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf4b680-5f58-4ac5-942f-e4627cf6bd12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2112c729-71ad-4869-a3ea-529d5665e28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "35875b89-e64a-474c-b049-147836bf9a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98520da7-ef4d-471b-9959-030c1d318b27",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ecad89-adca-40d0-9a4a-3ec7da955613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6695ec-2f2e-45fa-9a39-881efdd41f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad593be-2166-4c3f-9cd1-e4476b960c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba870ead-8fd6-4f9e-b6cc-98f8f11ecde1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fec93f1-9978-4257-98ce-2a8ead533e89",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e731d0d1-2d26-472d-81be-45128194bfd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "667ee320-a742-453d-b887-435820c34074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ea094f-c539-40c7-9100-e1068eae5903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c12e87b4-21c3-4a2a-a52a-2a118746ec0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4671020c-3909-4065-a316-f65bc4a809fc",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae29294e-a418-4404-824f-131a7bcfd756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcf80520-f4b0-48a4-b157-6c3ea5088a6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d75b5b-2d60-4c0e-9a48-2e098088cea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f65b9e86-1e35-4db5-9073-11d7cf5714d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4fd100-c1ae-48b4-923a-82ab7c10f616",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a96f61-94cd-4d83-b4c2-a76c18c6f72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5067ea3f-636a-4b3e-8f24-c09ff829e403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc75fd38-6fa6-4b20-b916-a3f5d1604088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6421eb1e-cd40-4052-86bb-af193fd8308a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5ab7fe-ad56-41e0-81c7-92e6a3a32f4e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31792577-674a-4e4c-a6e0-11a697f72ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d563e52-bc2f-4b11-82d6-27cbd3503f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ca0ad7-5332-4987-bca8-4b6ffd60b9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "eddf9af7-57a1-4e0e-a9c9-2138ada6c498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6479464b-1ca6-4f31-8143-25b590335f31",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1ac66e-bc8b-4147-9489-e50fa1d3c525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7ae5d41-851f-4f33-8da8-d52f0fa99f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569fd349-9a10-4a91-8962-493e916a83ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fef6c3b-641e-438f-ae4a-e5d035a65b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c487ce0-cd89-4352-940b-668e7e12bf58",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cdcd357-2702-4eb6-a09a-6ae813f81dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "873bf6dc-b2d5-4ac2-82b4-29909caddf98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c5802a-1125-4173-be46-2c9279696cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7b66dee-6e3e-4d2f-870a-56843b14e9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f75144-81ea-4dce-affb-b958feb5abdd",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb8c3d8-b663-4235-9e42-ebaf02ae7e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb4c417-ebd7-4b28-b03f-e592ca06d3c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c22217-7d07-453f-98fd-c7e3598ec2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84d359b2-02e4-42c5-a7c2-dbaba0f9ed71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3302f51-65ac-488d-8fb0-ce3200f0b04f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3b671e-3e7b-47c6-a5a5-f8d920ccd72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03e79542-b1e5-476c-8f16-17f85652458c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a050d75-fe2f-4076-8d0f-202129e27910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b0d13d-dd2f-49ca-bd11-fe5d9221794a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5d02c1-4cb1-431c-800c-90c88be03c57",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c80136-de04-4f77-8cbf-560e6f6d6467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aabdedfe-b4f0-4842-bf72-959621ab79d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da17ee8-180b-492e-83d6-8a35213247c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "14aed99c-e8e7-4e6f-9240-42dff7d49849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f55860-6d06-4312-88bd-af4cef0aa67d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "def3e3f5-6f42-414e-8544-8243ca88ff9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0108ddb7-26ef-47f0-b3ad-1597f7266730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a54920-b5df-4866-9dc0-1d229410b3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "17fd9b87-2e3f-4596-9873-43011f517c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46572d41-3ffa-4907-ba31-c0212336008f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "059e1697-d11e-42c1-a1b2-3e09083263f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a95c453f-bdf5-47cc-9052-bb8fe9b2447d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6b94c9-aa71-4650-827b-26518aaed775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4401d40-4547-4e61-a0a3-4bb4cac96615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea2ee01-a4de-4097-9f6f-07a54e0f741c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7bce83-f699-4d66-8b88-bb80efb58e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33deb35d-6aed-40da-8d95-a35d9c628130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7072b9-34f6-4373-b2df-b0277975cd0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d05d6b4-8675-4dc9-8233-e9c1dd495991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84a4c65-bc96-4dbb-88ff-1a34e09701f8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d0b64f-0a27-467d-939e-fd58ecfb9f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c891ae-b434-463d-9ebc-2a4a73d972e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a37949-306a-44c8-944b-7a2840b4b198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc4c2883-102e-4d1c-abe3-e43b338f5d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008c8418-a362-49fb-9a0a-cb0d85c58b2d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce8a731-0aa4-4cf9-a78f-7223f5932ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f3f10a3-9b09-4a79-b974-389a1cde7d65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a1e18e-237a-4864-bb75-bca1d714311d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef28b76e-f3c0-46f7-8e51-e067adf1a0e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b908d9-b263-417b-a595-0acd52b2248f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bbc1be1-1699-444a-ba1f-b4f259bcf85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e85b52cf-c6b4-4b62-b98f-71c2da1ddb02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe75638f-b332-45c6-bacd-5abe0f643728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea000ac1-b0bc-48dc-9a52-0132f2c7b2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7bd8066-eefa-49cf-9611-e253a7590229",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef87b15c-7b2f-4e28-a9d4-b84971d320af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "951dd0a2-3ae1-4a1d-81ed-f2441d261ca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eacb492b-8033-4edc-af43-fb1282ec36e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e34a7386-88a9-4c10-baa8-315e183b87e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c09aca6-fd87-4a5f-ba2d-032719178fc1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a5c89f-2d82-4d78-b19c-1ef20d402f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4fa8c4f-bca9-4f86-a3ea-a80d66498495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de54f72a-327a-4198-9ad4-55abf2c604df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d619718-f907-4f47-9b4a-f7506a66b9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a9a4e9-2505-4918-97af-f0084558d8c7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6afd212-326d-4872-bdf7-d107cfe19984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "058beb51-bb30-4176-b828-9c6a97f1e8a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74db0885-1fd7-4e73-977b-467476b1e883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01feab88-af86-47c7-9734-aad04c7bd39d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb2f7cb-2d48-4e34-b05a-308b76c8058e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e49409-4698-498f-b2f2-101ca3f6dd01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f21f4dd-e355-4c89-b114-5fb81d678b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2eabef3-66ef-4d30-bdf3-02824c7810b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8de86f60-1929-4f4b-8d5e-93f273243c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fd3652-7461-4924-a23a-51edddc5bb58",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf0e8a0-cf62-4345-ab4f-131a4c162411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb90b7b1-44bd-4936-9133-a435104bd956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b51d61b-8b40-435c-bb5a-954199118c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "922dd416-62c6-401e-b5fa-1886fe19b936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0134fc2-c100-40b0-bcf2-9504c0430235",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f07226-53a4-4b0f-9d5a-80f5198dde0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c1ecef-7dc6-48f3-9cea-ffae04518296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb55608b-e36a-4bae-b74f-8bec18d048f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "88b1eed9-d47d-412f-b8ad-514f1c2b550d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ab9257-9260-43ae-8815-835d9e33ba82",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fee9ff4-94a3-404f-9da1-5c07908ba318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc796df1-56cd-4f68-b72a-e715bc6a1228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0844a1-c05d-4c75-9e4b-dd138534ce53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa34f5a3-444f-4440-8873-3c93e6e02622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a9d99c7-89d5-471a-bde1-397d903a5e48",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f16a0da-496b-4d84-8384-dab13407634b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f3ec52d-38ea-486f-af18-7d5ec0703a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04860608-8bbf-4833-8fc0-d6343d77429d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb43925f-9b43-4858-b80e-de0e19f4037c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9abc34f-ca1b-4eed-8343-efad57c838bf",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2a38e9-3f91-4bec-b4fb-ecfdb78d065b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba9e93d-76df-42b2-a81f-679b273426a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0023eaff-3736-402a-a9df-8d7838d00862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "de0a8f6a-69b2-4365-a275-3f5f10ff5155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b00e07-3df7-4634-b5e8-d939a75c1b03",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2254699-7ecd-4589-ab65-2135aaa45352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c884b4a1-5065-49e2-bd6f-94dc3200c32c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc89d2a6-6fb8-4fe6-bbb0-3174bb719fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fb16f02-a075-43c3-a72f-e3de1590fd83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c753761-a612-4fda-ba76-60b6890779fa",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9cdfc8e-4cec-46ff-b669-a2bcf9189024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88791edf-0864-4186-8ac7-b2fec5d5df7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbcce24d-c5ef-4075-9142-677ba144b691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "727f4de0-9260-4560-b43a-69ea9082709d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bcc2157-3746-465e-9b7b-9cee4c4e8e19",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2be809-956b-4fea-98e2-9f9251e2c4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a079f0-6622-4bde-a1b1-f615600ea6d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83624362-3fe3-438d-afd1-d465725fae35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "539c24c7-2c8c-4342-8500-7f0a1a08a2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5ba609-51ad-46d2-878d-78454410939d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5f66f8-786b-4138-b2fa-1c142ed3d53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "92fc69c0-79ae-4dbd-a065-54375407cb40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753293e0-c95c-4e5a-b9b5-4883833df5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ffaae2a-b09a-4c95-847e-da9bf04bdcbd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fb992582-d169-4668-9be2-3fa65ccdffab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "656ad1f9-1ceb-4ffd-bb06-8798beb026b4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd788d37-74d2-4775-8484-7ef011c2e62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf8a4bb0-1480-495f-ba5c-a285b032e31a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b061dd7-175b-4625-8186-99bc7eca33b4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74c49333-d61f-4113-be8f-eae67bb644fb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45f71e7d-27db-494e-8730-aaf0fb4b5d63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e40b7b0c-e48a-4ab5-b7be-4e6fad3e5fd3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7d8e888-4723-46d9-9b5b-c9dbddd48d33",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "305e5492-ed88-4bbf-a077-1dd912736749"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7d7bb304-8c34-46f8-bf06-0a53095d29ee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1b45df37-4fdd-42ce-9157-a8f469a9e971"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d5af9b5c-65f2-4161-ab83-29754fbfc2eb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "59f95c0a-81d5-413f-a703-c9eeaa55086f"
                }
              }
            ]
          },
          {
            "id": "2a7e0055-e53c-45a2-9049-585d6d6dc869",
            "name": "Positive Testing",
            "item": [
              {
                "id": "49afb563-7861-4bb2-963f-21a6bb4a4869",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "002ae71b-5feb-4b37-a173-29320654bb1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f5d56d98-dcb5-41a0-b320-a6dcd8cdb5dc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d05acfc-3131-4858-b54c-55317661f411",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c6da5aa8-3d85-4631-ae4d-f3fb2cee6cfb"
                    }
                  }
                ]
              },
              {
                "id": "c4a08b14-d88d-416e-8140-084504d17197",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "74006d85-d9aa-407a-928a-1df85434b917",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "75861d41-39b1-4c2f-9aaa-e3448b0d7f5f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17ee4a09-cd92-44b8-90a5-eaab8d7376b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d5ea31d4-ba03-4014-a7dd-95e9c1fb4f43"
                    }
                  }
                ]
              },
              {
                "id": "11682cf0-083f-4b28-aecd-4d7e40bd5695",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd58d846-5390-48d0-8e6b-a36aac6fa079",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad751e20-ef10-4c85-b455-ebee460d7215"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e2f2fd7-1280-48d5-86b9-5a04541b8e7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9fc3b068-0c2f-4e01-826b-d942a1aed480"
                    }
                  }
                ]
              },
              {
                "id": "67d955f6-7265-414a-a9a0-f69b6ae91cb8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cae457e-031c-47ae-83d3-97bacbbbf45e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f70fba59-48db-4527-9563-18a0e9307d24"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39b2b64f-f4e5-4ab4-8d04-6c1da9f6eda8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a7e32848-ce1b-4b25-b64c-92269bd2dfdf"
                    }
                  }
                ]
              },
              {
                "id": "e85226c1-cb0f-4db5-a788-4e896b72f494",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5094c40-e050-43fd-a8f6-5994be7d7c5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1524c96b-1d6c-4849-8b62-c47d20433603"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6241d186-8984-4d76-ba61-5eacd84066c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "321cd7e6-454e-4a27-858d-bb80f3a215a4"
                    }
                  }
                ]
              },
              {
                "id": "b6d585d0-3fb9-4251-b769-cac5aeb04e61",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2415d5b9-4e6b-47ca-af6c-41eb7d8538ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3d78a2c6-fac2-4f6c-abbb-d8146e1d5cf5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db5b5a84-3482-45ef-87ab-6e4bfe514ea1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0c57671d-72f2-4c3c-86b0-60aaf501dba9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e6ec87f9-54e8-4c41-8c6b-6498a15270ec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eff870e8-66cc-48d8-bd03-a0c794e32466"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dd0f355f-75cc-432d-b319-21309a1a4eca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b3f6025c-86f1-4733-8947-f1022d7d8bda"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56abc8c1-993c-4547-85c4-2108caba36f5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b3472a89-1312-45fc-b9a4-92d6177f217a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d0adb39-9c49-4b3e-a4ff-ffed6911f3bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc1d66ba-29a9-4c16-9db9-aa80ddaf1b44"
            }
          }
        ]
      },
      {
        "id": "92af7694-1975-4c6e-a4cb-28519cece677",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d7c8a331-845d-4bb2-a8e1-7da7b4a31b2a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "076a0c42-02a4-44ac-bdb4-dcc8cbcf075d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ab606c37-2e34-4da7-9cae-07b64b01d6c8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89272ccd-1781-47d2-8765-6db4bff91b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5feaa3e6-6f2a-4105-9bca-ff5368227faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d28ea5-63aa-4c00-b678-0e4cafdbda2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1986a31-bdb1-4393-a141-7c5daa479834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd8bf2e-c6fb-4675-a407-968526b156cd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef754822-f4ef-4bcd-aa53-b6932f607f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd915b7-bb68-47ab-b5db-104896daaeb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4e27bc-9119-43c0-a606-e51f2a783d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4af78895-d276-43df-a666-aaf5c4f00236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a738f6-3a14-4097-856f-6bf0ca4cc704",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb353cd-e1fd-4320-a232-62d79b9bca18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "109556d6-2aa6-4d69-bcc5-2e84eb12a5aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d177c295-e292-4c8f-a61c-a004254132b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b52182b-0419-42e9-9243-9a2f7f1c7b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6376499-1de5-4d57-907b-b5cd7b1526e4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d175ab1d-1dcd-4e3f-b1e3-831d4c1f37e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f7b6d1b-43b0-4626-9e85-b1be0d4d0be3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7effd6a5-4944-498e-a736-7e5dfb4592bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebae23f3-8538-4d47-a901-f05e17da410e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24c6278-3eea-4953-ab0c-1651866dfa5f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c818a740-bd03-476c-a05c-08aabd026d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cffce0ff-52d8-4cc3-91c0-276cb98496c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe05784-893b-4635-8ca5-63bb08d80f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cf19679-de8c-4ec5-ab81-87308cc909bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58badfd1-12d1-4296-ba9f-3e4a4173d89d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fe158b-4838-450f-b768-f1998d6f03e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "592166bc-14a2-4e23-8ec2-758a477d6ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19adae12-b0bb-45f3-b48a-c6fbcc530e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "111483ab-713f-4555-92f9-d66584b0fe43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f06bac2-9cd6-45df-8101-330b9dfc7a4a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d395a79-fa46-401e-9abc-b8eb34c36aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0adc78c9-800b-4929-8906-aeab864c5c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ff3e60-8cd7-419d-8d27-306da0ab15c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3329acea-1967-4550-8d7c-97d6a666d54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da0de5e-4713-4d54-ba42-6060c9fcd5d9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90f5760-10d7-47da-9490-58964c82373a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd67f33f-31f3-4cd6-a667-42c7360db6ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad73343f-53f0-404d-ad22-4f4bcabf4f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "103d028d-fb5f-45f1-aa17-d30cfdb667c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610430f6-f45b-4645-9f3e-64d93e87d526",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "701801d9-3f56-4d3f-8d39-e4ce10d2084f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3914cdb-fbe2-40cd-9850-0b4f2be15f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdee7182-33bf-4bc3-85a8-0a31e765f925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d71bd99a-0802-44cf-8a2b-04e7baf609e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031f5b20-37c4-49dc-b997-c374ec794ad1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8541cf-adf9-41b4-a1c1-9e2653c0c05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e900316-86e3-42de-b536-1c0690dfb3de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10064d2-a648-44a1-890b-7ba553e8dc67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f0ea3e7-577b-4aff-a4a8-b19a83aec338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28294cf-fa69-462e-9ed1-52b448a95544",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70127df7-54cb-441c-b063-f27c80afb732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ffe626-2d1d-485e-b9db-b65356a2b7f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8599db-1fa2-4935-9383-6594e3c984b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a433d2ba-8457-4fa3-b75a-8f6cd0c9eb26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8be9085-65d9-4ccc-a991-a7ad32ab656e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b1a733-b14f-43b7-ad0b-c89f1cf1750e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1033441-7951-4757-82ae-bb195688526a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1a9220-5f4d-491e-835d-f83d0172e2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d2871c07-10c3-46b1-bd8f-66d7f8be6876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ce60ee-d14c-477d-b91f-feb0024f9d20",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b52da6-ad48-4e2a-a6c2-bbab05d1cb54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6525dbaf-15cd-4bf2-aaf5-5e53ebb374ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc768731-a606-4a13-98d2-e58855a2e19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5468a901-ae87-48c7-9a3d-cf7ca7ef0643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8907ef7d-745b-4d7d-bd22-bd987fb1568d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7f7ae9-0723-48be-936e-f082c7bcade8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d212d603-8a14-4e89-b888-9ea350c08aa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725f0fc6-0a80-4de3-b66a-65732b8d9cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "59a3411f-295c-4781-95ae-f99e817cbe11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad180925-15a2-47bd-a277-27621c552524",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d222c75f-baca-4246-8955-31b7dc14edcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f317268b-1196-4a91-996f-01e665763063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2b55fa-02d7-4f64-a6c2-b36d03ddd4ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0d26d96-bb14-4e89-8927-03693b4ae3f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ee3283-1d64-45cc-ad76-c414afd06a84",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25bb4ee4-ccb7-4623-805e-812bbfc43cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c893d5d7-03f7-4ad2-b328-c6ad727050c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ccfcfe-2279-4456-af7b-0e2d95edf97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "99ef3933-035e-4776-9e9d-6ad0909318f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d93b243-d12f-4bd8-bafd-dcebaeea45a3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6adc13fc-fc0f-483b-bb5a-153dac5371cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4079b14e-fff2-4e39-857c-1ffbfcbe628c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67512f8e-6333-46b7-ba8b-01477d48d861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ecc3d9f-23c2-4ff8-859b-faa30d9dcc8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86cc0378-9bea-4e2d-a403-0bd248801f6c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf63364-c386-4803-8e4b-51160b17f686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "302a2a23-579a-44a6-88ad-3d2deb0ed16c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd08d30-7e30-4008-8ee7-7c31834291de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "77e69661-0ee0-4eb4-957a-cd5c56cdd3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dded2486-769a-418d-913f-d6cf659ff68e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbe3f1a-29b7-47e6-bcda-ff2a7d8303c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "447d1204-f0f5-42e6-ae57-934244e55d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982d4fd4-2f7e-4679-962d-284b961a3d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56e837bc-62de-4412-9300-44a664cc4aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a723f857-d05e-453e-b0fa-1c448d120810",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "625b6c7e-e5c4-420d-9fa2-af2601572afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb08c99-25ea-4ce7-9a1c-2030adfafec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7afbd575-b3c1-43d0-a53d-9f5d6be45b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fb1fd80-4961-4443-bd1a-78094f0d5a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8eba5db-fe58-4258-81d8-2bc622320ff0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7690c421-7619-4096-a7d1-57f99ceae770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc2d8403-f4d9-43ee-b4a2-44939438d647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400fc385-b0a3-4991-8272-f9cd34600b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f57cc91-b93f-46c6-88bb-4c102b4386be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e86a041-4cd7-4991-a92e-43db2b307461",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d15d7d-6900-4a24-b15f-f9c4a6ee18b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0312d373-0391-411b-975b-04eb866b460e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef66734c-2f43-4a9f-8b1a-febbba4d2362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd107cf-5c1d-4201-9b08-5ee936e716f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f50696-a27b-4204-b2b8-75c8852a146c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96595fca-0e14-453b-8740-25f387479014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4741260e-8c9e-42c6-94e0-1bbb9240eeb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0594a6a5-0d50-4d78-a2f9-57cee07281a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3686cbb-808c-4376-bb07-7aa625910dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a23d22-a375-404b-907e-b5eebeac5096",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53896511-d4a4-4f39-8c9f-d225c0faea09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "701a0f7b-d1c7-443e-90b5-55319a27f811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f58a50-10bd-4a16-8505-17d7ec71cdc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1691ce9e-8735-4568-bf71-57cb22e8997c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc1f371-4af4-437d-be37-43861c62cf5a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea81290-56ab-4359-993e-120af5249048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9685f7d4-7429-47e1-95e8-6b8c431dad2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aba9806-4931-40f2-98bd-61cb30550130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e8f326-3b28-4602-8c68-9a172d473e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c4a34b-cc58-49e6-bd76-342c0820ab14",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd567aa-2d17-4334-9eba-91f953bc61a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16cabe80-101d-47ed-a083-29f908677af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15c4d75-019e-42d0-915d-fbd008994f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3509bf4b-930d-44ab-a404-035a925eb667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f43c42-e779-48c9-b7f8-c9374e69c734",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d9a5ce-a95d-4746-bb1a-3d93a8421f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a57a695-bbb8-47bd-8cbd-daabfbddb895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2d06d8-dd26-4490-9c15-b5e73dbba30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78e98880-5f8e-4e67-b60d-405485f0aaa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a134297-c5ff-4de2-969e-274fa0fecd8e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "753ea704-65a3-40ca-8b6b-490330efe457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21521e5c-ddba-44d7-be12-2164230528bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695fd43a-c0ac-424e-b87d-4fc7a76eca36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f08df62-1673-4ba1-b40d-7cca58b09640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e787e4-485c-4854-8f8d-61606e658a0e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf4cfeb-6a84-4c76-833f-8a182547711f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd908ca-6587-4105-ab20-fc0d152052fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c13ae8-bdbd-4dde-8067-e42f440e9732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05b95f4c-db15-4c92-9450-dc6c46e11923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1adc23b-fe98-45c6-b179-f5539339b440",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6d939e-bc06-48e2-897a-f7f22bb9d35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24300bd0-9c2f-44ee-8912-22152db1177c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e450e314-ffa9-465d-bb52-fb2ad5f9b9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d53286dd-1d7e-4be7-b86b-a2719a30229b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7bfb792-83d3-455a-8321-31ceafc257d7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2600b6a9-7568-4a92-aa7f-a92d8e51ea70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb0fb43-3dec-415f-890a-995328cf5d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794c658a-0e7e-422b-8966-da4092b54115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17d90b77-7a51-4fee-883f-6e85e9939836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8ed156-7ed7-4c9f-b6c5-dee583f48702",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4043e0-d26f-4675-9702-8b0cbe81fba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9a0dd21-c40a-4050-8452-081ff51987b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89c40c0-3c5d-4c49-b1a9-4bdac9a04dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6708e24-6ab9-4860-93e8-da39b27343e9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2d5cae95-edcd-483f-a04e-3a010aef796c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f3d0abb8-4722-4e17-9fce-7ec626b7adf3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9744f703-2ed1-4957-9a53-f15bb425a76e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5353995c-f136-4dde-9313-d7ac27187dc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de52d66-8b73-4ce9-8d11-a0d4297e2863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "912493bc-b93a-4e70-94e2-1951967554ab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55e99f7d-c900-423a-83bc-443084f7612d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "086104f9-0ec6-4b43-bb04-41a1fa6edb94"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab85a18a-2137-4a55-9876-d56fa6ae5004",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ef59a18-f654-402e-b6f3-4525727896f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "535e0638-8cd6-4bc9-8ce9-67f9ea2152c8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "68c0cbd2-1f08-4207-87a2-735d88c70a43"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1f53df7-8fdc-441d-a784-02d2f469fa54",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1968edcd-17ff-4229-96cf-3b5d4ab0127a"
            }
          }
        ]
      },
      {
        "id": "75908e65-f001-404c-a2e0-39144f8e5a0e",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "f3560419-2ee2-4631-83ee-b8d88db9ce8c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ee6688d7-4187-4c29-9185-f05db9f84cd6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "159d3599-1d2c-4efe-a4eb-47d2ab3c3e50",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d851c19-e187-43ad-9330-927b3239adf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fef24735-a3f4-4e6a-a43d-81ca0e2999e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e9bfc0-55f6-42aa-920d-c4dcb28c1cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa591cb7-ad46-4589-9e79-5730567dcdbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e31791-7a4e-456e-8df9-14ebfc70a89d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea4125a-1a1a-4349-a867-86944c4dd26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec3921d-349c-4c9f-b6df-109516c0471a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc59b55-48fe-41b1-af39-d40622681a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c9721e2-ed21-4528-a4c9-4fcae466ccb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03555acb-145c-4511-8d44-ad44b2ce6990",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add6492f-e90f-4988-aa09-b4815bf9e934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e820521d-d6a4-412e-8003-2e2480a987f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2e4e27-a9ec-43c9-a42d-4c6394a80dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fc959bf-3183-417b-ae4e-e5b4189f9336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5c7402-dc15-485f-a239-fdc85d78e28c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92e7a4b-51f4-459c-b285-a0a5a310757f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd6be26-83a5-415e-a6da-162bbb9dade1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f254753-3e56-4bad-ba85-fdbbfb8ebb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43467f74-397c-404c-90ed-4cd18ac0820c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1f2e11-9ff6-4e4b-95ea-72384eaf949c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14af6b5b-e220-4cfb-ad17-5d147bf20bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add5dc19-12c2-419f-a556-e328f55c0046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177bcc53-e74f-42de-ab79-717ac351fcb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "163e515a-a8de-4f98-889f-95347f68b3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a3163f-feea-4b69-acbb-14fca117f040",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc124c9-47ab-4f3e-83d2-278cf9718f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d910a364-5fe9-4ca3-b079-9dcb89099664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1542f26b-722a-46d8-8481-e0d54e3a5528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cacc3df-f1d7-4b2f-aada-5be296d5dbae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb5aa9a-f71d-4dc6-9c18-07a9b856c7a5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e5233e-d324-4918-9f68-d5c5f2d6ab05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1eb31e-523f-4ac5-9585-df6b438cdb9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fc76ed-bdf9-488d-aaef-c4db43b23633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8afe81a9-bd02-4e88-87f9-93c501d97f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e29c5a3-3579-4ef2-8dde-593c79d83d30",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c92e55-7fe0-43e0-85da-cbefe44cc863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f1ce3fe-65e3-41e2-953f-e7e2aa86868d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfcf025b-3b80-497a-9d29-a5f5be58994c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a39aaf5-c274-4e10-93f8-3bb5f753faa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d312f2d-768b-467b-9ef9-a7504eef35fd",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8539085d-ab30-4f70-832b-a16659aa4113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba02ab3-fd42-4aa3-babd-6d3282ae227e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbda56b-5dc0-4b66-9968-5527a4ebeb73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "497dfbb3-4492-493c-bd99-9804b64d9ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c15e31-45f7-4b98-b954-844650027fe0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7a0a84-111b-42b7-b225-eb357304d842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163824a7-7855-4819-9e9f-f4b472a8a02a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a18158d-a1bf-450b-9465-4beb3f24092f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d304166-d6e2-406b-bbd5-8b3d1a31dd8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0455959-1f10-4852-8db5-b1dbb0616055",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21785947-49ce-4adc-8561-801be90a17b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ad0205e-30fc-498d-aff7-2621c850cc8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7e8310-c585-4980-b3f8-7c8671701f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f94de1fa-8e46-40dd-a560-d34de2143d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f32a49-ff9a-477e-bdc5-2817b06a8908",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986faa7a-d1c0-47a9-99f4-d72ea754bcaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2d8e316-d901-4fce-b84e-c7535cb1ed21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dabb030d-fc21-4681-8b29-1ded3fd56bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b4e7435-a835-4ee4-8dcf-bd8b4b387586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb509e8-f700-4a67-a0c5-78c8a328d245",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c07f62-cf3c-4d08-8114-bfdc90756b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "256398d5-6f35-4aaf-805d-a04de8df23be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee3522c-1925-4357-8398-2c02a7f7bba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0279e45-7eff-4eae-8d31-e49503c874c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec50a4b-54b5-4cc1-8e52-0d962d1938c2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0b1e4a-609a-4aa9-bc8c-b374212e53d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64275681-c8b1-4a47-b849-2dd860cdd21b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c404fdd1-73a6-4fb3-a09b-a48ceb407524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa114a69-c2c1-4dc0-ad19-9cdf3fbed2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe0fa2df-2a8d-4160-af5c-d37ae581affe",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70bdac3-80ad-421e-a7b7-7b0f7abd62d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27c4e211-89d3-4018-b1f0-23fd8570d7c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e9e2d7-bc95-4365-8a95-7ec43e45dc04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fae2ab37-f8c6-493a-8c5f-b242ab953586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b49dd7-1d8a-41a6-9f6b-f9f1a7369e86",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7c42e0-24cf-4bdb-80e7-ec3baed268cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f825f1b8-b1a4-48c9-b617-0a5a69dcf783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34cda8c6-6af0-49eb-b646-a0a907927564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "731c0e29-412d-486e-9971-2eb02c4a2fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "759c7740-a3c6-40f5-99e6-c7f51ce102ee",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc61b533-fb17-4946-be0f-b431127557dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f10033f2-2be8-449b-bc24-0d6330c59881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd9d966-9d5a-42ca-90be-e55bc9984f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "85e27fd4-a2e9-42c0-bdcf-101aec0ba277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf36d257-a72f-49a7-b81a-2f0c0c517028",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "709ced3d-bc8b-47b2-aea3-36adea7bb155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "989e0704-1e67-485d-96a7-af5227428d56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023ae37d-d396-457e-a729-e842fd0438a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "49a4155f-a248-4661-aa36-db417a5fb7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0be8d02-a06a-49de-8f47-972cdf418f30",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68b16c6-1e66-43c3-85d8-404d7fdbccf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8534d7d9-038a-4731-a8a0-01983ef4713d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4bec9f-01c5-4e76-9c47-90cc6c10faad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0d55135-49b4-4339-a46b-48550cf401f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d6eaf4-815d-4541-874a-795f3d4aba13",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2348379-8a3a-4540-ae9d-d7427ee202bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d1a91a-92cc-41a2-bbe4-78f10cfb14ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069d4fc8-d815-4a59-bf57-cc272c8af71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42a147ed-0f4d-4573-b464-17704d5a1e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28f194b-da68-4105-b159-9b4788f0c017",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9d12fb-4c36-452b-839f-92919f39f78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "550ccfd5-afe2-49d1-b78d-05874c82d537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d89b2a5-93a1-41dc-aa5f-3d5d439744a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65fa0ac8-eb8f-4b89-987e-b5826aca2d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ad5613-2a83-43cf-a53f-d8d2b8e8b51a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e00c82a-2275-494e-b5a0-2b9accddd355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09f86919-6752-4ced-9673-8835c3f73f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d55f1d8-303c-4003-8d57-6b1b7aad2e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "184568f4-5b33-4c6a-8ddb-cf3cf3085e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6074bf00-1adb-43b3-aad1-82b5b2e9e623",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5afc525-9523-4889-b63d-2d7d99b538f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb5cad00-9d15-43fe-a585-d4bbdc6b2c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84823c8-ae09-4c8f-9024-41473c59a7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf3826c8-27c6-450a-9a30-a7b89f3dc362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f8e9b17-d8af-4379-aef9-866d7fc5cf26",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "140deafc-771b-481d-8f4b-92fa8f483607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98c1d63a-ef1b-4462-a027-34e3d3aa1cbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e9e7ee-1df4-4fa2-b356-2382b0fd6bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4322220-e5a1-49c9-8383-a7a1777b2945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd916f23-870b-4b0f-9dc6-c051b4b94fdf",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c2ae66-bece-4a3b-a2e2-ee45276fe26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b29e15-af9e-4a69-a618-ea790cd77b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3bd7c3-0650-410c-aaed-e2d91721d07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c81191f-aa47-42a7-8817-4bdafce6b4f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa09df4-b6f5-4dfc-8e72-2560287129cd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff4fbba-c432-44dd-bd8e-910a662e662a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3b2cc48-fd20-4314-b315-ef3cc9a5e272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4cb4bf5-686b-4f8a-ac7d-745f8eb56e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac7b1640-0731-46b8-8413-06523e822249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024494db-beac-48e8-8c15-e35f9420dc0f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "789caca3-2be5-4e93-93a4-905c18919a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f153ae7e-f832-45f8-b3b0-16cb0f330273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70361c7a-5e3b-4d31-b513-523af8626283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c37f8119-4869-4765-bfc1-eaf466359698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5603c2b0-ec50-4383-868e-30d85b5e71a0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05afa04a-869f-4709-a0f0-ded78891bb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ac4cd0-7052-4316-90d2-908152ef5461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a892c9b-09bf-4034-a649-bb29ee7151b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6145a52-cec2-455f-8e2a-a8cfefc541cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc6b93d-2a6c-410a-b26e-668259e21781",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b58472-0183-41e9-96dd-a0f93cb46920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "361ffc39-945a-4ae3-9dc3-d2becda5fe1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe8a616-857d-4b41-9a09-6d13697f3a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fe7501b-2ba4-4353-a54d-dee1093eefda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9147ce6f-efe6-452b-b66a-acb549abdb0b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6249aa56-bc39-4f01-a7cc-2c2a0629ab9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a318bb-3fc7-4280-b2b1-67a1683d056a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299b6f61-22db-4476-ad11-8b27839a58ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d43a3a72-83e5-47e2-a410-88f9dca84cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76188e4-a9ec-4e82-b4af-89d4ec903e07",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05288e9-1b95-4156-8f9a-23c28e67b21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7430fdd8-b8f8-484c-b65d-724d5e714d97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909f3b4a-1c46-41ec-97a3-9517c79b1612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f4c9420-0089-4d84-915d-0b54934466fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eebc03e3-7b5a-48ac-b765-ec5ee106f8fa",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d46075-fd00-40e6-b637-7741adec5917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "478755b2-36e4-448e-a261-7e5ed49dece6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb3f800-c3b5-49ab-8dcd-3d06b8453145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c7b0d7e-9a46-4a7b-80c7-2c4577b8e8b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235f0d20-6400-49d2-80ee-724b5a90e2d9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "620bac95-1ca9-4796-8ea5-87521566f13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6564366-8c96-4407-8b30-e58c98032572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6cdc4d4-8022-4b0f-92f0-52e083f567e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b166fb96-958a-4190-a8e0-3356e68cd04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0777f35f-f3f8-40ff-9dfb-1fab0c69e0e7",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b024f8a-c6dc-4626-8aec-d8a78774a9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac005918-9805-4b23-a586-64a570be9149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65817566-cd24-42c9-8a6c-7f7c0a47b050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dde905fa-f6a0-448a-b9e9-e4e7c90d4bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe60ba15-1036-446a-9ed5-85635f996b61",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce08d7d-5545-40e3-81fc-3fe590ab03bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0725ad8-d835-427b-979d-5c9316210fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11aa2e4a-c74a-4909-9827-9d73e8d2e5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41da6bff-35d6-45a9-a0e2-6030def61e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e618e33-4cf2-413e-801a-a6daca3b1ebe",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5c3d9e-9440-4874-8fb9-8db830e723df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "121ee573-5eb2-4e67-a783-436516dd265d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4dd2434-90e5-4a93-a5d9-7db47eed5d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d3848fd-6901-4ae7-b8dc-818a89487815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa8cd10-96de-4501-aff2-553d731e1f0d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b93a7ac-95c6-48b5-9b62-b24e0196f692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453aea2d-f7f6-4dfd-8eb6-605179e6c49d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f80abb-ca02-493e-aca2-fa43639f9a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "855e0651-cfa6-4a44-8c27-70fe9453c7e5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "79f8439e-8366-44af-b049-1d2e26ff3cac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a1106526-0661-47bb-8db5-280e10485683",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45f59c1-712f-4ca8-957b-3155c9e3d530",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "738afc1e-4b3b-41a2-b444-7088e306d5ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db0b264-d85e-4bf2-a77f-4455bba2e8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70c164d3-152c-41ed-86b1-a6cbbc31622d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1cfbcbcf-acf5-4d2a-8e0a-30c7ff4e07cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "622c9bcc-75a6-453d-bb50-0bd4ffa19883"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5582bd03-afde-432b-be26-3d00809f34f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e830204-7189-48d0-a9fb-491cc982bb8d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c38d7797-f928-4fb0-84fe-3d732ba7d7e3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "624803df-0ba9-4449-8c03-e9a8b2fc41cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "400c30af-8fb7-451d-8921-c4b28eb438cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "07245173-e335-4cdf-9ca0-7e74ec2a020d"
            }
          }
        ]
      },
      {
        "id": "8c042a49-42d5-461f-b92e-168b17060739",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6d1f9805-6bd4-4514-9acd-0d93e66c2e39",
            "name": "Negative Testing",
            "item": [
              {
                "id": "11e7b679-6408-44d2-bfab-7fe2180a1f9c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1ea4cf87-51aa-47f0-a1c1-03193502ea2d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced4ef79-090d-482d-adb2-81ae9e6dddbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0655281b-1d47-4eb6-8cde-34fa9457e562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb647026-cf7d-4917-a8cc-8249e7b996e0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8b3ffe-b638-47a7-b804-6d50dd327a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05aa25d9-f0a5-49a2-baf9-85388c2de63c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7818861-2bee-4b20-a036-777bc0f6f55c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "869d040b-83fd-42aa-8c52-e9785c2312e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "975d652f-4ca6-4e09-a34e-34c23eacb9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb64128-c659-47b5-b531-20d1c3286aa4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2e295c-b651-42ac-89cc-19d99edf16ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b409cba1-19e7-4e8b-9911-8ea18e8805a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9254072e-b9c9-4a64-9854-3603a38f86b4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39428624-5b2f-400b-b370-5c854bf1b4c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17766587-ab77-45b3-bb85-9e44c3587ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a741f8-4f4f-4b07-b813-3b1480cfda61",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795caa99-36db-48ab-aad5-c80720364783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95f4a782-eeff-4f3b-ae3c-252f7a846f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef471f10-af46-43ac-a05c-a0518e2841b9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8638284-264a-48c8-b61f-c5e222b39b83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b165d24b-993e-48b4-91ac-0a3606aa3ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0ee4b8-848b-44ed-b294-52c5db8e83a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c133c64-49e2-4a85-9b2f-c0d872ac3603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec58f41-9d0a-47dd-97f4-6fdc27e37b12",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748c80a8-bbc2-4747-8726-4107c295f1df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e589b4c5-c4d2-44f3-a94e-b270d1d86e30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5065e639-e03a-4c81-8082-a0a64d62ff2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d01019-cce5-415c-a673-c99dc689245a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814a0c14-3387-41eb-9c84-59218fb2f9c3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0305ba2a-b2ee-46fb-92bd-48bf7b0bce30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12f828bb-90e1-49b1-956d-47165954dd71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b7a689-2f93-4c21-a6c9-051324547fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "330e3147-de68-4d01-95f5-297425e1e636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685c0963-2f76-4f09-91f5-f8a6f7d3364d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c58f65f-8aa1-41d7-a0ac-7e4caddddda3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f299a4c6-a8fd-4199-82c0-5565912d03e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb71ea02-6512-4667-8e08-685674e39aed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12006239-d161-4d9c-96d8-f890ad94d9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf60ea1-6902-41f1-af0e-f67d6ab404ec",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aed0cb0-329c-4912-b2b5-6972ef3e9e43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8664722-052c-478d-ad7b-a327a463d684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22933f2-0971-40ff-ba38-438b6cf774c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83746838-def1-4730-8e37-bd24ed957236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87fd03f-cc2f-4e5d-b2db-0a12435414f4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea79dda2-4036-42aa-b0f2-fde507cc49a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d07d30d-2e73-4062-bbd1-841f7d788a4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80eee13-233f-40a4-bf36-c8752b5a7e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a686377-8b29-4690-8f54-d56e5f76527d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cea0d38-df8e-48f1-8514-5eab871cd16a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8fe82d-1b5e-4eaa-83a5-3067c3fc178f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "161fbd32-18e5-4c9a-881f-79fb99e5abb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f603d0a5-96cf-46f4-9ca8-7f9b3297ce30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2e7dd27-b0bf-4a9f-9aff-359372289067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb4ef62-995a-4eaa-a4ad-903d07caec5c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02b2110-a921-4588-9e04-5f8d71ceac26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65db6640-1af6-4dbd-a01b-d3f83952eafb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4df111a-db3f-4f01-b1a2-123494c7f5b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ebbc76d-8f9b-4873-9f8a-9cde1f0f5542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a48939-e502-47b8-881d-5be162adfb72",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14550090-7e3e-4dcd-9714-6df68354fc3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44080891-86ef-4e0c-9e78-0a89b2b97a63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d77ed96-9db1-493b-bcd0-213ec47c7fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e7bfa47-6561-40f4-aacf-6efa4618a64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff0328f-878b-4732-8768-2e32ecc2e5c0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67db2174-bdeb-4a65-b398-9aaa45054f63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6c02540-81e3-4fea-b38c-c4395304ee9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a50942-dfd9-421a-becb-18eacf745ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "614e73ce-bd63-4a57-bcb4-925f0d9ce45d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bba0e91-c9f0-4996-a463-387934dbf4bd",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f82953-e468-43e8-b00b-91b2bee84dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b48e4d0-c89a-493a-8965-e71ee127e19a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec56b11-9782-436a-826c-225ca688a8cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc49751-6967-4303-a84e-470729ae0794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a11d85-b8b5-4621-a118-f56ec2b7f258",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e7a983-5459-4db8-ba65-8d41eb57141c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e599b03-e51c-4bdf-8507-a11913332cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f1e864-cab6-4305-922e-a7d3c2b1bfdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b8fd70b-970a-478b-922a-0dc4335b6415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1213b7-b7ee-4c74-b57e-e5aaa3fcf74b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c9750a-93d6-4da7-9fa8-d09b63b79b5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbc417d0-30f7-479d-84ff-db35844ad811"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f0e5d4-79b1-4834-bb8e-f8d86e9294b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05233514-f86c-4faa-b69c-56f7a91baef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84fa7df4-e569-419c-979c-a52465166e21",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f09013f-698f-477c-9ea7-14c66637c605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c64fcd-36af-4b98-98c7-bb5c4ffb9a52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2d3caf-5fb0-4cc9-8cef-c0c03afb34d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "866cf573-e584-400e-92a2-59deaf7ff261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ec0885-2f36-4a4a-9e1e-a6d4c7ad29f5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc6d395-90e3-48fa-b57d-f18efc8c02ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79f39d45-ba71-4bc7-9eb7-1f8333b8d86e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9fdf23-81ec-4f48-a338-0c95b7583842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f0a5abf-c395-4ea1-ac74-92b9280da7e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9053149e-ef65-4253-8259-12cbb400aadd",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f45120-b4ab-43be-b839-3f9b319b3673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c6b3a2-f014-4668-8e44-de7a8bc10c43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e73c94d-1076-4c8d-9e49-a65c57b38fd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "962db966-22d2-4367-942b-6e11d095b792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f77dcd-324e-446a-ba58-41bd5bc23e85",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73465c88-995a-4364-8971-9309e21afff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d82690f-dfeb-40ef-9832-efd924a870a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d27f37-8589-49e5-8e6c-0a7f198f35aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41a5fc81-95e0-4fef-9c93-0f4d38733a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8328f8a1-5dc4-4bcc-a984-eebf04e4712c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44cb86f0-c3e3-4874-8aa7-320ed53b1546",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7507b4f-5ac3-4b5d-bec3-74d69c8c698c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74dbf030-748b-4994-b35b-8abe9a45166c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1d97059-c6ad-41bf-b9cc-a5469a6402a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f177c4a-8452-4f28-bad4-3bdb06692219",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e55844b-7f89-4235-b52d-c7afaad5079f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2d2190d-fa34-4782-9d44-187c6a1db791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7978162d-f2fe-4237-a562-b8c405d01e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f4d269-bf16-4e21-916f-2945f041c10a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f05c841-dda6-47cf-9913-14c79ba2fadd",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6198548f-3ec8-4e09-a41d-c4247f8ca660",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cc6f6f4-e435-408c-ace9-a2c8a2edd441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84bbcd3-a4ea-449a-b0a5-2023525763c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "847c2ddb-3e2e-4359-a8a0-13f0bdd05b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260a7501-0023-47ab-8af5-00be07ac3eba",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394426d3-503c-4ace-ac1a-59fb41a434ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e272f746-34a5-4045-a9fe-babb4d64aa14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d14f68-de2a-4de1-85a9-03bcce162f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af77a6fb-169e-4fe0-a729-84adcec48c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb936ae5-3405-4328-9d6e-ae7bd8143aca",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54274c17-5bc6-4e62-93f4-cfcc255fd806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d9f706-eedf-434d-affd-a56bc388e2c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a41cf3-fd6a-403d-8e70-36c4181be2fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac0ac47a-f8c4-4aa1-a9ff-593f1f4a603d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89f8358-302e-48c5-a285-148aee3bb846",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af86cdf-bbe9-4ff7-b536-b1c18430c1f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab8c50cb-7d27-49f4-9f0d-9f441df23e27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f853f3-cba4-4ab5-998d-158269d8db76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08cfcc99-2193-4698-ac6d-2b2134e1bec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8c5bc6-a9d5-4cbb-80a0-06a9794f1e4f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e75814-4966-4796-89d9-2e6dec98e620",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "994a1146-c743-4ed9-a248-7c47c72a06bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd626a4-455d-4ae4-a7d7-55e54fe50790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76e12d66-7a2b-4031-acdf-700c375d8ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223f02d5-f239-4788-8eb4-534e1133f03e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae673b72-45c4-488d-8b1f-e6eaa8fdae34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc50eccf-6337-494a-8c12-ea20d772a047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1371d70f-e184-406f-b249-8045adcfa1be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b09e721-4c64-43d0-a263-73c1d354017a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1c6f40-3f68-4540-b120-5469e3939df5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b437e4-02c2-47a3-93db-5cca266188bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "535a2fbf-d27c-49ab-a93a-d201b86bd8ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19950d7c-020b-491e-b93f-37c400a5e559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c3f775-4c29-489f-b914-1d29b8824665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abdcd581-ca4b-43c7-8483-dbc3933d6796",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfdac0fb-0faf-4c06-9674-27d03600228b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74895cfd-9681-42de-abbb-279c146ee40c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2637da-7ca9-4b91-9d43-d14ccb7b2e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a6c31c7-d926-4a4d-a992-89197015467c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dade5d5-a2c1-4eb3-b3a4-5b5708c32341",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ea5e8c-614e-4d13-986d-3ae21cf305b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0dcfa2f-615e-48de-828b-5ca216db15ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85213acf-9c57-41ea-8b15-fd4c1b128255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b54f9f-45a4-4ac6-9f47-9118a38a7648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9c6aa9-a5cb-4c5e-90c4-ad9dc82c1bad",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287d1cbb-28e1-4011-9020-b13cdd909071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0b5c79-1b5f-447b-9fe0-577344f77248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e295e2db-9b2f-47b8-9b13-ac423690df3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afb53d67-5d8b-47d7-bd69-4b07762ae197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b75bf9f-dd10-4c40-87d4-92ce2dd8810d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4573eff-f8d0-4df9-9698-a89ca2f42633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a8f6317-85a3-48cd-8d3d-67db46a771ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c2b94b-0409-416d-8b8d-5c5acfa027bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d312a6b6-6a73-4505-a9f3-38ea2ac6e794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62cb15e2-c6c2-47b9-aac8-c7bf3b03334a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f90944-8e21-491e-a4bd-08f7bd03f33b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0a98f85-ef96-4313-9cf3-16c680acd03d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e791c5df-812f-44e1-b0fb-bf873b2afa68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f5c72e2-9c79-43bf-898f-abd06426e8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94e73ae-a05c-438c-8738-da04e41785b1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b6ec1e-1d43-41f1-b939-bb2f4a238ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77800806-1ab1-4924-9b57-ca0be660e6d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6520f5-631d-4227-beb9-9cb50a6ec924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a472321b-6a67-4ed3-b1c8-b339d2f270d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c73c4006-ca36-4f33-9fe4-2752366e29f7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de02315f-c617-48b2-8b49-e9d8a5533bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfdbc3e8-ada7-4599-a80e-87b7e13c531c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "123c85b8-86f3-4f8b-bd4a-5d9e0280ddbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb04d5e-f165-4af8-9258-c559ba70a4d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560d911f-09bb-420f-a008-a3d3119656a9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482d2aef-9d22-4e66-834d-5d337c038a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39a5e55d-332f-4bde-9621-5b0e9fa08e72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3580cb07-5c62-4d35-a21b-e25fc98b83b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fd1597e-8c06-4151-b831-c93dad35cede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fae2d33-95a1-40b2-a39a-5f2a80d3bbe1",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4708b7f-b5f3-43b5-af13-7fedc42b0a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5719c73b-a9c3-4f54-a798-94e7ebc004dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b88c8b5-c9a1-4424-b7b8-1de6ad5e2957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ac253b-1a36-491a-a586-9d254f8d81e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570a70fa-7c95-4178-a40b-f362422ee6b4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11699f23-f499-4031-8663-32ee17bf5445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d835848a-d939-44bf-ae41-de7b6c0de88e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e34742-d417-498b-ada0-094c1f87151e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1bdcceb-3ff5-4409-b51d-9449f2a40ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f757586-c2d4-468a-8b58-d83049556728",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79b14c9-202a-4ef9-8f54-3628c7067137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2c293b3-74ea-4033-8e22-82393cd34018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f9cd4c-f403-4a2f-9adf-5c3dff398094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed04a013-b08d-491b-9770-5826a376955e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00296a4-6c15-47a1-a4db-c9f7315dfdfc",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a9c5d1-57f5-4697-a0d9-bb1952fdde5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6de5f16-3a65-4ac6-bb11-9d849ecda5da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85bbbc4-a927-49c5-be8b-287d9371fe50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f882e610-77a3-4381-99a7-785afee9730b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b0744b-c496-43f9-99e4-7efcbceb4785",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4cad5f-f84e-4a8f-9385-9b9fc2b66350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4f2d6e8-53d6-453b-ab38-f5a7be76f371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1fcd27a-0314-48de-9637-df08a0c92361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fac1b158-e8ea-495d-aaee-411dc09edbae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72edd94-ab6d-4997-9a98-f70fa5616a07",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde10bdf-de68-4f06-9e36-88b3af6bc1c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77cf8e1f-42c0-4d90-8416-83d5f85003c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35960a2-c5b9-41a7-9c0b-b8b9cd9b257a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e11e1ce-05a7-4454-9169-5ab3bb25b23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f6c226-1e19-4d6c-a51e-34876a9d1ca6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c467821-0372-4c8a-b8f5-225c78f1da3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08cef564-b03f-4f62-a20e-f92283ac575f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d23e6d5-19d9-408e-a97a-45c6a73b5be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f48be61-07e4-49ec-83bc-fe00b2840a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25e2aa5-c0bd-4055-b947-5406354c53fa",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c59dea7e-cbb3-404a-ba3d-51a6d176ccad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "807b9050-ea25-49cb-a7f6-d33f87a970ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d3e121-bc4d-436a-a1ce-0601123126ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "037b4894-1379-4d34-9316-5fbccb1aa34a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f3c1e2-70be-4285-b737-97607633b2a9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96585123-907c-4430-9b59-d6aaf46cf6cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ed9002-d34e-4cea-aaea-eaa5396b4b2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "461f217a-895d-4f7a-8251-209d565b6741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d322350-6822-44cd-99bf-9681d066189e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fcd4d7-b590-4e23-9a2c-9dec5f549668",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b75e49-6fb1-42df-b4de-aef860691bfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e96890f8-bd23-46f9-a1d1-df0ca8992c58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27599680-8d7c-4234-a3d5-412e3703062b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be8532b-6823-4549-a566-79c85de78b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea4cdff-519b-46f6-b39b-f73822c565bc",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07344e68-2339-42ea-ac40-ba962915537a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6452b803-6417-46b4-b5da-6bd8a777384d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82206375-8d20-40e7-93c2-08344b105996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ead8f40-ac5e-4b2c-9927-119f9457d421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4618593-0c34-450e-96c0-102927a40bbe",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef19699a-3851-460a-b865-2e78850e4b52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c9f0a89-8e22-4bb1-83a4-88c56ea74f5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49391917-0e78-49e3-bc34-25180b8dca3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0a4a87f-0b06-4669-ad63-f08e467e1431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4901bf3a-a88a-4271-b8ff-493b1311c443",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7329c7d-e956-4d85-ad42-af53bcc8274b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b4bd8d-7516-4e06-8b9c-91bd7949589e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2104f5-b776-40ab-8ad4-d0698e0a96de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "078bf0dd-a8fc-4faf-909f-914567912fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eac1c55-0922-4abb-9cdd-4b0d8da26965",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8bd3dc-cf4e-4e3b-bad0-4ac1d29087ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3341a92-6f5a-45d2-bae5-601a4a96c4aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "959aa4dc-fbbb-45ac-b7de-3723df8c38fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f325ebc3-d678-4a8f-a447-9586c2be7eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab9f567-20fe-4dd4-9a3f-48a5a4ab0120",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf22f88-2544-434b-88a0-fb5aa8d67bff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c62106-3890-4338-894b-30e2bbd629a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f006bf2-f699-4f2a-8cd0-d6e2f5949b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e36900a8-02bd-4caa-b575-7d13fb0fada3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276e4019-1523-4ccc-9bce-683d08fd80ad",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd1d989-82ae-4d96-a0a5-50b491ca74ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8671910-bb46-4881-8ad0-0b0fb47d251c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "014362e8-7cee-4b1f-88d3-c64b63ef7a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c54c5a-da37-4992-9291-640af4453c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a555ba90-c9b0-41a5-8308-616b9953ba15",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d88bd2d3-2132-4e46-bb4d-1f2e86729515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b512bfd-2470-4445-8b10-fa370e5519cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4905f1a0-fa57-4190-b331-62198316bcaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44130519-756a-4a0b-b478-80ee82982b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36cbada4-c19d-4300-8aa7-ae3dcb4d8135",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f160c54-5424-4e3b-a85d-c252ace48b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96018248-96ef-4ac4-979f-25f559d42c85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13011a7a-d08d-4e99-8ca5-e56966b88b7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "947a6a6b-eb58-499f-b240-8f10dd11b95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbe1dd7-563a-4ade-b758-1cd6f334a6ce",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f20ead-6a4e-43ce-9847-3698a4b6e4c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2578b41f-310a-45c4-89d3-3c1dc4307ede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a660712-cf33-49ff-a50a-8824d4ab692f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60fdb6af-b5e7-4b87-8323-7b0569326760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee3ed42-dc19-4317-8d8d-047df5cef6f5",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d879c810-599b-4643-9d48-71187d9c14a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ace8bd-6081-4133-8a9a-0fdc617a2849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec2c364-a409-4bf7-b038-0f4fa130cc2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43188eb7-34fd-40a5-942e-285627aac069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b809c781-6d94-4285-bc75-247046bb0180",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c56eda-5957-4603-bfbc-91dc31c9a97b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6761c764-995e-466b-827a-29a5afe5389c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2643214b-d2f0-42fb-8e71-c8a70dd839ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58f01a27-c5bf-4f9b-ae35-f6ffed485427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f9d038-de68-4208-a167-4caf8b384228",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0eb73e-f44f-4c73-9b16-13debb58027b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f5abcbb-81c5-4a7e-a087-f0823717110a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53bf42e5-be2a-475b-a4d3-186c0ece7a84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06c5bd96-2b1d-45f5-af75-f8d60bf109a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888a02d5-5592-4fe3-a008-c39599a6c4c8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c118f6a3-0788-46ee-bf18-d0e1a9438ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bf842c6-7708-40e6-8fe9-7fa15d1281a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8fd8ac-65de-45d5-946e-2e4666167b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29994728-6e74-4ad8-8b14-43e376272f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05599202-8e63-4e22-9cd5-cd3d9a8a09a5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a263bb-5e47-4724-a8e6-d5355357ff00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a4b2b24-dfb4-4443-afdd-50fefb48744d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "560c9133-6cea-4aa5-9bb6-a6b964ec0208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edf82456-3993-44fa-8083-a43607a7dafb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3588d8a6-f85d-482c-864e-2dc0ed301208",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624a3851-9ead-4ed1-b01e-e7364a87a235",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11abed2a-b392-46cf-aa48-b8982e7b3de7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6228309-96af-4227-ad07-a9bba25eb60b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e970f57-30eb-4e83-b292-731afc65aa41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea6ba8f-de30-48ff-83d0-22b05404cd8c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77539c8-8a15-45dd-866a-789a54e042d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fdd1c31-7d6b-422b-9590-6ee80ef2631d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78045339-488e-481b-8771-d0c065fb8077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31f4eaf5-b247-4fb8-8890-a54190bfcf05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e6fc0f-c3c4-4527-bb1d-cbebb7f59cb3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77344d2a-0423-460f-9ef0-183e0a091041",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b09c2f15-7715-46e5-8ab9-9c9d792191b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2cb8f5c-c4a1-47b6-908e-fac753e5a943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b92a365b-9d04-4ee3-a4e6-46a1cd696529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb5252f-0033-43ba-8cbf-dd64b3a27926",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d593f68-e82d-4652-87af-ed7bb1c03e80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d25d508-f186-41d6-9ed0-d7d786c21362"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70755ee4-a082-4a60-b70a-12ead6d58581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f8d3eda-9689-4474-b35e-3b6fdad1d41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3291dd6-edcf-4e3f-81bb-e94c3fbb0a72",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b889ece-ec24-4b2d-bc11-a125def53bdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "596a740b-2eae-4153-b9ca-58be1f6629fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "624f0c08-f76f-4305-af9b-f67012b3bbb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d31d25-dddd-496b-8b4b-cf9455f40ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d0d023-9567-48dc-9dee-a85d0d42c3ea",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c06f81-c9a6-43e6-8de9-9cfaca60ced8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d29d4477-f41e-4a37-ae08-1d3ec4b4c554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "724dd86e-1993-4ff5-a298-ca16e2ab520c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b2e77d-554d-45e8-a592-4642b0f3dc06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708eb6e1-ab38-496f-afe7-bced7acecac0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6f9920-422f-4a9c-848b-dd2bbd1c4086",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49856a3f-fe7e-4bce-bdc8-f6a20cce7a1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c29d55d-c847-458f-ac86-d1dc168f1dd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0525bb75-adf2-4628-a344-a106c6a3b0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b91ee0-b580-4ce4-aa99-87f614ce14f2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36486525-5029-4773-8513-40c388a3a7d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4335749-54cd-4f4b-ba8a-8d06e29e9952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9c4448-f8c8-46c0-9dcc-fdc716fffd49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c7be611-a0c1-4e61-a5b9-5bc2ad5e242c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11043e1e-eac0-428f-8685-dae0f8ee512a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d39fc37-0745-402d-b83e-dbfeb1dd8877",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0371894-4dcf-49c6-9532-6aa8986e97c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da9bb40-5d02-4f9c-8f1b-5ae5faca860d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43a4a98d-4eff-4e9f-9717-a5f6a8b5cb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a03916d1-77da-4cb8-a662-8c3c552ffc26",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc7f6f9-03ae-4a18-8495-96cf573cc58b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c724628-bb7e-4443-8a7d-f0b22f7ba3c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f544cf45-3316-4c85-ae16-e751d4b158db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92e7f2f4-3d18-4619-b938-05207387ba42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9acebe0c-7609-4f4c-b80c-90c8d2591f47",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2ecc05-d7ce-4fae-b8e1-d2f7c46b64be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a69db746-06d8-4784-9d79-eb4d95fc8dd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c6b100-e03c-4736-b0dc-c4d2c764ce64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96a5ea1f-aa9b-4b00-9bbb-117738b40292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44296450-7b46-4738-a392-8e578db652e3",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d9511f6-6a71-418c-b52b-c36c8ea5f4c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef6dd416-6efc-45b0-bc35-e479c2564765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c2ffd1-4b41-48af-a638-c2e0b0de4f4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f0c7ab3-78e7-4bc8-87eb-e41bee6c7907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c343ac5-6c7c-47a7-bc6a-da05dcc4a36c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1ac04b-0adf-4548-a673-0c90ce04a328",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d9bfe4b-e293-4de1-a0f9-2a0e9cc4acc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77da66a-a43c-4679-b21b-6c7059923f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2a02d12-3264-4362-81d1-e940a21cddaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710d8817-238c-4ee7-8db2-ec0a50d0cffd",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6fac1a-214e-43db-b994-95d86581699f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb26e0d7-a2be-4d41-91ae-0e648c96ee09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c5a6e3-a02c-4633-8f1d-cf945c4642f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4364423f-31e4-4b78-aadd-b9973e7b65af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d44dbb-8841-4b78-85bb-270099adf4b9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc18958a-1872-4cfc-95c7-a20486e745fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95a87942-ede5-4af6-b819-def5c55b018b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cdbc63d-2405-40bb-9749-7ecfda322c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6064611-7c0a-40e9-8f8c-2d1b85ad7333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b319bfc-c5cb-4b9f-b0f9-aa1f3e287909",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fae4ba7-49cd-44ee-93bb-9fa7cd824464",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb253bf4-103e-46f6-bdd1-8ae7fb7a5237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "174c82fd-594b-460c-9d0c-90eabef4d47a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47815db4-97b6-4f47-85ce-de999a3e8b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddefdc24-b1f8-4efe-9324-c38c04d91ff6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81b680c-1a81-4521-bc9f-f2f43acad2f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51632f77-749d-461a-8c33-730f89c6b8cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89be9e6-a666-41a0-86aa-68f1325af40d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8f71efd-f383-44d1-9b75-7fd999f238cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e9058a-891b-4fa0-99d5-dcf82a199b36",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34226a8f-aee0-4b0a-8457-a2472c5cb7af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35433a37-c070-438b-a9c3-7466a1c75012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6454da5-49e2-424e-b5da-e2c345be1644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92c8e310-cd61-422a-a6d4-bb7189c97470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6629643-d260-40ac-9bcc-fff5ad99c32a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a815886-a046-453d-9bca-48935fcd50c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06bea237-26d9-4f1a-8bbe-a179bebb8e74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2d06d5-d4fd-493d-994e-3320de952a4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fee465a-0df6-45c1-9ecb-ea5e852a0113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e50cb79-caed-46dd-baf0-4132a4862787",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e7ac1e-b21d-481a-a778-b09297d64cc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "931b9c46-bf37-468b-88c2-7e5c7e218700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e2777e-2f9e-44d7-8edc-326f5430fc06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcc6b220-bfc0-4cd2-9880-572cb495b9c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f48d98-84d6-484c-a044-4aac06a9c00e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85bcf613-e3a8-4f07-9cdd-797e67fc82d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b92732d4-509b-462a-8ce2-cefae89431de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "462c113b-c124-4497-857e-05a9795370a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2647d252-4b1b-43a9-912a-f6c91f891f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad43ad7e-2882-44ae-bf8a-65bf7654dc39",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be44bec-b107-47f5-9265-b0b3c8a8d61c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05d523b1-364d-4203-a728-4a2950e8c1e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03b75a7-2aca-4bae-aaf1-67225ef1480c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eb14e52-bdb9-4d50-8e5f-70f51e387da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86305c9-8221-4e01-bb1d-841dcddb83b4",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984c0fb1-8b93-439d-8509-223a5d707273",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dce84f1f-1d20-43ed-9e06-7e343fde3d3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a08924c-6b6c-4ba4-8bff-20f0632bdfcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e34fb0a3-6085-4893-a359-3a7367294bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a87906-edde-4b26-8341-aced9548705d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290c6552-3a4f-4d4f-96ed-653be839de88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e47f586d-da95-426d-b761-6add93d08191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e7dd9b-4b16-4194-8d1b-fa2a883a78f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98cee4d0-1961-4eac-8ea3-8080a37820a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8543a12-7050-472f-ab2e-a63ccfa29986",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b858638e-ab8c-402e-bd5b-47cd9c9e4eb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d57f5d0-1c67-4f47-be47-721ceb1e6010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d704ac9-4ada-47d1-b15c-721d9af96dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a0bd0f2-f6fa-4e91-b1fc-982def0c5333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5e58c3-ba82-4ed0-980f-d2548d26089e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a000d4-c2c2-4bad-96ad-f4848b9dc0c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8139109-2c66-4caa-b42f-d3e70cc7bb9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45fa5df9-3196-4d7a-a5db-aa8e35d61b94",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c47df18-69a4-48ac-ad54-f05038c75c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da6d9ab-7cd1-48ea-a9af-89b489f87913",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601c48f1-44b6-467a-b485-b933ce5cf288",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf16daf3-daf9-4603-80df-416d20393435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b97fee9-87ef-4532-8211-0786f493c1df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "422d246c-0354-4a06-be60-3ff9bfde395a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be07f41-7582-43a9-9edd-65799422760b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1456df-5e80-4f84-bb3e-2bb6c003ce3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb66e2ec-3667-47f8-a70f-2e35597462c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd1bd34-56e2-4bc3-bb73-9dc08939d224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae6da6a-184d-408c-849d-d8f6965e594f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17680d21-ca1c-4c6b-8772-409718a7236b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1a4ef8-c597-4557-815f-798f588d57b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd76ee14-ffc6-449c-8598-28f78a5a3c02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c02da2-1250-46be-a290-2ce56b03f6da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "921573ff-3911-49df-8da4-88e40d5f11a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf80589-192f-4dec-8b5a-65be2de28278",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b4beca-b879-4f1a-94a5-0b8bdb054ebe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da9c2978-8642-41f4-9c22-1731ef66e376"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f42e05-5ee6-4ca3-8582-fb6681ea0a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87ef7791-c5be-4d52-980a-0b7359b15c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ecf1bf3-4582-481a-8671-ae49735318e8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1489406-7ae3-40ee-93dc-c732aabf1b0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb81be1e-3dea-4902-86e7-205a27cb2b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab97f392-fe81-4cfd-b129-7cbc43963f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c16135d-5aff-4217-bc9c-07aefff1428a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd26321e-90fb-4ea0-af7c-47d7f2e409b2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ef27de-45b0-4d62-90fd-37f255a5cfd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca4497e9-a0a3-4c08-b9af-f6924ce0eb36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41ab9f6-5693-48de-8644-33942e137735",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "362508e5-b4ba-4ca4-888e-b73114fb1394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0057eca6-41ed-4824-b015-89b0ca9a3d08",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d6c1b5-d71c-4280-857b-b668c2f48217",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "294e35a7-4942-46b8-8270-f96016057ede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e69546-97a7-430f-9acb-3c4caf2dd433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d5918a4-d2df-4782-821a-15152f071158"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9c0a27e-c2e9-4298-85c7-e864eab1d12d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a167cf93-2670-4cba-afc6-7c7f0e4239f8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4134ff7-9c04-4575-9d34-56127db4ab53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1722d3b8-a1ff-45e3-a42c-a42847c96fb9"
                    }
                  }
                ]
              },
              {
                "id": "445622ea-5dad-4485-bb51-915e3ce4232c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "87275e00-d054-4a0c-8d15-4a28230e729d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9b3171-2e60-4ca3-aed1-d6700b0c9e9f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "67f424ee-a21a-47f9-bdbd-ef6793afd65b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a86186a-2d40-4e2e-bde0-4e343fbb34b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b3288f6-3dc8-4034-b94b-e920d49d6f8a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b8c4768-4b7f-48fb-8b0c-b150835eb45a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4f8d7e7-a6ee-4ef1-ac9f-180efd86494c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb4f52e0-369b-465f-890d-dc2acfc58b37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab621e28-d6cb-489a-b08c-56349e986ac2"
                    }
                  }
                ]
              },
              {
                "id": "cfe7f751-9502-43ed-bd4b-b2b8f5beab96",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8d90e0ec-3aa9-4ba8-a4eb-85d04456aa0d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a38df4-ed93-47b6-801f-e6406ee15169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "cf8db560-503c-4fe4-889d-4d8183bf37e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c3abab-3eed-4889-9a0f-f19b0f23545b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5d2b113-7299-41f1-9839-cefed0f6a2bd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4bb6db64-2569-4699-963e-e10d6e47d1ae",
            "name": "Positive Testing",
            "item": [
              {
                "id": "532ed206-0c3a-4a59-a8a1-33ca3c8d40b8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b2f245a-d9a0-4810-8c44-65f9fe3f6f75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "452c074b-93f9-41c7-92b8-2fdaf1887db1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "783b4b74-4539-4732-8506-ab2b2ebdf809",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f4f9d96-6192-401a-84be-9b3d497c8f54"
                    }
                  }
                ]
              },
              {
                "id": "d1ec1fd2-0f12-4d43-885e-a3775217e293",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c68213d-49f1-4dc8-b5d5-c83cd808725c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "41a80324-6d25-4457-9f20-6601b75371d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5de28c1-8c9a-4787-b056-d99a410f595c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "948e1c59-21ff-4b88-b76c-3dcbfe457cc1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f87acc1e-84f0-4186-956d-991a167c02ff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "40aeb393-66c4-4a85-b06e-80cacbf18a2e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb48ec2c-5292-4d8a-99df-df68c4c15788",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ed6decb-b3b1-4fac-9d6d-680b5a34a82d"
            }
          }
        ]
      },
      {
        "id": "80535d5e-713e-4e47-9cc4-bd0719d081b8",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b0faadd1-9c7d-44a9-9c2b-58cdc38c61cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "205f0a1a-ef03-44b0-afb1-2299b8403247",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e43df183-25e9-48e4-9d10-c168e2a22299",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e2c9b9-3410-4e88-ab33-92c02c29bc29",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "98b59ecf-03a4-4791-81b2-42b337b77550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70efc3da-fd13-4d9a-add5-bba6699fe97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "137b1fbd-815d-492a-adb2-0a66d2a7e3e3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41218fef-072c-44c7-9406-6ed7708d3895",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3496aefd-365d-46a7-892a-3d6c5787b56d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8656aded-e974-4923-8685-5768f529c0d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b513100-416d-461a-bd85-b4683bb71879"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "457f0c41-20a0-47eb-8900-882dd54815e4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4612e879-2dc9-4589-b038-fe26c1488e15"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e54767b1-faeb-41e6-9d71-5300e21ec1a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fbd4a982-bf3f-4887-9e91-512f8ae08ca4"
            }
          }
        ]
      },
      {
        "id": "24fb9c4c-33d3-47e0-9255-8877d3b3fa53",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5b028622-a049-43f4-833a-5d982799119a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "050f59ac-762d-4ab8-ac1b-e465e9601419",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "840970e9-d6ff-40ba-9827-e673b72ddf7f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf992ac-76a1-4350-af87-df16d1ebe8ff",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13326d20-80c9-4988-a001-85c8932b15d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd4819a-3808-4f55-9036-3164674340bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5beabe99-d6bf-4574-b900-d9c6309d82a8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d7a1174-f1c9-4dda-a61f-0db98161c144",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17f0c9ed-eb62-4321-bb4f-e041b248701e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ceb00121-13f3-4012-9e0e-15331ccba363",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cfa45466-183f-491b-b410-fc48f026acbe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29ac0413-d1d7-4c93-bf76-514d1c3ee6d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "21648464-b4d4-4c55-aa6d-5b96fae96592"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6bf1ecf4-585a-4a7a-9446-5a24c091ea96",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c74a20a-ee17-4919-9e0a-c1953ea5ec6c"
            }
          }
        ]
      },
      {
        "id": "2e1bcddf-7e77-4377-97d1-9738e08042eb",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a44ade83-ec5d-4c18-a6be-886390d86732",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8c0d4d51-9f5b-4fdf-916b-1178a75dacf8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "00848d92-f7ce-42ba-8cb4-d6fd369d0f6d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56d816f-f3cc-47d7-8c35-b1518b966817",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bee14f52-ce1b-40ff-aaeb-99a0c80b6331"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "211e5902-3959-4bb6-bc97-f1b64b70a51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e64838d2-37e2-4c7a-8db3-0eca3ad1c72d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11fb5730-8c00-41af-bbbd-f4fd7af85d0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "023cf9fa-0b40-4d81-826b-de4f5b7b04dc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4f9b464-4391-4a6b-bfac-a36abb5764dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92069528-d8b5-4b70-8493-cd8278164c25"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66b7c571-8ce1-48f2-b085-3cec6616f111",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6ce0bb91-49b1-4f04-9487-bd8c51d4b34e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "efef6afb-da55-4e7c-b84f-ea6120ce532c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8844b4a0-ed2b-4517-9cf1-18d79d9efe2b"
            }
          }
        ]
      },
      {
        "id": "354cd26f-1036-4b26-bd0b-5acd02e0567f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "68d6d628-028a-4437-992c-e9a5c76b0b19",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80b8515e-76ef-4145-b252-e837727ca76b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ee50fe0d-faa4-4663-8aac-01b9f7dda424",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee384d2d-4273-4b28-9430-9db63aa0d443",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e72eda4-635f-4c9e-b3ae-8f0ced049e9b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 37.28169014084508,
      "responseMin": 17,
      "responseMax": 358,
      "responseSd": 29.02982104353179,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690591107104,
      "completed": 1690591131977
    },
    "executions": [
      {
        "id": "5868a180-7f80-4ef6-a8e9-7332f7300364",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ca106fe9-6a4c-4880-be32-4a730ab2569e",
          "httpRequestId": "ac48203e-8674-4d1d-b1fd-0f7132dea1f8"
        },
        "item": {
          "id": "5868a180-7f80-4ef6-a8e9-7332f7300364",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e9d36d26-9e1c-42a3-baa5-e28f8c13da32",
          "status": "OK",
          "code": 200,
          "responseTime": 139,
          "responseSize": 0
        }
      },
      {
        "id": "3a1885de-7ac9-47f3-8e30-d7f23191532c",
        "cursor": {
          "ref": "5bd3e35c-537b-41e2-b100-020123f26524",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "aae8d16f-b3cb-4d40-9686-ee5e2328c258"
        },
        "item": {
          "id": "3a1885de-7ac9-47f3-8e30-d7f23191532c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "82e86a50-ecc5-471a-aba8-dda91f2eb1ae",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 0
        }
      },
      {
        "id": "11576630-46b8-4349-ac27-22813e3cd63a",
        "cursor": {
          "ref": "8611af19-465b-427d-b20f-d80dc8946b9e",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0ac26383-6ce6-486f-8e64-95afa2d67967"
        },
        "item": {
          "id": "11576630-46b8-4349-ac27-22813e3cd63a",
          "name": "did_json"
        },
        "response": {
          "id": "8f1e0064-fd48-4aca-b247-e542daeb3b22",
          "status": "OK",
          "code": 200,
          "responseTime": 173,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe12ae3a-2a3a-4cbc-9409-6820a8a73935",
        "cursor": {
          "ref": "44b2e6cf-ea91-44e0-8d10-6113d5e952be",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6098a96d-48db-493b-8a96-407f28e052fb"
        },
        "item": {
          "id": "fe12ae3a-2a3a-4cbc-9409-6820a8a73935",
          "name": "did:invalid"
        },
        "response": {
          "id": "5c4a53f8-d2b4-4611-b4ca-c7922d06c3a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe12ae3a-2a3a-4cbc-9409-6820a8a73935",
        "cursor": {
          "ref": "44b2e6cf-ea91-44e0-8d10-6113d5e952be",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6098a96d-48db-493b-8a96-407f28e052fb"
        },
        "item": {
          "id": "fe12ae3a-2a3a-4cbc-9409-6820a8a73935",
          "name": "did:invalid"
        },
        "response": {
          "id": "5c4a53f8-d2b4-4611-b4ca-c7922d06c3a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ca5d69-b52a-472e-91c2-84bb02d511a9",
        "cursor": {
          "ref": "caed6681-cafb-4718-9a15-6c6dd39a2630",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "efebe45d-120d-4816-9f5f-12f84a336e3f"
        },
        "item": {
          "id": "20ca5d69-b52a-472e-91c2-84bb02d511a9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d2c2f961-3004-4b07-ba57-de27b8190ddd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 68,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08dd8d4f-7320-4fa6-8034-e3297a582e2d",
        "cursor": {
          "ref": "fa61040b-146c-4b22-aac0-95a721e6aa0c",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "890636dc-a1e1-4dec-b902-91fa9c0e64c5"
        },
        "item": {
          "id": "08dd8d4f-7320-4fa6-8034-e3297a582e2d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a5a1e3db-6dca-4c0a-a6ab-a61d194ce879",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129e73ea-bd28-4d57-a266-f888d31c33a6",
        "cursor": {
          "ref": "2b74bb44-f3c4-4f4e-99e4-b121a2567783",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "cee1049e-9e62-45eb-b0b0-063eb50a4d3d"
        },
        "item": {
          "id": "129e73ea-bd28-4d57-a266-f888d31c33a6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1c38de7e-1c89-4edc-a866-67402871e121",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55445ac-99a9-4cbd-8150-c3db8e9e3801",
        "cursor": {
          "ref": "28b05a15-85f3-435a-a2cd-8d72a62930ce",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "798cae23-41b2-4601-addb-22adc348108a"
        },
        "item": {
          "id": "c55445ac-99a9-4cbd-8150-c3db8e9e3801",
          "name": "identifiers"
        },
        "response": {
          "id": "56eeb80e-dd36-4004-8658-c7e62a4cabcb",
          "status": "OK",
          "code": 200,
          "responseTime": 89,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c41913-29a0-454a-ac64-10d7682b4cb2",
        "cursor": {
          "ref": "595e4f7f-1f8e-405e-88df-4568050b04f5",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7fa4f822-1781-49f7-838e-a7088f22e218"
        },
        "item": {
          "id": "44c41913-29a0-454a-ac64-10d7682b4cb2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b4dc9ec5-b6e9-4678-b5f7-137f0b1526b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd9f274-2e6a-4bc5-a971-1319fe0b8777",
        "cursor": {
          "ref": "e815825c-515c-441e-ae4a-122cdb0502f4",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5c7106f3-f634-401d-8183-6c4cad821936"
        },
        "item": {
          "id": "9dd9f274-2e6a-4bc5-a971-1319fe0b8777",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d97eb147-b320-49b3-abc0-908da4b8df0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16647eb9-dc36-47df-9de3-2ea804dc453a",
        "cursor": {
          "ref": "b9156042-d8f5-4465-a627-3eaa45f6494c",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "43793580-ce30-4a99-8fd8-e9af86e9674d"
        },
        "item": {
          "id": "16647eb9-dc36-47df-9de3-2ea804dc453a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8dd7e316-d02f-4acc-82fa-9ae00595c578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17bb72db-c269-408f-87dd-8d7639866371",
        "cursor": {
          "ref": "45973477-ac2b-4d80-a332-7f1fc1a47f73",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f8f5a548-47db-491b-b7c3-8c626fd887fe"
        },
        "item": {
          "id": "17bb72db-c269-408f-87dd-8d7639866371",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b02bdfd8-6575-4db0-b854-d1a2ba072fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa17ec4-e755-418b-9337-e768049bd86c",
        "cursor": {
          "ref": "33496a10-d950-4ed3-ace0-c077323a39d6",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "dfca2336-c7d7-41ae-89c6-923e622377fc"
        },
        "item": {
          "id": "dfa17ec4-e755-418b-9337-e768049bd86c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2291426b-a4df-46c1-b53a-1a26350ac2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1cb9ea5-e838-4d95-91a9-65b940ce2ec5",
        "cursor": {
          "ref": "8b96b244-e62a-4f91-ac28-ddf8acc78602",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3ed40456-e0fe-4f78-933c-c414aee92ce5"
        },
        "item": {
          "id": "f1cb9ea5-e838-4d95-91a9-65b940ce2ec5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3bcf52e7-a437-4c74-ab9b-ee54f17b2ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafdb55c-43fc-4a45-8b99-524109a3eb1d",
        "cursor": {
          "ref": "d4f42771-837e-46b1-92a6-a141ba2eba43",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "25665bdb-7063-4bb6-8cfd-8cbf26cd1712"
        },
        "item": {
          "id": "bafdb55c-43fc-4a45-8b99-524109a3eb1d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4f3f9f05-e859-4589-b581-52ba2723adb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276313d2-a759-4e2d-bdee-06e1eab56a5b",
        "cursor": {
          "ref": "1af739e7-87a4-4943-bb08-46bb58cc5585",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a34dbecb-c1e1-4ae6-ba45-54a890724ef9"
        },
        "item": {
          "id": "276313d2-a759-4e2d-bdee-06e1eab56a5b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "54fc32ad-dba2-4ad0-a70b-31dadd5d948b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b19e17ef-cea6-4503-84d0-70e1578fa3b8",
        "cursor": {
          "ref": "44a324b5-c313-472e-8700-ec602d8c8599",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "95970f44-5e42-43bf-8c0a-4edc41897c08"
        },
        "item": {
          "id": "b19e17ef-cea6-4503-84d0-70e1578fa3b8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7a12bd3b-2f53-40d8-a32b-6f74f28d9abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a507379-4ba9-41da-bb27-c8676e4cc3ad",
        "cursor": {
          "ref": "81aa057a-efe3-4495-bd00-51ce2f184748",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2d48a097-f8a3-439e-89a0-6d15c090e225"
        },
        "item": {
          "id": "4a507379-4ba9-41da-bb27-c8676e4cc3ad",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "04874636-eabf-4cb6-9781-b98a21f13ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8516b3e-4e9e-4206-b3b0-32ded02f877f",
        "cursor": {
          "ref": "5fc01f51-ee41-44ca-abdb-308bde741553",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3086ec17-8e75-409c-8d47-9d8f8dce42d8"
        },
        "item": {
          "id": "d8516b3e-4e9e-4206-b3b0-32ded02f877f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4ea56714-68b4-47a5-9b4b-d11548ca8bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14eba77f-2f74-4b07-aaa8-57ffb64ff604",
        "cursor": {
          "ref": "5ad8568b-72b7-4c80-89a1-b04038251138",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "cac34cb6-35a2-4916-96dc-0856abe41623"
        },
        "item": {
          "id": "14eba77f-2f74-4b07-aaa8-57ffb64ff604",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "63825482-a728-4a2e-a98d-abcf77aa9cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd7bec7-1083-4bbf-991d-e54a38edcc88",
        "cursor": {
          "ref": "aa824bdd-00f4-4eac-8020-1c64fb7bef32",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "642118af-b21d-48c2-b881-af64dd69dd0e"
        },
        "item": {
          "id": "ccd7bec7-1083-4bbf-991d-e54a38edcc88",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e58b866a-3511-456c-b72b-8ec4bcb26a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6dcd7f2-f6bc-4e88-9736-3cec0f62c43a",
        "cursor": {
          "ref": "6c6e8470-0fe0-4e01-9fb4-b77b7df597d9",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6ad264ba-79ff-44f3-8787-ec1ca2b4fd28"
        },
        "item": {
          "id": "e6dcd7f2-f6bc-4e88-9736-3cec0f62c43a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6fee536f-0134-4275-a736-0943297849c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7b8b36-c636-4563-8197-2a811b280bf5",
        "cursor": {
          "ref": "d9049e0d-b8aa-439f-9110-12887459e886",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0be40000-bdda-4aa9-8f2c-46c64e2ca5a6"
        },
        "item": {
          "id": "8f7b8b36-c636-4563-8197-2a811b280bf5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "dc422153-3006-4931-a0f0-8ccc122d2a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa793a9-817b-4077-a6ce-6bce56cbf703",
        "cursor": {
          "ref": "1b78eedb-9d59-4001-9c0a-75e7fa624f0f",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4356d790-1274-4f10-8238-815e77e81a4c"
        },
        "item": {
          "id": "dfa793a9-817b-4077-a6ce-6bce56cbf703",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7e40c480-c421-47bb-a965-7fbda53f4732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c9fb7f-d69d-49f8-ada8-d2a52768eded",
        "cursor": {
          "ref": "f9dd3557-d5bf-44f2-bdbe-fe8220d189e6",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c66e1123-2609-4ed6-85a0-f5473c273dc2"
        },
        "item": {
          "id": "78c9fb7f-d69d-49f8-ada8-d2a52768eded",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "911e9472-370b-49fe-b0e8-2518ebdee6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3044fc54-fcf4-469a-8ba3-bcaec15100d3",
        "cursor": {
          "ref": "7a0c2525-cf6c-4570-9ce5-369e1a7a1b97",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "222a5b82-8110-4960-95ee-f92953493297"
        },
        "item": {
          "id": "3044fc54-fcf4-469a-8ba3-bcaec15100d3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f5bf6034-cf58-4731-9f30-4804282c46c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f733c3cc-aab0-40c3-b2bf-e973fd051323",
        "cursor": {
          "ref": "d4cc49d4-9bd9-4793-bf61-8148349ed1a8",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7a53d39a-ce96-46df-9108-98e9e752303f"
        },
        "item": {
          "id": "f733c3cc-aab0-40c3-b2bf-e973fd051323",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e5f39269-41be-4114-89fc-ceac62085a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587bae24-7dee-48ef-a5ae-694f80bb1be7",
        "cursor": {
          "ref": "4ac6d9e6-dfda-420d-a333-74b73ab25198",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f3cbfab7-f703-4557-8599-d36d5a52606d"
        },
        "item": {
          "id": "587bae24-7dee-48ef-a5ae-694f80bb1be7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "789314b9-6dcd-49d3-86c0-14d44f8a09d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e5ee9d-08a7-4d70-9da7-a996c09d4456",
        "cursor": {
          "ref": "8b908e5b-8766-43af-a946-2ccb28517a65",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e7fa5a88-c6e9-4792-bb8b-84eb55250230"
        },
        "item": {
          "id": "d0e5ee9d-08a7-4d70-9da7-a996c09d4456",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "942e65b4-2188-4151-bad2-a63fcc917df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0002c1-4a8c-4790-b2c3-e66eef3d98b5",
        "cursor": {
          "ref": "48c0af7e-fc44-48a0-a37a-f9527a82398c",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7f96a5c2-e216-409e-b4d4-c6f011129413"
        },
        "item": {
          "id": "de0002c1-4a8c-4790-b2c3-e66eef3d98b5",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "12e2b58c-09a8-4c82-9ec8-050d96aeecf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3766216-f07f-4712-9ee6-bab98d2e97d9",
        "cursor": {
          "ref": "5dcd0470-4c83-4c3f-8dfb-966a3bd995fa",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c6a9e25b-66f7-41dc-863c-6ba3681ca3c5"
        },
        "item": {
          "id": "d3766216-f07f-4712-9ee6-bab98d2e97d9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8348a2c6-301c-497f-93d0-89292f23770d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3a2e52-5d4c-4a3c-93ac-1a4837012148",
        "cursor": {
          "ref": "0987bca1-ccb2-4a78-b27c-560930a406d0",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "358c2b22-0788-4d53-aa34-0fe4b5df01e5"
        },
        "item": {
          "id": "7e3a2e52-5d4c-4a3c-93ac-1a4837012148",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "67ed677c-015c-4ce9-80e8-c6016729b46f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0804592-050e-4656-895a-2330c4226ab3",
        "cursor": {
          "ref": "41230835-fe23-4435-b118-7c3c7c3344ef",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1bb66f48-9494-4f5f-a6c3-2a39408f5556"
        },
        "item": {
          "id": "e0804592-050e-4656-895a-2330c4226ab3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9905c4fe-3ef0-4a89-a1e5-41b951484f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c3550f-4b21-4e8a-a0b8-89ec64c1a23a",
        "cursor": {
          "ref": "59627902-c0f3-4337-b81a-11c0c8878f98",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "cdc24a47-fae7-4842-a111-09b1f679b516"
        },
        "item": {
          "id": "05c3550f-4b21-4e8a-a0b8-89ec64c1a23a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2c1b1d01-9067-4643-b8cb-d6ece6f15d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6dc17d7-dc26-48c7-9572-14a1c741451d",
        "cursor": {
          "ref": "3bb3ae45-69fa-48c5-916e-0886634400c4",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "bec0866c-41a6-4fc2-a608-cec64d98e3d6"
        },
        "item": {
          "id": "f6dc17d7-dc26-48c7-9572-14a1c741451d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ee57aa39-f56c-4bb7-bc0e-48e17ab846e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462b70bb-03bf-44cb-afed-66b1e8e62217",
        "cursor": {
          "ref": "e502b348-dbfa-4874-9dce-6fcfe6651027",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b10e0f3f-170e-4779-8257-95f375ac39e3"
        },
        "item": {
          "id": "462b70bb-03bf-44cb-afed-66b1e8e62217",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a8ed5778-6e02-44ac-9198-ab4fc3a54e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68764782-8bd2-41e0-a551-933fcccac043",
        "cursor": {
          "ref": "ee42ea0c-06b3-4614-8e8c-0d6d613483a9",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a9c9d840-5a1a-4a70-8d11-bb16a6f59c2f"
        },
        "item": {
          "id": "68764782-8bd2-41e0-a551-933fcccac043",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "69ee5d1d-0772-457b-9eab-9a8f94e6b8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfdd57e-0c60-4ff1-80c3-02960241f7e1",
        "cursor": {
          "ref": "d0ea0e43-f2c1-4b75-886b-ea1c58b02305",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "43048cc6-3476-4b8e-b29d-dde20098f18d"
        },
        "item": {
          "id": "fbfdd57e-0c60-4ff1-80c3-02960241f7e1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6e591cd3-91a9-4107-9e69-d9de672bd03a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9084a1b9-5e26-46c0-82b0-2a3f32021f07",
        "cursor": {
          "ref": "4b8e1164-8788-413c-8ec7-c5a893a3adb9",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "dae601c0-64b2-4baa-ab7b-665e2c385495"
        },
        "item": {
          "id": "9084a1b9-5e26-46c0-82b0-2a3f32021f07",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7d9e9973-b597-4c85-b6ad-8c1c753e249b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd106732-92b0-47b8-96eb-827e1d794ecd",
        "cursor": {
          "ref": "821ebcec-ac4d-4294-b0bb-4824dbf8b82e",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "48f11e4e-8d4d-49e5-8ead-fd0de1f2a466"
        },
        "item": {
          "id": "dd106732-92b0-47b8-96eb-827e1d794ecd",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "29f98392-01d0-46ed-96b0-5a654b6d179a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70cc2b5f-55ae-4b5d-b861-2ba1eb48118c",
        "cursor": {
          "ref": "6fc66b37-a139-49c9-b619-48d0dff700ce",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8f885e8f-e79a-4151-a5b3-28cc96dffd8a"
        },
        "item": {
          "id": "70cc2b5f-55ae-4b5d-b861-2ba1eb48118c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b20a7f9a-fd63-4fd6-bd96-5518fda69544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a89e258-5109-4b50-9998-ce75665858c5",
        "cursor": {
          "ref": "2fe77485-aef7-4332-889a-0561d6d8b54b",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "15ddc9ee-7eb8-42fd-87f9-80a830f3df74"
        },
        "item": {
          "id": "9a89e258-5109-4b50-9998-ce75665858c5",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a8b393df-d236-4e74-9e30-562cfeeea0f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25faece9-e377-4434-a083-b1dadc1fa7a2",
        "cursor": {
          "ref": "0f9812f7-273e-4af0-aa02-93108185f118",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2557df27-9fdf-4829-bcbf-4b56bc8f56ae"
        },
        "item": {
          "id": "25faece9-e377-4434-a083-b1dadc1fa7a2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "598c4530-7c49-43c6-a70f-a53532b23464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac82b5d-eb74-4b5c-9903-666ca7d36785",
        "cursor": {
          "ref": "4795639f-e416-4516-8ade-871638dbe943",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a4a1ddc9-6ccd-43fb-b872-7bcc9a434d03"
        },
        "item": {
          "id": "bac82b5d-eb74-4b5c-9903-666ca7d36785",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5af633ba-6ff9-473d-a84f-62c1376cf9c6",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 358,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe55a7e-49ac-4bfa-be76-e1ad7863b5d9",
        "cursor": {
          "ref": "52a7ed5c-6316-4446-a306-7880376410bf",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "400f407c-7a26-40d6-814a-8c144b62dfd2"
        },
        "item": {
          "id": "fbe55a7e-49ac-4bfa-be76-e1ad7863b5d9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4bc6465f-8101-426b-a6e1-33be7bba8e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772e9702-c450-425b-8f49-fc39c28c69e6",
        "cursor": {
          "ref": "cd12415e-d171-4670-9325-249e2237b3b7",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c8669c42-1530-46b8-a12a-cd949818f03f"
        },
        "item": {
          "id": "772e9702-c450-425b-8f49-fc39c28c69e6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3d6ac31a-2611-4e5e-8bbd-42e86a9ed2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8797d56-abc3-4aa3-899a-c9353b04e251",
        "cursor": {
          "ref": "30a953ae-4b00-48f3-99e0-9282b5a0e6fd",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f2dba172-6f5e-4551-96bb-05ced315db37"
        },
        "item": {
          "id": "a8797d56-abc3-4aa3-899a-c9353b04e251",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9ae35bf9-d098-47e5-989a-640d92c230a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0f3ad9-1aff-494d-9e7a-64e8302b1c83",
        "cursor": {
          "ref": "6de7f423-6062-471d-9e0e-beaf31fe841b",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "95c5a681-326f-4380-8dcb-4203d0e62a5b"
        },
        "item": {
          "id": "ec0f3ad9-1aff-494d-9e7a-64e8302b1c83",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ddfae678-15e8-44cb-9be2-5dcb14382101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ddb1976-6a4b-4400-883d-70ad3528a62e",
        "cursor": {
          "ref": "26d344c2-0383-4c0b-9ac2-83e8137a72a1",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0e4c67e5-465b-47f8-a883-71d861b1f909"
        },
        "item": {
          "id": "7ddb1976-6a4b-4400-883d-70ad3528a62e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2c509d7e-c0c0-468e-86bc-8ddddb881cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfb5dc0-5db0-4718-9623-9b2252782ab2",
        "cursor": {
          "ref": "9e27b66a-1976-4dba-8182-45945cf86aa2",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "aaeba5cc-f6fe-4ce3-baec-676996bce127"
        },
        "item": {
          "id": "bcfb5dc0-5db0-4718-9623-9b2252782ab2",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d2d18c5d-2a0d-45b2-b1cd-a0bbfd4bc5cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a656bfa-6394-43ad-a3ae-bd1bf7e52914",
        "cursor": {
          "ref": "3be6388f-df18-423a-b9f8-54c3e8e940b5",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "eb07a31f-acc8-4bb0-bc8f-9d6696a9e955"
        },
        "item": {
          "id": "5a656bfa-6394-43ad-a3ae-bd1bf7e52914",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0f3d086c-0f72-4397-8658-2a58b619104c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 68,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a418f60-2de9-4309-80d7-b147d458ae61",
        "cursor": {
          "ref": "7e374671-78f4-48fe-a6f6-b800ec4ffccb",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "92d03efb-e311-447a-85b4-a68fd3252212"
        },
        "item": {
          "id": "4a418f60-2de9-4309-80d7-b147d458ae61",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "daedcc58-4e7d-46c0-918a-35dfd6dff47d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402de200-0166-4e36-bb8a-ea20a2b57af3",
        "cursor": {
          "ref": "4314b432-aa99-4466-bacc-efd4e79839b1",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8d38f4a3-2387-4307-8c50-ca1da71e8550"
        },
        "item": {
          "id": "402de200-0166-4e36-bb8a-ea20a2b57af3",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "eee1515b-6d8c-49b5-ac62-ab92670e7bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5b32a9-ad53-4fb0-9af9-d63fa3106e4a",
        "cursor": {
          "ref": "eb1de14f-4845-48c3-9412-3bd575d859d4",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "800723b6-72d9-46e1-ab1b-c857b7042fdd"
        },
        "item": {
          "id": "5a5b32a9-ad53-4fb0-9af9-d63fa3106e4a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "cd35f485-21a8-4bf1-a4c3-237e9e755c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672827ef-3c52-4623-b8bd-bbc224ff2ec7",
        "cursor": {
          "ref": "e3774adf-728f-4361-b9a1-91bb5aa146c0",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9bd674e9-360d-41c5-ba9b-3bee3f1f6c97"
        },
        "item": {
          "id": "672827ef-3c52-4623-b8bd-bbc224ff2ec7",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9cfaae04-b3f4-440a-9cba-5dd883b99773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e37d13-0c36-4353-b8eb-60edbacc7083",
        "cursor": {
          "ref": "4fa7daad-f7c1-47fe-9fce-7714346813ec",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5451a6f1-3351-417a-851d-83ac724a18d2"
        },
        "item": {
          "id": "18e37d13-0c36-4353-b8eb-60edbacc7083",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "dc93b523-1bca-43a2-b03b-9da8f5a44d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc7cc23-9088-460b-81e9-407eb9c53325",
        "cursor": {
          "ref": "fd13c545-4052-4bda-a671-74f417e9aed0",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6b4901e3-f323-47a1-9b39-04823963347c"
        },
        "item": {
          "id": "0cc7cc23-9088-460b-81e9-407eb9c53325",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "dcc85d41-aaa2-4b85-b613-e6b43d6aaf7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21507146-ffad-4467-8f4b-ab8b4ebb5dbd",
        "cursor": {
          "ref": "794128ae-eae2-4c80-8335-bc4ff6575ff7",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c3599a16-2471-443a-9011-0da510cfc313"
        },
        "item": {
          "id": "21507146-ffad-4467-8f4b-ab8b4ebb5dbd",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "787d5342-4932-4c59-94ab-1d66254e6b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf48b85-63de-40ca-a126-bef4a72be493",
        "cursor": {
          "ref": "a461c821-0c4e-4953-987b-e34de761b297",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "02cf8dbb-bcbf-46a4-b713-9e43999bec6e"
        },
        "item": {
          "id": "7cf48b85-63de-40ca-a126-bef4a72be493",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "fa4df883-bba7-4f0b-a26e-703e548b6c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46373437-a0b3-4f92-b780-9fc71821c3c6",
        "cursor": {
          "ref": "3989a5ae-ac67-4b53-a538-8e200d31ce57",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "71301bb0-fecb-4e33-acf6-6b28ed6da55b"
        },
        "item": {
          "id": "46373437-a0b3-4f92-b780-9fc71821c3c6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f58ae41b-4930-4ada-8fce-ed36c2ba83d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6bf579-4f86-48d2-951c-2798f8bee164",
        "cursor": {
          "ref": "7d351680-00c4-4808-8085-3fe45a43359a",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9e84e1bd-c2e1-4f12-927e-945e83bded25"
        },
        "item": {
          "id": "7e6bf579-4f86-48d2-951c-2798f8bee164",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "086071ef-dcef-4b16-882a-60140fe5510a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6262464-7f07-4c6b-be12-f8fa6a0ba646",
        "cursor": {
          "ref": "29a251e5-b5ea-4c4e-bfe1-809def09a273",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "eaebe0bc-e7ca-419e-a3e8-b3be79636fb4"
        },
        "item": {
          "id": "f6262464-7f07-4c6b-be12-f8fa6a0ba646",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d06c125e-e29f-443a-bc3c-08b9b7305773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1452310a-ab2b-42e9-90d6-47e16cb4256b",
        "cursor": {
          "ref": "8d43b559-0ad1-444c-83e0-f10354df85e1",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9ab86357-797c-47d6-93d1-499f0ea78384"
        },
        "item": {
          "id": "1452310a-ab2b-42e9-90d6-47e16cb4256b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3a87a084-5d83-4d89-8bea-4e5d39611022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f60f98-4191-4f8f-879d-b63d98d060aa",
        "cursor": {
          "ref": "c902fd8f-4970-48a2-b8c8-ecc5f9cdf315",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "58aede52-096a-4353-8a2f-9e185befd466"
        },
        "item": {
          "id": "b4f60f98-4191-4f8f-879d-b63d98d060aa",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "240399f0-37b7-4152-afda-3e140c6a7fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60107ea1-6bf4-4174-afa9-457706048992",
        "cursor": {
          "ref": "41501766-8cc0-4cd2-bb97-a9562851635d",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b935e986-bb6f-4cee-b0d9-a2eed1759c69"
        },
        "item": {
          "id": "60107ea1-6bf4-4174-afa9-457706048992",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "786007e1-4554-42d4-b8b5-ce23ff808f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f626b6a-9cad-447e-a8f5-8a31ced8042e",
        "cursor": {
          "ref": "2ef62225-abb2-4d3c-97c0-7d3eb73e3b96",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "eb158158-2efc-4630-b273-d4944d6f9a2b"
        },
        "item": {
          "id": "3f626b6a-9cad-447e-a8f5-8a31ced8042e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2adc3219-ae1d-4ca1-ab3f-42d90ed2ae1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16e684b-68b7-4284-a461-3d82c6831ea0",
        "cursor": {
          "ref": "2b78eb50-6828-43e1-a82b-d72eb1977a99",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d7dde0f4-0c54-4a82-bc3a-4e8e9cffdad0"
        },
        "item": {
          "id": "f16e684b-68b7-4284-a461-3d82c6831ea0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "be5e6124-8343-4ffe-83c2-744a706e1165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e99180-c574-429a-a62e-91908ec5b2e5",
        "cursor": {
          "ref": "abbd1cd5-d921-4388-bbdf-06d4a0f27424",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1bcb4919-7c45-4444-84bc-b4870b338693"
        },
        "item": {
          "id": "90e99180-c574-429a-a62e-91908ec5b2e5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4b307665-522e-449b-92c8-8f0a28bd7c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d5d736-e0c6-4d5d-bb2f-d6a1c332f63c",
        "cursor": {
          "ref": "6e4fbc0b-877c-4440-92a5-12739a255471",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a9fbcdd7-356a-44e6-ba7a-53f87a151cb9"
        },
        "item": {
          "id": "c2d5d736-e0c6-4d5d-bb2f-d6a1c332f63c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3991a62e-d3d2-43d5-a5d0-01a18536f0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccfc3d0a-09c5-414f-a5f8-0fbe75562074",
        "cursor": {
          "ref": "592f6465-8e47-45c6-850d-84bdadb81669",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "08eea40f-94b3-4752-9a51-569244e92d36"
        },
        "item": {
          "id": "ccfc3d0a-09c5-414f-a5f8-0fbe75562074",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5265d132-1955-4642-b98b-8e8f64206be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4048de7-6f99-4945-9614-2024bbd8ce30",
        "cursor": {
          "ref": "66fae53b-c52b-44f8-b366-55780073cb91",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d859503c-f056-4f4e-8292-1d11d582163f"
        },
        "item": {
          "id": "f4048de7-6f99-4945-9614-2024bbd8ce30",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a22ecdfe-c66d-41be-8d08-be6ce8fee1fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98520da7-ef4d-471b-9959-030c1d318b27",
        "cursor": {
          "ref": "800d4e10-3d84-4f98-a724-7a3428acc7b2",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "da9f768c-aac1-4ac4-bec0-4083786b01b2"
        },
        "item": {
          "id": "98520da7-ef4d-471b-9959-030c1d318b27",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "50d00fb8-d03d-49e0-bacd-6e678e463fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fec93f1-9978-4257-98ce-2a8ead533e89",
        "cursor": {
          "ref": "c70cb8a1-cc2a-41e2-9ade-24a8858f94a3",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b8c1da23-69d0-4286-b4ec-ab5e09cdd577"
        },
        "item": {
          "id": "6fec93f1-9978-4257-98ce-2a8ead533e89",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8eb6e005-ddc1-4708-a1ab-8bc31be6fdad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4671020c-3909-4065-a316-f65bc4a809fc",
        "cursor": {
          "ref": "1e230d69-acaf-4566-b17a-a6e8938a4828",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1f3e043a-e7d9-47c8-b967-f53f2215ddf1"
        },
        "item": {
          "id": "4671020c-3909-4065-a316-f65bc4a809fc",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f3e10805-008c-41b2-a71b-333d881c884d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4fd100-c1ae-48b4-923a-82ab7c10f616",
        "cursor": {
          "ref": "6de7bea2-0bbc-4f11-83da-f63b1fee3060",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "91929598-9f72-4d8d-9e3d-6206be162958"
        },
        "item": {
          "id": "7f4fd100-c1ae-48b4-923a-82ab7c10f616",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "28dda468-3c03-4a53-95f5-bec6c0711856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5ab7fe-ad56-41e0-81c7-92e6a3a32f4e",
        "cursor": {
          "ref": "59749fc2-0b8a-4a05-b00c-7a74f26fcab2",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b9ba90f1-9ae7-4212-ad20-0fc114126cc9"
        },
        "item": {
          "id": "9f5ab7fe-ad56-41e0-81c7-92e6a3a32f4e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "196f04d5-8b08-4c4e-aaa1-1f16524b3d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6479464b-1ca6-4f31-8143-25b590335f31",
        "cursor": {
          "ref": "c47be428-bde2-4cb1-b462-da45e2a00982",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "457c6d04-6e22-4410-a40e-a220cd25ccf4"
        },
        "item": {
          "id": "6479464b-1ca6-4f31-8143-25b590335f31",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3256e303-6a2f-40be-8414-24f09393edfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c487ce0-cd89-4352-940b-668e7e12bf58",
        "cursor": {
          "ref": "45d81f26-3239-4b98-8bee-504db9fb9f9d",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "32e1ff93-96e5-4ef2-b8c1-0cb5e281a8df"
        },
        "item": {
          "id": "0c487ce0-cd89-4352-940b-668e7e12bf58",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9855278e-2336-40ff-8d2d-c9e9244fdc35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f75144-81ea-4dce-affb-b958feb5abdd",
        "cursor": {
          "ref": "e5e2102e-f43c-4e5a-ac79-0caedda1547a",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "78382674-91cf-407b-b8ac-d585f38605d3"
        },
        "item": {
          "id": "d1f75144-81ea-4dce-affb-b958feb5abdd",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8fd0bff9-38d9-42fb-bdde-374261e6bb3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3302f51-65ac-488d-8fb0-ce3200f0b04f",
        "cursor": {
          "ref": "2f4135f3-0ed8-401f-b679-a34ad82f5f7b",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9d8557cc-78ce-42a7-b957-49c0a42f591a"
        },
        "item": {
          "id": "e3302f51-65ac-488d-8fb0-ce3200f0b04f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e8fe6a95-90c2-4c19-b475-867d755858a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5d02c1-4cb1-431c-800c-90c88be03c57",
        "cursor": {
          "ref": "be70f126-99d4-47d3-ac56-0c91b8da7e7f",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "29eca644-7af0-4066-813f-5020929f6675"
        },
        "item": {
          "id": "8b5d02c1-4cb1-431c-800c-90c88be03c57",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8e29e142-ab54-407b-9099-76381d26437d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f55860-6d06-4312-88bd-af4cef0aa67d",
        "cursor": {
          "ref": "4d9950eb-b09b-4772-acbd-61ad3233fec9",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "19c853ea-21cf-42c7-aa9d-bbff797a23e2"
        },
        "item": {
          "id": "d1f55860-6d06-4312-88bd-af4cef0aa67d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "865e46f1-1448-42e7-9c44-71c2bd106ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46572d41-3ffa-4907-ba31-c0212336008f",
        "cursor": {
          "ref": "a47bdd5d-fa33-4628-b4e4-b7d4508c061f",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5e5ef777-1f5a-4e05-abde-9b952982bcf4"
        },
        "item": {
          "id": "46572d41-3ffa-4907-ba31-c0212336008f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "893c3fcd-b960-4b97-9932-f6bbf1f3280d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea2ee01-a4de-4097-9f6f-07a54e0f741c",
        "cursor": {
          "ref": "3456d69c-eeca-4412-a755-bc66e16be0b3",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5ec5c010-91c5-4d05-8574-d18be994b558"
        },
        "item": {
          "id": "4ea2ee01-a4de-4097-9f6f-07a54e0f741c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a010c6e4-41c2-4061-bed5-584fef9dc16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84a4c65-bc96-4dbb-88ff-1a34e09701f8",
        "cursor": {
          "ref": "6c8de78b-4f99-49c4-8f76-e42d42fa21ef",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9a6813cf-579a-4448-bcec-b62b6e9c12f5"
        },
        "item": {
          "id": "c84a4c65-bc96-4dbb-88ff-1a34e09701f8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "21ee1e45-389a-4a01-978e-3a9bd21f2872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008c8418-a362-49fb-9a0a-cb0d85c58b2d",
        "cursor": {
          "ref": "2299a226-9721-420e-ac74-b4bd96c7efc5",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5013a60e-ba19-4bec-9d23-18ebfca2f764"
        },
        "item": {
          "id": "008c8418-a362-49fb-9a0a-cb0d85c58b2d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b247dcb8-4586-4f70-9ee4-7d36c9defea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b908d9-b263-417b-a595-0acd52b2248f",
        "cursor": {
          "ref": "f27dac42-1626-49f3-892e-32a8a06073e1",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "02bc3ede-2421-4b18-90e0-66286f464c4e"
        },
        "item": {
          "id": "44b908d9-b263-417b-a595-0acd52b2248f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6d6d6b02-95c4-46fe-b86f-f9af325821f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7bd8066-eefa-49cf-9611-e253a7590229",
        "cursor": {
          "ref": "5cb79ef7-277e-4fd4-b546-f0c5a8ba4a3d",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c45d2605-251a-4fb1-8a73-8adc219c1f38"
        },
        "item": {
          "id": "d7bd8066-eefa-49cf-9611-e253a7590229",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f7b4e0ce-f228-4e9d-bb6c-ace73c9d80cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c09aca6-fd87-4a5f-ba2d-032719178fc1",
        "cursor": {
          "ref": "4a12ad3e-6ccf-4a81-8dbf-01776531e278",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6a73231e-fb8a-4f43-8b94-36b8138975df"
        },
        "item": {
          "id": "7c09aca6-fd87-4a5f-ba2d-032719178fc1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c5b5ea0d-1938-4657-a97b-4f57e496b58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a9a4e9-2505-4918-97af-f0084558d8c7",
        "cursor": {
          "ref": "9915f100-0d52-4a32-a761-2f832bb17573",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5fbe2137-a6e5-4568-9190-f1b52b135fc5"
        },
        "item": {
          "id": "43a9a4e9-2505-4918-97af-f0084558d8c7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c86767e0-a2f3-4856-9745-05d3243a1921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb2f7cb-2d48-4e34-b05a-308b76c8058e",
        "cursor": {
          "ref": "4a731392-0922-4953-9a69-72439c83dde8",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3b7ff13e-4373-49e5-a82a-682d15bac43c"
        },
        "item": {
          "id": "3eb2f7cb-2d48-4e34-b05a-308b76c8058e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7f586d94-0be1-4bc2-9f90-36f010a4b0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fd3652-7461-4924-a23a-51edddc5bb58",
        "cursor": {
          "ref": "43f2142f-6dfb-40bf-81e2-34377cc03ff6",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1ab3a9cd-64f8-4d7f-90e0-58ff02c3e290"
        },
        "item": {
          "id": "75fd3652-7461-4924-a23a-51edddc5bb58",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d01c92de-cfcf-44f9-b11a-828658c599dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0134fc2-c100-40b0-bcf2-9504c0430235",
        "cursor": {
          "ref": "f7e84d15-3a2b-46ea-b6a4-237e42511f65",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4ec5beb5-2432-4c85-add6-da0be5298353"
        },
        "item": {
          "id": "d0134fc2-c100-40b0-bcf2-9504c0430235",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4ae6a549-cb36-49b3-87a2-ec16d908dddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ab9257-9260-43ae-8815-835d9e33ba82",
        "cursor": {
          "ref": "f6e18ca7-f930-4d81-a9f9-23a8e2f4a37f",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "05756ead-f7f7-41b9-8d86-394193518ee8"
        },
        "item": {
          "id": "42ab9257-9260-43ae-8815-835d9e33ba82",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c7d894a8-3d1f-40fb-981f-8fb4355cd7a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a9d99c7-89d5-471a-bde1-397d903a5e48",
        "cursor": {
          "ref": "6ac9a1af-71ae-4996-afbe-e5f020e6a2bd",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c12e130f-6a57-4dce-a951-5e87827b3e5f"
        },
        "item": {
          "id": "1a9d99c7-89d5-471a-bde1-397d903a5e48",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "549731d8-fd1f-4a5a-b196-43c754d8c1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9abc34f-ca1b-4eed-8343-efad57c838bf",
        "cursor": {
          "ref": "8e85768e-08f6-4030-8c84-7861b6e73f9d",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "eac54652-d1ef-493f-8d7d-fc731f940223"
        },
        "item": {
          "id": "f9abc34f-ca1b-4eed-8343-efad57c838bf",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "dda97179-5b25-4698-9137-88d394573f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b00e07-3df7-4634-b5e8-d939a75c1b03",
        "cursor": {
          "ref": "da56013d-285e-469b-adae-260d0ab57c62",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d770a613-042e-4069-8fae-f8177bf0e7bd"
        },
        "item": {
          "id": "71b00e07-3df7-4634-b5e8-d939a75c1b03",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f71f5429-78b4-4f18-986d-ff3070b793c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c753761-a612-4fda-ba76-60b6890779fa",
        "cursor": {
          "ref": "a0054adf-21bb-4129-87ab-97aaf92b4bab",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "348b60e1-7b23-4993-a57e-4da3a49a62c2"
        },
        "item": {
          "id": "2c753761-a612-4fda-ba76-60b6890779fa",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "75134392-90c7-4a17-b3d8-f2eedf27dfa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bcc2157-3746-465e-9b7b-9cee4c4e8e19",
        "cursor": {
          "ref": "6b332b3e-66c0-4ec1-bc66-8539fbfac520",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "eef5c3be-355a-48a8-88b1-3952c1e7e79d"
        },
        "item": {
          "id": "5bcc2157-3746-465e-9b7b-9cee4c4e8e19",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4f33217f-71f9-40da-ad55-7e7a2d0ac44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5ba609-51ad-46d2-878d-78454410939d",
        "cursor": {
          "ref": "ff5a96b1-be3d-4e6e-a2c1-612553011d2c",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9c9e2ec1-3569-4b17-81a1-4d164a8e5e53"
        },
        "item": {
          "id": "2c5ba609-51ad-46d2-878d-78454410939d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3e7b51a6-add6-46be-9670-caefcc3eb43e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656ad1f9-1ceb-4ffd-bb06-8798beb026b4",
        "cursor": {
          "ref": "50900b0d-6257-49f2-9adf-4bc221a22c6c",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "44a25904-6f94-4de3-9b5b-5b37ebf5a2a1"
        },
        "item": {
          "id": "656ad1f9-1ceb-4ffd-bb06-8798beb026b4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0ace290a-0702-49c4-9356-1330cb7cfff6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49afb563-7861-4bb2-963f-21a6bb4a4869",
        "cursor": {
          "ref": "a40058f5-5bd8-4a70-96a7-50217e601184",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9ac981f0-872a-4133-b919-3752626f8070"
        },
        "item": {
          "id": "49afb563-7861-4bb2-963f-21a6bb4a4869",
          "name": "credentials_issue"
        },
        "response": {
          "id": "44926e0c-a849-4070-9576-ef6f059bd58c",
          "status": "Created",
          "code": 201,
          "responseTime": 174,
          "responseSize": 902
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a08b14-d88d-416e-8140-084504d17197",
        "cursor": {
          "ref": "35eaf8b7-8f82-468e-b0d5-01e27911cf9a",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "39ee4c5f-f807-48a1-aede-3c3399e6d6d9"
        },
        "item": {
          "id": "c4a08b14-d88d-416e-8140-084504d17197",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "49ca5347-d7a4-41ab-81ac-ea5d6688096c",
          "status": "Created",
          "code": 201,
          "responseTime": 178,
          "responseSize": 902
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "11682cf0-083f-4b28-aecd-4d7e40bd5695",
        "cursor": {
          "ref": "f3991360-0eb7-489f-a06f-6957388dd34d",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "20205205-2388-4616-a04a-be7647c6ad98"
        },
        "item": {
          "id": "11682cf0-083f-4b28-aecd-4d7e40bd5695",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b759c594-2ddb-4398-95b0-341784738695",
          "status": "Created",
          "code": 201,
          "responseTime": 100,
          "responseSize": 902
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d955f6-7265-414a-a9a0-f69b6ae91cb8",
        "cursor": {
          "ref": "a1d64dea-488a-4f29-8ccd-d55d6b3dcc16",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7e1ee1c9-59e5-423a-b51e-d3f8125e86fb"
        },
        "item": {
          "id": "67d955f6-7265-414a-a9a0-f69b6ae91cb8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f5b3b921-2433-4dd4-af7c-25e1ed118a57",
          "status": "Created",
          "code": 201,
          "responseTime": 56,
          "responseSize": 924
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85226c1-cb0f-4db5-a788-4e896b72f494",
        "cursor": {
          "ref": "271f7148-4854-4ae7-93ef-1a97f918d343",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "85ae6ee6-8000-4d25-9258-b8a2d07a8da7"
        },
        "item": {
          "id": "e85226c1-cb0f-4db5-a788-4e896b72f494",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9f81dfd5-0a69-4207-a96a-c36f27ce9fb3",
          "status": "Created",
          "code": 201,
          "responseTime": 63,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d585d0-3fb9-4251-b769-cac5aeb04e61",
        "cursor": {
          "ref": "5b413a29-414d-453e-8f37-01c7180a7664",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "63903204-8548-419f-8671-19de9528bb73"
        },
        "item": {
          "id": "b6d585d0-3fb9-4251-b769-cac5aeb04e61",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "91d9a8ce-b1f9-4ff2-b03e-87a0a4d69e63",
          "status": "Created",
          "code": 201,
          "responseTime": 58,
          "responseSize": 902
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab606c37-2e34-4da7-9cae-07b64b01d6c8",
        "cursor": {
          "ref": "0561102e-4e72-4182-8210-3998c51db37a",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8bb918b1-948b-4634-84da-b6ac6f8f7c08"
        },
        "item": {
          "id": "ab606c37-2e34-4da7-9cae-07b64b01d6c8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "111f6727-9f77-44b8-9991-66cf0c1905c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd8bf2e-c6fb-4675-a407-968526b156cd",
        "cursor": {
          "ref": "b36cd659-0fc4-49d1-98da-90f4aa9220e2",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d03a7469-35d3-421d-a8a8-29008e6550fb"
        },
        "item": {
          "id": "bfd8bf2e-c6fb-4675-a407-968526b156cd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "572ea33a-fe65-4427-8fe6-8867d38f3e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a738f6-3a14-4097-856f-6bf0ca4cc704",
        "cursor": {
          "ref": "ef284e15-e23d-44d4-95a4-b45c67a60be8",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "26062cf5-01c0-4d19-8e4c-86dbb8a8b76a"
        },
        "item": {
          "id": "88a738f6-3a14-4097-856f-6bf0ca4cc704",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d0307e8a-78b5-4ba5-b5c5-dee62d240a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6376499-1de5-4d57-907b-b5cd7b1526e4",
        "cursor": {
          "ref": "a6889718-56fc-4507-8185-ce4d901ee5fa",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "fd003c13-e4c7-4228-b811-abbf30387f02"
        },
        "item": {
          "id": "b6376499-1de5-4d57-907b-b5cd7b1526e4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0a493233-9ba0-421d-a053-18e69e1b1f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24c6278-3eea-4953-ab0c-1651866dfa5f",
        "cursor": {
          "ref": "a34f9686-7114-4b69-ba49-667cd25bf0e2",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "761ceef5-de64-4d42-af56-ae016085aa90"
        },
        "item": {
          "id": "a24c6278-3eea-4953-ab0c-1651866dfa5f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "34b6f3d1-fba7-4550-8e6a-5978fd32909c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58badfd1-12d1-4296-ba9f-3e4a4173d89d",
        "cursor": {
          "ref": "f23fd692-a296-4135-bf3d-5f849f258707",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8ef8420a-43d2-4c0f-945b-27acc0e1a3ab"
        },
        "item": {
          "id": "58badfd1-12d1-4296-ba9f-3e4a4173d89d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a9765eb4-3a26-44f3-8f00-f18f27309deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f06bac2-9cd6-45df-8101-330b9dfc7a4a",
        "cursor": {
          "ref": "6037cb4a-eb9f-438d-81f1-232d91777e87",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "46d59dbb-7801-4f4f-a3da-112853d7cea6"
        },
        "item": {
          "id": "9f06bac2-9cd6-45df-8101-330b9dfc7a4a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c9dd7508-d8cb-46ef-a3b2-e19c9fff3709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da0de5e-4713-4d54-ba42-6060c9fcd5d9",
        "cursor": {
          "ref": "1aa73e1c-c059-468c-858b-1bebfb69c584",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ab9bc1bf-dc38-40ad-8fac-b5f683fa7f4b"
        },
        "item": {
          "id": "6da0de5e-4713-4d54-ba42-6060c9fcd5d9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "919df0eb-16c4-48f6-a634-25a501625681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610430f6-f45b-4645-9f3e-64d93e87d526",
        "cursor": {
          "ref": "c9619dba-1f9e-4e4a-b382-9fe6bb95ba48",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1afcbe8a-cae8-43d2-b03d-26e5b63dad05"
        },
        "item": {
          "id": "610430f6-f45b-4645-9f3e-64d93e87d526",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5ba26475-7059-4d19-bc06-ac008f0b6d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031f5b20-37c4-49dc-b997-c374ec794ad1",
        "cursor": {
          "ref": "0ac02995-5de0-4cc2-817b-0e30ab8db0a2",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8faf3f75-b31d-4bfc-808b-1f9c46b07ac2"
        },
        "item": {
          "id": "031f5b20-37c4-49dc-b997-c374ec794ad1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6453c877-2a8b-47f2-9773-6962d1b56a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28294cf-fa69-462e-9ed1-52b448a95544",
        "cursor": {
          "ref": "07759145-e561-45e3-acf0-0e412306aa8a",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b1366432-86b0-4d8b-9c89-49f69379aceb"
        },
        "item": {
          "id": "f28294cf-fa69-462e-9ed1-52b448a95544",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "68c24573-938b-467d-8196-1b8a7808a2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8be9085-65d9-4ccc-a991-a7ad32ab656e",
        "cursor": {
          "ref": "7295ca4b-49c3-4a03-bb0e-cbfe18b4521e",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9ead8a4a-f0d3-4377-b82b-27c15c9e1e4b"
        },
        "item": {
          "id": "c8be9085-65d9-4ccc-a991-a7ad32ab656e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8d8dcd96-a117-4a1b-858c-d211df649fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ce60ee-d14c-477d-b91f-feb0024f9d20",
        "cursor": {
          "ref": "3e652742-5c98-42c2-9c80-10987125c79a",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e61ab978-a624-422a-9b09-bf4996addcb3"
        },
        "item": {
          "id": "50ce60ee-d14c-477d-b91f-feb0024f9d20",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "69b65376-f0ed-4e05-9d97-4163a835f346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8907ef7d-745b-4d7d-bd22-bd987fb1568d",
        "cursor": {
          "ref": "ffa54d82-d0cf-4b61-ae12-6411645d5f5f",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e2b8d1a3-fa38-4d02-bde5-43c9a5f3e763"
        },
        "item": {
          "id": "8907ef7d-745b-4d7d-bd22-bd987fb1568d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "21d257e5-a279-4a92-b986-2c23aa09013b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad180925-15a2-47bd-a277-27621c552524",
        "cursor": {
          "ref": "bb46531e-74c6-4b28-ad96-e5ab60dc0f61",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "809380aa-4537-4394-84f7-eddb69e3bad3"
        },
        "item": {
          "id": "ad180925-15a2-47bd-a277-27621c552524",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3a133cf0-3adb-4b3c-82c8-1f6111f09490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ee3283-1d64-45cc-ad76-c414afd06a84",
        "cursor": {
          "ref": "c3fcd6d4-6b48-4a66-8584-21db8d153ee8",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "aa00c635-8b40-43be-916b-b9b072367795"
        },
        "item": {
          "id": "19ee3283-1d64-45cc-ad76-c414afd06a84",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1e128358-5293-4d79-9ca7-3737f25cf834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d93b243-d12f-4bd8-bafd-dcebaeea45a3",
        "cursor": {
          "ref": "988ecf30-735a-491d-be20-d70c595a31f6",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7773a128-8058-48c6-98ce-4107821ceebb"
        },
        "item": {
          "id": "6d93b243-d12f-4bd8-bafd-dcebaeea45a3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0ae75dca-3e81-4036-969e-08f87e7fb5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86cc0378-9bea-4e2d-a403-0bd248801f6c",
        "cursor": {
          "ref": "167b8eae-a512-4d77-9013-3316fa511d01",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f7e2f989-404c-4837-8d16-261138447022"
        },
        "item": {
          "id": "86cc0378-9bea-4e2d-a403-0bd248801f6c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3ec374c8-bbb5-4e6b-8ee6-bba2ec80780b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dded2486-769a-418d-913f-d6cf659ff68e",
        "cursor": {
          "ref": "a8d9f901-e2ea-4048-afb5-46b2380f7951",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "41b80fc6-fdf2-4e77-b822-207152d49bc9"
        },
        "item": {
          "id": "dded2486-769a-418d-913f-d6cf659ff68e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4806da98-6208-4845-87de-73a5cf42d6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a723f857-d05e-453e-b0fa-1c448d120810",
        "cursor": {
          "ref": "a2393e7c-7b60-46a7-85de-9b8e88651ad2",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "086946c8-57af-4f74-b719-8b4d67c7a2f3"
        },
        "item": {
          "id": "a723f857-d05e-453e-b0fa-1c448d120810",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "dd882d08-96b0-4db7-90ef-bbdb0d878c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8eba5db-fe58-4258-81d8-2bc622320ff0",
        "cursor": {
          "ref": "ca964eb6-4728-4bba-b0d7-cb8a1b5b0fe1",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "fb8570d0-88a7-4640-a887-5f526980337f"
        },
        "item": {
          "id": "b8eba5db-fe58-4258-81d8-2bc622320ff0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6befaf43-af0e-4fcb-b38e-a31032f890c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e86a041-4cd7-4991-a92e-43db2b307461",
        "cursor": {
          "ref": "e4ac8017-e801-466b-a051-d20f8854d02f",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "44d05e60-f208-4e5b-a8ae-2e8af86154ef"
        },
        "item": {
          "id": "6e86a041-4cd7-4991-a92e-43db2b307461",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f2af551c-04e1-40d7-9235-4a010f40fc88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f50696-a27b-4204-b2b8-75c8852a146c",
        "cursor": {
          "ref": "eb515270-6829-4007-acf7-357bb49c86d0",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "81f932c1-d611-4f63-8db5-ad9da2ba11a5"
        },
        "item": {
          "id": "30f50696-a27b-4204-b2b8-75c8852a146c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "de834966-fc09-4df9-a2ac-6f26536e8f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a23d22-a375-404b-907e-b5eebeac5096",
        "cursor": {
          "ref": "59c21d8a-8b49-447c-ad04-b28c24c594ad",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3f26c4e0-eb13-4867-8383-cc889a2f2625"
        },
        "item": {
          "id": "a8a23d22-a375-404b-907e-b5eebeac5096",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6ee79b7f-42de-4de9-be95-a8db945bef93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc1f371-4af4-437d-be37-43861c62cf5a",
        "cursor": {
          "ref": "a17f1bad-d45f-415d-9417-db8df6882111",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2574051e-dbda-46d5-81ed-769a6d1b309a"
        },
        "item": {
          "id": "fcc1f371-4af4-437d-be37-43861c62cf5a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "24d821d2-6d1c-4eda-ba4e-d782a928718d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c4a34b-cc58-49e6-bd76-342c0820ab14",
        "cursor": {
          "ref": "5ded8b5c-a084-460f-b3c1-7409e1490a8d",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "607d7ab8-0cf2-4140-9147-47c21a7aaf0e"
        },
        "item": {
          "id": "91c4a34b-cc58-49e6-bd76-342c0820ab14",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a6be5e4f-6167-4478-a585-bce3ac0f8923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f43c42-e779-48c9-b7f8-c9374e69c734",
        "cursor": {
          "ref": "cda7b66f-5611-415d-8c04-4116beafab6e",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "151dce94-0a8c-4224-a115-175496a83e78"
        },
        "item": {
          "id": "f8f43c42-e779-48c9-b7f8-c9374e69c734",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ec81cc78-2cae-417c-a715-b5b9dd5e7ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a134297-c5ff-4de2-969e-274fa0fecd8e",
        "cursor": {
          "ref": "a55de783-0446-455a-9bf7-a97635545d43",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b4b53299-e513-46df-8e84-16c3f5f7bdea"
        },
        "item": {
          "id": "0a134297-c5ff-4de2-969e-274fa0fecd8e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6ce32d89-1ba6-423e-aca7-8dbaf65181e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e787e4-485c-4854-8f8d-61606e658a0e",
        "cursor": {
          "ref": "6fdd0728-3709-47ee-8d1b-96d71776d472",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ade09ab1-dc4f-471c-847b-8b6ee36c34f4"
        },
        "item": {
          "id": "b1e787e4-485c-4854-8f8d-61606e658a0e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a2290ee8-36eb-4fbb-bf3a-39b3b92f17c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1adc23b-fe98-45c6-b179-f5539339b440",
        "cursor": {
          "ref": "821148b3-4b80-4a0a-9d56-3cc2327e1d29",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6e14539a-4d48-4056-ab2c-2a39c70bd6f7"
        },
        "item": {
          "id": "e1adc23b-fe98-45c6-b179-f5539339b440",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "001b4295-e9d2-4772-9222-cc383df39811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7bfb792-83d3-455a-8321-31ceafc257d7",
        "cursor": {
          "ref": "f279d078-b153-457f-be84-8674f05fef03",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1a6d8afa-a835-4026-9621-b4525195f779"
        },
        "item": {
          "id": "f7bfb792-83d3-455a-8321-31ceafc257d7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "227a5583-2317-4b3b-b727-8287b3278a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8ed156-7ed7-4c9f-b6c5-dee583f48702",
        "cursor": {
          "ref": "dc8691b5-3336-4c01-94fd-84e7c01f5ffc",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b594ab79-3564-4260-b161-c4f79d6a52f7"
        },
        "item": {
          "id": "8b8ed156-7ed7-4c9f-b6c5-dee583f48702",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d79f00ef-fbe8-44d0-a61b-e32cb06e316c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d0abb8-4722-4e17-9fce-7ec626b7adf3",
        "cursor": {
          "ref": "94f55996-257a-4219-adc1-a04cb61dee63",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "dc839917-9fbb-4e3e-9f8f-380a57a7f121"
        },
        "item": {
          "id": "f3d0abb8-4722-4e17-9fce-7ec626b7adf3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "677794f2-9b8e-46a0-bb21-c35bbfcdb4a9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159d3599-1d2c-4efe-a4eb-47d2ab3c3e50",
        "cursor": {
          "ref": "efb240f5-33f5-459a-9f57-d5368a315cf9",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d1ba7750-d1f8-4f69-9d10-3a26db308a34"
        },
        "item": {
          "id": "159d3599-1d2c-4efe-a4eb-47d2ab3c3e50",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b3f680eb-30ec-40df-a331-0d06168329e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e31791-7a4e-456e-8df9-14ebfc70a89d",
        "cursor": {
          "ref": "d12471b0-5646-474f-ad55-4fb77eeb761c",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0d608c0a-5c52-4415-9efe-70c77c784b54"
        },
        "item": {
          "id": "b1e31791-7a4e-456e-8df9-14ebfc70a89d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d32a132f-8296-4aef-af74-710cba889afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03555acb-145c-4511-8d44-ad44b2ce6990",
        "cursor": {
          "ref": "72ba7783-11de-42bd-b7e9-ecb71ff32c94",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "357c817f-b0bb-4234-b6e8-dd5bf7190004"
        },
        "item": {
          "id": "03555acb-145c-4511-8d44-ad44b2ce6990",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c7de40d1-eee6-4d39-b213-b37d98df33e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5c7402-dc15-485f-a239-fdc85d78e28c",
        "cursor": {
          "ref": "5d912976-2ab4-4405-a1df-4ffdfc7d9eda",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "861a0a62-039e-4c93-b7d8-b2d2c518736d"
        },
        "item": {
          "id": "6d5c7402-dc15-485f-a239-fdc85d78e28c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d01174f4-5649-443e-9f89-5f7f96ec0300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1f2e11-9ff6-4e4b-95ea-72384eaf949c",
        "cursor": {
          "ref": "5671eff0-792e-4e5f-b6ef-6c50f05fe4f7",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5e9377a3-656f-48ac-bec1-892c0ab48812"
        },
        "item": {
          "id": "ff1f2e11-9ff6-4e4b-95ea-72384eaf949c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "186a7418-5f29-4938-800f-1c6aa744aa74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a3163f-feea-4b69-acbb-14fca117f040",
        "cursor": {
          "ref": "bd9aa044-dd9a-4a89-a7fb-5c7e3e9bf63e",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b128029a-a115-4a88-b344-b83158a4320f"
        },
        "item": {
          "id": "28a3163f-feea-4b69-acbb-14fca117f040",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c4fec41f-ed05-46a2-a382-56da18312497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb5aa9a-f71d-4dc6-9c18-07a9b856c7a5",
        "cursor": {
          "ref": "b4853907-4ffc-42b4-83d2-98c564c8b785",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5eb2725d-5102-42d3-ac83-51eb55595116"
        },
        "item": {
          "id": "8eb5aa9a-f71d-4dc6-9c18-07a9b856c7a5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c70c6db0-2ea5-4c6d-9781-f2efbd3da992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e29c5a3-3579-4ef2-8dde-593c79d83d30",
        "cursor": {
          "ref": "6963b2c8-a31e-4bcb-981a-2b5452badb96",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cdb71f14-9e29-431d-bcf8-46c1ca302067"
        },
        "item": {
          "id": "9e29c5a3-3579-4ef2-8dde-593c79d83d30",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5c7cef8b-9bb9-4828-b187-266b3920c8c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d312f2d-768b-467b-9ef9-a7504eef35fd",
        "cursor": {
          "ref": "355b1ba7-129d-4abf-acf4-6fc719a3c94a",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2a8b97ef-7d65-4ac1-a396-d07caba752f8"
        },
        "item": {
          "id": "2d312f2d-768b-467b-9ef9-a7504eef35fd",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b1292fec-5f90-47d0-82f6-6e86225370dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c15e31-45f7-4b98-b954-844650027fe0",
        "cursor": {
          "ref": "608e6963-6660-4950-a3d0-8a44e86a833b",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d9c92020-de63-4c7a-9d85-f6b0112a0a7a"
        },
        "item": {
          "id": "92c15e31-45f7-4b98-b954-844650027fe0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "216602cf-024d-4cbf-bac9-0d4d19bf8b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0455959-1f10-4852-8db5-b1dbb0616055",
        "cursor": {
          "ref": "f98c22de-4406-4a24-a886-3581719803f3",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6968c3b6-8d28-4b7e-82a5-1e4dd53f9482"
        },
        "item": {
          "id": "e0455959-1f10-4852-8db5-b1dbb0616055",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d59dc1ef-fa06-4612-9794-429960ae4c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f32a49-ff9a-477e-bdc5-2817b06a8908",
        "cursor": {
          "ref": "ae1747d4-56c3-47fa-bf81-835a32d19ad5",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e0900b2c-7a42-4ae5-9420-951eb0eb533b"
        },
        "item": {
          "id": "21f32a49-ff9a-477e-bdc5-2817b06a8908",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "99c6191b-b86c-4a06-a33b-c8fe20a322f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb509e8-f700-4a67-a0c5-78c8a328d245",
        "cursor": {
          "ref": "fa7e0c10-49cc-4766-bf06-f661ae215399",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8d063fa9-70aa-4225-94fe-3b6d1047bf01"
        },
        "item": {
          "id": "6eb509e8-f700-4a67-a0c5-78c8a328d245",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0ba3be43-a37d-4bdc-b350-e22b7466dc8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec50a4b-54b5-4cc1-8e52-0d962d1938c2",
        "cursor": {
          "ref": "5f4aae5b-813e-4310-b316-914f01f6ad8d",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "dc2d51f1-6297-48ce-8599-b169cabcd0c6"
        },
        "item": {
          "id": "8ec50a4b-54b5-4cc1-8e52-0d962d1938c2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ae85d1e0-e5f5-4a20-92df-f50c7d407397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe0fa2df-2a8d-4160-af5c-d37ae581affe",
        "cursor": {
          "ref": "3653097f-39b8-4479-b769-19be8a64d0bc",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "129c5dc8-dc83-4452-b21a-709d4ba2954a"
        },
        "item": {
          "id": "fe0fa2df-2a8d-4160-af5c-d37ae581affe",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b55a3eff-4219-46ad-9081-a9a3d143abc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b49dd7-1d8a-41a6-9f6b-f9f1a7369e86",
        "cursor": {
          "ref": "86235cf6-7ed4-4e8f-ba8d-a86c8899a9d0",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "994739af-52c3-4d10-bf0f-6ac27b9431c0"
        },
        "item": {
          "id": "22b49dd7-1d8a-41a6-9f6b-f9f1a7369e86",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "afcdaafb-d6f3-4ef6-adde-c9099e2d2a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "759c7740-a3c6-40f5-99e6-c7f51ce102ee",
        "cursor": {
          "ref": "44b8612f-c129-4f4d-838e-a0008ad98350",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e0bc44f9-60bc-44a6-9bad-d88903824e88"
        },
        "item": {
          "id": "759c7740-a3c6-40f5-99e6-c7f51ce102ee",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a6a602b9-9d8c-4009-83d7-13904be2141e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf36d257-a72f-49a7-b81a-2f0c0c517028",
        "cursor": {
          "ref": "a03a3aaf-1a25-410d-b7e7-a256a4af6c4a",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "23b95dd2-3d4a-4d58-b292-41dad045b331"
        },
        "item": {
          "id": "bf36d257-a72f-49a7-b81a-2f0c0c517028",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2768b63f-0993-4c28-a584-4b1fcc4d97a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0be8d02-a06a-49de-8f47-972cdf418f30",
        "cursor": {
          "ref": "3b278384-2a56-437c-aa45-34b20dfeb52b",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "22bee645-8ca2-4b98-ba88-e01dc3949539"
        },
        "item": {
          "id": "e0be8d02-a06a-49de-8f47-972cdf418f30",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "38c41e42-69e6-4434-ac75-63066eee9f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d6eaf4-815d-4541-874a-795f3d4aba13",
        "cursor": {
          "ref": "01f01d01-7afa-4436-af56-2a7fb85240fb",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ccc65870-2669-404f-a5a3-bbc59688b1d3"
        },
        "item": {
          "id": "46d6eaf4-815d-4541-874a-795f3d4aba13",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "219caa86-b785-43af-8a08-775d31f26fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28f194b-da68-4105-b159-9b4788f0c017",
        "cursor": {
          "ref": "e14ab259-b1cf-479c-9503-45fb0bcd5ef4",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e1f5f3cf-7196-4274-86db-9bf57f9cbf30"
        },
        "item": {
          "id": "b28f194b-da68-4105-b159-9b4788f0c017",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3e1d9ec8-1d89-4242-990c-b780304ec6d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ad5613-2a83-43cf-a53f-d8d2b8e8b51a",
        "cursor": {
          "ref": "14178fcb-aa67-47a3-8620-64446a6c90ea",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0dacd74f-fb74-4499-ab60-e215511adf34"
        },
        "item": {
          "id": "91ad5613-2a83-43cf-a53f-d8d2b8e8b51a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ebe128ae-701c-4f33-8503-4aa1c8f2d446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6074bf00-1adb-43b3-aad1-82b5b2e9e623",
        "cursor": {
          "ref": "bf3b284f-520e-41e6-b0e4-b96406882c17",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "78ae54f9-1cfc-4eb9-93d8-c8fcab14763b"
        },
        "item": {
          "id": "6074bf00-1adb-43b3-aad1-82b5b2e9e623",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "93914f66-0217-4f12-97b3-85490beb6b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8e9b17-d8af-4379-aef9-866d7fc5cf26",
        "cursor": {
          "ref": "a22057dc-fd79-41e4-806c-a66f1bfe44e3",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d4dd4da5-461a-4ba5-8498-c0225abbb86b"
        },
        "item": {
          "id": "2f8e9b17-d8af-4379-aef9-866d7fc5cf26",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "737b4e79-a1a6-422b-aaf0-12d50e8db07f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd916f23-870b-4b0f-9dc6-c051b4b94fdf",
        "cursor": {
          "ref": "140351f2-70b2-4891-9387-468c57f9686f",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0dfd6441-a59c-4043-9faf-c207d3a5e257"
        },
        "item": {
          "id": "bd916f23-870b-4b0f-9dc6-c051b4b94fdf",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a2681c06-1996-4792-a75e-82b390c2bcd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa09df4-b6f5-4dfc-8e72-2560287129cd",
        "cursor": {
          "ref": "e9fdf9fc-9260-49b6-99a4-a7cae62a0b08",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "590bdccd-2e11-4c8e-b690-c4fe0807175c"
        },
        "item": {
          "id": "0aa09df4-b6f5-4dfc-8e72-2560287129cd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6ed590af-19b9-4d0a-949b-0a6c8e83cda5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024494db-beac-48e8-8c15-e35f9420dc0f",
        "cursor": {
          "ref": "906a7db9-681c-4e9c-a764-2fdc1de1d250",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "819d39b8-6103-45e3-8c79-351d61c581d6"
        },
        "item": {
          "id": "024494db-beac-48e8-8c15-e35f9420dc0f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6b1c429b-ad36-4c3d-89ba-e55204cf0e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5603c2b0-ec50-4383-868e-30d85b5e71a0",
        "cursor": {
          "ref": "6284be97-1f8e-40a7-be9f-0a3b6598d5db",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a08cd6a5-206f-4002-b11e-b50e7220e85b"
        },
        "item": {
          "id": "5603c2b0-ec50-4383-868e-30d85b5e71a0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7f121f64-6134-4582-b5e7-5ac2ee2cc4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc6b93d-2a6c-410a-b26e-668259e21781",
        "cursor": {
          "ref": "6d192ed5-6e9c-4462-9741-7b8a7526a15b",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2b765164-7655-40dc-8361-dc65ba16a6fa"
        },
        "item": {
          "id": "8cc6b93d-2a6c-410a-b26e-668259e21781",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8c7e6e0f-3c07-44e5-9fbc-51ee09ab3e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9147ce6f-efe6-452b-b66a-acb549abdb0b",
        "cursor": {
          "ref": "4f0521ae-5776-4e13-9991-9a87c0a841b8",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a0d30af0-0d4f-45c9-9b69-2c6b6aed70e5"
        },
        "item": {
          "id": "9147ce6f-efe6-452b-b66a-acb549abdb0b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "01a468fa-5467-40dc-8202-5c64e55e5441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76188e4-a9ec-4e82-b4af-89d4ec903e07",
        "cursor": {
          "ref": "14a8f222-9673-417b-be5e-b1fa8e19c51f",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2a8b7948-e124-484f-aa86-dae56175a516"
        },
        "item": {
          "id": "f76188e4-a9ec-4e82-b4af-89d4ec903e07",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f7a40a88-a502-46c6-8eb3-e10deddd480b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eebc03e3-7b5a-48ac-b765-ec5ee106f8fa",
        "cursor": {
          "ref": "05c0cde5-ec2d-4928-99eb-e20e434d1056",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "880eca08-cc4b-4b16-b89b-3a23c321d294"
        },
        "item": {
          "id": "eebc03e3-7b5a-48ac-b765-ec5ee106f8fa",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "da2f546f-ac6d-4037-84a8-2b416d753327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235f0d20-6400-49d2-80ee-724b5a90e2d9",
        "cursor": {
          "ref": "0b36f533-f9f5-4776-b17d-4470710cf5ce",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "78ce451a-b7c7-4448-9e7f-036692954865"
        },
        "item": {
          "id": "235f0d20-6400-49d2-80ee-724b5a90e2d9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ce73b3d8-edd4-49be-a904-bb7dc82fb7f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0777f35f-f3f8-40ff-9dfb-1fab0c69e0e7",
        "cursor": {
          "ref": "f3463507-0d3e-436b-a9dd-007a57cda09b",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a0d6eb39-3d69-4792-94c8-4028fd0d12a1"
        },
        "item": {
          "id": "0777f35f-f3f8-40ff-9dfb-1fab0c69e0e7",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d777f24d-75ee-4b6d-b32f-7e6633125d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe60ba15-1036-446a-9ed5-85635f996b61",
        "cursor": {
          "ref": "ce71ff4e-ef9a-4597-89af-3d7f374e9002",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "036b81ad-ce13-4150-a3f4-af5ec9f16fd1"
        },
        "item": {
          "id": "fe60ba15-1036-446a-9ed5-85635f996b61",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1902e787-e4d1-4b85-aac8-230630d1faa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e618e33-4cf2-413e-801a-a6daca3b1ebe",
        "cursor": {
          "ref": "8bf9a2e0-d7aa-469b-aaf8-9f88c70f68fa",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "79bbd376-23fe-413a-878c-59b6adf40752"
        },
        "item": {
          "id": "4e618e33-4cf2-413e-801a-a6daca3b1ebe",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e0cad140-6baa-4265-a29f-cdfde4a16a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa8cd10-96de-4501-aff2-553d731e1f0d",
        "cursor": {
          "ref": "3eba6dff-604c-47c1-90c2-c8b60d935448",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ec03e957-2b9f-4652-840b-53c5ff8f7490"
        },
        "item": {
          "id": "cfa8cd10-96de-4501-aff2-553d731e1f0d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "50fe1652-a8c2-45f3-ba11-c214d016d03e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1106526-0661-47bb-8db5-280e10485683",
        "cursor": {
          "ref": "b823fdba-e44d-4adb-968c-a2762207f70b",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0410d993-e61c-4797-8bd3-a64ab1dc566c"
        },
        "item": {
          "id": "a1106526-0661-47bb-8db5-280e10485683",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1dde16da-002e-4480-92e1-8ad643efb96d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea4cf87-51aa-47f0-a1c1-03193502ea2d",
        "cursor": {
          "ref": "948c25c3-4f92-48d6-a6c9-7ae393ba421b",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e01d8fff-c916-4340-b82b-518acb64213f"
        },
        "item": {
          "id": "1ea4cf87-51aa-47f0-a1c1-03193502ea2d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "03d8620d-f9c6-4cd7-a901-90cdd2dabe13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb647026-cf7d-4917-a8cc-8249e7b996e0",
        "cursor": {
          "ref": "1744973b-21ec-4c69-b236-ea57d7d30b40",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "86e132c6-09b1-4046-93c3-4eb5a6b84b8d"
        },
        "item": {
          "id": "fb647026-cf7d-4917-a8cc-8249e7b996e0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "40e00d3f-1a49-49aa-930b-43d91c236d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7818861-2bee-4b20-a036-777bc0f6f55c",
        "cursor": {
          "ref": "d7dac3af-4ddc-4093-b81d-0a9f7ef55ae4",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ca98bfca-63ca-4907-81b2-6e6c8eb36c83"
        },
        "item": {
          "id": "f7818861-2bee-4b20-a036-777bc0f6f55c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f288d840-17d3-4d36-972b-27cd435dd3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb64128-c659-47b5-b531-20d1c3286aa4",
        "cursor": {
          "ref": "b53c63b9-4bb9-4467-9a2a-5c73b8576b1c",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9d00b824-bed6-46c2-a0de-62a2784a7f12"
        },
        "item": {
          "id": "8bb64128-c659-47b5-b531-20d1c3286aa4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "abdd7404-1a3c-4177-8913-8682c4537eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9254072e-b9c9-4a64-9854-3603a38f86b4",
        "cursor": {
          "ref": "841cf954-6ca9-42f1-ba1a-4113d66fbd55",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2e4b149f-6274-44b0-ae10-235ef22680bb"
        },
        "item": {
          "id": "9254072e-b9c9-4a64-9854-3603a38f86b4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "39ca340e-0c34-4daf-8b4c-c0d398a61f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a741f8-4f4f-4b07-b813-3b1480cfda61",
        "cursor": {
          "ref": "4abf681d-23e3-4d4b-8e47-4559e4958ac2",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e84b2a49-0803-4a5b-9219-0ac840c8db6e"
        },
        "item": {
          "id": "34a741f8-4f4f-4b07-b813-3b1480cfda61",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6d974b84-9d8a-4fbc-ad61-b01cc1fbb474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef471f10-af46-43ac-a05c-a0518e2841b9",
        "cursor": {
          "ref": "11e6b1dc-c12c-468c-816f-53348d01312f",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f19f0cc0-a8b2-4f4d-8cee-64a819a73991"
        },
        "item": {
          "id": "ef471f10-af46-43ac-a05c-a0518e2841b9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f7cd9204-2430-4149-97f2-d6d4037933bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec58f41-9d0a-47dd-97f4-6fdc27e37b12",
        "cursor": {
          "ref": "4068e954-8579-4950-bcd5-48af25e8fd03",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d7742287-5451-440e-b74c-0ecb0213cbf8"
        },
        "item": {
          "id": "8ec58f41-9d0a-47dd-97f4-6fdc27e37b12",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7337537f-526f-4faf-ba21-6f2019be760c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814a0c14-3387-41eb-9c84-59218fb2f9c3",
        "cursor": {
          "ref": "ce47e515-790f-4277-9169-84b54e5dce46",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "eb9d593b-c6d3-4450-9954-9a719d2c7407"
        },
        "item": {
          "id": "814a0c14-3387-41eb-9c84-59218fb2f9c3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5813847b-c2f3-453e-bc4f-d44c9abe58b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685c0963-2f76-4f09-91f5-f8a6f7d3364d",
        "cursor": {
          "ref": "0f3c3599-90ac-4831-96fd-2945eb84d145",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b1aad8f4-7ab4-4523-a359-75c6b748414e"
        },
        "item": {
          "id": "685c0963-2f76-4f09-91f5-f8a6f7d3364d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f13de5ac-469b-4563-bd51-e56132334aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf60ea1-6902-41f1-af0e-f67d6ab404ec",
        "cursor": {
          "ref": "d8b8854e-a6e5-4981-b4e8-2f84aa1a9707",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "704c330a-e01d-4e78-9530-fb8305058776"
        },
        "item": {
          "id": "2bf60ea1-6902-41f1-af0e-f67d6ab404ec",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5434ae93-f6c7-4775-9cff-381dc58ea9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87fd03f-cc2f-4e5d-b2db-0a12435414f4",
        "cursor": {
          "ref": "bedd725a-fc43-44db-8d8c-ace8e9b1f5c0",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6afc5233-bd43-406e-9cd6-3732023617eb"
        },
        "item": {
          "id": "e87fd03f-cc2f-4e5d-b2db-0a12435414f4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "469b1aff-966f-4a2c-a1bd-7d22bf02da8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cea0d38-df8e-48f1-8514-5eab871cd16a",
        "cursor": {
          "ref": "dc24a619-8716-4797-9a75-8b0207fa171f",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "fe4f2217-064d-432b-b7c3-044c5fcf12a7"
        },
        "item": {
          "id": "8cea0d38-df8e-48f1-8514-5eab871cd16a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "aec83e72-7f0c-429d-9f62-2d97ea03da76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb4ef62-995a-4eaa-a4ad-903d07caec5c",
        "cursor": {
          "ref": "bf3349a3-9b20-4e4a-8403-37ad74e1a30f",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0c708211-77c6-455c-baad-b448d5075c1b"
        },
        "item": {
          "id": "1fb4ef62-995a-4eaa-a4ad-903d07caec5c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d8af47f0-2407-4cab-800e-8c1ea8253d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a48939-e502-47b8-881d-5be162adfb72",
        "cursor": {
          "ref": "dcc78646-a894-4585-8ccb-0556b6361d30",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0d2e84ee-0fd1-47a7-a66a-464b08a21aca"
        },
        "item": {
          "id": "14a48939-e502-47b8-881d-5be162adfb72",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b5d2455e-d0c5-4a03-afcf-012f0379a5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff0328f-878b-4732-8768-2e32ecc2e5c0",
        "cursor": {
          "ref": "b21c4433-839e-4f84-bae1-92c74fbde00d",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c6323b1b-8529-45c7-ad7f-c70bc83c82f5"
        },
        "item": {
          "id": "aff0328f-878b-4732-8768-2e32ecc2e5c0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "48230f65-f9d0-4a14-a15f-ae42a0e9f04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bba0e91-c9f0-4996-a463-387934dbf4bd",
        "cursor": {
          "ref": "2d3ae3f0-5032-48b7-b998-cda8ca7516ad",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "61eb888a-3a19-4e91-847e-81a4cd8fae56"
        },
        "item": {
          "id": "1bba0e91-c9f0-4996-a463-387934dbf4bd",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d564dbe7-cf76-4a58-bda3-a110fcd4f5c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a11d85-b8b5-4621-a118-f56ec2b7f258",
        "cursor": {
          "ref": "46fb3602-3a94-496b-b250-9ef979238bb3",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c0d3417d-cbdc-49a6-a198-769fe7fff2c8"
        },
        "item": {
          "id": "e1a11d85-b8b5-4621-a118-f56ec2b7f258",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a4ce936e-8553-4e5a-ac51-8d718bba8ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1213b7-b7ee-4c74-b57e-e5aaa3fcf74b",
        "cursor": {
          "ref": "d49574d9-34ae-4f5e-a64f-f15decfdd067",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e4e518f1-d49f-4502-8567-6aa08b2ca4da"
        },
        "item": {
          "id": "6a1213b7-b7ee-4c74-b57e-e5aaa3fcf74b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "088c5291-2a99-4c5f-9451-d3fc62806050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fa7df4-e569-419c-979c-a52465166e21",
        "cursor": {
          "ref": "357e1159-5358-432e-a27c-a47b55068dbb",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f514a304-c20d-4087-97d9-08f54e41d7cb"
        },
        "item": {
          "id": "84fa7df4-e569-419c-979c-a52465166e21",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "80658edf-71b3-4ba3-b2d7-aae344e02b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ec0885-2f36-4a4a-9e1e-a6d4c7ad29f5",
        "cursor": {
          "ref": "b880148a-1c91-4b6c-b545-3a3e723bc3b0",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "766cbefe-76b2-49c8-b0db-fa419694e576"
        },
        "item": {
          "id": "e7ec0885-2f36-4a4a-9e1e-a6d4c7ad29f5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "93ed2201-38fb-4c7b-a6d0-c0403da64167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9053149e-ef65-4253-8259-12cbb400aadd",
        "cursor": {
          "ref": "3c7c8ddd-9612-4726-8caf-564137ca3396",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7d2fa928-08ce-4eff-a60c-d8cb9a5cbac3"
        },
        "item": {
          "id": "9053149e-ef65-4253-8259-12cbb400aadd",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d6e2e67f-0a35-4f1f-ac4c-211037ef4334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f77dcd-324e-446a-ba58-41bd5bc23e85",
        "cursor": {
          "ref": "c95adb6d-0124-44f6-ae0c-8bb201192248",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b209b31d-063c-4a0a-861a-2e13a400909e"
        },
        "item": {
          "id": "36f77dcd-324e-446a-ba58-41bd5bc23e85",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f60853d2-1004-4239-b568-054239690bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8328f8a1-5dc4-4bcc-a984-eebf04e4712c",
        "cursor": {
          "ref": "c5785039-0a1c-42eb-a760-df84c583f520",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "595618e4-d922-4e76-a165-d98a111f05c2"
        },
        "item": {
          "id": "8328f8a1-5dc4-4bcc-a984-eebf04e4712c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "56bd2d1a-ee1d-4b6c-a242-121ba3e7007f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f177c4a-8452-4f28-bad4-3bdb06692219",
        "cursor": {
          "ref": "aa1ab6c0-7689-4e1b-860f-96979787905a",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "742731f4-4ee5-4b40-9517-628e88bb1e2f"
        },
        "item": {
          "id": "2f177c4a-8452-4f28-bad4-3bdb06692219",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4c5eb15f-64c9-4fb5-92f6-8e1f347e941c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f05c841-dda6-47cf-9913-14c79ba2fadd",
        "cursor": {
          "ref": "c0df06b8-d314-4bf2-81fa-741b3f0636bf",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ade94327-e05c-458e-a04b-9effce34f677"
        },
        "item": {
          "id": "8f05c841-dda6-47cf-9913-14c79ba2fadd",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4da0ca8a-0ff4-43a8-a09b-9b9560f9ea81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260a7501-0023-47ab-8af5-00be07ac3eba",
        "cursor": {
          "ref": "31559f98-66f3-4a9e-866b-38a61106402d",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f7f49db5-ba7b-4280-9e29-d17912393711"
        },
        "item": {
          "id": "260a7501-0023-47ab-8af5-00be07ac3eba",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c7a46d08-ec85-4257-95a8-ab5e48f2cc1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb936ae5-3405-4328-9d6e-ae7bd8143aca",
        "cursor": {
          "ref": "1e3ff72d-70a6-4d94-9174-c082feb0b9e4",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "043e23e3-3cdf-4cbd-aa9a-296e0a5b651b"
        },
        "item": {
          "id": "bb936ae5-3405-4328-9d6e-ae7bd8143aca",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "dba35be0-57b5-4efa-8227-d9c615c93b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89f8358-302e-48c5-a285-148aee3bb846",
        "cursor": {
          "ref": "1a8aed35-a966-41fd-a4df-e5e932233cd9",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3f1acb7f-1a9b-4699-a5c8-0de21107bfd8"
        },
        "item": {
          "id": "e89f8358-302e-48c5-a285-148aee3bb846",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8fba1ebc-c062-4b41-a728-3e40fbf9f5b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8c5bc6-a9d5-4cbb-80a0-06a9794f1e4f",
        "cursor": {
          "ref": "0e282604-44a2-4c3b-8bc1-cb659792e2d1",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "17f6f6cd-1e5a-4e85-94c6-6a502ab25357"
        },
        "item": {
          "id": "4a8c5bc6-a9d5-4cbb-80a0-06a9794f1e4f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "adc8606b-baa0-410e-af82-ee0a4072aed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223f02d5-f239-4788-8eb4-534e1133f03e",
        "cursor": {
          "ref": "ae0fce20-fbb6-4118-9f34-aefee0d7c006",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "eb8c8d67-b2d1-4c58-b5b8-48a509eaf65b"
        },
        "item": {
          "id": "223f02d5-f239-4788-8eb4-534e1133f03e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "46306e8e-26b5-4d17-9e98-66917da13395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1c6f40-3f68-4540-b120-5469e3939df5",
        "cursor": {
          "ref": "8efaa1c6-e973-472f-a52f-621c7630477f",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8dac42d9-9265-48da-b1fc-ef6a8fb8331c"
        },
        "item": {
          "id": "6e1c6f40-3f68-4540-b120-5469e3939df5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "bc516353-fd01-40df-a379-30bfef7108ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abdcd581-ca4b-43c7-8483-dbc3933d6796",
        "cursor": {
          "ref": "1177e5bb-8d05-4d4e-a441-29619a0934a3",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f0fc7a12-03d0-4079-814d-739d70095273"
        },
        "item": {
          "id": "abdcd581-ca4b-43c7-8483-dbc3933d6796",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "dd1a6e9a-2ec5-4da7-80fa-46886cba1249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dade5d5-a2c1-4eb3-b3a4-5b5708c32341",
        "cursor": {
          "ref": "a08d21ea-ba4d-43ff-8f2d-283c79b421a9",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "37254a18-7803-46f6-b30f-b9f4bfdd678a"
        },
        "item": {
          "id": "3dade5d5-a2c1-4eb3-b3a4-5b5708c32341",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "10a5a22f-0521-44e7-964a-2a280ee5574d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9c6aa9-a5cb-4c5e-90c4-ad9dc82c1bad",
        "cursor": {
          "ref": "f41f76d4-c277-4b95-8d8a-3a3e016a2b38",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2024b51f-2f92-4fa5-951b-6ba3d42ff0c0"
        },
        "item": {
          "id": "8c9c6aa9-a5cb-4c5e-90c4-ad9dc82c1bad",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e83c36f7-eefc-4a6d-8b7f-2a489c6e8fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b75bf9f-dd10-4c40-87d4-92ce2dd8810d",
        "cursor": {
          "ref": "12ef6679-6ec3-4dfd-8a91-694afc4e5cd2",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0bb9de3c-a258-49bc-840e-3177c19d5c84"
        },
        "item": {
          "id": "2b75bf9f-dd10-4c40-87d4-92ce2dd8810d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4a481a72-05b2-4523-ab57-e19aa735f596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62cb15e2-c6c2-47b9-aac8-c7bf3b03334a",
        "cursor": {
          "ref": "d9c53d34-9a4f-4f60-a735-a12615594b9e",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7d3e6716-5fe2-403d-affd-eabe30a339cc"
        },
        "item": {
          "id": "62cb15e2-c6c2-47b9-aac8-c7bf3b03334a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "765ec4f3-d7de-48b7-8400-5871a4de7a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94e73ae-a05c-438c-8738-da04e41785b1",
        "cursor": {
          "ref": "f2a4fd96-971b-43fe-b953-986812eb281f",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a4e29b0a-f096-449c-aa84-131e7746760d"
        },
        "item": {
          "id": "f94e73ae-a05c-438c-8738-da04e41785b1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b31899fa-072c-481d-a208-c382f9f7083b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73c4006-ca36-4f33-9fe4-2752366e29f7",
        "cursor": {
          "ref": "6ed0d9f5-81ac-4c6c-aa47-fb4910b8156e",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "731d1c15-1743-4eb8-b524-3d08a5eef007"
        },
        "item": {
          "id": "c73c4006-ca36-4f33-9fe4-2752366e29f7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5634723b-2d6a-4bea-9709-a82d258ce55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560d911f-09bb-420f-a008-a3d3119656a9",
        "cursor": {
          "ref": "c73fc568-dcce-4bcd-9f63-08dd23fb58a2",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8c5c33e3-654f-46d9-989d-ef2d07d1a7b6"
        },
        "item": {
          "id": "560d911f-09bb-420f-a008-a3d3119656a9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "47985a75-5ae5-43d3-b22a-e35f571b0f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fae2d33-95a1-40b2-a39a-5f2a80d3bbe1",
        "cursor": {
          "ref": "dd2ee9cc-b874-4dad-9d4a-0f3077be8ea7",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9f87ec47-e3a6-45e9-b027-ed2844a76656"
        },
        "item": {
          "id": "2fae2d33-95a1-40b2-a39a-5f2a80d3bbe1",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b2c4c22f-855b-4f18-9119-d2cec7e19ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570a70fa-7c95-4178-a40b-f362422ee6b4",
        "cursor": {
          "ref": "0cca96ba-395f-4193-b116-e509175c7168",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "15d84242-0b38-4440-a271-92f39d85b92c"
        },
        "item": {
          "id": "570a70fa-7c95-4178-a40b-f362422ee6b4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b1dee7a2-093f-48d6-a63d-76b866170b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f757586-c2d4-468a-8b58-d83049556728",
        "cursor": {
          "ref": "1e8376d7-2f2f-4585-a8bf-314bce203fc3",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5f8c8442-0522-4bb5-93b5-95ba53750c81"
        },
        "item": {
          "id": "5f757586-c2d4-468a-8b58-d83049556728",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2d0fb2bb-5bfb-49b8-959e-96b0db92d8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00296a4-6c15-47a1-a4db-c9f7315dfdfc",
        "cursor": {
          "ref": "bde5a662-904c-439a-9af7-b5db94e43fa9",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e300e549-5047-4596-aabb-0820a1b4f841"
        },
        "item": {
          "id": "e00296a4-6c15-47a1-a4db-c9f7315dfdfc",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "865526dc-c290-4f49-8115-e972fa1a2e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b0744b-c496-43f9-99e4-7efcbceb4785",
        "cursor": {
          "ref": "f9dd27b9-6b93-41fb-96be-50442ac866b1",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "03bded0d-9bb2-4a0b-8530-37d4e244aac5"
        },
        "item": {
          "id": "01b0744b-c496-43f9-99e4-7efcbceb4785",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "23f04032-02ca-4e47-aa02-c2f6217c8d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72edd94-ab6d-4997-9a98-f70fa5616a07",
        "cursor": {
          "ref": "1e21db41-21b8-46fc-abe6-7a284c9a1993",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4d9a3dcc-0276-4075-bc31-2d02786d16bd"
        },
        "item": {
          "id": "e72edd94-ab6d-4997-9a98-f70fa5616a07",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7f088651-6149-47ac-ac56-3e6f890a4df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f6c226-1e19-4d6c-a51e-34876a9d1ca6",
        "cursor": {
          "ref": "9139b08d-e7be-4edb-bcf2-6197c877856f",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "03bdbda2-27ce-40af-a753-978a1f21ed3d"
        },
        "item": {
          "id": "65f6c226-1e19-4d6c-a51e-34876a9d1ca6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c01e6a6d-d45e-49fd-8126-8a5f5c79a7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25e2aa5-c0bd-4055-b947-5406354c53fa",
        "cursor": {
          "ref": "aef44858-09e4-4731-a6e7-95d4b379f32c",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "dab44232-fdb3-4cbe-83df-f79e808cde3a"
        },
        "item": {
          "id": "c25e2aa5-c0bd-4055-b947-5406354c53fa",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "155b9694-5d8a-45e3-a2d4-546fdac1f72b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f3c1e2-70be-4285-b737-97607633b2a9",
        "cursor": {
          "ref": "58af8673-db34-483c-a373-fd9a1b5a700d",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7b795a9e-5e46-46b0-ac7f-8ba71e5bed02"
        },
        "item": {
          "id": "16f3c1e2-70be-4285-b737-97607633b2a9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8d01e10e-4883-460d-ae44-4b7e6c027b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fcd4d7-b590-4e23-9a2c-9dec5f549668",
        "cursor": {
          "ref": "7b3e1310-742d-407d-b02c-e8e0d82c9d1e",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d6b43934-10c4-4146-9e19-150a317f092e"
        },
        "item": {
          "id": "25fcd4d7-b590-4e23-9a2c-9dec5f549668",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c37b0d5e-31a3-45d8-a264-5127ace9e14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea4cdff-519b-46f6-b39b-f73822c565bc",
        "cursor": {
          "ref": "ca064957-fac5-4995-a5e9-d766864ebde1",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "717addd8-0107-42cb-92ef-9898622908e7"
        },
        "item": {
          "id": "6ea4cdff-519b-46f6-b39b-f73822c565bc",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f84e568b-fe4c-43a1-a058-2ef80c36ef78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4618593-0c34-450e-96c0-102927a40bbe",
        "cursor": {
          "ref": "846b3a5e-72cb-494d-85e7-3b10a6af2128",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1a8119cc-4065-4c12-929a-2348cfbc7803"
        },
        "item": {
          "id": "a4618593-0c34-450e-96c0-102927a40bbe",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4224d5c5-859e-4622-9d17-6f595f8e29d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4901bf3a-a88a-4271-b8ff-493b1311c443",
        "cursor": {
          "ref": "27876aa7-22e8-4a85-abd9-1480b1f84764",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "50e2a2b3-ce38-49b0-9d7d-fe6ccf710bf7"
        },
        "item": {
          "id": "4901bf3a-a88a-4271-b8ff-493b1311c443",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1cf62ebb-1bbd-4dd6-ad0b-91af4860310f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eac1c55-0922-4abb-9cdd-4b0d8da26965",
        "cursor": {
          "ref": "eeca8945-a423-4fc6-8697-e195c254c96e",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9a6dfe29-3dea-4576-adf8-5347b953d009"
        },
        "item": {
          "id": "6eac1c55-0922-4abb-9cdd-4b0d8da26965",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3f95fb8a-2b29-4929-9986-451d4623afec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab9f567-20fe-4dd4-9a3f-48a5a4ab0120",
        "cursor": {
          "ref": "c483f837-46de-46da-b9e3-5b16896ae267",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ccce848e-8465-4da7-a64f-8ad8ab986db7"
        },
        "item": {
          "id": "eab9f567-20fe-4dd4-9a3f-48a5a4ab0120",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7da75645-d1f4-495d-bd17-688ff5efbcc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276e4019-1523-4ccc-9bce-683d08fd80ad",
        "cursor": {
          "ref": "e8bc63b2-8f55-47b4-b1e6-fd66705e73b1",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9b188dc8-87f7-4309-a313-2853357408f6"
        },
        "item": {
          "id": "276e4019-1523-4ccc-9bce-683d08fd80ad",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6b43f961-031e-4e71-8807-3d56618636c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a555ba90-c9b0-41a5-8308-616b9953ba15",
        "cursor": {
          "ref": "d1c9115e-a338-47f9-9735-ddd7c1f1708e",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "87cc07bd-ef38-43d0-b19b-8dc5a08cd7de"
        },
        "item": {
          "id": "a555ba90-c9b0-41a5-8308-616b9953ba15",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "98f3e606-5c63-4d8e-9245-aa87f97af552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36cbada4-c19d-4300-8aa7-ae3dcb4d8135",
        "cursor": {
          "ref": "bc0508f6-061c-47e8-8063-1c139cadf097",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "699ec805-2bdc-4974-9b25-3c7e910c2102"
        },
        "item": {
          "id": "36cbada4-c19d-4300-8aa7-ae3dcb4d8135",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0423aa20-17b1-4789-8947-2fa71c649746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbe1dd7-563a-4ade-b758-1cd6f334a6ce",
        "cursor": {
          "ref": "b4bbe469-7199-4adc-8381-a2512200071b",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b882ad84-bf1f-4013-a79a-af9ddb47b273"
        },
        "item": {
          "id": "2dbe1dd7-563a-4ade-b758-1cd6f334a6ce",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ced80ae7-a41a-4d11-9847-e9acaf21a7f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee3ed42-dc19-4317-8d8d-047df5cef6f5",
        "cursor": {
          "ref": "fd44108c-5402-4c43-bcad-f2d8008a2212",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c883d65f-2217-4bfc-87ff-c4829a1db0f3"
        },
        "item": {
          "id": "9ee3ed42-dc19-4317-8d8d-047df5cef6f5",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "bccea059-f933-469c-b2c4-1bd6e9efe327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b809c781-6d94-4285-bc75-247046bb0180",
        "cursor": {
          "ref": "d1e4b858-b64c-4736-80bd-aa7a74f71d7d",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1f045415-0ee4-4d0c-abbf-633fd73571a5"
        },
        "item": {
          "id": "b809c781-6d94-4285-bc75-247046bb0180",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9158f653-0f45-4b1d-95b9-8b5db367969f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f9d038-de68-4208-a167-4caf8b384228",
        "cursor": {
          "ref": "5d36bb83-4ffd-49ad-b6fd-97d6cb391d23",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "aef4f1fc-53dd-4a88-8507-51926eac7df6"
        },
        "item": {
          "id": "74f9d038-de68-4208-a167-4caf8b384228",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a05722b6-e51f-4634-95a3-6753fda3ff5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888a02d5-5592-4fe3-a008-c39599a6c4c8",
        "cursor": {
          "ref": "7969ab1f-a661-4c27-b1e7-6c51360f194a",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "123211f4-66d4-4e6b-8200-59160b3b083c"
        },
        "item": {
          "id": "888a02d5-5592-4fe3-a008-c39599a6c4c8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8ac67844-4d4c-47ed-aa83-c38fbfd8245a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05599202-8e63-4e22-9cd5-cd3d9a8a09a5",
        "cursor": {
          "ref": "d47b66a5-d6a5-46f4-9990-03a20aab751b",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3a7aa076-7a88-4de8-bec4-9b154ceecfac"
        },
        "item": {
          "id": "05599202-8e63-4e22-9cd5-cd3d9a8a09a5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "aea442b3-c663-40b3-919e-67899083f600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3588d8a6-f85d-482c-864e-2dc0ed301208",
        "cursor": {
          "ref": "c0131632-b56f-41b0-9c40-573b5d5a2641",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ef7b8932-9561-4024-b6f2-db295c5f343a"
        },
        "item": {
          "id": "3588d8a6-f85d-482c-864e-2dc0ed301208",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "01d48a5d-fa0f-4e26-bf3c-4ace42e404c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea6ba8f-de30-48ff-83d0-22b05404cd8c",
        "cursor": {
          "ref": "6584c530-a618-4301-984a-e0cffd1fd9e7",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b9b95fa1-fe07-4eb7-b768-a4096f706929"
        },
        "item": {
          "id": "7ea6ba8f-de30-48ff-83d0-22b05404cd8c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "dffa32f7-1b43-480e-a9c5-2b07b1071280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e6fc0f-c3c4-4527-bb1d-cbebb7f59cb3",
        "cursor": {
          "ref": "ef9e527c-b163-43dc-93e4-7b2f9859bb1f",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6f9f7b67-e1a4-47f1-94d4-f3d4018e3027"
        },
        "item": {
          "id": "57e6fc0f-c3c4-4527-bb1d-cbebb7f59cb3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "fe8a9c73-6da5-4526-bfa1-4299858f3ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb5252f-0033-43ba-8cbf-dd64b3a27926",
        "cursor": {
          "ref": "62ce063b-0642-4173-b487-a9fa16df5aa4",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b02e8de3-773d-4497-8864-4e006b37db35"
        },
        "item": {
          "id": "bbb5252f-0033-43ba-8cbf-dd64b3a27926",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7c40bb6f-39a1-4b6f-8db1-580c5c86c4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3291dd6-edcf-4e3f-81bb-e94c3fbb0a72",
        "cursor": {
          "ref": "f144b732-d337-4647-abaa-5566a63ffd82",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4fab0689-3e54-4259-9071-c4ba3e51236b"
        },
        "item": {
          "id": "c3291dd6-edcf-4e3f-81bb-e94c3fbb0a72",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d6a310e5-5ea1-4800-a6b6-0181d8b49f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d0d023-9567-48dc-9dee-a85d0d42c3ea",
        "cursor": {
          "ref": "543b05e9-2550-4744-8784-bbf92b83aea9",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c09d4fa6-9b63-4eda-bcea-b64cbd61a727"
        },
        "item": {
          "id": "d4d0d023-9567-48dc-9dee-a85d0d42c3ea",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "71b947f0-08c2-4aff-9a4e-01dc0d5be900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708eb6e1-ab38-496f-afe7-bced7acecac0",
        "cursor": {
          "ref": "8bd7fac9-7270-402f-8928-93752a763647",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "43a80e96-42b4-4032-83bb-5b4a71276e35"
        },
        "item": {
          "id": "708eb6e1-ab38-496f-afe7-bced7acecac0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9f70a314-d8d7-4f36-95c9-0a0ee632351b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b91ee0-b580-4ce4-aa99-87f614ce14f2",
        "cursor": {
          "ref": "e8c9edc2-2876-4f42-88f5-5cc786108542",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0d7faae5-dc90-46f5-8f62-299ac4bddd66"
        },
        "item": {
          "id": "44b91ee0-b580-4ce4-aa99-87f614ce14f2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "07be4277-4d45-491d-a693-f8443a131fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11043e1e-eac0-428f-8685-dae0f8ee512a",
        "cursor": {
          "ref": "eade79da-f8f9-48c5-818d-2d979fa0f6b8",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1589d5a3-598e-430a-9345-ad742362fe11"
        },
        "item": {
          "id": "11043e1e-eac0-428f-8685-dae0f8ee512a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6514f79b-547b-4eb5-a4b7-3508a6cea5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03916d1-77da-4cb8-a662-8c3c552ffc26",
        "cursor": {
          "ref": "1d0a5d3d-8092-4bee-b59f-ba5fdaecec69",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "cd9c7ae9-1eeb-435e-97e7-d0c4792a9bfe"
        },
        "item": {
          "id": "a03916d1-77da-4cb8-a662-8c3c552ffc26",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8e883b73-3350-4220-bc1c-67314a2dd084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acebe0c-7609-4f4c-b80c-90c8d2591f47",
        "cursor": {
          "ref": "7fcf9882-0786-46a4-9a2d-3d359dbe3903",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "74634675-7185-4208-876c-f2ee6cc62284"
        },
        "item": {
          "id": "9acebe0c-7609-4f4c-b80c-90c8d2591f47",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "312729cf-8c65-4e1e-8f35-39d3c727a80c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44296450-7b46-4738-a392-8e578db652e3",
        "cursor": {
          "ref": "86998a3e-a652-4017-84c4-d7f298750dc1",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "577f3558-7874-4ca5-8ca3-f5d596a9d28d"
        },
        "item": {
          "id": "44296450-7b46-4738-a392-8e578db652e3",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c1eb560f-6de8-404a-98d0-61eed0e88d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c343ac5-6c7c-47a7-bc6a-da05dcc4a36c",
        "cursor": {
          "ref": "7ea13ce1-9b5f-43a4-8d16-4090fa0aa570",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "220c1a30-28f2-4e38-b220-b4d46ea1275c"
        },
        "item": {
          "id": "0c343ac5-6c7c-47a7-bc6a-da05dcc4a36c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "43722e3d-078d-46b4-84b7-390071380a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710d8817-238c-4ee7-8db2-ec0a50d0cffd",
        "cursor": {
          "ref": "a1ee331a-1abb-49a8-be9f-f428d82d59f7",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "92a682cf-a317-4ecd-8d51-717cc4cfa0ff"
        },
        "item": {
          "id": "710d8817-238c-4ee7-8db2-ec0a50d0cffd",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bd1f089d-05a1-4090-a419-0ede41dea996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d44dbb-8841-4b78-85bb-270099adf4b9",
        "cursor": {
          "ref": "0119539d-3ba4-43cd-bd9a-cb2b6ed1c307",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "aa34e828-65bb-499b-8268-268a0c0227c7"
        },
        "item": {
          "id": "e0d44dbb-8841-4b78-85bb-270099adf4b9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "16e86f6b-50c6-45c6-a0bb-ebce965e1dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b319bfc-c5cb-4b9f-b0f9-aa1f3e287909",
        "cursor": {
          "ref": "489dbbdc-559e-45a5-9a3c-d69125472530",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "fddbf7d1-6e45-4ea1-8c08-6f5f8e150ee9"
        },
        "item": {
          "id": "6b319bfc-c5cb-4b9f-b0f9-aa1f3e287909",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "29b37dfb-e34a-4a92-bd5b-74e0c0f4fa3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddefdc24-b1f8-4efe-9324-c38c04d91ff6",
        "cursor": {
          "ref": "725612d1-362a-4811-a98c-adfa65b60f06",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "6717487e-5712-4e3b-b6b0-731d3c9a2592"
        },
        "item": {
          "id": "ddefdc24-b1f8-4efe-9324-c38c04d91ff6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d92d7137-3cb0-45c4-80b6-e663f5f9752a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e9058a-891b-4fa0-99d5-dcf82a199b36",
        "cursor": {
          "ref": "2942015a-3abd-4668-8f75-c2e4ee802aeb",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "65bbe7ec-0b90-49fe-b912-a27f578cd44a"
        },
        "item": {
          "id": "90e9058a-891b-4fa0-99d5-dcf82a199b36",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "199ed4ee-2033-4d79-a57c-2c6166e8754d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6629643-d260-40ac-9bcc-fff5ad99c32a",
        "cursor": {
          "ref": "929da4e8-15c2-421c-b50b-cf97807b6147",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a5a297c2-3e7d-4029-9a5d-dc4091f0ebbb"
        },
        "item": {
          "id": "a6629643-d260-40ac-9bcc-fff5ad99c32a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9c79d9cc-3901-4240-af0a-471cd525a24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e50cb79-caed-46dd-baf0-4132a4862787",
        "cursor": {
          "ref": "6f48f1a5-c3e3-4314-a631-1e5f01b50c6f",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "26a7e0ad-bd33-4a0c-bffb-eb1df024623e"
        },
        "item": {
          "id": "6e50cb79-caed-46dd-baf0-4132a4862787",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "181fbcf5-3e95-46ae-9269-aa49908dfecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f48d98-84d6-484c-a044-4aac06a9c00e",
        "cursor": {
          "ref": "336ebff5-e3e2-4a9a-9593-649a23009230",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "0187d9cb-a945-42a0-9e04-083e23d6277d"
        },
        "item": {
          "id": "b6f48d98-84d6-484c-a044-4aac06a9c00e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "dd855224-efc9-466a-a536-da290dba2202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad43ad7e-2882-44ae-bf8a-65bf7654dc39",
        "cursor": {
          "ref": "f5a2296a-0ca0-42ca-80ed-23b37c9ab9ff",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "fd7dcd8e-7db6-4a3f-bf4f-00053dd74576"
        },
        "item": {
          "id": "ad43ad7e-2882-44ae-bf8a-65bf7654dc39",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "884cab03-2e32-45a4-bee0-544f6bd943d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86305c9-8221-4e01-bb1d-841dcddb83b4",
        "cursor": {
          "ref": "dc11a009-1c68-4344-93af-4b51a2825273",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "c227a8ff-f5f5-4b3d-8758-8bd4ac29c3f6"
        },
        "item": {
          "id": "b86305c9-8221-4e01-bb1d-841dcddb83b4",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3b86fc3e-20cf-48eb-b38b-2d471fac429a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a87906-edde-4b26-8341-aced9548705d",
        "cursor": {
          "ref": "47a2c9b2-dff6-415c-8bd9-72ff63acd3ff",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "d0f1a1d3-d7da-44bc-b540-1e2e5bedddb5"
        },
        "item": {
          "id": "e9a87906-edde-4b26-8341-aced9548705d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f120e95c-2c99-4eae-8b27-641e319b4357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8543a12-7050-472f-ab2e-a63ccfa29986",
        "cursor": {
          "ref": "6a334f05-0006-4fef-8e63-4335fcf5285d",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "95c55c0a-993c-4533-b8f8-e0cd9310a9eb"
        },
        "item": {
          "id": "e8543a12-7050-472f-ab2e-a63ccfa29986",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d1016e66-90ac-4012-a8ab-4b7830861c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5e58c3-ba82-4ed0-980f-d2548d26089e",
        "cursor": {
          "ref": "987f7c42-2b6b-43cf-81cc-5b92d4c5a7fa",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "8fde0f8b-6782-48c9-922c-8179fddadbed"
        },
        "item": {
          "id": "cb5e58c3-ba82-4ed0-980f-d2548d26089e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ec9b4659-24a4-44af-939a-2fbbea26151f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da6d9ab-7cd1-48ea-a9af-89b489f87913",
        "cursor": {
          "ref": "ff391fb2-2653-46a2-9c2a-5880605a6ae9",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "fd8e5cae-7c88-4ae5-8614-eba17e3ce039"
        },
        "item": {
          "id": "7da6d9ab-7cd1-48ea-a9af-89b489f87913",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c3d18602-9962-48b9-90a5-d71a5372f5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be07f41-7582-43a9-9edd-65799422760b",
        "cursor": {
          "ref": "09c2fb0d-2c8c-4284-a1d4-157a91298240",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "d6973d64-6a79-4ece-8219-f5656f91275a"
        },
        "item": {
          "id": "7be07f41-7582-43a9-9edd-65799422760b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "fe371162-49cd-454a-8213-85f279a8dc61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17680d21-ca1c-4c6b-8772-409718a7236b",
        "cursor": {
          "ref": "41963036-4440-4156-9854-99f32462cbde",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "19641e46-366d-4253-8ef6-23b6f5645a73"
        },
        "item": {
          "id": "17680d21-ca1c-4c6b-8772-409718a7236b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5a8b2f63-8ff6-42a2-bfe5-657655c30231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf80589-192f-4dec-8b5a-65be2de28278",
        "cursor": {
          "ref": "37c5ddc4-4a5f-4235-b7a9-041037a4a6bf",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "9a3e155c-b2ca-4f0c-8066-c05dae09dc61"
        },
        "item": {
          "id": "ecf80589-192f-4dec-8b5a-65be2de28278",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "16a668d9-88d3-4555-97a2-70d406fae5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ecf1bf3-4582-481a-8671-ae49735318e8",
        "cursor": {
          "ref": "a555ab75-2ce1-4d72-83d9-daa852e5a6b8",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "dc6e08ca-0f8a-4e30-9a08-6b280cbad700"
        },
        "item": {
          "id": "4ecf1bf3-4582-481a-8671-ae49735318e8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0534e768-48f7-4685-b9f6-376822067990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd26321e-90fb-4ea0-af7c-47d7f2e409b2",
        "cursor": {
          "ref": "c75a625d-99ee-4b7c-8abf-cad1c1ff7d78",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "48a0dc31-47f5-47a6-9f59-ae77c22c7dbc"
        },
        "item": {
          "id": "bd26321e-90fb-4ea0-af7c-47d7f2e409b2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a05e4863-cc8c-4347-a319-fcff2cf018eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0057eca6-41ed-4824-b015-89b0ca9a3d08",
        "cursor": {
          "ref": "29e43941-9ad5-4bd2-a0f1-fc6dec7af5b2",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f248e4f8-c3ef-429b-81e3-c9b26c88a1ec"
        },
        "item": {
          "id": "0057eca6-41ed-4824-b015-89b0ca9a3d08",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e880c678-dcce-4587-b5f5-ab5facec99da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87275e00-d054-4a0c-8d15-4a28230e729d",
        "cursor": {
          "ref": "1a6e5d3c-af63-40c3-ad98-dd7858904eb3",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "4f21f929-33c7-438e-9e94-7072338bdd14"
        },
        "item": {
          "id": "87275e00-d054-4a0c-8d15-4a28230e729d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ab25625a-3f28-4653-902a-eca1c50e855c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d90e0ec-3aa9-4ba8-a4eb-85d04456aa0d",
        "cursor": {
          "ref": "5e969621-bf2b-4764-ad48-3b26fe0a2c1d",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "a270fd21-1c44-41f0-9c62-6b6828f381ac"
        },
        "item": {
          "id": "8d90e0ec-3aa9-4ba8-a4eb-85d04456aa0d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "df0ae55c-2a4b-48a2-bb34-47ab5be9ee97",
          "status": "OK",
          "code": 200,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "532ed206-0c3a-4a59-a8a1-33ca3c8d40b8",
        "cursor": {
          "ref": "3ed4d754-3053-4edf-b708-20dfec0294cf",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "bc94c196-f53f-40fe-8a6d-93199c817ee5"
        },
        "item": {
          "id": "532ed206-0c3a-4a59-a8a1-33ca3c8d40b8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3a701f1c-ab03-49b9-8310-e10e6c0eb43a",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ec1fd2-0f12-4d43-885e-a3775217e293",
        "cursor": {
          "ref": "fb236a2c-e96b-4c49-8aee-95e4ca7f6e32",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "53e63035-b09f-483f-a4fa-1fc8d1e0e474"
        },
        "item": {
          "id": "d1ec1fd2-0f12-4d43-885e-a3775217e293",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e36abfea-6c28-4489-95d1-4ce0da8578de",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43df183-25e9-48e4-9d10-c168e2a22299",
        "cursor": {
          "ref": "695f2a8b-98ef-47fe-ad52-f6009756917a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b1587c83-202e-43ea-8b0c-67b455718900"
        },
        "item": {
          "id": "e43df183-25e9-48e4-9d10-c168e2a22299",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7783f770-cdf1-4254-be35-a7df1b5fc8f2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43df183-25e9-48e4-9d10-c168e2a22299",
        "cursor": {
          "ref": "695f2a8b-98ef-47fe-ad52-f6009756917a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b1587c83-202e-43ea-8b0c-67b455718900"
        },
        "item": {
          "id": "e43df183-25e9-48e4-9d10-c168e2a22299",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7783f770-cdf1-4254-be35-a7df1b5fc8f2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840970e9-d6ff-40ba-9827-e673b72ddf7f",
        "cursor": {
          "ref": "61d0b638-a895-4dc4-8a4a-1561ffc8eed9",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3f2d54b3-23ab-4a19-8dbf-fb20c9aa1023"
        },
        "item": {
          "id": "840970e9-d6ff-40ba-9827-e673b72ddf7f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fed06cc1-cb40-4759-8d72-58112aae3e01",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00848d92-f7ce-42ba-8cb4-d6fd369d0f6d",
        "cursor": {
          "ref": "3b355677-e9c6-4299-b80b-3acfc7749720",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "90d08587-8ed3-4fbe-bf21-3d5459a1a9c6"
        },
        "item": {
          "id": "00848d92-f7ce-42ba-8cb4-d6fd369d0f6d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "bcb5987f-3e66-4076-b7dc-6581702db7bb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}