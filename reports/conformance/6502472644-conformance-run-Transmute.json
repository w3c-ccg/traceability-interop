{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "fc1e630a-d155-4453-a4e8-a8c9a8a6849b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "052a6d59-68df-4cb0-8d42-261a5bc9768b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "79fb81a9-49d0-4d09-81f9-b5fc81585710",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c0ad1e84-3d2c-4448-894a-9520c734683a"
                }
              }
            ]
          },
          {
            "id": "2d269299-2f17-4b9a-9700-c80fe162d58d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "378320db-b2de-4a9f-9722-42922096cf47",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "37174fdb-2876-4d84-82f0-2867e8ff7782"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "49b84406-8102-47cd-8900-9e2ed8f2e54a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "95b4005b-d8f8-496b-9c75-15eb69b14112",
            "name": "Positive Testing",
            "item": [
              {
                "id": "33033db5-a772-4e73-9e1e-4ff05b6b2033",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a87b909a-19e1-4c2f-932c-70a873b84e38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d246ae8b-1f6e-489b-bd57-97983ab89fdc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3b67bcd7-4c6b-4091-9fe4-c64d94561fd3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cc6adc15-abc5-4785-a0e5-5a659cf909cb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5f86d1be-4343-4ee0-914b-caac6618cb8b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bcd9fe39-9622-4ef4-80c9-7458b4df95b0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a2ea359-1bb8-4076-9f85-3f9fd37c8356",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ae3e825e-dc7b-40ac-a2af-86ca96923179"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70909cb3-5173-4c64-b139-ae8af4e6ed07",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "768178a0-64c0-4276-a0e7-5e1087ed59a0"
            }
          }
        ]
      },
      {
        "id": "d6d3d8c7-fcc3-487f-a58a-85d4bda27421",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6030274f-b18e-41cd-bc0e-f501f5037a16",
            "name": "Negative Testing",
            "item": [
              {
                "id": "117e4325-492d-4d50-9af7-4ebf1215bd76",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e1b88066-4eae-45c3-861b-342b2de36fff",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b581be18-718a-4c28-889e-aa4d91dfb257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "440aff44-984d-4ebf-88cd-788729b11525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d1bc49-de68-4718-9ea0-dde3b2f11d75",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d918503f-119e-4e88-8121-afd6e910ede5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72b9b4eb-6881-4bb2-bc40-fd5f4a324f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d6e4a8-2c99-4f65-a7cb-66697fb6c9cb",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a97f0f-5105-4d87-a4ca-d18675fe519c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "adddce12-56df-42fe-8f78-2f5a977e1637"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e0a428da-8880-4ac6-851e-4e55d2899ae3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5c813b79-db3f-4a9b-850f-6c2d6eb29364",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "451d83d6-a19f-4b26-b34b-ad9b887ede3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35eb749d-743e-435c-8193-2c947e6a7611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4b7ed8-bf7d-410e-93d0-b7763607d0b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d2fed1-eb2f-428d-adc3-50d521721c0c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8a40b715-3ab8-4f7f-b61f-6fb493b7cc67",
            "name": "Positive Testing",
            "item": [
              {
                "id": "43e2beb5-65fc-4971-be3f-a92167773c8e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f135b8f-dffe-42f4-96d4-1edc0f743924",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "51b1be10-912a-4894-91a5-24935c9efb75"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2302f187-82d5-41e2-8602-d1927bc655b7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f636eebf-b120-47cd-85ad-f883e379dbe5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b3f4923-91c7-4dfc-bb9f-70627d65d994",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "034ac2cb-3d66-4878-9fd6-daa1cd29c7bb"
            }
          }
        ]
      },
      {
        "id": "9c6d3892-12a5-4b92-bd50-71ed400e5ca4",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c2c723df-1c7b-44af-a497-171540be0b60",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6a4cfbc4-25db-4e0c-8775-7ee89b7ca6d1",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "68a42236-d934-4e03-8756-8df9243c4bb1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2f54c9-9114-4138-9d43-f6a2311dd52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b0c5f49-ebc6-4c57-8819-03d250cc8384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef2796a-a210-4eba-b531-1d6ac01163e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3db48740-aafe-43f5-91ad-a4abadd65270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a4ae6f-d766-4eeb-b699-5bd7e888511e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b9d963-2728-4268-8333-c6ad599d13b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ba15701-1387-4e54-938b-12b71b37e9d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744470be-51bb-4f2a-a853-b6e493c9c070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a45e3259-87df-4096-9838-0d4d16299d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fae029c-20aa-496c-96d8-91edd6d74dec",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed93460e-4cb3-42cd-9d95-6696f3167e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d304d4-b964-4169-91f1-996a1ae5fefb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a631d1c-7a85-4927-bd83-15dad17be54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e090cf79-b60e-457b-be89-f6ac12c204af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1c5f5b-f310-49f9-b47d-450eea43940a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb20a08-425d-466a-9c97-cf295c9c3e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e64cd288-684a-46a6-b890-05573cedac77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3346c6a2-9bca-4a68-a9d5-ee9a1ed4dfde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ac332b3-1833-4da6-ae21-01f32209f34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441b999c-a4f7-4ee3-a718-370ef3291d28",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e66448-dd7a-44c0-8177-10864cce4f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c9397ea-8770-4f80-bda3-89b65f2fdca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b88fb8-13c6-4807-b84d-e2f43e0ccdfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a95e0d7-a427-4294-a262-205073c0aa44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998a29d4-f5b8-4d44-b4ca-1e3e9384f798",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "951e0c93-257c-41cf-9898-f829a6f2418e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5103cb8-c6fa-4310-99d2-070d3edeaa78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4571f198-d789-49ac-948a-74977b511ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d7fb2e8-242c-4576-a16b-f9816c83c179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "939626e4-a6a6-48a1-99f0-9b82e5cdc3ca",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b55ba7b-571d-427e-8dbe-99f0db58674c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3288a5dc-d6b6-4e5b-bb0b-ef513f08ac74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700a236d-6032-41ae-b343-677807cf15a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a756978-5763-4cb7-85d4-e88d20b0bfce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08086657-e3bd-4bfb-8844-1d0875d7c17e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea44903f-1214-4976-b057-ed39f9b6a4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc9a596-af99-480d-8722-f9f006ecfc42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82068b7c-a6df-4e57-a474-7a2a36c42db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb389e3e-ee03-4a0a-a3b5-76195ad0ee66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dfb246c-18f5-46ae-9cf9-7512374dbfb1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7442909-33e8-412f-84b3-4850effc1b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62954440-5f6e-4edc-8d50-04896a136a63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2359e766-1f97-489d-9401-289fc64475e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e98c296-2b7d-4d03-a6f5-7cdab88659ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ca2fce-0b1f-444f-bfe3-3dcaf3a4e6f8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "149052d5-823b-45d3-bba1-96f95f62f08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "932715be-d4d3-4d88-a3d3-19b4e226827b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc846833-818f-45ec-87e9-174715fde461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce47cade-3fff-46e4-8073-471c33dab52f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58aa3a4-3f1c-43de-a4f5-1133c5daa27c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1bee480-cbc6-4bc8-a8ba-4fa8ad576848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec3c6a70-090d-4d1a-ba84-83a4390929b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e31917-3aab-41bc-9bc1-6339fba1d75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7c87925-b539-4387-be47-199c705b0691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca90fca-d339-4f84-9479-ab503430ef93",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf820ae6-e211-47ea-8830-0c1d44e7d49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08ff2f2c-ebec-4edf-a41b-8cb2d89bfb45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e31983-0552-4dc9-8914-b47e2716b3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "771218e0-b0d9-41bf-8ead-6229ebbb62d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7836fc93-b95c-448a-add5-7927d95a0dbd",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5db63d-8d9c-48f4-acf4-a03253722841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76e019c6-09fc-4a33-b52a-115f0ac3e474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2644016d-2347-430e-9f9a-c62f9d4eff81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "983ec235-7991-4912-a939-834a12b8b8e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e85f61f2-cd09-4c8e-b1d9-8578814cb413",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a115f1-efa4-4534-ac2f-2e86052ba96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c340fa-3e9c-4cd9-b278-54f8026a8f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d737e9-0a66-4f74-a704-6fe714703931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10b62599-6d5c-4b41-91e8-4d731c4733bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8774bbab-30a2-4424-84ad-75fa82f4ee3b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efcf6d4-f3ad-47b4-a38d-d6bf47e12c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90131182-521f-484d-a282-ce58e45ccfbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2570ca0f-e50f-44e8-8de3-7b07aceb4642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c3f3d6f-0e64-4147-ab24-ac9fe4d6a554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200cd5c6-ec03-41e8-8b54-9100c055bbdf",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe542644-8d49-48d0-88ce-7892075d43d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15428675-4e2d-4f7d-88ae-b76ab549adf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee67248-06ef-4fe8-8297-fc971f0240bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b87f7dc-7e8e-421d-8a0a-751a3b953f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6649c451-0e73-4014-b347-18a1e469fd41",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1415deb-d419-4103-8c6c-b3c5ede26762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da151619-aa19-40c5-9eae-cc408697effc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07eeccd-cd15-4aa1-8bcc-c190ad3edf4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "968dd1ac-80f6-44f7-9eff-d1de20e45be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1310284d-da41-4e51-8ba9-d8f96fe4e646",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bce4a6c-3cc5-4ddb-a4be-ce6c589cb613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb1295fe-adab-4990-8db3-e8fff1b9d26a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7821ca8e-b444-4c00-bf38-094602738729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "97d190f9-6e4e-43e3-ac58-d82fa8e70ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0aebad9-439d-4d79-846b-0b41c64a81b5",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ee5d9e-ccda-4593-9f4c-33c6aa6306e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bacd0b1e-e498-46ce-9503-fd2a71e96ca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac305e7-7ee2-433e-be4f-d2dcc53a0dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfc12f21-0c10-4713-a3e9-50dd03149f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1145a828-7fdb-46bf-bf13-581b66d80fd8",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3752b07-5f27-4ff9-841a-1709b61dd0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c2403b-abe8-460e-bad3-eb414589d03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78e947e-100c-4a8f-9e5a-26c88d373020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d6cf02-798c-4c2a-8196-8fb20b57b3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "093af002-236f-4b01-ac7a-dc271828d1b0",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac724023-f2de-4a67-8c29-3399ddb61389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41127c28-6ebc-44dd-bd1f-fd4cecefc4a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cafc8e85-c893-4055-a8fc-da7608cc60ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ea86e5c-eda8-49f6-9bab-1c6cbfb616b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8a7a10-895b-4142-bf5c-f5646e4bf6bd",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85cf5b88-b025-4da8-bd75-5a4b9f4faed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4647d7c-a17a-4d98-b460-69901464892b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc416414-e857-4042-8be4-d08deafe5eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "831b7926-bce2-4ecf-8042-ed308454bbd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d389de56-ab82-408f-9276-51f811a0ddda",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4925b59f-1d35-4b51-a137-fc17b7a15944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8080d817-f180-4c54-bd33-4662d9d27da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb0715e-e84c-4c0d-92af-91bf0e4da04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d0da42a8-ac26-439c-adab-9d3a1b03460f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4f0196-65d4-4be2-bda5-6c6b6117e9bd",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2666a0d9-0694-41f5-9d0c-4529dad10362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8997b8c7-c3ce-4679-9b68-3f9e83d04ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c84945-1c36-426c-a0e6-c107ed293f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f26a670b-bc18-4ab9-9a34-c90e0d93be6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14bd0638-3f7d-4707-8d98-e5150695ec9f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6921392-7145-404f-988d-23c6211bc159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c14bf8-159d-4695-a220-b5f011a67764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63350033-5952-43d9-8b66-709729cc591f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ae4b4cc-f0ca-4419-83ac-9c0a0a513c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e71a495-6668-487b-a4c0-f5f5208d319a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b9cf3e-81f4-4450-ab10-a5c607b73508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbafa8f0-5284-4e9c-abba-cbee205d4da3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5851fa2d-96dc-443c-8a10-e83055a4214c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d060c73b-ba71-473a-8962-4a6e5dba08ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff16b38-0273-492c-9f46-4605733b4506",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a398c586-c27e-4625-9121-367a1ec5ef23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c903d222-2e44-49f6-b2d8-daa469e567af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27dd3343-74ac-4dd6-b3ab-9ace34fc6710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "57ec482a-c18c-4a23-b17f-c69737598c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913f66a6-04b7-4ae4-b693-49b0fc6348a9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b2b350-06c3-4b06-af37-86beb4c2e85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a45ecc63-3f0a-4683-9c2b-1bcc814df17c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d829da9-0a91-46c9-a2ba-cda31852f9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "14dee88f-70e7-4118-a8e9-f0078724f5ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fcb802-73f4-4ba9-a47b-48807f45ba9f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edfd5cb-ce56-4a4c-ba2a-f35729ec5732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1db3e8d-8213-44d8-b7b6-16a27048fa2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f61f5bf-f01a-4236-b240-238a00a6bb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb4c6c2-cdd0-4d30-ad69-9d2417c77534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2dd345d-db40-44cb-b7a6-53a4d56d2910",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23a9f49-8c43-457c-9722-73a1d572133e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ef154e-b956-4338-91a2-c7127681dd4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f713f62-b6f6-43df-8dab-61a1ba0725a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "90b8bd44-5ce3-460c-b638-db8dc898b4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2312b113-0af6-4c96-a433-64c06240a62a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f1b13a-5f62-4f7d-9459-864b725bb5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce528fb3-3d22-4ebc-89f3-7a09a0944b3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859a5467-065d-4a89-9962-0a29d14d3ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b05cf149-2586-4943-b1c0-c76b2b120ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc46029c-02d3-474b-91ce-8df80ae40291",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34839fa6-5d15-46be-991d-9f8df685a6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0e3b5b-c0a6-4833-8f74-f8ae37a58e03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b19a29-15ae-4cd1-b451-157fec7c6797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a89cde-1991-4ca8-8ee2-7f292569065d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff961e3-d6de-46e1-bdc9-1fdfae266728",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32336c69-6575-4dbf-8150-acde7c502fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6ddb55-d932-4463-90b2-e579d242a227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab38bb2-dd59-4766-9f16-36d2c1f4a3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b6d66c6-dad7-46a2-8b80-999a898fddf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de28c6f-f2dd-4bd4-a9fd-938316f2eb8f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76725f21-b86a-489c-9bd3-73875fdf6e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d851389f-5352-4020-b74a-0a614f8dc9b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace7cfab-1000-4b21-857b-fb7b08feaf85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3f46518-6524-4277-a294-e25451c12139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb850955-6862-45d6-95b5-a5548975713b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73510c9e-d2e8-4fbe-bf56-be0bceccfa0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b31e23df-56fc-46a6-be81-66b82f3fc84c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1c642d-6a3d-4855-a873-f42a8c097ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4733e5c0-037b-4241-922a-c268ac8d9f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1b700b-0189-4865-9050-5705854a18b0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f47710e-d9dd-4c79-8775-8395de2c9660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d4bc297-4e29-42c9-ad36-a5e94c28bfc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788b2fef-5d35-4475-bfcd-bc53b590a7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e438d73c-2d87-4dff-be44-7de0d0273da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe932ce-0085-40f2-93c3-05657b53b4e2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90879f4-6919-4058-9da5-eb2c27fe855a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6bea4e1-03b4-4f67-91ad-082cb84d884a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9256cf3-267a-4980-a4ca-0233189c3e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "17238313-71eb-4721-8d86-947f133cf7b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a60b1c8-6372-45e6-87f1-d8b91ac2b239",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6617f1f6-b713-4eb0-847b-79af280cd5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7b2a73-2100-44b9-beb9-9ca9a23f1b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cffb481f-7754-4d32-a3d2-4036ed3dc73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c40c7cc8-31f8-4a33-a03b-37d1bede7202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6757a4ff-4709-4535-bf79-7e68ccab2636",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eab94c8-9163-4a96-aa1c-33b4101294ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c07fa5af-b915-47b7-86d1-6a40e0069f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242dd5cb-9a95-441f-af0b-e3fc3933fbbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "530588eb-0f6a-4950-a266-15579d3c1088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5984c68b-b280-4af3-9042-41288f44976a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81f0457-5196-4619-8bc6-4213446b2d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77ee1c68-ac54-46e9-8943-485737cdd774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e33d60-c488-4db2-9af3-c4f70e897deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b593392-88b6-4c39-9ca0-106b9a4ca3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d386c41-ec42-4a86-9b08-75fc32bfb1ee",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0377df-470b-4c11-9885-e92c9abd47a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d1197f-f96b-408e-a3f3-54d9256ed91f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5722cec0-5ba0-4969-b9c6-20f27232168b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2958399e-7355-4850-97de-c46d9a75cf45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81757f25-4d9c-4ab1-9855-7c87ef1f0555",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff24b88-2127-46d5-81f1-f75011cbd404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a28b2bf-9f76-447f-9519-c7a12a858f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f03a94-53f5-454d-9424-d7c5e51c53aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad905d0-b6aa-4daf-b4f9-bbd04604569c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a6536d-d7e4-4cbe-8f74-530d7da42d7b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "224e9936-b9ac-426a-92af-dff19c8f124d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f7f747c-8886-4d30-903a-bfaed04737bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5327996-dada-4b8b-8f6a-bd32c001d9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2065803b-622c-40e2-a207-3da857b8e883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30bcfadb-b8dd-4699-b386-772ad4e166a7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46d008c-8b3d-49db-b503-39e822bd6270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3355434d-8729-47ed-8a71-9157fc7d8de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3f6f4b-bffb-4e36-9b03-e0cd5b94c6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf2915f9-f30a-471d-b447-0cb48a72887c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08dcf4a3-58a2-4179-b95f-87101f858c5b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "755a3b4f-4c15-40b4-ad93-6514be2857b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54250351-b223-485a-92f1-da5a13a7900b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b9f6ea-87fc-4b9e-8fb6-3777186c6f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0138fa7e-50bc-4692-9e73-711ba9549544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1423084-fd04-4025-a7fa-5b8edb731c3c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75457e0e-786a-4052-9d60-e07d07e1d12a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c43e6a0-fa1a-4543-b15c-ccbe328643b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd7309e-9261-4f48-831c-81467b78379c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b41c3831-2a44-4e55-be86-90774ca4facf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8091291-f8cc-4dbc-bbcd-9353311004b5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4fd98b-3be2-4a8d-a7df-0c6411ba5a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "809c37be-b374-4624-af2f-be1638d54ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af7a64b-3925-46b5-8e86-cf0aa4365138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd7a5a3-ad87-4c24-9127-06322d67c324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb3a2ca-1754-4c8d-a70d-76c57178de7d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc12d0a-fa80-4cfb-b16d-e4c201e37e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d77a495a-8b54-4f0f-8be6-e79e3de28c39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd052bcc-6b9f-4313-851c-b5ae33a58365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f54c65c-5542-43e7-9b09-a23f03e97a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422f1171-933a-4c6c-8a79-6c44c2ba4af9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72dc29a9-6286-4aa7-b1bc-2eb69a07ae99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c53f3a-7cbe-402c-bc93-c1ba8d74157b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04466135-e43f-4071-87e5-537c656f3610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c99a91ae-da85-4bd7-aac4-c23e6780fcf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875f36d6-3d2b-4508-8036-76c8bf303939",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e8e058-66be-4fcf-8cdd-479204ab6da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ebad4f-e129-4a4f-b686-ff24ec94c78d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2fb0e6-78e5-4ea2-8fcd-389ac9b80dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc9d8b6-18aa-4405-bfa8-15c88b571907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f00bf1-8b92-4b4f-89ab-a5af76a3c830",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c951ab8-f1e4-451b-acad-43161d8f745e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be43aa7e-5fba-4f4d-8bf1-7a201e817567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aaf3969-4018-4437-8e6b-5119ad1056e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1291eb18-47ec-42c5-890e-64231e26529a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31975c1-85af-464d-a896-0474232e3eaf",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a3a9cc-2bd6-4516-a5c0-90197bcd1fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb613dc-02e2-4cd0-9417-0ce739fe0e65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1b5fb6-ad80-4e52-b6a8-975e4ab519b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb92a8e6-59c5-4449-90a6-63d0f80dba1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "777846e4-86cb-4d3f-a385-55c0f7a215db",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e31a402-e3be-40ae-95ec-bf0623df570b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca5ffbf9-059e-4a0e-9e22-610c72357fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5c72c6-dcff-4d87-8ca3-6ac97f6f992a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0902ed0-88af-4fe5-bf18-7c9794b24e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9acf0d6-9a0f-4527-84d3-1f881cb69295",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ca9ea1-f12f-4b07-ad15-d483ec139765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18117ecf-3839-47ba-8a1f-1abdb9b13a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7a9aad-dbfa-4eea-b204-9eb96c1b1db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f76b0d5-e995-40bd-921c-5a170a87fb2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb679944-5746-4d89-a175-a0d620725811",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e326dccd-f5f0-4a5c-9bb8-c56c068aa63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be45b2b-28ca-4bd2-812f-3ec19d2ed08c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ecdf255-81a1-4730-ab42-91108864eec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec64a7f-dfd7-4588-9acd-599aa2e185bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01485d88-b1b5-4919-a5dc-a337e96fe87d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea0b610-7f91-43e2-8d4c-77b9e6583d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e83c5a4-8635-4235-9196-a2ee107a021f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24cf057-20f4-4e21-adf5-22d6dc9569e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6f784454-5565-4a2b-a393-2d863ea5554e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ecac2e4-db70-4960-a967-b1d1775cd874",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05181849-8022-4eaf-b2d7-fc2dd0df5efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72438afa-ddbb-4635-b80a-c03696eacc33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85526742-f768-4b1f-9bbe-5384aa189697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "91e23dcd-2b9c-4284-8c0d-a8722984d4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3148f282-8bd2-45e0-a670-8c1ca1e404e3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "373b6db3-b209-4557-a2c9-9339b6800007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "688acf8f-c477-4fdd-a9ed-c7c1da7ff069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3105546c-4678-46b9-add4-3f0a5604ec3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1eb88fa5-8511-4b23-9bfe-37fce135a972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4cb24a-5211-4dba-bfdb-325286354a77",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1451c7e8-31da-418f-811e-554733cad919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0561a4cc-0d63-4f40-b3a9-d9ef9bddd8c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71c3374-2da1-42db-8dfa-65b9ecd890b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3887a47d-74f9-45e8-8446-a7ccc659818e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd85a8f-c640-42e8-9300-713580a22e43",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b616c09-de45-46c6-bf97-2b7db6b624c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a3a249-dcad-48f4-b5fa-5c9de251e212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c061411-df74-4305-94cb-c8890b084808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "96011ce1-a5ad-4e7d-ab8a-ec63bd1cc526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29141a2-977e-43c1-ab9e-8ae10579d553",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "913d797f-fb8d-4dd6-8b2f-87cfbea42ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee2f7899-2130-4b07-9912-c6d0359d611f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1604201f-a55d-42a3-b71f-37b45d302690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0663799-649c-42f2-9fbc-b3d445e6773a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109f86cb-adf3-42a6-aa50-d7e5e932e091",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59648dd-affa-4fd2-b814-54e2cfd7ec47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68841421-f4ed-4526-ab5a-75418fa8067a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1de23b-5d8f-4c06-ad0d-c14d9667147e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "77556328-5c02-439b-b11e-134db99bfbf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ef5b31-a1a5-47f0-8f56-9380b2447804",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d0e701-4cc8-4e27-9a9a-d47263be70d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ace686-41b4-49ad-8282-079fdbdfbe47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596ac42d-cac7-4073-b5f9-eb7865be6157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f57137c-4aab-4792-b7fa-507fe81fb659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81c3466-e41b-4abf-83a0-b467ac08c0a8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a811271-063b-4181-868c-3d2a6fab6d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "675587b4-6526-4704-ad81-8ae97206497f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec2dc9b-4c7b-45b4-a4c1-72e5b4376ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8221e70-335d-454b-8478-959bd28e0d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52efa7f2-75c0-4526-b873-48707c169ca3",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f50207f-d2c2-46e1-ae35-6f671a0c3a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e124b538-81a3-4712-8dc9-64c6bdadebf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a2645c-2196-4f52-bf7e-9639dce8e147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f84fcebe-f5ef-47fd-ac99-746da5274f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b480c2-bb58-4476-8370-9c2f5ebd2ad0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "330aee06-948b-45b1-80e5-b113b750096c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2170b99-3d80-4c44-b997-2c03632a53e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b640fe23-43f0-4bd4-aaf4-b77fbc747871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d3f05fb-08e1-4e95-9ce3-06fcee734491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1550f4-5e82-4a77-98e2-d95a84ced615",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "622a7bad-5df0-470b-9cf1-d838cbeb6f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c76a5d-f685-4d28-8453-96e0725c56a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c593bff0-7ff9-4812-a590-5124af8163fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "119d87b1-1177-42eb-baf6-9bf3c430f716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fa5c5f-e447-4896-821a-b06185a440e1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9590e5aa-616b-4a62-95dc-eaf9f9ddadd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3bbd01e-bd12-42e6-a4f9-93ffd732fec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1486aa4a-bef6-45da-b2ed-e9401176c599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a4f3321-16ac-4c06-8ae7-2b0559243690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28d602d-d228-46f4-897b-889d800d1850",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ca7e0a-f6ff-4340-ab2a-666d0bd31662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56f046e6-a1cb-40f8-ba3f-c6bae4493d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9953dab5-a4be-4ae8-a6a7-315bcf373992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea8b33b2-75ac-4417-869c-9062595adaa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7b79b8-041b-49fd-89a0-63c4b2fe4a7c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "239b7b0e-7d9d-48f6-ae83-ae32b432975a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "724205f0-a110-4836-b427-ed0ab23675bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9260b382-eaac-4aa9-9ec7-043567c65e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f475aa3-20a0-47a1-88b4-46d2075e35be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057304fa-9ccc-494d-866d-b07997cc1e42",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0285df-a055-41c4-acf5-7de1e497c949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e15b83a4-3ef8-4feb-a5f4-ae5dd6b90ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1edb344d-bf3b-487a-8f74-610388f935c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b18a7d9-f08f-468c-926c-77bc3c365f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3800ab59-12f5-4831-93fe-765bd28f9381",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69fe8b21-db46-4a94-a09b-93de379f0231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb0b298-43f6-46e3-98d6-29e3e8d888f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0a168f-a5ee-40d4-a00e-f5d5fdd1e566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "123d0a05-8fc0-4e03-a13c-1f83d3c65bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea8fcb0-d486-4623-8709-061decdd332d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa4b116-606d-49cc-8855-8c4cd38b68af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6c795fe-695c-4790-892a-b0716a41d67f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e08659-524f-4b8f-aeaf-80c3bdd530ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4218d371-cb2c-4be6-97de-6e5b621c1049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a967ff-3d75-4de7-83dc-b83a1d5c551b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5946bf-a4f4-4e41-9983-600712a28094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44965f23-4f7e-418e-847f-bf63a6a7f18c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1cbe3a9-e745-406d-90e5-de257048b03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "91ad15c9-734d-4793-9151-37133e185099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18f3d53-1be7-4529-aa3a-c5f9781f7fd1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3fb9d7-7bc4-4c2c-ab0f-dc23072b67a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4507af21-37e9-407e-9b2d-15628dad749a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e628a3-cc7a-4ba7-9716-8ee59074dc7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "64d27d39-7054-4d0a-93b1-e3157d1d6658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f87d23-4d4b-4999-904a-a9e6dd44ea61",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d719f0-352f-449a-b8de-b918b20b5030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f485f97-1d20-4eff-8aa7-0a725ed086b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89ba0bd-e94f-47da-9824-60f580138b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e91c61e1-544a-443e-b116-aa2d46442a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3ba62a-0cb4-4a85-bf28-022c854ed635",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d6bac9-9a4c-4ff5-9a3e-8260691c4729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14bb7f3f-1e71-47f8-8ae5-a73129659799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2919792e-e8e2-4bdb-a5d4-0dc32c621df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c9671cb-472e-49a9-a559-468ab8e16b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e529bcd8-3281-43c1-a9dd-07f8924f62de",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6fdae2-f986-4554-b20a-25b6c525325d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca1fae3f-a195-41e0-8fb8-dec52f87e726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edea1539-a552-4d62-8402-2e587637a58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b0006f-1171-4472-b6fe-6aa4f7279d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c33878f-9df7-48bd-b765-43de98d4cb67",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6bc014-6686-470b-8323-95388efc5017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba96e5a5-21d8-49fa-8e64-717e84719400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e698a9-2f43-41d9-862c-de68a4df1b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "13a72c73-abfb-4f3d-a595-f561b48997c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488be948-a46a-4a6a-b969-4d3c73aaad0d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "039e0880-7486-4dbf-87d1-d9e5118c0751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4722b1-9144-43d4-a4ce-81cae8fbe292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8129010-5a43-475c-82d7-ac0ea9041bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "92dc66e2-fa1f-4731-98cd-4d5e16d297cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f9a030-03ae-4bca-9dd2-df708b4d285e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b641c456-22fc-4e2d-bf8f-2b8b0505396b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e48591e-8865-466b-826c-f54450de1d4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5094f5d2-1b5b-4556-bbe2-9dfc1a35a038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2230d1d-73d7-4f6b-9b3c-d59f277a6f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fdf9c13-33c6-40e9-a4ef-b12f9b067958",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335463b5-58ca-4861-98a1-326b6a0c81ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1aa687d-276b-4f31-89f4-0add6413559a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb4c346-065e-4ca3-96b1-6115d4953e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "899de94d-4834-4296-ac83-388351cf887f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb82ab1-2b7a-467a-880e-0c8e47ac5051",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2cdf3a2-bc1b-4fbf-91e6-fd7e37230781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43d5b735-4daa-41d3-9362-6ee1f82babc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0b63bd-5e5d-448f-804c-09057108cd50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc85e13-9734-440c-b56a-8c982763d64d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d66dc3-dcbd-4d7b-af47-7dee848d29cd",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb65124-c984-4ce6-a828-c8323c789554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d625e3-b6e8-431e-b08d-4753b5aa61a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c882a0e8-f923-47d1-964b-6d7d5f5d2f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ab0bc73-3976-4bf4-bacc-a53350c3d501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba54f67d-b602-4664-843e-136dd0c3bb83",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7435839-7a75-4041-9d65-f66a0cad1f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cae2881-48a6-4522-957d-3df1040e0e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40be177e-8291-4d8a-b63d-480d89c0b2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dbce98d7-ef44-4d61-af25-4fbe4c2b0eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70084257-0944-4468-89eb-61be9f861f7e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08dd1619-a92f-4314-8245-c924a344a370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d28fed2-58ae-447b-bd3d-46c01d53e137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85528375-492e-4a09-b901-db2fedce44a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "60588287-a1f5-4b65-82a8-4dafbe8d9857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1545967c-97d5-4e65-b900-8a48dd8d948d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c91c4a3-4b12-41a3-82c1-4135f7e7b800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d50fef-895a-461b-aef2-4f638fe14829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc692c5-edbd-441d-8dd7-1ffd9ab6a5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5103fdd-f255-48cc-9685-7986a8a5ac5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6625e8a-b355-4016-a05a-eaed4135cec9",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98e47e5-5f8f-412c-8fd7-4a53ee383646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d10274-f8b2-44ce-9aa8-916e7ef19282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c14398-da41-4315-887b-5c38303ebe45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "09536bd4-642b-4087-91f9-e53cc9a04631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c876c6-4a0e-43e6-89d5-68380531d3c9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5b5e4c-c96f-42ae-a30a-3ecc7d634db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecac462f-9ce6-49d7-8cdb-62cf596bd6a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a940c21-6cdd-4deb-b8ed-3e0677734a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a1ff3d4-7775-48c5-802f-60cb20bcab7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8794aca1-9135-42dc-a814-35052e30c2b1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bdfc19-0574-4678-8c46-209d4b2f1dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e2c9e1-6c74-439b-b4d2-404af1c3ca99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b168455-f4b9-4651-806c-e9a92956b43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "45444693-dfce-4aec-ac33-c5d266dce8db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab07b65-0d40-4bc7-aceb-aff800ba0944",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a67c7b-c922-4963-b424-d8d45b76ae4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5337c824-a961-4c8b-970c-6e13942efaee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed5ddb9-5c7d-4acf-b4b9-04b868dc5617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccda4ed2-3c4c-41d6-abdc-6014daf4fd5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839dba45-3364-4b67-81fa-dc89a9bf47db",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "089b4ab6-97eb-413d-9f6a-67f4514e5493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0276f499-ebb1-4447-a1ef-db31aee3fb6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efcfe0f3-d0b2-4ce6-b348-a4508f684e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3f80b60-425b-40ed-8984-985e2840d495"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d94b173c-9b48-4840-b8e4-d92a3f76e5db",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "13dae159-864d-4f91-9aea-b3dbd8bcb923",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc750f3-db4d-4107-9602-ef4824fa9ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b40be0b-a2cc-415c-b41d-277592afb581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d568e2e-8240-425e-9c2f-e480e03fc9a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "445810fe-6b19-4bf2-a09d-ce001840c446"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "236019ef-d728-480f-b103-c6dc8a9108b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c87bfb9d-caa1-4d48-a953-f42b7d312122"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ecf5c044-d8a1-424a-9ba0-373c686efeb0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a5a9e72-a04e-436a-8640-657c9fac3021"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "59a627ff-e1dc-4d59-a6b3-9c1bf45a2451",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "72c077bd-15b9-4eac-af2d-4d8ec01c80d5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d3527e1e-be65-44b8-bec3-c59f665e3f86",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e245c60c-9082-408a-9bda-42fee1d14a08"
                }
              }
            ]
          },
          {
            "id": "5dd50b03-4034-469a-a97b-74de86b95501",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b374d5aa-e109-4bd2-964c-94821951a5b9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9bf87bc-8a00-45ed-8001-acf9d1474922",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9b36134d-2b33-414c-9bfd-05badbcb5c79"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c14b5c0-ec7d-4829-8a3f-005b3dc6bf8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "168ef76a-a30e-4372-9a4c-a0cd5154e7f6"
                    }
                  }
                ]
              },
              {
                "id": "5ccbddc6-8261-4172-a56c-b88cb7e999e1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "47d58a38-785f-490e-9503-c42fe414c17e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5a690fcc-6597-425e-960f-d054dd73dace"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78b21c5c-255d-4766-ab2b-8903ae520964",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "aa81ca60-b455-479b-b416-dc3993174ae0"
                    }
                  }
                ]
              },
              {
                "id": "f997c71b-75cf-4198-9149-8f32d1c22e6e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f61b0f82-5e06-4939-b8b4-13cbf9356c09",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "938aa541-bb0d-4698-a05d-86cf1c01daae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4a73449-4035-493f-a0d0-18f86b769b10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f2ead2aa-2093-4fe7-a566-3d654e6337c0"
                    }
                  }
                ]
              },
              {
                "id": "9ea4f769-f71e-4d66-a1ed-885c88e57df8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e37d845-5af3-4502-91bf-1574cce4b8bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "94c011bd-13b0-46bd-9908-11f8126895f4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "335a8576-25cb-4f5a-bae2-3bebbaa0cc0b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3cd345da-d35c-4799-8523-4fb3fc905222"
                    }
                  }
                ]
              },
              {
                "id": "61442858-d212-4317-8588-715e618eb1e3",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "840fb8c7-63ff-46d3-b12f-466c00a3dc33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "44b6caa6-3370-4d22-b119-3320384c8172"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73cf1356-7668-4b33-aca7-2be2623468da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "70259b97-1731-4fc1-9fe8-cbafed9e2ea3"
                    }
                  }
                ]
              },
              {
                "id": "7aba75b3-a4a1-40e6-bc17-e208ae00f22c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4dc5472a-2450-4437-8a5a-c0d3f8403195",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c00dcb9e-ea96-4751-9e4f-706e30f01e77"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "baf7560e-0c4c-48d9-b95a-548285d52786",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e7c40133-37e1-49e9-826f-4a0fde16dd6d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0897e15d-8b73-4750-9ae1-9382d3553d18",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c2bac8d4-0b77-44fa-80ad-87f47619626c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3dcee3c1-e7ed-40ff-a961-2b2655cab519",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d5133f6a-5276-43c7-afb2-c4f1bb5284e7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e0f49317-ac6a-4b78-807e-fb221de6f6ab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "16752a70-b2a1-4512-a129-2f1b1ae7b1eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "15499319-30c0-4fed-a1ee-9534bd96773f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "caa2cbb9-7869-44a8-bedd-06f963eebe34"
            }
          }
        ]
      },
      {
        "id": "72cad086-42c9-43ce-89f9-5be8e06ac051",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c9bc8583-31b2-42b7-91fc-0089a221e91e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bede2648-5e32-4dd0-8003-84afb2d382ba",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f6154d6f-27ca-4c34-acfa-32159c063867",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88e2b2e-412e-40c4-8163-4e2992ef9e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "711b7186-8056-4df8-be15-477b545186ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6291f04e-f81e-4650-adf2-9cc017994dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "afb465b1-1568-4499-8ecf-95c831859727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba23aee2-a644-4668-842d-008bf1caa5c6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c248f662-f761-4355-a3ad-257f17927cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd74b003-3cf8-4e81-8600-5dd4e80eb7e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ce6240-1ec7-46a6-abc5-317f6aea6c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5223130-0067-4803-b481-c4b77400d84c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a35716f-4c26-4f95-84d7-d015799f876e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81afc4be-4203-4ad5-b624-838128f0f767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94c704a9-31fc-4e8d-89fd-4983eb7cb498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0b08d7-b055-4def-b50c-e920ac87c5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dcae9ca-7ea4-451d-b7c0-0969791fd49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac36688-5aac-4e66-9ed0-ffaf3f6e2ad2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02cfc996-cefd-4e63-a34e-092ac3695e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4dfeb77-74d5-4be3-915b-e011b3bc2339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa86c03-f459-449f-8680-76c06a1e0ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "41c33e09-31b0-4bde-82d8-f2db3ff1d27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ad551e-a2a6-464e-a695-d48c015345ca",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "727eb275-3f3d-4be3-b1a0-4ab001b9a474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56697441-2cb5-46e1-8cd8-afc5c28691a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9928480e-006e-4145-87ce-b87a0f726126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a16f0ba-05bf-4ef3-9234-355e967ab674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b23a9ba-898c-4cc8-a5ab-6016176e8f21",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ff52b8-9ec6-4c23-b8a7-98126a5764bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b152bc1-cc26-42f4-85ba-3d534c635a87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e151b8-8254-4851-a970-4f00f7fc51b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0544d701-726c-490c-8a79-aa3d331a5d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4898448b-27af-4033-82b6-d0a558e242a5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4adf1065-4596-4a80-865b-a8c27820905e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e17239bc-4216-442f-9b3a-2b823ba7dc8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e88b78-7472-4e9c-95d0-1bf9cd4e1fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8427125-238b-4cb1-bdd0-70589c48c01d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0bd67c6-3a78-42c4-b963-5f106cff54e1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad286719-cd5a-43f7-ab5b-e4cdc9a1be25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d056cf-a538-4694-8772-bd712dce26a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fed2efc-dfdb-46ca-96aa-d8ac52c33049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03bdcbdd-8fd5-41d1-8c36-5bf7d3e4bbcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75222521-e4ef-4e95-a1d7-23e122b5344c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27017a73-59ed-4243-89e3-7c86413c22e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f134327b-c3c8-4847-8dab-a95850f0644e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2c1cf4-cbe4-498b-9980-91220faea6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c5f78c2-d227-441b-9d48-cec3f61883a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1290e7a8-2148-40c9-920e-8ac46cd39cc5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c65ab18-b71d-4fda-9af4-eab918e6cc70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "631069bb-be92-4f6f-bf17-dcaa5e59a310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45dbd165-74b9-4686-bc90-f72e883cb3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfc315b5-f4d2-4f22-a281-5e4f4f315b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f565b8b-7e54-4f8d-b95f-16656c79cce0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f80204-c1e1-4544-895f-9716033ef52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c8f51d4-4ec1-45e0-a445-15fb98ab9ead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1256b3d-d03c-4db6-b4e7-3d02804dd5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6c988d31-27de-4e47-8577-99a69ec16ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8c2b82-7cab-489a-a118-0cd367d8eadd",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e93a0b-9fd3-4dbe-b427-ee000c8ce753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e7fd853-ce8a-4b37-b612-5a49adc4e006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3176ee72-82a7-4af6-9970-7e0cd20a456e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d865e858-bf83-402a-af52-ef47e09565b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a10602a-0ca4-4369-a3da-7dada4b76e8e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e262a713-d239-4a72-b354-76678260bd19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "355c4b44-7048-4f8f-b86f-7e16f8ce42d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4ba73f-6ce1-473f-997d-aa6ffe4c5650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "14108cfc-2020-4a54-8d4c-909fc360ea53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2e737a-4895-4430-b422-42aba5b8662a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef0a258-3c5e-47c2-b968-0c53bc3cbbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd3284cf-0fca-443f-a5e4-1f97f6fd3ee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8222040a-34ce-4f79-aef9-5fff78b6fd00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e59a70c-fb5e-48d1-acf9-4f5e35cbc18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486dce36-8c89-4549-8dd4-97cc3f42992c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03fa7f7-b3e2-47d9-9ec6-52df343373ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "662e3b4b-424e-4809-af76-ce52306b0c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ab9876-7d01-427f-828c-7fc5109c1f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "be1ffa17-4c06-4f0c-a3e2-cf6b7276c242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79989060-d5ae-4bd7-96f3-5ad8766fbd55",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefaecb7-8738-4f12-be8d-8694e8720fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51c9c6bf-2499-40ad-af08-e8038d7d86d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985c7c88-7f7c-47aa-b42b-24f0bb259ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6134467c-642d-49f5-99fe-d01b09a16217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5093997-a021-4a63-b4ab-e9c71fb0cbbc",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd28a24c-32ef-4105-b163-f8b559207825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5042e5c-90bb-4acf-a183-2e320cb752ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1654ac-5753-4701-911b-49d8d893914f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a6e5d33-03df-400b-b8e5-5c40ac54d42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444b5650-e4c7-4c71-bc10-9e2789f9bea9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6cd9bdf-374b-4714-b6ba-3323bf1498f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "846c2270-8654-4cb4-b125-4c6e60ed2294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fae4c9-3a6e-40c3-843d-c9cbe99edf8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "40ff554b-6726-4e0f-a56b-4bc8ae806927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec4d76f-0c6d-43c6-a929-8f9b9da8d19e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "180a8b7f-8e1a-4c8e-9889-1591d1f3285e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45f45d14-c732-415e-bd6b-1a63c9ea2fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e29550b-734a-4585-b251-d9d19227a207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91146c8c-c33a-48fc-839c-20fdad3123df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ce6c7b-49eb-4e75-bab4-8e54da471998",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "783cc5f4-fe23-479a-999b-b3c57e564798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead38278-fef7-4dcf-8044-c6d836c5490d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a66ad1e-af78-41cb-a5d7-2fee75a1c596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25626573-a716-4bbc-819d-fff06fc3237a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dca0d25-08a3-44d2-b011-bffc60223a1b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45667a7e-acfa-453b-ba8b-e1a26a353710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "328588ae-b990-4cfa-9442-29d87c3a1488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ccee7a-eba6-4e7f-90bb-9614bc8cf18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b08f8767-bca3-4107-8c95-062dc16fe49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eafdad31-e946-47bf-b73d-fb29fa043bc8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "592329fb-9808-4aca-99c3-26799f2bd99c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd80f26e-e3be-401a-90e7-2684c519dcc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26029dad-d663-4a6a-ae04-45328b030842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d9e1a51-7067-484f-865d-057652fafef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c654a6f3-d75c-4684-b3c9-eb679ba3ffdc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a23f1ff-342c-4589-acb5-58b9e9f6bcf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df2b3494-2496-47f6-be42-0045616142e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112da0bc-ae71-4431-9a30-2835eaa7c468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36ca4584-5944-47d9-9f0f-6c732a8c6069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69f5ea7-3463-47dc-94b2-54d85e31ee73",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1d2212-0dc4-4eb2-8d91-8527412dfc8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f49a6d84-592e-4062-814e-455f030b5f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23a91ad-7921-46d1-8f70-8aad02935c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce916968-0db3-430b-98b0-cfead54e54dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653def0b-9d2a-4840-8f18-93c9c6b6557c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe925f9-501b-4e89-af1a-61f5f990fe58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b08fb1b-a6ec-4223-af69-2cc7542694b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8767aef8-1346-49bc-98ed-aeb386c9c098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66a26596-6a7c-47ea-abe9-4feea3bf5511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7439640d-3943-4d7e-a120-0202bac4994c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8860785d-c656-4e85-a279-f0b90e6a8512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3046c32b-c771-40b7-816b-475abbcd1828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539bcf6e-289d-41c2-b265-1f52d549a441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a59567f-4a91-4c1b-bf79-c06edc0c136f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f00d9c-d156-4beb-aae9-63a5b21eb534",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac17019f-0718-4fc0-990b-eff0a15de74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8849e58-aeb8-46ac-83a7-cbe671aa86c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35012865-2d3c-43af-9bb3-423678558db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dd2e141-812d-4df8-87b0-feb9c4b85dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a08be1-4652-4c2b-a21d-fc4338ef4edd",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1b8f79-d8d5-45ee-b8b4-26c5cbe611a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d37436-64f6-4de8-864e-abaf5fe51b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36d7685-fcd3-4d4c-a208-07961babfe90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "feeef81c-434e-4250-bd92-51eef1bd07d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f853c0-2a12-453d-8860-0db7edbebaa8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c676e0-6ce3-4569-858c-048c6d77c01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d6761b-3e51-4534-b9b5-5a5be0f93d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf02fc60-24d4-4680-b870-6e69845b374f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf63c08-4a84-49ca-94e6-7aa5690eec02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb60fd6-06c0-4e7f-835e-d0969d60e23d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1699ef3-2629-4f38-ba56-248e06698a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04754a9e-7a93-4cd5-ab1e-2d60060f1fb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7aa365-28a4-455c-ab40-e7a96fc86eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c933cfed-fd7a-4280-b86b-9ef89b873757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8cd593-ee47-4b5f-b63e-1cbc1bae2d53",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd616df6-9e1f-4309-867b-4f0f12f52592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4ed554c-fb48-42d5-b190-10f4d328dd7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11eaabe1-fbcc-4805-bce8-570f44fc611d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bc86525-71ed-4862-ab3a-7815e008b362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62bf5d09-ac91-4e43-8afb-3a803519891d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2eed7d-cb88-49e3-a43a-71f8d771565f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "374eab93-4c8b-4157-b84f-e33b2ff337cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8250ae1f-4a5e-4774-be13-43a58852c2a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adc19f11-f6ce-4629-a32d-e463fcac0f64"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "15184fdd-1c6b-473f-87e3-c0a19288e41a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "641a8e31-fb63-44d1-a344-83983ff0ee8a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f68677b-998b-4700-bbfd-4d4d2831a9c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ec4ec7b4-77f7-490c-bdf3-7c47779c0712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24060cb0-0469-4c66-b1b4-44d2658deefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5cad4ac-e51d-4d19-881a-6d75eca77902"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47c80ae2-9522-4dd6-8ddd-323aa48e38ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a113c1e3-cd94-402b-b7ee-45cbb9635879"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d7d3925-e4d7-4dd9-8f60-34a5d2e83434",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "779ae9b1-5090-4d1a-945b-dd428214c2b6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d370b6a9-1531-4b41-8a29-b645b477f9ce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "60e0fef8-b584-40af-ad71-5ba5f27b88ef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08a33f90-39e8-4138-b7c6-824be04c3e64",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "30afb07b-0110-4df1-95bd-858424df17c2"
            }
          }
        ]
      },
      {
        "id": "ddeacc3b-30fe-4996-b4d7-d8002aa33b25",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "a574f446-929b-47bd-b197-ad21f8e242e9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2e413f45-2635-4046-93f8-c4d2f240f185",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c52dbd6d-05b7-47ad-ae5f-6e1274dc67d9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c67263-4d08-4781-a6f0-c18eef4918de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28172e60-764a-4e2d-9363-fb23ea2368d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4385d55-7497-4a03-9e6a-d22d8bb5cb93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e724498a-84eb-48e0-b914-9f59b5ef92a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96cf38d4-1260-458f-b483-780dfba4acfb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9d7899-155b-4dd5-b706-443ac1a85daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67697273-4665-475d-8900-6f69825d0e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7085d27-f449-4d9b-a830-5cbf269c18c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1732d172-792e-4fff-9645-e2362d8e8f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a60347-7a63-45fc-91a6-a0be6fecb143",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ccfb63d-77b9-4e79-9ddc-8abd801b1dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d46fc4a-cbf8-4402-93e5-051f0d02d569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f8671c-dfca-4b10-a622-00e723852fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b7ea55b-ff75-4af8-9b98-0d2137745801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baff073d-4d6c-4eff-aa7e-448d3bf33573",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21efdd8-ef00-4044-8480-4bea4f3fa7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46983169-69e8-4b05-bfa3-24626d1ad4ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1410d65-d43e-45e1-bc62-c9245e301b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9629a0b-1281-4dcf-823c-63850c1941b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8427e4a7-2d90-4840-9a58-3d67ae6160de",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb95d17-f9b1-4e3d-8238-5a917b0a0f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8fc3146-6f76-4fb6-a3c8-22e7fea3fcef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1daede7-a03c-472c-977f-ccd81b9e5890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7123d6d8-73d2-4b70-be95-d26e729fb410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e7fb59-555b-4181-b24d-7a00feb86804",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac97be9-e4d2-42a7-abee-af33b61de795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "131bb684-3b77-4ccd-9d22-df78fc19e2b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ed8c4f-746a-4530-9a7b-561d265d1f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62a0726e-5e03-4804-85ac-55deb8a232ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9e4126-717a-4f81-87f9-32c68a2f7581",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a83fac-58dc-46f9-8d65-6ee49f4a72fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40a8ff10-aad0-4acb-bf24-46057304f7e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ee203e-ce53-4560-9aea-0d003643f755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "312f1c96-10d3-469a-994c-c2f7bb875d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c59de0b-06c5-4606-a4ef-650ebcab455f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3ff399-f159-4a2c-9645-0943bcbf2ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84f109aa-e20d-4e1e-8ac0-48b26b9ad0d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3479b72-3a27-46c9-aa39-7d811c5aff42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5603edc-bc29-4f5d-aa49-06c0c2aed434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b99ba6b-f1df-4718-8a89-a38eb1e8b87d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93f103c-0a54-4793-8c13-9def8008706f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "642fe4e2-c5ab-4956-b957-00fc8f5bdf03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a068efc6-75c6-408a-a26d-830eacf86251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82d39f89-d40f-4d63-bc63-794f0b2892ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6747ecd-f6c5-4be7-ae1e-99aed8979d05",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38fef45a-87b9-45c6-be27-8ec0f84a4c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b97c201-5cef-452f-bd73-ce9bc9d0fe87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b74bb67-e962-453e-948a-64f7a36e2f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "916ba13e-b315-48ed-84f8-f76f435dca01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6e3777-f1d1-4673-933e-96b6c98f9e93",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e9c1a5-ebff-4332-aa6c-5f3e7728c223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad7d0a34-a970-4156-88b4-56d4ac4af97f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23972ac-3569-4c59-a978-90d60db6a4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "67aeec13-0221-4e5f-acf5-078200c49c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3dd815c-faad-4467-a181-055338c30cd6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0898fa6f-9ad7-4670-9450-a31f20f88591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b5bbb0-0170-4671-9575-c39c9fbde274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ebbf26a-b1f4-43d5-a65b-9087ab64dabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9a592f13-525f-496d-83d5-544c54c9541d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316dd048-7c1d-43e6-8b18-f480dedb63f1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0699860c-f810-45a0-b4c8-9edb3eb979e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "092cc5ef-76b2-482d-b4e8-206b61eb04e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dde380e-f3a5-4d35-85a3-9e8ae4d16c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4559e63-4708-4bb7-8ef1-4bcdd5c76987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0091722-d3ad-442c-9e55-e20a71ee62dc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e565c3cb-feeb-4488-b756-38e380c88c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d45f24-3f84-4e06-be1d-a4f4598e1be5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b6de49-39ff-4305-9f4a-3950e33873cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "48c27856-9c9b-474e-8121-b38f17b712ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b798fe6-a1c5-49a2-86ef-fe6d85302bdf",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea077792-a58a-41ab-a1ba-a41e372ab232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da9a31e-f504-4b51-9105-c7bda74d872d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd30b64f-f120-4e47-8fb8-7805922ef401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "328ca96d-4298-4420-8717-b6148515f2ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603cad82-330b-44d1-b6be-e6400c52d76a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a6f9c7-5603-4f20-b67a-b082f51eaea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4161129-7e3c-4fdf-ba36-126afd180c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc69845-250e-4600-8acd-048e764f02c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f799b3e-b4b8-4692-b43a-30a2f1734416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9240d456-c529-4c5f-ad63-30d38b401c03",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "995cdfbe-4abb-4e12-8d02-0fda4f8cf443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d78bd580-6f08-47e5-b4f1-e5e90de877a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87605822-0522-46cf-9d1b-a5100caeedfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5294077d-4711-4d28-b45c-40e4e9bb18f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6234998d-36eb-427c-a974-833498c181c9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9986c8c0-cabb-44fd-a48e-1907ddf0f3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efeed43b-1e8b-4029-a493-b91ab5583270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2dbd95-436b-4fc9-9ff1-17d40a06e856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "492bea09-8e37-41be-99d3-38c351639891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d350036f-a97f-4458-a538-561571d3d64c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5214e0d0-7ebf-49a5-8b04-8c1f563e9da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc0112f-286b-42c3-a35e-fc0713f8d1d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c9dae0-46f8-4aa0-b104-8444ba359ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b95857cf-20e1-4fe8-8db8-d6aa14531226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5734b0f0-54a0-4ffc-92bb-ca58da71c75c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f84af67-03a0-448d-a9a5-029e0d69160a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4906656-9125-47f0-89a3-ed806870a3be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2401ac4-79e5-44e7-85e7-e52f9f45c72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48f9e4d5-f66d-4cf8-bd2e-5941d94c60d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80772e2-5fc7-4fb0-aaf9-da350c86e1b5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d255cc58-5070-45f3-b1ad-b67f2c97951c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61581649-2681-4da7-9714-124a0a1e87a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b255024-d00d-4747-b75a-b410be66d68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c744022-dd81-4397-ab08-17cd9402f5e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a91c26-9466-44d1-b190-0e807b53eeb0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b861bae1-c011-42dc-b162-16aa346bfa4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f0ba83d-062c-4255-9b39-dbc1a0808f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be10f79d-81db-4f5d-8b06-beffe4530c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3aca230b-a2ee-4b8d-b36d-b1a332ca9619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cdc4907-3621-4501-a853-68bb746213b2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a23a7f6-12af-48c1-acd5-9e05e24324ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87673f99-22d2-408b-ad6b-a972651e7cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17c1d81-56e3-407f-b84a-0b21bbf105a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b70f8f19-7a52-4033-8bf6-5e35762bb378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8a6232-9034-4be3-9bfe-b8c320283c1d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5923a2-54ce-4f83-b37c-14bdbdd3fa47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e27181b1-2933-4381-b32e-1054c3131e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea76fa14-129c-4fb6-add7-5db934147e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd7f03d3-c386-4e32-9e3b-73149235d79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e50559-06f1-419a-b68c-e3c8ea0e9d37",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f262aa22-4564-4407-be10-2e31e69ab9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a39362d-13dc-46a9-ab59-3e2fd19f5f60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de267c6b-db88-4013-b2a8-f0d8b9c182fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "503f27ff-93a0-4c6a-a539-6d6ab1bd6909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b3acc6-7eea-4045-8060-cf7f0ec66a48",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f9db0e5-1541-43e3-b7c0-d0f8e1a4bfac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6103aa72-f25e-4e4d-b079-7661eeef538e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a71c41-36a2-4339-a820-545ae7426e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0aa69cc9-2556-4eb6-8bac-2085968bea3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddfb3c7f-fe06-49ca-bd09-e8e5f0ecf0a4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b097df84-8abb-4480-93e0-7c66e4dc30ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d38ccfe4-c8db-40bd-a00c-fdb366ede450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e338a2aa-cf25-4dd7-ac79-24f455cdaa0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaab68c7-dbec-43b0-ad8b-f2fd7cf7de60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146ae99b-7bfd-4f91-a5a9-ba18c7706ec5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dda58e3-a8d4-4615-815f-b5262fe99f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d95557d-7d02-4a24-8246-89eea4f897cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c993b3ae-ff62-45e8-a36a-027096a97c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f33a147f-d451-4a16-b4a9-094e4b8350af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a79ebd-24f4-44b3-a968-e9f11ff664ed",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9510316-8a64-4c88-a7c1-729163450d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26f1571e-5aac-42a6-b4ee-8e570a90528b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23d43ad-ce1c-4226-a8eb-1a580246fcf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0755b7bb-f0ca-4a53-b211-6f379d2d1ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34edb6fb-050a-4a26-a34e-e14432e5aa9d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21da944-ca81-4695-a743-5afdb16ca86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a114ce1d-6525-489f-8648-fd67f80fdf53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1ae70c-89df-42be-af94-26fee9ec58ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4daa4958-21b0-4e9f-9f8a-18deaf849125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2296dadc-f2d7-4af1-b749-f914346bfa11",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc426e2-411a-4689-be28-f5e98914071a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30a49591-fb15-493b-92ac-194342d676ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc78dc0-12a6-47e1-9640-25eb17cd44f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4849b743-bab3-4770-bd54-30c09ab811c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f268814e-be8f-494e-b572-040c195c734e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a084494-f4c2-4f75-95a1-50bf3c886376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c219b0cd-7972-4e13-a619-d55911fbe275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f62440-2ea2-4331-8d68-b988b652fdf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "211f29b0-d6b4-4ae4-a169-a4a66ae66d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a57fb1-a755-486f-b9ee-5ad5cedcb439",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "340e9a70-c736-41bc-b3a6-8535471d606b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e2e0fa4-38dc-4ecb-929d-784b33536168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc5f331-9059-42a2-8edc-010cee95941e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cdb925b-fa2a-4aa1-b120-31fa582c3b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd605a01-045d-4a83-8b3a-32beb1820aa9",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5db2050-b190-468c-8408-ded6532eb578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21227241-2760-4c19-97a9-5fbe6e57a776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b12ac0-bd4f-493b-8c6c-9fcaede79cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4daed4a-6357-4c7f-9dc0-c1f5bf0e82bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c07ec2f-9bd4-4b5e-8543-6d18396b8744",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ec67c9-898f-4056-948f-0feee90cb3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff2607b-979f-49f4-ba06-3eda0aee1095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22438ce-eed3-4e6e-ad7a-6e20c36e3542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9871731d-739a-4fc4-993d-62c9e26f149d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a475bc-0c79-4b03-b747-2fc62d520857",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5a3050-4ec2-4af6-b432-a11586e7776e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8ae84c4-a684-415f-9635-37971ebeb6f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92e98ce-b93e-485a-a6c8-77be55f28ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd716e1-6ec8-4e9a-8ac8-05f25fdc0677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554d3fb0-ceaf-4f6a-b624-c45983df3d09",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b5fd54-382a-4401-80b7-46b456c79d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9aeb60a-24f1-4b1c-9684-69354591f364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8441cca0-0cef-4a38-8ce3-b41208d074eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f2c82a8-45d1-44d4-81a9-d8639dd7278e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4e2f6c4b-28ae-416d-af8c-3eeb53738cd5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f0943800-f4d5-42e4-9f99-3f4c4b71ac2a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09256485-48d4-4539-8e65-5c1c92b73f08",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "975eadb7-df18-4520-bc36-9df5556f70f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e141af52-40ec-413a-bb2e-00391c0ae2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cfd3745b-a430-49c8-af80-1665879a2977"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c03c765e-6d60-4bd3-9aad-b82728dbd852",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63b877b6-146b-4a2b-951f-5cf72464dad5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6b03bc0-b329-485f-bc14-62526d72b92e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8be0c1c4-6d0d-4abb-b497-7388fbffef50"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd5b6632-5016-486f-803e-ee9a49c663d7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fe01c247-752d-4406-9f31-313a22ee6e43"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "886c3cc9-b4f2-40af-a6ad-0a4ded3cf43f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "417f1b09-f5fd-4161-830d-9349ead2574c"
            }
          }
        ]
      },
      {
        "id": "c0cded60-00c0-405d-a2ea-005a20390750",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "24a026e8-5252-47b6-8b42-39ba6f1939c0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e40d8090-0f16-4ae3-ad3b-878c73ca0cc7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "13b0c1b1-9a0c-4cff-8b68-46c8e41d4ffa",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f18065-3ea6-4a51-8f03-f9af7de6831c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3aa362-d2aa-422c-9845-5fdb36695429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd36e2f1-4bd6-4ce8-8804-95a1a29d1e40",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de8e71d-e47a-41bc-ac69-7d33e213bab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cab687a3-0de2-4f3b-82ea-51608c8be106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d972fa6a-3652-40a4-9f1c-2900c81c984e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf49313e-4f45-4e86-91a0-ce44763fd93e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd7666a-5bdb-4be1-b8b9-222f47e8b355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87dea039-a507-4ffa-9dfd-77b0539a390e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ead9528-bcb5-4074-99f3-14e45feba798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb8fbe5e-f1f5-4399-ba9f-ba6eb3b35008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578763a0-8024-4346-a1ae-b5dc469691c3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c2a873-2b40-4c90-bd12-0de1c92afb1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ad04fbc-fe50-4b53-abdb-a412b2d13498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab14588f-894d-456d-aef7-dab182d55456",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5471234-832a-4938-b247-2dd52934328a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e4da431-3f9e-4349-8c66-7481e55a723b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c77764-3260-4f33-9d02-6ce384501bff",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a1b63f-c8c2-4b00-be8f-075a18e036af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18ff1634-d0ea-4fb3-a392-b9029bcf800f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fedac57a-36af-493c-a3bc-f4fa0813a676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93b32ce5-4089-4a5d-a72d-a5df74c0ab9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a486bb79-8ca7-430b-8677-8ae229351d70",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f480cbf7-91a1-421e-b640-42877106e688",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4b41289-407e-49d4-af5f-508c04fa00e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "398ba6e8-d8cb-44fb-8470-8ec086b33a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c97d73-9159-4eb6-9d60-a069a9ba6e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7befb6ab-a02a-4cfa-9c54-5c60f5b1911a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1750a8-f267-4b17-85da-a28016797ec5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "133d0faa-be0a-48a2-8f98-1419f43f4e2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbfdab9-545e-46ea-a37d-d56ea84fc217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96289bb1-27ee-4dc3-b62d-8b33a7efbd59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65a4a22-c1e3-4f43-bb6e-c15eecf16fd7",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad34ee5-5b58-4c63-9261-cb82dc70ea68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42eefd61-b8d4-46b2-8e68-d90077d176be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca701658-05c4-4658-9f9d-de0238b0e0a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9842d0e4-4c71-4d38-a2eb-7353442ed507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca5ac3f-d79c-4963-b271-60851fe7f9b6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef380c7-1646-46bc-87d3-fa866443527d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d75e64f3-ae0f-448b-a2aa-67c2ef1c9f38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f39312d-2c03-4944-b60a-2e6ead543e28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6902cd7-7054-44e7-a800-76923fcbe4d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e160ab0-309b-4263-b179-ecb24e33fc80",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ea9914-c5e3-4f4f-bbcf-190f8476b611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb2832f2-25eb-4c98-89bf-f348245ea81b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "055fb6b4-1072-4eb9-839c-168ffde49aa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e3b7a3-bc31-449e-99bd-597275cb8fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694ed287-2c56-4324-bd90-4a532a16ed1d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f2f9d7-b36c-4975-a454-77d5f4c453ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3101764f-986f-4752-8ec8-67e597b37d26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8fef73-5d70-4dea-8f0a-6684940d9555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563fb705-ee98-4ebe-b1dd-967b81af8f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43de0cc-f37a-45b2-ab53-3c3faca170c9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f287d708-8a92-46d0-b106-e0c2529a605c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a617d098-0699-41c3-91b3-8e76e15d361e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "892c49f8-bf36-456d-9885-fef485b7fb92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc09a7f-437a-4f74-8131-eb4ca62da41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54875a9b-70ac-4983-a57c-dbfbf1f1f7f9",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "809e08ad-ff24-41dc-a2f1-8faa5c0ae2c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2becad65-3ab1-4529-88ec-fb0e86ab7d5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fdff571-b282-4ab9-9042-8f21ddf62e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e68e3ed9-16d9-425a-ad5f-f72d18128cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33463331-b22d-4b4b-a234-172645710d6b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cd40d9-c25d-4c6a-9e20-b47162315ff3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea4fc385-e20a-4d3a-8a81-0ab68c82f26c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfcf868-e987-4544-91b6-ac99c61e78c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f60b7fb3-e6d7-4313-aa4c-1761c00ccd9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0d691f-f421-493d-b173-e23296d0b753",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa9eb11-4262-4022-bfe7-235b78825454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca1c061-58dd-42ec-a011-58858365912c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ceffec-e5c6-4a6b-b4fa-bc3121a82ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04577a45-4750-4499-af23-fa55a32af99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71674734-d009-444c-9a50-d7a197e162cc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d2d7c1-e60c-4a12-986a-b751d73373f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e27a847d-dcce-47b7-858f-b5ebf2ff694a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb70b7d-4977-45d0-a000-8722c68eb048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "748de42d-129d-4c21-b5ac-0d19e3fdfe96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff9e0e1-ec02-4d9b-9609-adfcf4989111",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a7a059-6038-42b6-9082-90bbcbd2d518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5722599-8944-4774-9e39-6db913b6cfb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "548f7303-1f08-4ee7-b75c-4499d23f2d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "015b3bb6-efa9-4932-bc7d-92607ba703a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5676b5b-ea27-4485-9879-c823fae7eed8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e55aa8-9b96-4b95-9382-dc85548e0185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63621116-ba56-4065-a0d6-a5baf1366ce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebca7f2-734d-432c-9af7-e10a89d7be41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "246632d5-08f0-4ca7-b550-96d1b5d9564b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6ed16a-92c2-480c-a53e-b689a8500fe6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5edd48-708f-42d0-a8af-1ee397d660a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab94336-dde4-4c31-a3a9-d1d16ef1cc01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34154b46-77f5-4f6b-8fa3-36eee5271fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15bed486-2c1b-44f7-bf9c-75e2330a1996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be47946-6ea5-45a2-8925-5b1d2ed1d225",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3844a6cf-c066-4017-87e7-c12491e75215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b19f94-1ae1-4b8b-bf75-3160d71d8acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8ab3e5-d2b6-444f-8b98-3d12e69544b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c86e26f8-bafe-4e02-8a49-bf42c0586313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024aab60-4281-4624-8b03-7beb5ea1f9bf",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1b34cb-3ee1-421c-9193-e3664822a9a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78692f3d-d18d-4769-aaed-129df8ce70a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "275793df-fc6f-4fae-9c51-2fb16f84c223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "506e194d-3796-4e21-9d3f-1f22a449afdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a39a3e9-b0cc-4fa5-a10a-fdf618cc45fe",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5737450a-2115-40c3-9ade-e38555cb9a61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b24717e8-c282-4e40-bc56-2a09cf18b0d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89279cb-416b-4d0a-8c55-ad11da41b88a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9db1ca34-c330-4e10-b116-1a470d1ee20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f1f13e-929b-4ecd-ad5e-b7f5862799f9",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96111ddb-8bb7-4384-84e8-2f8dc74f9f17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03b1ac81-1730-4e0d-b3d4-a8aa28a23156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55a269f-ac28-4d08-b271-9aa6019d6df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67cc5ad3-ae2f-4ffd-83bb-6079d6c3a02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9061ad6d-494b-4806-a623-c9d3b5445218",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c538209-9091-4253-abea-92c310f295c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11f862c7-a46c-48d7-836e-bb854a1b524f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a981d9-fc84-4381-8c27-7012fdb40134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c679742e-2185-4392-88d0-5517fbb40abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b434f3-f16e-4743-a281-e54ec6661e05",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b51c7a-d64b-4110-bb39-acb2a7611419",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70c858b8-4016-4aa5-973c-54fa9d23b952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9810b76-7cac-4f2f-902a-0a6e4bd24768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa82401e-6e7d-4150-9f38-03dabb3530d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76027a8-7c4e-4ddb-b652-9320268becfe",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77369cbe-da72-46d9-8edc-bfa54bcfdb72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "939d2c95-0efc-4f40-89c5-46cdf8992bf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66c62cf-3ee8-4fd7-af21-46b3763911f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8cc85e7-b519-4309-9aff-3745b39db72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c09323d-db19-46b9-95a4-51f06334bf8b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e62f60-622b-4a4f-a495-8544bf9e0453",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1500e23d-be56-42fc-acfd-f8f9d7d7230d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cf8286-ea43-4fbe-a4d4-b880ad2bf23e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dea48ea-c119-4a0d-86b0-635551221b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a699370c-10a7-4641-8d90-62eb1d1b14e0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37840edb-99fb-4cf7-85eb-a19f31fbc5e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbdab6c3-3ef8-4f8f-a5e9-97249a5b98cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bde2125-0d9d-40e8-a4c5-2f6d7b5d83b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "015b837e-38cd-455d-b2e3-62f87e8f0482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29640b77-d801-40f5-9410-754047a239e2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4530321d-641a-48fe-b062-4696b949cf85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9384d53e-44ed-4a6c-ae87-9d0c24ea2599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "754c0c7e-5141-4628-b5e0-c0e44fd6bb4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "640c8e1f-0a6f-4242-9ba6-58e5ec9988ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23e1a80-4929-44bc-a8b1-b478d5c030a7",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d102d0-20c9-4db3-8bbc-5ecff4c388b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "610c4f21-ee74-4ab8-963f-01ec5b6119d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70f4757-b81d-4ac1-866b-a505bad5d59b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f03e3b4-9e77-42e7-912c-090766d53b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c953e52-8a17-44ce-b7e4-3689a8049e15",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb2f6c7-81c9-4361-a53d-ce3c1148f6e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9698a51e-da4a-469b-8d70-0916ea447ed6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c5a0c8-6185-4406-8b1e-a73f0686290b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b894d2-044a-45d4-88e7-dc1e588fbe6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b95099b2-eab0-427f-baca-2a3afcff2851",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36873d5e-d1c2-48ad-b1cf-6507d995d685",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3604d809-a9f9-4766-a830-0a9dc99bfc58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e546b2-1ac8-40ec-aa1c-7a3a16ed9fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3984d0a4-1db4-4bda-8477-72fbfe28e968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967c9158-ceb1-493b-821f-332f30e23e85",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9daf5c1-9637-4b29-905f-1551eafef4ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a799cfa-9f19-4966-ab9b-3f5472adbf32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae080f39-00b6-4b91-b8f4-ea59140f250c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b00e13e6-41a8-4264-8bd7-31271de9326c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6472c60c-eb87-40f7-a2f0-111e6cddaa93",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce01403-999c-4908-91f0-78f5645fb866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8baeeae-f7a3-4044-a7cf-7122d8fecd91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "544c59dc-707b-4631-8c70-3ff32be54507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de1857a-c070-48c7-9c77-3541bd7cba96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a98cdb-f60d-4cbe-b354-83bbaaa2078f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6865b3e3-0dc9-45c2-b5e4-47539e80f07f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d447eb3-96ef-4411-bb1b-2b5f3636d8ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29e2095-cba4-4815-90f6-05565dd44b57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1eabb76-7ea8-442c-b623-cc9d0f43d642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd50a7f2-1280-475b-9e9a-66d3daf13dd1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f86a1a-df7a-4e5e-96ac-d41b713767e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5e0294-ab5c-4be2-8dce-691aa63b24ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3527e33a-3f4a-4a55-97ee-ca7b5bf8c239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a150b2c-e2a4-48b1-9c58-38e1f9bf0201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ab6f47-43ea-4840-b251-161039f599f3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5e255f-0d51-421c-a6f9-0778060e23d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "166ed9ba-a669-4051-950e-83379f5b08ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "136fbad5-c61b-4310-96b8-7acee4635c71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b1de3b5-1fce-492f-bba0-e5d676eecbce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e28467c-3803-4988-a55e-bad496b14cb2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67a916f-51b1-4191-9f87-ab6cf0a05735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2078de97-a81b-479d-b9d0-44f99616ec61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca895b6-5d20-4d0f-820b-2a9882880c49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a6b8db6-31d3-4d65-bb85-ba273b662240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0784f8-6e52-49b4-9048-44890640a113",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f95d0d-a8fc-4093-8e28-f2a6fd3a1ee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66b782d8-7313-4e27-a269-5fb0d81176cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d496e62b-46aa-4fe6-9bd2-cb6280f510f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ccafdc8-8ea2-413d-91bb-1d4fbccc9fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa8f6de-7ad3-45e6-9f5c-7ca1e48de612",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4cc32c-bda3-4cd5-8b4d-15cbe958be33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f762831b-7e73-4800-8fc9-c0a7bf7e7d12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84ffae3-8bc2-46c3-9abc-c17770db9cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "808170af-5ab0-4bdf-8698-2ebe06995b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ddb3fac-3e66-4a30-93ba-ca96d235e583",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0692a4d2-a288-4292-8ed9-c3b47f77fe42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f06c93ca-e14d-4e87-8f2f-c28f624fb7a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff5529e-f8ce-457f-a0f9-5488dcc3d6ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "765f441f-32d4-41c4-ae52-3a80176a4379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a32b4e-21e1-4d18-a1b9-439ad2430526",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638ce8d9-1fed-4604-ae79-2c9e0a3b6a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e349c2ba-949e-4c68-83ec-097355494ac1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a079a440-a0fd-4e4e-882b-7facf521bf65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75eaad02-c938-4cc4-9fe0-129cce0b124c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1958a3f6-6442-436d-bdc6-280d0143608e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff44f12c-fdcb-4b34-b1a7-8607cc1439cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd4d326-e2b2-4155-b413-4d8098053540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a24a31-db40-49a3-a5bf-3a134fb7e3d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b1b632f-3cdd-488f-a026-c461f0e918fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b8b08a-3017-48f0-a174-331be1c6186e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5011585-4b7d-464a-8d73-b4b118dae9d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c75bc2d-b6d8-4799-a84a-eae95c9af575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee34d252-74ef-44af-9188-0a940ce3b53c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd7d1cac-06d1-4f9a-8c84-8346b7349807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16bb209d-3b87-4cdf-aa4c-36270e74a41e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a210cda-2f29-41fe-9f00-0fe94452b240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1bd05fb-67da-4f42-af6b-3a11ee8f80f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82f504f-cda4-4402-976b-d4970c5f9474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c91e20c-c00d-4242-aa39-7754ebb283b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "674fface-45f6-4d1e-9ae4-614bc3277d97",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b352b0-5dd4-4403-b4ea-824d040242ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e64229d2-a3b3-4ecd-872b-954bdbd95a4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b919bd-4d2d-4f13-a703-c1049270b2fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ccc4081-702f-45c3-8e3d-01ad2334b484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f731be-0cc9-4f69-9258-09b545f0b594",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93717292-4077-4d65-9827-32c75e303fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb7da19-9d8e-44ee-81c7-df557c7af19b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53b0cd2-65e2-4440-98b3-647399ff0e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "959639ba-8013-481e-92ab-3f31d7ac5adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6903db-ba16-4727-8e85-c8277c385383",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051d08ae-eb18-45fb-b7c7-19790a0c171c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d4c3181-1e2f-49cc-81cc-3da0382d5b8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74027a63-dc70-44c6-850d-243e1d64b8a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f5de03f-31ec-4b94-ac00-99f5da05603c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80543a19-c352-40d2-b9e9-50b6890e546f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912bbd10-210a-4034-b40c-7e655245033c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4c3df21-6661-4af9-aa79-a78c50c926dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d7cb7c-4bc7-42ef-8293-616ddb0658c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87510d39-0fe6-42c5-a539-8ca09fc4bb3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f4bd4f-04c6-4187-a817-599f84271fcb",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d767b1d0-305a-41d4-bb4b-6614e4419fe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "012a4eb0-869f-4855-b160-bfa1623ef367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ac2e32-0f04-4ffd-b619-98a491e8642e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb4e1105-97db-4e34-91c7-66b21baba9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0962847c-87d9-4fee-a3e6-f32b96d3f774",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20737467-93e7-4bec-a5b3-ed953ac7c1db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e60aeb4a-fbd2-4c57-8f67-e47a283297ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf9fbaf-0055-4fef-b31a-8c0911a0b862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ce5550-5210-4162-a0ad-06749e0b1062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a779bdaa-e9cc-4f54-a460-e061ee0b5842",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7c8c88-896b-42a8-813f-e5a69408913e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91bb22ac-8c84-423c-9150-6f9f407f8d77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c553e0c4-577d-47b2-9715-f33b4fe5b56b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ccf4d7-91a5-4fe3-a4c5-56f29931a408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "700070c4-990f-4079-ad73-83705b0d26d3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ade62d2-a68c-4209-89e8-2f37f9f37497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8570018d-79ff-48c5-93f5-84ff4d03f6eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd86cb0d-4a53-4b94-82d4-a7ef692cce03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "548bd264-50a9-476c-8c97-4fe880932c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b687da-f7f7-4254-adbf-6f6647ffd0b1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f574ec2-d128-4a55-a9d1-085fc79e60e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a4ddbaa-b76e-4f73-ae46-bac1d66aad70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a3486b-2774-4a60-9c97-04cc2ec940cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83b23672-0117-48ed-8a95-a9663c3baf83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf64b0c-ae8e-4335-b2d1-c72503cf8775",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425ecf15-b5b6-4cbd-8848-016966526e14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6147cf56-8dc6-4aed-a5a5-42fe51ad3b26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9034a4da-daf4-40f5-acc4-ec1c74b23759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "938e2697-6d77-4d1e-829b-80173b861050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f254bf2-7556-49ad-ab76-8f055fce37b0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66febd63-6e6e-4f6a-b9a5-4669490e201f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e487cd8d-12d5-47b9-ab65-7b5214da9553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf7fa3c-ebd1-46d8-95c9-b7dadaecfa5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8215fd0-ee59-412c-a188-31ef24435fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e482e87c-3412-4e34-b151-93a82e6fc422",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3d5577-d0b0-441e-bd71-5918f1fc3dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a33d54c-37bf-4399-98d3-1dddb8ddaf4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a1a8b1-e09a-4f63-8154-5e5f6197bc24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "805bda46-0c3c-470b-9d5b-b6dc798b1dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03546f0-f5b1-4a2d-9f59-c4b257805246",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727eb611-c305-4b24-8e0a-07192efb08b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca1731c-ae79-4c2b-98f7-fdaa21e838f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7a3483-bf26-4871-af83-2cc76ad5baf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec630334-f081-4710-919c-630812e8205a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de865988-934f-4bf9-9b17-4d0cf9766787",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987c9329-60df-428a-a299-ad8c9c16217a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f9747a7-dd4c-49bb-8915-dd7e7e00c225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d327bf-7dd3-4386-b244-f15b638c3a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f39fdad1-802b-4742-9d6d-d264d39dd98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aca57dd-a2b7-44f4-960d-d33310a94d3f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979ffd76-dc73-4c0b-9757-eed5f7de6cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52ad4e66-0f00-443f-9e89-6dcf4865e906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f01128c-3027-49f5-8d70-da076b9e64dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1abe9025-5795-45aa-9fa4-99cc5cf10a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75cd5bf-780f-481f-a63e-cd5261e819a7",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca14147-ee4e-4d32-9787-ec974a24bbd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96fa15d9-0738-440b-a262-63b061c4fecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db85ab6-adf6-4459-88db-58348e749dc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49c0dfc8-0128-49f1-ba48-179935b0b12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27dab10c-1c4d-4fb2-b223-804513268dfe",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55880c27-f841-45bb-a16e-77da47c4686a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "870064c1-334d-4648-8fce-2173e911e21b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e207597c-94d8-4c5a-bda2-21ca367134ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e34c855a-21a4-40f7-b1a5-961dd5711a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58dc6523-541d-46e9-aa2f-e80d7f446f41",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad7d296-7723-430d-9511-c6169921c7fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0af2dbda-3292-4744-8d0c-e5b2d9fbcaea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc93980-4557-44b9-8493-d0e1323a191d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e39b0fd-b818-4318-af7d-e3a9c1777e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a47cc9c-dfe0-4339-a9ae-6bc56fb74478",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a428c5-6788-4271-8d8e-8947d3a9c56b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbb89ae0-a7d7-405e-945c-1af2536adafc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08db90a2-4858-4451-bc8c-2f88e5faeb5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31e31064-57e0-4a0e-a25a-fbb38e39abe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c19f57-77f4-4b49-bec3-3237ef0d9181",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d7ce05-8f7d-4a89-8496-31d3c3745b0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "784c087c-b5ee-4c86-9902-62514e15ada0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38340286-23ea-42a7-b970-612363dd08ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3aff04c-482f-489a-ae76-fd10bab1ee9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd48284a-546e-49ac-9c0a-8c2612dda85c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5132a14-592b-40fc-a581-a62bf90f136b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65c52c5e-1e66-4bb9-84c4-540b552c2843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ef92f2-3080-43d5-b0b0-0073181e4a1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27d29239-ddc2-4191-90ba-93ae2d73f333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a61b194-8eb8-4422-b922-30347aab277d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e5bf58-b7f3-43a8-84ca-96cdfc564bb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad5a514f-c78f-417a-bba1-afc408fc358f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b92501-1267-4fc7-956c-bdb6f37f29a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5cbe7bb-86e6-42ca-8710-a0e5e79208c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2862a654-5fd9-4015-9700-426466254971",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a5d42a-3d9c-4117-9526-00221c61ff43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f2f62a1-dba3-4651-a795-e2b55a711901"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba976c42-d07a-4858-b01b-be3964a809fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f515d364-9a22-4bee-aefd-cfe0fe71e1bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8630dce-db77-462b-96dd-2c9bcc095215",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa2ac30-bfc7-4d34-a896-a9e647aaf7d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd0963a9-9913-4456-ac02-8849b1c5fe4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f4161e-3330-4b4a-af3f-156962b6bbad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47a5bd73-a273-4f59-b85d-0d35a3ead9d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0b0438-fcd4-4941-a237-ca453d4bffeb",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64986156-c9b0-4ad0-9dc6-766492008b08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "651cc6f6-4e9e-4fa7-8a3d-6cc1c35a641c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad89d57-ad7d-4719-80c2-c70f9de2bf8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d3ae99f-f061-49cf-801b-c0b372632a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ed5f9f-bf5c-4479-b29e-ff40bdfcf480",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0be164-7b6d-44d1-8981-aebdb948144e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0499dda-657d-4e9b-bc69-7efa21e47610"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21cbc7dc-22e5-4450-b128-e16d5a030715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e38e6ca4-ba7c-4858-8bff-f5aae0fa2f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56cb301-0e8f-4667-855e-57b374984613",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15537fb5-4632-4cb6-95ff-74e4a9b0a0fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38ac6cc0-2945-432b-a33d-2b3591a1bbf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "176a8b3d-be4f-4e68-a6e8-a7e2c42c8271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf4c26d3-4576-4bb3-901a-1c0e710f18a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c382d84-869c-4e7a-8803-2c9e716495c4",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4134e6-01da-4046-9ebe-f54f2e368c12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a669593e-ddf5-4634-956a-0bbf9127dd89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4fd5a5-5fb9-4ada-b87c-4769ed0003d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c24f36-5654-4844-88e8-bcfd23f694b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0ab139-90dd-470c-952a-e3dc500f53ef",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62b8ab9-865e-4379-9162-5f3443d71124",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c82b4ba-e1bf-41e0-8f7f-86aacfe00556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75fb5187-b514-4d38-a8db-42af323059fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61c95cc2-e9fc-453e-8fb5-4f5fff58b80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b5569f-9161-4578-87a7-258ad16b4dcd",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6ef011-5ac7-46fb-a4b2-f0dc08fdb6cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ead456f-87d5-4062-a6fa-334c5e474b0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5b027f-5901-41f7-9d44-9fb2bfe25686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cae9da0-c49d-4612-bf78-2003b1628f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085959fd-135d-4d57-8ab4-03e4228e39c9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff05c7a-1344-45b3-b5a6-d3740391e073",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7143ce3f-ea1c-4f4f-98c5-4f31d253fa42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a91d518-9c5a-42d2-a1ee-5c2e01e8bdec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b343f9ef-0a1e-40ef-b84f-dbe811ad4f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98599765-700a-4863-8ae6-4f3355cc2d69",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038cb1a3-e567-442f-a463-afa7170203f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c08395b1-ef80-409b-9047-1bf9e0633331"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e257ed0c-cd5e-4ed3-8be1-b5aeae3797f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a86a2898-f29b-4692-b1ca-a7c7849bf9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120435ee-278d-4fa4-a35a-a235e4a0c40f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d22db2-1a3c-4654-8db8-e62bcdfd1eed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "124cf1ca-2bdd-4a1c-b13d-df8f35c09b54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78924344-a5a9-490f-951a-f76e733b055d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ec6b3cd-4f78-487f-876a-fafe98f6f65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3296f427-527f-4113-be5d-f50b50df5910",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed7c2bc-c70b-4233-ad24-5462a691f5e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27a721d7-ad3f-4dcd-aac2-397eb0a4c08b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "919aca3c-adf6-4442-b510-1f4db6163ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5453d4-ae9c-4b21-bfc8-3f0d075da578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94294ad-da94-47c5-9e69-e817d5da1f56",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8b7e2c-19d2-4ccc-98eb-281eae6628de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2738247a-cd0f-4366-8066-64e1a33ae659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2c5723-bef9-46ab-af74-c0cd257ac60c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbafd864-d41e-4557-97be-a62c88bf3e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1164cd-df48-4ce1-9a7c-a23a545d5685",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60220e4c-a4c3-4f71-b9ed-4aa2d2a868cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b69cbdd0-8a94-4878-943f-b355bfd5f037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15cd528-ccdd-4d81-84fa-36dd01a7eff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36696ea0-5aed-4134-96c9-7c47bbd0e2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a7b118-8378-4f84-84ec-f6b041f88272",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b79908-be8e-4568-a222-d1d1ea3e6aba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "179389ac-eaf6-42ff-9128-f79da6906e24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e383a9-faf3-4366-92c4-40f431bc4fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82577500-f6c5-4970-9df6-c1d9b2e4eb23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1947cafc-91e9-46a4-b22f-6c022461f294",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d76498-6b4d-47e8-a88d-88fdfe033ae3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e9a0140-b89f-4ed4-857c-bb3273434133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59990596-84ab-4bc9-a424-b7231f1fb608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c84993d-ab5c-4112-8c3e-9544e4408259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b44b66-7d53-47cb-a158-f030c522c3cc",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07cfd60f-d85a-46d2-8c18-8d426ef56b7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0046cbf6-eca4-4c32-8535-22e02cd6111d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7aae8e2-73c8-4972-9d0e-0f27536acda6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb3ab26-c271-4614-998b-9c442bf6beb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624082c5-0723-4427-8ec5-7c42efe25986",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae4e483-318f-4632-9f77-eb662578d7b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45ab0bda-993b-4cee-8949-75a667a097d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "449df284-b99b-4e5e-b68f-0c218b4fd123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bb02217-7708-4699-b1af-3297cc4492a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4253e9dd-12b6-4f2f-a2ea-41b80b60d7c0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145129fa-caa7-4b27-97ae-02645e8a0913",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71abafd3-5deb-4c0f-ae2c-9e31504ff767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12175a7-2d9a-459f-b4b5-761f6f07affc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "455efd39-a88b-4ffe-87f7-1789fb50014d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4699c5fc-04b3-46f4-88fd-c130d497c88a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5613a33-7961-4b9e-9043-1e1b150e8322",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6fcb4aa-c827-48d0-910d-f3f2a92e35b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c109f4-2125-47a2-8349-d68bdcb4b3e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f313cf-d671-463a-ac0f-932d68933121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1bb5aaf-da1b-42d8-b083-51adac7ae1bc",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0bf805-138e-4b5e-a68e-9719744ee06f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b258b81-acb5-43d7-9409-bb7a510edd52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "391b60cb-5240-48f4-bce6-f8605b3eab30",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32556a59-4e05-4a42-a917-39a7c64e06c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9af759-5cca-4b35-b864-8414380796bb",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55eb9e4-f039-47e3-a130-0dd130a8f4a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddf38f14-f44b-40a8-838c-d47ae4a6a8a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8cbcad-bc32-410e-bdc0-45a0c37fd34a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0627c147-8183-4a4b-b587-a8b8502e16cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5d7ad4-255d-45b1-8d2d-25f9f4c8f0a4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77170cc8-a16f-4186-91ec-0a80140b6218",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aef2c0bd-e924-4dd8-b5ab-79d9bbd7fbc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e793a1-a1dd-4e92-b8e6-f717431407e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3edf9d82-7b22-4e23-aeb8-ad60769f5cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617413ac-61d3-47ad-85db-bddc5d9868e0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b77fc5-3b8b-4af0-a7d6-23022c37db1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6708f03-0a7c-4d6c-8b6b-34879f8fb508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75404751-b95d-4276-b960-108b91d9c0e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cdb23f2-5e47-42f1-a2d1-e300d8c16065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d201710a-f0a4-426d-a76b-03520f11c55a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67cf9fd2-faa0-42b3-9f24-bd9f8f737d14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db5366b7-b46f-4dcd-a960-63ebe4c6c17e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d828244-a121-4e93-8304-d7c2dd8144dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef8a02af-ca19-4691-8808-43d6f1c5a760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9fa2f2-4d67-4e79-a4bd-1f611a394512",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add41c37-aee4-42db-970d-237d018024dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba812cc5-9a5a-43d0-b716-238edfac9716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5661a9e8-605a-4d37-a492-9d49c729383f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "841f6189-5bd2-4a54-a5ab-ca9793aab0bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66103f4f-49bf-4512-87a3-575db4d2b09a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4631446-2279-4a24-975a-7f500748e788",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34cbe871-7494-4cca-a50a-e10ef3f68e54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "377908fc-ae44-4267-8d7e-3c8c8a01ceaf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dce363f6-0f84-4c29-bf1b-4b2a228624a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41781eb0-2951-4c46-8907-05e7185bc14c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756e9f33-f920-427b-86ca-efaf8ed39411",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "913e0dd8-a83c-4f6a-b306-1742702a2300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53231a9-ce14-4c5f-b419-13fac835acdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59b9a7bf-3d5a-40a8-9643-d01fc145fbc9"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19159c07-8815-48c3-8e54-31619d69dbdb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57485e07-4e46-426e-a360-b1fc7633100f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "60917145-98e3-420c-987c-c9295cbd7922",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0702df5b-6577-4047-9e64-6f5d4e4d3434"
                    }
                  }
                ]
              },
              {
                "id": "634b052b-c833-4a88-892d-a71a04b11ccb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d3b610c-bed3-404e-9457-ad64507a5659",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0afbb5ea-3326-4860-b2fd-cdd6127ecb55",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "10f51a53-8da6-44d2-aee7-b38222519405"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "132bd83b-ef4e-4d7a-9863-dc333fac68d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3abc0115-4a7a-4f46-b788-401deaab0d37"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88d0332f-2755-43ec-87cf-ba51c601e0fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5a6ce73-9c30-4f67-b7b4-53f98cdb4d4e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1eb6b0f2-4d76-47a7-8906-2d83f3b33775",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0111e81d-0351-4435-807d-db88a59e3b1e"
                    }
                  }
                ]
              },
              {
                "id": "6ba6ab16-ebb2-4d6c-8406-f851973c7ce3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8f6b7409-0a3a-48ce-8033-ef2ec0f4234b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04453ddf-c3eb-4811-878d-a99920957871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ad21ea23-cc4d-4cb4-93c9-14a6c888092c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980b8f2f-4d1d-464a-af9f-6534608d399a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e03a075-bc68-494e-8edb-bee35707f2db"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1eaf1cca-be3b-4aed-a725-8d4a3ac4de5e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0df06d14-256f-4cd5-bb71-84491e64aa02",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fefe9684-d8c5-47f6-b956-f451b3f44793",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ba7bd76c-f35e-4cdc-a7e9-bd1acaa55720"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4cda015c-c015-4466-a194-d9b49b082556",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a4fa559-40c6-4584-b737-a00c9720cb4a"
                    }
                  }
                ]
              },
              {
                "id": "2322b891-f264-4d72-9bf3-792faf6ea602",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e68ed4a8-3617-4198-b5b9-e4967da888aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9a3bcab7-5c61-4ca2-aaa2-feb23a5885bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f8939be-b4f8-4467-8b13-aba902ecb935",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a3c5795-3509-41fc-a9f0-deaf17b92f80"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4bf8fde3-9554-4428-b4c9-711797909979",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e4cf4954-7f91-4652-ba1d-531d5cdc979f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a5e6a80-44bd-474e-877b-0c959c903330",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f394c0e1-5760-4d93-b3d8-b69355d4bda2"
            }
          }
        ]
      },
      {
        "id": "838758c7-651f-493f-8556-08961a3e5d45",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2e03b4a5-8f4e-4221-9f84-9019ebf39c3a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1919d915-c627-4b35-a13a-2bdccdfebe44",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "94793925-4882-4350-b47e-5ce88b2c3b70",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a08ef50-137d-4fa4-a28c-29ba3f5c6456",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "02650e83-9fcf-4909-9df2-86e613928161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbfe476-3e27-4f98-9787-89d4be4262f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6bde8ad4-9c73-4f23-b273-5a61333d677f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bbffee91-bf45-4218-bb31-65bc4da9f873",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e9670f2-274f-471e-869d-5d85eaf9c68b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a656a6af-6f87-4426-a42a-902266a0b062",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c926c43-e7ca-469e-bd9a-6338f8e2ebac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5bcda3f8-aae0-4027-b07a-4bc35b20dbb3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "98321222-b0a9-4703-9fab-39197c70b2e1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d2c487e-2e34-42fb-a9af-86dbb60e9631",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "69fcd9ad-8a46-4342-b68c-335554eac5e9"
            }
          }
        ]
      },
      {
        "id": "462c322f-fb31-4798-af0b-8c157d29029f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e9d57906-c8ac-473f-bbff-f6efe651a25d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0d2d7336-c48b-443b-90ee-2e70e74358ea",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c88e4952-1209-4171-9bd6-eba7e8ec99b0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05cc777d-3b0b-4b50-8725-7899bf1452c1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6123fdf5-c676-4f39-9fdd-ff1e83de3172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc475cd1-150d-434b-83d9-45ea93fa7312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42983110-84d9-48d2-a9e9-0c6b697945c6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24fb15f8-64a3-40f9-ab75-09eea02889fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "888af18a-7efa-4a48-ab82-98f5f4340bbd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "45fe1da8-9868-4891-9bf9-9b5212a02ed9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a2fef10-8bf3-43bb-8966-8d3119b73865"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01dff229-317f-43ff-8ffd-498e637e148e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e880de5c-8d7e-42f3-907a-c45c234fcdf2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b11ff538-12d9-4ac7-9eee-181e09910801",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3934165b-9b3d-4d75-8f62-5daf37604887"
            }
          }
        ]
      },
      {
        "id": "3dee8054-e9e2-4e08-827e-3e6c3e6f5226",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "217fcb57-7df6-44b0-8e23-d81fe4e47292",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a7a5f5c-bdc5-424c-9e2e-3dc26c61cbb1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c5a63320-cfa5-4426-9991-65af7f4daf1a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36207933-7d0a-4549-9785-d0a206a04955",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b820698-7469-4224-9590-710c4d6d8fd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "280d293f-6d47-4d1f-ae52-83e87a9b0e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f90305e-66a9-4495-bc83-eefd4e4f686c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8592f55f-162d-4ba9-9dd1-e659de633177",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b74eb767-3d02-4eea-aecc-af1be7a4b29d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d69b32c-7f51-44e7-9871-0000ab5d1b6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b104d3ed-20a8-4c7d-8df8-d68caf883abb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93a3a308-2227-4638-9da5-12aa81c93d47",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9dacd015-ddea-4f16-8434-17414107d211"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2023b006-abd2-4af1-b211-451b370d47c4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2cae25d7-09ee-4b99-ab87-a8f6491344d0"
            }
          }
        ]
      },
      {
        "id": "2bb31d37-7152-4e23-9a83-90be3eba2e52",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8cea5665-204d-43f4-a5a5-42bc3a369416",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4c42d0d-67e3-4aaf-80e3-afae3d7bd098",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "af4aee91-4a8d-4674-916d-c1ae1108a1b8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72288c45-0189-4f78-863f-29ce27d29474",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a894c398-e359-481b-bb50-54af30f833bd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 7
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 648.9718309859151,
      "responseMin": 6,
      "responseMax": 22776,
      "responseSd": 2867.865737186882,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697157272522,
      "completed": 1697157469699
    },
    "executions": [
      {
        "id": "052a6d59-68df-4cb0-8d42-261a5bc9768b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0bad8e15-8a76-49e6-9984-e39dc4b88f2e",
          "httpRequestId": "1b2eb944-f49c-49cc-9a21-00acaacb2b8a"
        },
        "item": {
          "id": "052a6d59-68df-4cb0-8d42-261a5bc9768b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e6af641c-63f1-4d21-ad9f-4864a0ecfef1",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "2d269299-2f17-4b9a-9700-c80fe162d58d",
        "cursor": {
          "ref": "630bd897-9847-4341-af52-9c75b20a8be4",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0dd87d1b-fb6a-4e4d-854c-c405a854a081"
        },
        "item": {
          "id": "2d269299-2f17-4b9a-9700-c80fe162d58d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "77b4fee8-e100-497d-8796-6e1f8b5bedd7",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "33033db5-a772-4e73-9e1e-4ff05b6b2033",
        "cursor": {
          "ref": "bf1b6800-7b0b-4784-ac81-419a95b22ce2",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ac1bbf5e-a1ec-48bc-9f28-0e54f2692504"
        },
        "item": {
          "id": "33033db5-a772-4e73-9e1e-4ff05b6b2033",
          "name": "did_json"
        },
        "response": {
          "id": "aaaf4d78-bf0b-4240-9f0b-899a102311f7",
          "status": "OK",
          "code": 200,
          "responseTime": 3837,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b88066-4eae-45c3-861b-342b2de36fff",
        "cursor": {
          "ref": "0af3266b-7896-4425-98de-73959d2ae101",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "727a69e2-1506-4324-a7d8-95c5289dd3d1"
        },
        "item": {
          "id": "e1b88066-4eae-45c3-861b-342b2de36fff",
          "name": "did:invalid"
        },
        "response": {
          "id": "6cfc80c0-da0e-4b1a-9c19-4e01feaad032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b88066-4eae-45c3-861b-342b2de36fff",
        "cursor": {
          "ref": "0af3266b-7896-4425-98de-73959d2ae101",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "727a69e2-1506-4324-a7d8-95c5289dd3d1"
        },
        "item": {
          "id": "e1b88066-4eae-45c3-861b-342b2de36fff",
          "name": "did:invalid"
        },
        "response": {
          "id": "6cfc80c0-da0e-4b1a-9c19-4e01feaad032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d1bc49-de68-4718-9ea0-dde3b2f11d75",
        "cursor": {
          "ref": "899785e0-231d-46b7-96aa-e228195f5d54",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "afda2bec-00ea-41a4-b5c3-25aa2a16248f"
        },
        "item": {
          "id": "94d1bc49-de68-4718-9ea0-dde3b2f11d75",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "733c2c3b-cb2a-44fe-82c0-81b74135fc30",
          "status": "Not Found",
          "code": 404,
          "responseTime": 352,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d6e4a8-2c99-4f65-a7cb-66697fb6c9cb",
        "cursor": {
          "ref": "3b08aae6-2ff6-425d-9fe6-9aebd7bb9de2",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ad70b9d8-2993-4597-9606-af1448638f6f"
        },
        "item": {
          "id": "d0d6e4a8-2c99-4f65-a7cb-66697fb6c9cb",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "bba1747f-0ce1-4391-bc75-4989e413cc55",
          "status": "Not Found",
          "code": 404,
          "responseTime": 330,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c813b79-db3f-4a9b-850f-6c2d6eb29364",
        "cursor": {
          "ref": "93f0ce19-8c7c-44c2-afb9-f581fdd78860",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5a9e9b05-af90-469e-baa1-ecf508702514"
        },
        "item": {
          "id": "5c813b79-db3f-4a9b-850f-6c2d6eb29364",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f7a30e48-b8cb-480e-9c46-89804e116596",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e2beb5-65fc-4971-be3f-a92167773c8e",
        "cursor": {
          "ref": "d85c295d-73a0-4c1b-bdcb-4db61516f5a2",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "274f4111-4c93-4894-9ca6-f2766fbaa66a"
        },
        "item": {
          "id": "43e2beb5-65fc-4971-be3f-a92167773c8e",
          "name": "identifiers"
        },
        "response": {
          "id": "62d2fbc9-b66d-40e1-9980-0c7f9d401981",
          "status": "OK",
          "code": 200,
          "responseTime": 3348,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a42236-d934-4e03-8756-8df9243c4bb1",
        "cursor": {
          "ref": "8ba6bd15-2395-48a4-ab69-9376b64718a0",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ca62cf5e-9cd7-4d3a-914d-262e361d4f3c"
        },
        "item": {
          "id": "68a42236-d934-4e03-8756-8df9243c4bb1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "370f0b9b-a641-450c-83fe-2e7ebeacca4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a4ae6f-d766-4eeb-b699-5bd7e888511e",
        "cursor": {
          "ref": "2c90657d-d640-4335-ab2c-081fd8926430",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "18989497-fc31-4df5-8555-c6398161070f"
        },
        "item": {
          "id": "58a4ae6f-d766-4eeb-b699-5bd7e888511e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7b823f7b-4161-47ce-8570-861f5febac4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fae029c-20aa-496c-96d8-91edd6d74dec",
        "cursor": {
          "ref": "34368393-459e-4a47-a0de-67fca8a0d4d5",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f88f2211-6dfc-42ba-a7e4-28172a861937"
        },
        "item": {
          "id": "5fae029c-20aa-496c-96d8-91edd6d74dec",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "79de4a99-fa69-407b-ad15-6d156ebbab33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1c5f5b-f310-49f9-b47d-450eea43940a",
        "cursor": {
          "ref": "eda93e17-ecab-48ea-a326-6d2543b8437b",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c85941b9-20b7-44fd-ba09-1a5a83654b40"
        },
        "item": {
          "id": "ca1c5f5b-f310-49f9-b47d-450eea43940a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6595612b-8bc1-465c-a358-bbc275ddbf70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441b999c-a4f7-4ee3-a718-370ef3291d28",
        "cursor": {
          "ref": "c8556058-5859-4f00-a550-f24e3bd69902",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1ec974e1-4c7c-4268-8d0a-8010fa7a6612"
        },
        "item": {
          "id": "441b999c-a4f7-4ee3-a718-370ef3291d28",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "fae78789-307c-44be-82ab-a5adf587e6d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998a29d4-f5b8-4d44-b4ca-1e3e9384f798",
        "cursor": {
          "ref": "46a4d415-4166-4ae2-bbef-dc8acb61e9c6",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e89ff1d6-15f4-4864-be5d-072e4058f627"
        },
        "item": {
          "id": "998a29d4-f5b8-4d44-b4ca-1e3e9384f798",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "86d76616-a09b-43cb-a5c9-26c2beb9b1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939626e4-a6a6-48a1-99f0-9b82e5cdc3ca",
        "cursor": {
          "ref": "e99bc0da-b84b-49b2-b3f8-2a2aa07fa25f",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "845c789a-da6e-4af7-a402-10656370b3a9"
        },
        "item": {
          "id": "939626e4-a6a6-48a1-99f0-9b82e5cdc3ca",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a8d932b1-0f9b-492a-a672-f6ca5688934a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08086657-e3bd-4bfb-8844-1d0875d7c17e",
        "cursor": {
          "ref": "32126b30-4ddc-4a24-9193-985914eb3147",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "aea9ca73-1c39-42c1-a5ad-4c8b1bb4a72c"
        },
        "item": {
          "id": "08086657-e3bd-4bfb-8844-1d0875d7c17e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "59541783-d64b-434e-a23c-4eb41902e854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dfb246c-18f5-46ae-9cf9-7512374dbfb1",
        "cursor": {
          "ref": "d3a12c01-afe6-4b0e-ad60-f6f441a6e41d",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b00a89a4-4bda-47cc-983f-95e82b34fd52"
        },
        "item": {
          "id": "6dfb246c-18f5-46ae-9cf9-7512374dbfb1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "353e01db-9a1c-41fd-9160-60ce6fcf0435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ca2fce-0b1f-444f-bfe3-3dcaf3a4e6f8",
        "cursor": {
          "ref": "e67cb6b0-f67c-4caf-a491-3bbb8ff5430e",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f4588be9-7762-478b-b4f0-107e692cbfe0"
        },
        "item": {
          "id": "26ca2fce-0b1f-444f-bfe3-3dcaf3a4e6f8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1e2f57d2-815b-4fff-bc56-9757333203f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58aa3a4-3f1c-43de-a4f5-1133c5daa27c",
        "cursor": {
          "ref": "82b2b107-9611-4b38-9bbc-7c77fea3bbd2",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "989af489-c241-4981-81dc-e2513db40bf6"
        },
        "item": {
          "id": "e58aa3a4-3f1c-43de-a4f5-1133c5daa27c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5bde286d-1dcf-4e15-a14b-64f4e365b3e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca90fca-d339-4f84-9479-ab503430ef93",
        "cursor": {
          "ref": "4ad47c6e-5927-4a6f-9363-36e33dd1da4f",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "de4ed19f-e846-42ed-9fb2-4dd8d986a9f4"
        },
        "item": {
          "id": "eca90fca-d339-4f84-9479-ab503430ef93",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "fc1c3e98-e340-4e6a-a6f6-2173c25f202e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7836fc93-b95c-448a-add5-7927d95a0dbd",
        "cursor": {
          "ref": "e606c9ce-6b59-4be0-bdec-d1221dafc5a7",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "897ffc98-2543-4f20-aeaa-80323e519a85"
        },
        "item": {
          "id": "7836fc93-b95c-448a-add5-7927d95a0dbd",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3ddd234a-c32e-4a11-ab5d-bf3fd732bb49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85f61f2-cd09-4c8e-b1d9-8578814cb413",
        "cursor": {
          "ref": "cf4c615e-8952-4bab-afa6-1f39aa9a7e0f",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6a0a01b9-3797-4d8f-a849-e8df5b1280eb"
        },
        "item": {
          "id": "e85f61f2-cd09-4c8e-b1d9-8578814cb413",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e9357bea-3c7f-4112-be15-0671ff9fd217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8774bbab-30a2-4424-84ad-75fa82f4ee3b",
        "cursor": {
          "ref": "e1bdba4b-8612-45aa-b887-e935b4cef004",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c9122499-cc01-487e-b278-d289cb24d758"
        },
        "item": {
          "id": "8774bbab-30a2-4424-84ad-75fa82f4ee3b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "771752a9-7e60-47bd-9b81-f65380218d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200cd5c6-ec03-41e8-8b54-9100c055bbdf",
        "cursor": {
          "ref": "ce41c5ea-edb0-440b-ae64-09c0f4d83959",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7ba88f22-1c8b-4993-a2db-a0728b190a8c"
        },
        "item": {
          "id": "200cd5c6-ec03-41e8-8b54-9100c055bbdf",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1c48dc38-8938-4269-b7a4-51c215554db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6649c451-0e73-4014-b347-18a1e469fd41",
        "cursor": {
          "ref": "61e12382-3e59-495e-8b1e-3b4a518421cb",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c54d30bf-2bad-4301-8e20-b1c253de0dd3"
        },
        "item": {
          "id": "6649c451-0e73-4014-b347-18a1e469fd41",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f4932655-b3e6-418d-bfc3-bb25720f9d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1310284d-da41-4e51-8ba9-d8f96fe4e646",
        "cursor": {
          "ref": "0ddc9157-3a75-41d4-897a-8dc20f29e877",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "03703c28-cbf7-4c8f-8e93-a55e5f2b39b6"
        },
        "item": {
          "id": "1310284d-da41-4e51-8ba9-d8f96fe4e646",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5f8b8401-6e41-4b18-a200-458af17831e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0aebad9-439d-4d79-846b-0b41c64a81b5",
        "cursor": {
          "ref": "7ed39d4e-b562-4118-af22-785067e5259e",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "980267db-d342-4914-9297-e99605a6ab3e"
        },
        "item": {
          "id": "f0aebad9-439d-4d79-846b-0b41c64a81b5",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c4a79c57-4db4-4e7c-911a-e3696d0d3cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1145a828-7fdb-46bf-bf13-581b66d80fd8",
        "cursor": {
          "ref": "ce8fdf16-01d8-4659-8616-b83c8b2471f9",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9efd44ad-e30c-4996-ba97-43eb80b08ebd"
        },
        "item": {
          "id": "1145a828-7fdb-46bf-bf13-581b66d80fd8",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b301a391-e459-49a8-aff7-63f7242299cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093af002-236f-4b01-ac7a-dc271828d1b0",
        "cursor": {
          "ref": "d45c5902-139e-49b0-ab8d-881d0e0117e1",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "15119025-c6fe-42bd-b05e-1cb6a5436d57"
        },
        "item": {
          "id": "093af002-236f-4b01-ac7a-dc271828d1b0",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "cf90e7d7-9191-4411-8b0b-66c9b3392b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8a7a10-895b-4142-bf5c-f5646e4bf6bd",
        "cursor": {
          "ref": "9d73d8b9-8c86-4aa5-9ce2-9c7a420dd785",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "27e2b46e-a19f-421c-9c24-e8e9c215934d"
        },
        "item": {
          "id": "1a8a7a10-895b-4142-bf5c-f5646e4bf6bd",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f5787577-3743-4fb9-ab72-fb72b1a98a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d389de56-ab82-408f-9276-51f811a0ddda",
        "cursor": {
          "ref": "e4497646-b575-4b12-af1a-75740ee4158d",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7d6fc111-4d5d-40cc-a8c1-1f4c34b9bea0"
        },
        "item": {
          "id": "d389de56-ab82-408f-9276-51f811a0ddda",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "311d6b94-bdbf-4155-884b-618a04ec3468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4f0196-65d4-4be2-bda5-6c6b6117e9bd",
        "cursor": {
          "ref": "df306960-a71c-4c62-9536-892c8c2c4a53",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "378bfd39-02cc-4a1d-9c50-f9af0efa8005"
        },
        "item": {
          "id": "ed4f0196-65d4-4be2-bda5-6c6b6117e9bd",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2b889327-2c4b-462a-813e-b2f194cd4078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14bd0638-3f7d-4707-8d98-e5150695ec9f",
        "cursor": {
          "ref": "9554e8a2-c3dd-48fc-a43a-cf977400ac11",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f5c65025-cba7-49ca-be29-9da7a78a2b29"
        },
        "item": {
          "id": "14bd0638-3f7d-4707-8d98-e5150695ec9f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "de2245b9-86da-4b82-bc21-7493c984720d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e71a495-6668-487b-a4c0-f5f5208d319a",
        "cursor": {
          "ref": "930024ba-e3ec-404b-86f4-d2f7abb2334b",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f5bc71b5-58d3-4e58-96c4-0e6e45c040c3"
        },
        "item": {
          "id": "2e71a495-6668-487b-a4c0-f5f5208d319a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8be25058-ecd5-453e-ad2f-61c40f2417cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff16b38-0273-492c-9f46-4605733b4506",
        "cursor": {
          "ref": "25165338-1bf6-40ab-b9aa-db738f4f3f09",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f5c7d6f9-4677-4e73-b582-5e638ec8650c"
        },
        "item": {
          "id": "dff16b38-0273-492c-9f46-4605733b4506",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e9e0000a-efaa-49d3-ad4b-f68158c352ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913f66a6-04b7-4ae4-b693-49b0fc6348a9",
        "cursor": {
          "ref": "c471dfd4-46b2-4476-ac0d-634f04b57f50",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d565010a-559e-4de8-8c58-79a0aa81bbaf"
        },
        "item": {
          "id": "913f66a6-04b7-4ae4-b693-49b0fc6348a9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "37d3dc4d-3825-4d1e-80f9-76411d4ce398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fcb802-73f4-4ba9-a47b-48807f45ba9f",
        "cursor": {
          "ref": "642bf3bb-1194-4ce2-af96-73deb7f602dc",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2cdd4a2d-f747-494a-855f-802eee4091e0"
        },
        "item": {
          "id": "45fcb802-73f4-4ba9-a47b-48807f45ba9f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3764a81e-4f0f-4627-b8fa-91c7fa5b0db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2dd345d-db40-44cb-b7a6-53a4d56d2910",
        "cursor": {
          "ref": "6e0b8bbe-3895-4cad-9c5d-582e7243d077",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b4137edc-dfb2-4dd9-beca-44d2311e1318"
        },
        "item": {
          "id": "a2dd345d-db40-44cb-b7a6-53a4d56d2910",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "603c93b2-654d-49f7-b134-5ed55c151382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2312b113-0af6-4c96-a433-64c06240a62a",
        "cursor": {
          "ref": "b34d1a96-7a41-4ed8-b57d-2eb6047d7dfe",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "dbca29c4-6206-43aa-8194-5c5a90b07e11"
        },
        "item": {
          "id": "2312b113-0af6-4c96-a433-64c06240a62a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7f70971c-80d0-42b8-ae50-394d7ad36a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc46029c-02d3-474b-91ce-8df80ae40291",
        "cursor": {
          "ref": "445b36ff-82e6-4e84-9293-69b07cafab51",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c8713f2b-e263-43d0-8cf0-8ea9e03561b4"
        },
        "item": {
          "id": "dc46029c-02d3-474b-91ce-8df80ae40291",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "fd9872c1-4550-48b5-8ad8-441eaa996c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff961e3-d6de-46e1-bdc9-1fdfae266728",
        "cursor": {
          "ref": "a906768f-081e-4fa4-9a20-c214183e9c91",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3bebe561-9781-41c4-894a-c5b0c0f4ff0b"
        },
        "item": {
          "id": "aff961e3-d6de-46e1-bdc9-1fdfae266728",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f30827a7-f668-4367-af06-e990479404e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de28c6f-f2dd-4bd4-a9fd-938316f2eb8f",
        "cursor": {
          "ref": "71ec3ccb-be85-4c11-9bc0-c3fe84a3651c",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "dd97fc4c-9b9a-40a6-8408-33f30e6eea5b"
        },
        "item": {
          "id": "1de28c6f-f2dd-4bd4-a9fd-938316f2eb8f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b127af05-bb17-4323-8b1d-d6298b766e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb850955-6862-45d6-95b5-a5548975713b",
        "cursor": {
          "ref": "b6c44045-5b72-4ed0-9e53-bb7cc06029c5",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fc7a7f92-2db4-4e5a-8e99-969f9ace0634"
        },
        "item": {
          "id": "bb850955-6862-45d6-95b5-a5548975713b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ee003624-f39f-4b11-ad6b-9cf051973f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1b700b-0189-4865-9050-5705854a18b0",
        "cursor": {
          "ref": "a5c2da20-8886-451c-b008-186c0be173fa",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f4681b77-bf13-41fd-989d-b0f4592027ae"
        },
        "item": {
          "id": "ba1b700b-0189-4865-9050-5705854a18b0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d04c23d4-49a5-4947-b1cd-57c441e7b904",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 3670,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe932ce-0085-40f2-93c3-05657b53b4e2",
        "cursor": {
          "ref": "974ad4fc-e05f-43fb-8070-fa8720bfa85b",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "efd1c625-a88e-4e79-a768-72da5b15df23"
        },
        "item": {
          "id": "ebe932ce-0085-40f2-93c3-05657b53b4e2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "41c13b6e-5a55-4250-b017-1ff0cc369ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a60b1c8-6372-45e6-87f1-d8b91ac2b239",
        "cursor": {
          "ref": "ba7ea89b-5500-486b-b7ba-104978ef8ca4",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "855bfedd-f30b-45ca-8b8a-d09567a3407b"
        },
        "item": {
          "id": "4a60b1c8-6372-45e6-87f1-d8b91ac2b239",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "433e58f4-70d6-4c63-859c-f6e3d313a998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6757a4ff-4709-4535-bf79-7e68ccab2636",
        "cursor": {
          "ref": "a0628fb1-6d24-4b4a-9175-41ba49e6c5e2",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "eee0220a-2e5a-4812-9d54-5340c1b0da94"
        },
        "item": {
          "id": "6757a4ff-4709-4535-bf79-7e68ccab2636",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7a647e01-4991-4aaf-9895-430d37eca9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5984c68b-b280-4af3-9042-41288f44976a",
        "cursor": {
          "ref": "bcd2d2f0-cf18-4485-bdaa-7b3805714f4b",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "bca53804-1421-45f7-bb9d-0c57bb7541c7"
        },
        "item": {
          "id": "5984c68b-b280-4af3-9042-41288f44976a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "978e62cc-173c-41e1-9643-8e9aca3d8596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d386c41-ec42-4a86-9b08-75fc32bfb1ee",
        "cursor": {
          "ref": "965182fb-1ade-428d-bf53-7e6d04adee81",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9be5bf8d-6ad9-4d6b-847e-6bce77e435d4"
        },
        "item": {
          "id": "5d386c41-ec42-4a86-9b08-75fc32bfb1ee",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a1724a81-ee83-4ab0-b014-d98eea4b9a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81757f25-4d9c-4ab1-9855-7c87ef1f0555",
        "cursor": {
          "ref": "d720c0b0-4fab-4cdb-aa7c-bbcde6ed8679",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c11c2aa0-b575-4332-b0f0-7e11fabd1bbc"
        },
        "item": {
          "id": "81757f25-4d9c-4ab1-9855-7c87ef1f0555",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "588a2bb0-4226-47ce-b06d-a5e84ab824e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a6536d-d7e4-4cbe-8f74-530d7da42d7b",
        "cursor": {
          "ref": "e424bf4c-76bb-445b-a069-00127d5878a0",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "07f937df-1c1e-4687-b934-2d2c83d63342"
        },
        "item": {
          "id": "77a6536d-d7e4-4cbe-8f74-530d7da42d7b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "92a845a3-fd85-4556-b50d-d8eda07b7c84",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 4870,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30bcfadb-b8dd-4699-b386-772ad4e166a7",
        "cursor": {
          "ref": "245b639a-6722-436d-b53d-9f29401af78f",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "21de0e59-7022-48dd-a8d2-c111177e440d"
        },
        "item": {
          "id": "30bcfadb-b8dd-4699-b386-772ad4e166a7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "22be9775-9735-411c-831b-e5fe7b5dbd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08dcf4a3-58a2-4179-b95f-87101f858c5b",
        "cursor": {
          "ref": "b046ce1b-48ee-4ba2-92cb-a72158822635",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "51871adc-48ef-4b3b-9f7d-4d6455d9e709"
        },
        "item": {
          "id": "08dcf4a3-58a2-4179-b95f-87101f858c5b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "352ed8dd-a2a8-4dc2-a09c-a7e132a62430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1423084-fd04-4025-a7fa-5b8edb731c3c",
        "cursor": {
          "ref": "9dff88be-83a3-4d90-8552-8c17f490a2d7",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "de919d02-ee46-4419-81f1-2708a12339a9"
        },
        "item": {
          "id": "b1423084-fd04-4025-a7fa-5b8edb731c3c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8f0f5af1-7182-4255-9600-fa6f62d9a53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8091291-f8cc-4dbc-bbcd-9353311004b5",
        "cursor": {
          "ref": "46599e76-3e86-45da-9536-21306981192f",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "75b085de-989f-43a5-877c-7daddc9926e0"
        },
        "item": {
          "id": "b8091291-f8cc-4dbc-bbcd-9353311004b5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5e22a1df-a3ec-4c9d-8570-5506ef1483e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb3a2ca-1754-4c8d-a70d-76c57178de7d",
        "cursor": {
          "ref": "d8e4ecea-0afb-4dfc-85ad-7affc1abdee1",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f90f2608-9b30-42ed-9ce7-8e5eece39ccf"
        },
        "item": {
          "id": "5fb3a2ca-1754-4c8d-a70d-76c57178de7d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "089c526b-6738-4d90-a516-97bd54b7f884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422f1171-933a-4c6c-8a79-6c44c2ba4af9",
        "cursor": {
          "ref": "827351e9-a2c3-4c98-8155-ff3d0291dfa1",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "be50b7bd-5747-4e2e-a3d8-c3ca3ce77a2c"
        },
        "item": {
          "id": "422f1171-933a-4c6c-8a79-6c44c2ba4af9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "228ce211-25cd-4776-8938-77be6db61b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875f36d6-3d2b-4508-8036-76c8bf303939",
        "cursor": {
          "ref": "9740c149-93a7-4315-893f-c916c097f165",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "06f161e3-619c-4665-b3ed-c8e443ce6cc4"
        },
        "item": {
          "id": "875f36d6-3d2b-4508-8036-76c8bf303939",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1bfd0547-08fd-4005-a0cc-a918d97fcabf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f00bf1-8b92-4b4f-89ab-a5af76a3c830",
        "cursor": {
          "ref": "bcc57f92-9942-4240-9b15-2e353f099c95",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "098929cc-637b-4408-a03a-8996319b5242"
        },
        "item": {
          "id": "b5f00bf1-8b92-4b4f-89ab-a5af76a3c830",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5c638aa3-a88d-4a00-b758-7f9d2a747833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31975c1-85af-464d-a896-0474232e3eaf",
        "cursor": {
          "ref": "b5f2af5e-d14d-46b6-ac73-323825d0ddf5",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "91bf6db3-b252-4d88-ab70-2dc422c64ce5"
        },
        "item": {
          "id": "f31975c1-85af-464d-a896-0474232e3eaf",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d8c236e8-05ac-4458-9952-4823a5ea2995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "777846e4-86cb-4d3f-a385-55c0f7a215db",
        "cursor": {
          "ref": "4e86721b-f7cb-4b24-b218-c09c21249e61",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "063f8d01-a917-435f-9697-f6009c09e641"
        },
        "item": {
          "id": "777846e4-86cb-4d3f-a385-55c0f7a215db",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d7b2306e-4b83-48ac-973d-90d244a93014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9acf0d6-9a0f-4527-84d3-1f881cb69295",
        "cursor": {
          "ref": "f42c17d0-08f9-40f3-8563-142eaf3751d0",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7cc5bb16-f4cc-4df4-a1c6-c309b7ea3c28"
        },
        "item": {
          "id": "f9acf0d6-9a0f-4527-84d3-1f881cb69295",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e25f362d-e49b-49f2-a397-b1ea12f617af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb679944-5746-4d89-a175-a0d620725811",
        "cursor": {
          "ref": "3364efb9-d265-45f6-a4bd-445cf51b7798",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "860b2da8-f7db-4186-b898-aa2404bb1dbf"
        },
        "item": {
          "id": "fb679944-5746-4d89-a175-a0d620725811",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "8a6afdef-38b0-4737-99c4-2a033a2316c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01485d88-b1b5-4919-a5dc-a337e96fe87d",
        "cursor": {
          "ref": "178f8418-efe6-4e6b-976c-63f5a6ce30d3",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "64918734-f74f-45e6-98b3-d0aae7a8164f"
        },
        "item": {
          "id": "01485d88-b1b5-4919-a5dc-a337e96fe87d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "235beb6c-70c7-42bf-aa34-61aeb0ec7714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ecac2e4-db70-4960-a967-b1d1775cd874",
        "cursor": {
          "ref": "7422acae-e6dc-4dd3-8c83-a8e404a37b30",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0ecfbb38-92d9-4498-bd9f-2961ced2114c"
        },
        "item": {
          "id": "5ecac2e4-db70-4960-a967-b1d1775cd874",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a5d4b4e3-3ca1-4ec9-96f8-732424599e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3148f282-8bd2-45e0-a670-8c1ca1e404e3",
        "cursor": {
          "ref": "78dfa1da-0f3f-49ae-bde0-ef8c5b4a1834",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "20de4b70-62cf-4076-b1a0-bf45485d0fe4"
        },
        "item": {
          "id": "3148f282-8bd2-45e0-a670-8c1ca1e404e3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4e14c9c6-e85a-44ec-a314-ed169c6cfd56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4cb24a-5211-4dba-bfdb-325286354a77",
        "cursor": {
          "ref": "929c1aee-6e22-4f7c-a3a9-0103585bb447",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1c07f502-6b52-4a93-ba2c-6856e7d3cea3"
        },
        "item": {
          "id": "3a4cb24a-5211-4dba-bfdb-325286354a77",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "db385fea-5897-42fa-9417-0dbc70062337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd85a8f-c640-42e8-9300-713580a22e43",
        "cursor": {
          "ref": "674ba552-05bb-4834-867f-111a0e7137cf",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e8bf4171-9d8e-41bf-9b86-92082f2174a1"
        },
        "item": {
          "id": "4bd85a8f-c640-42e8-9300-713580a22e43",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4d8c7dd2-9440-44c4-92b1-3e5b30462dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29141a2-977e-43c1-ab9e-8ae10579d553",
        "cursor": {
          "ref": "f34e3f28-145e-4741-b28d-99f5489c3f2c",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "edfc93ce-7cf9-4471-8860-a58876727d42"
        },
        "item": {
          "id": "c29141a2-977e-43c1-ab9e-8ae10579d553",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "80553fee-32c0-4f50-96b1-1165ab7d1407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109f86cb-adf3-42a6-aa50-d7e5e932e091",
        "cursor": {
          "ref": "b9d13e09-0b2a-4798-9144-c468a6bb8360",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a5dd5565-0bd5-499c-b89a-5a86abcd8ae4"
        },
        "item": {
          "id": "109f86cb-adf3-42a6-aa50-d7e5e932e091",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6bdf9357-2157-4e42-8aae-3db0a8468bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ef5b31-a1a5-47f0-8f56-9380b2447804",
        "cursor": {
          "ref": "6b7befbc-45f0-40e7-adf6-fde11f7185dc",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a22e65b8-f9c7-4cbb-a19c-82c1fe54a95e"
        },
        "item": {
          "id": "48ef5b31-a1a5-47f0-8f56-9380b2447804",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6285bdf2-7a03-4bda-ac63-1d2e5e7e2d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81c3466-e41b-4abf-83a0-b467ac08c0a8",
        "cursor": {
          "ref": "83a4bb8f-c4c8-4978-82b3-4867f529b6c5",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8d727f6f-8ef8-47d7-8703-1cd0aeef67ed"
        },
        "item": {
          "id": "c81c3466-e41b-4abf-83a0-b467ac08c0a8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "73a4c3e1-68db-44af-9551-64cd91f2d735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52efa7f2-75c0-4526-b873-48707c169ca3",
        "cursor": {
          "ref": "872d57d3-d971-430c-b6fc-9ffe6e4b88e0",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3127fe99-b942-47fe-9bb6-8591adfad569"
        },
        "item": {
          "id": "52efa7f2-75c0-4526-b873-48707c169ca3",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8e2b0e75-d121-4072-9a0e-80bb80ff3fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b480c2-bb58-4476-8370-9c2f5ebd2ad0",
        "cursor": {
          "ref": "2ff74afa-2b51-46f4-b5e4-9bf41d6a745a",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7c2a3aa5-29fd-4bda-995c-61746b5b6be0"
        },
        "item": {
          "id": "51b480c2-bb58-4476-8370-9c2f5ebd2ad0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6e337866-53f8-4813-8723-817467d39989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1550f4-5e82-4a77-98e2-d95a84ced615",
        "cursor": {
          "ref": "c590ab4a-db1a-48c2-8a03-eec4e80ac138",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "fadac61b-ad30-466d-84f5-c2d1bccbd3c8"
        },
        "item": {
          "id": "3c1550f4-5e82-4a77-98e2-d95a84ced615",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "62eecb22-2d9f-46c2-925e-c6b8ee14cd6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fa5c5f-e447-4896-821a-b06185a440e1",
        "cursor": {
          "ref": "03be8e72-cce5-421c-995d-444211cc459f",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a9118a75-86f5-45b4-adfb-4e85585db9a0"
        },
        "item": {
          "id": "59fa5c5f-e447-4896-821a-b06185a440e1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4a46d693-560c-4932-b9af-c73c62579a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28d602d-d228-46f4-897b-889d800d1850",
        "cursor": {
          "ref": "2a80ffcd-38e0-411b-a561-71f8c731d576",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2c709ea6-aa83-4b9c-b19a-ccbc1cf0e253"
        },
        "item": {
          "id": "e28d602d-d228-46f4-897b-889d800d1850",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5f3cbb77-b0d4-4a53-95dc-47843dfa7dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7b79b8-041b-49fd-89a0-63c4b2fe4a7c",
        "cursor": {
          "ref": "d8524b64-9e68-412a-b270-24fac020dcd5",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9175873b-7cca-4768-b783-1dc23484c473"
        },
        "item": {
          "id": "6f7b79b8-041b-49fd-89a0-63c4b2fe4a7c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c3a25f20-24d0-4128-a8e2-e3e157bd3454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057304fa-9ccc-494d-866d-b07997cc1e42",
        "cursor": {
          "ref": "69c6f972-a0ee-4835-8a30-2956b45b0e14",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "bf573844-2a24-47f7-a2d2-c98ee5aa22a8"
        },
        "item": {
          "id": "057304fa-9ccc-494d-866d-b07997cc1e42",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "02419022-de53-4622-b439-01da05cb1159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3800ab59-12f5-4831-93fe-765bd28f9381",
        "cursor": {
          "ref": "8d133851-fd3f-458d-99f9-2b7ba1fe90ea",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d16198e9-383f-49dc-a7c9-120c352d8b94"
        },
        "item": {
          "id": "3800ab59-12f5-4831-93fe-765bd28f9381",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3e5649bd-8942-411d-a77c-ba45a18c1cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea8fcb0-d486-4623-8709-061decdd332d",
        "cursor": {
          "ref": "31c2eda4-ea82-45fb-8409-f1f5a1b48754",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2f4e4c8c-be61-485f-88e5-a4cb489b18d2"
        },
        "item": {
          "id": "fea8fcb0-d486-4623-8709-061decdd332d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "01db699d-1d6f-404d-a6cd-d7c703612598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a967ff-3d75-4de7-83dc-b83a1d5c551b",
        "cursor": {
          "ref": "150718d3-805c-4c0c-a721-e4522a22514a",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1e55a257-266d-4fba-98ff-a0cd9dd8030a"
        },
        "item": {
          "id": "a7a967ff-3d75-4de7-83dc-b83a1d5c551b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "dc96d848-7acc-4060-bff8-2a5ce75e921d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18f3d53-1be7-4529-aa3a-c5f9781f7fd1",
        "cursor": {
          "ref": "6c33f780-3508-40d9-a234-6b7b0ab5d13d",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "bda07b90-9941-458a-8b01-b155fef36d32"
        },
        "item": {
          "id": "d18f3d53-1be7-4529-aa3a-c5f9781f7fd1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d8bf98ac-cc72-4048-88c8-41788ee2efe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f87d23-4d4b-4999-904a-a9e6dd44ea61",
        "cursor": {
          "ref": "63c7ea49-21e4-47b9-93f0-3ff63190b12b",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b88b99e3-200e-43b3-bb17-1d1db549f366"
        },
        "item": {
          "id": "14f87d23-4d4b-4999-904a-a9e6dd44ea61",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ee9e2c5b-0bdd-4205-a4f5-cfc4fb49717b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3ba62a-0cb4-4a85-bf28-022c854ed635",
        "cursor": {
          "ref": "34a2ca61-faa8-4958-85fd-ad7c41b8832c",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fa1ecf66-c752-4f2b-b661-fc1aec067007"
        },
        "item": {
          "id": "be3ba62a-0cb4-4a85-bf28-022c854ed635",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3ade0300-3d68-4e78-91db-acef4f1b9a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e529bcd8-3281-43c1-a9dd-07f8924f62de",
        "cursor": {
          "ref": "dfa77519-9107-4636-9ced-84bfe7266313",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "68d905d6-290c-479f-9e9a-49eafd85c923"
        },
        "item": {
          "id": "e529bcd8-3281-43c1-a9dd-07f8924f62de",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6fb2c5e6-b9cf-42d8-9abd-6012b1c49e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c33878f-9df7-48bd-b765-43de98d4cb67",
        "cursor": {
          "ref": "a8abd76f-ff60-4eb9-8029-80487f20fe25",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e81b92f7-d754-49a7-b8eb-1661fddb0de0"
        },
        "item": {
          "id": "8c33878f-9df7-48bd-b765-43de98d4cb67",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0fe7fcb1-d000-42b6-93cc-8d57483c696b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488be948-a46a-4a6a-b969-4d3c73aaad0d",
        "cursor": {
          "ref": "d7c2dc26-4049-4741-b28a-f03bdf08bb7e",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "966fcb7b-6631-4db6-9326-b05526b1d7bf"
        },
        "item": {
          "id": "488be948-a46a-4a6a-b969-4d3c73aaad0d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "da5ca1e5-d351-4545-a1db-06d2ba6057b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f9a030-03ae-4bca-9dd2-df708b4d285e",
        "cursor": {
          "ref": "7afcd2f1-0456-46dd-8061-5a650d2d5238",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9df1ba97-0b05-4799-b1d7-3b390c6e1978"
        },
        "item": {
          "id": "e5f9a030-03ae-4bca-9dd2-df708b4d285e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "722d4481-964f-436e-99e0-813a4f32d14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fdf9c13-33c6-40e9-a4ef-b12f9b067958",
        "cursor": {
          "ref": "a1020100-bf6f-4c67-ab9c-2543c18cd583",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "bbd375bb-1201-4972-af1c-fe06d1456031"
        },
        "item": {
          "id": "4fdf9c13-33c6-40e9-a4ef-b12f9b067958",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2fa3af9f-638e-46d4-af98-0c5420a3be19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb82ab1-2b7a-467a-880e-0c8e47ac5051",
        "cursor": {
          "ref": "66cf26f7-06ab-4bf2-8dc6-c589767fb1f6",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f1108a4a-f240-4bc8-973c-6f3c801d44f0"
        },
        "item": {
          "id": "bbb82ab1-2b7a-467a-880e-0c8e47ac5051",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "60ccfaac-4324-4a32-a66e-c98c2b94e58e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d66dc3-dcbd-4d7b-af47-7dee848d29cd",
        "cursor": {
          "ref": "1914e4e8-9a79-4d79-b3a5-f7a5d3ca492b",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "be78604c-3306-498c-95bd-7abecec52bba"
        },
        "item": {
          "id": "76d66dc3-dcbd-4d7b-af47-7dee848d29cd",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "03a37d5e-7005-4a1c-86ae-659e78d9b03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba54f67d-b602-4664-843e-136dd0c3bb83",
        "cursor": {
          "ref": "ead04fa4-0d7c-4559-bf1c-459f7080ef83",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0d1cecc2-799b-4a89-b134-b151e67518eb"
        },
        "item": {
          "id": "ba54f67d-b602-4664-843e-136dd0c3bb83",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8725d13b-1888-463f-a850-5760490460f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70084257-0944-4468-89eb-61be9f861f7e",
        "cursor": {
          "ref": "bcfb807f-f823-4746-9f87-7015866998d6",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8fb2ab9a-353f-4b0e-b394-ce17680e7f41"
        },
        "item": {
          "id": "70084257-0944-4468-89eb-61be9f861f7e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "05fc7829-517b-4adc-b2ec-2f9434801f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1545967c-97d5-4e65-b900-8a48dd8d948d",
        "cursor": {
          "ref": "16fc849c-5c97-43dd-aa83-71c2d36ccc7c",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "bd3a0b6b-1fad-45e1-a820-ccc155449a8e"
        },
        "item": {
          "id": "1545967c-97d5-4e65-b900-8a48dd8d948d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "df6a3116-e311-4160-b511-e5850fc7d879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6625e8a-b355-4016-a05a-eaed4135cec9",
        "cursor": {
          "ref": "00fdfc3a-432c-49f3-b671-eb1600001122",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "21bee4a7-b303-43b2-ab7f-d1f5bbf97c98"
        },
        "item": {
          "id": "f6625e8a-b355-4016-a05a-eaed4135cec9",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "10c67433-833f-470d-8f6c-e3ddd4589f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c876c6-4a0e-43e6-89d5-68380531d3c9",
        "cursor": {
          "ref": "c70e044d-a3f6-4074-96f1-f804e0f1b4b4",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "640ce0c4-fbfe-4c90-8af6-a6719b41151f"
        },
        "item": {
          "id": "e0c876c6-4a0e-43e6-89d5-68380531d3c9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "94b2c9aa-1124-474a-8aeb-aeb77eccba2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8794aca1-9135-42dc-a814-35052e30c2b1",
        "cursor": {
          "ref": "ea108334-5747-42f8-8e92-ddd7c776672a",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d963f7cb-01d2-4cee-9b48-d6ba3df84633"
        },
        "item": {
          "id": "8794aca1-9135-42dc-a814-35052e30c2b1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "cd091ec2-8a90-4891-9749-cda068bb7f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab07b65-0d40-4bc7-aceb-aff800ba0944",
        "cursor": {
          "ref": "077879f4-a695-4890-b700-8313649d1b65",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "edb7995d-1fe8-4d6f-8a85-a416727d92a5"
        },
        "item": {
          "id": "0ab07b65-0d40-4bc7-aceb-aff800ba0944",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ddb22cbf-bf1b-4194-8d7f-973249e9f24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839dba45-3364-4b67-81fa-dc89a9bf47db",
        "cursor": {
          "ref": "7ba662b5-a749-4af7-bd76-a84f22d28f1f",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bacbce4a-397c-4adf-89db-4d9ae6f2623f"
        },
        "item": {
          "id": "839dba45-3364-4b67-81fa-dc89a9bf47db",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "53059b80-4b28-4a53-ba11-1a2e98eebb58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13dae159-864d-4f91-9aea-b3dbd8bcb923",
        "cursor": {
          "ref": "0b0b45ae-44e6-417d-89fc-8deb0ff6edfc",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f87e2972-449f-4f65-9a47-a9936e7b93fb"
        },
        "item": {
          "id": "13dae159-864d-4f91-9aea-b3dbd8bcb923",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "11ed827a-fd48-46c8-9673-c73a46a84afe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b374d5aa-e109-4bd2-964c-94821951a5b9",
        "cursor": {
          "ref": "27083d32-4b99-4e8d-9916-bf79284ee927",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f7b5abf4-a362-4411-b085-7b8bc4c173bf"
        },
        "item": {
          "id": "b374d5aa-e109-4bd2-964c-94821951a5b9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "64f6dd7b-74d4-4017-99b6-28eeb6bb4c6f",
          "status": "Created",
          "code": 201,
          "responseTime": 21786,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "expected 11986 to be below 10000",
              "stack": "AssertionError: expected 11986 to be below 10000\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "5ccbddc6-8261-4172-a56c-b88cb7e999e1",
        "cursor": {
          "ref": "960cf8eb-d4f5-407c-a80e-5d9e31e475c1",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8f545fde-d649-4f65-9332-b2c520eaa1f8"
        },
        "item": {
          "id": "5ccbddc6-8261-4172-a56c-b88cb7e999e1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "95e63aa3-8511-4132-ac8a-04bf2d0578e3",
          "status": "Created",
          "code": 201,
          "responseTime": 22062,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f997c71b-75cf-4198-9149-8f32d1c22e6e",
        "cursor": {
          "ref": "6fb7e3be-5b12-4e01-83ff-d96b2605b471",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a6725c86-93bc-4692-ad14-91ae61f3a7f5"
        },
        "item": {
          "id": "f997c71b-75cf-4198-9149-8f32d1c22e6e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "419c7018-22e5-4d41-96c3-0da82340de1e",
          "status": "Created",
          "code": 201,
          "responseTime": 20260,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea4f769-f71e-4d66-a1ed-885c88e57df8",
        "cursor": {
          "ref": "108c99e7-06c7-4fd5-b193-f4b4b33135e0",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f21b0592-649e-487b-a77a-ccdb4b8e62df"
        },
        "item": {
          "id": "9ea4f769-f71e-4d66-a1ed-885c88e57df8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0af70e66-b890-4849-9270-9b42886bccc1",
          "status": "Created",
          "code": 201,
          "responseTime": 21641,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "61442858-d212-4317-8588-715e618eb1e3",
        "cursor": {
          "ref": "6eca4ff0-d7bb-41cc-b5f4-cfbb4748db40",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4feaa22c-ddf1-415e-b55c-14993d028bca"
        },
        "item": {
          "id": "61442858-d212-4317-8588-715e618eb1e3",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "014981fd-be60-4ace-a25c-b3452ecff20a",
          "status": "Created",
          "code": 201,
          "responseTime": 22776,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aba75b3-a4a1-40e6-bc17-e208ae00f22c",
        "cursor": {
          "ref": "4dacf4a1-10b4-4848-b187-4217e89c27d5",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "602f887f-1da0-41ad-8f92-9495de715679"
        },
        "item": {
          "id": "7aba75b3-a4a1-40e6-bc17-e208ae00f22c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "71144d03-b2db-426a-a5ab-f872e7deabb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "f6154d6f-27ca-4c34-acfa-32159c063867",
        "cursor": {
          "ref": "39170a32-1798-4dbc-b9ed-5f92bb97f6d0",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "48b41313-01bb-4cfe-9917-50ca0fcf22d1"
        },
        "item": {
          "id": "f6154d6f-27ca-4c34-acfa-32159c063867",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "35eb0e33-32a3-4512-bfcd-4fd5a5cd72c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba23aee2-a644-4668-842d-008bf1caa5c6",
        "cursor": {
          "ref": "0fd72fab-e6c0-4c33-b4cb-92b3deb948ec",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5ac91cca-9044-4542-914c-0f52a2d6e63d"
        },
        "item": {
          "id": "ba23aee2-a644-4668-842d-008bf1caa5c6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "51c83b47-93b6-4431-8de8-a690690b8279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a35716f-4c26-4f95-84d7-d015799f876e",
        "cursor": {
          "ref": "f1cbda8a-6770-40b2-a05d-b6e52d810df5",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ca457632-3c9c-4c63-afa7-e425fee291fb"
        },
        "item": {
          "id": "5a35716f-4c26-4f95-84d7-d015799f876e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "24d55162-5598-4dc3-a2a3-548e0ce0c8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac36688-5aac-4e66-9ed0-ffaf3f6e2ad2",
        "cursor": {
          "ref": "6aa58e40-5311-43d9-8276-43608c0f9937",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9172482b-37cb-4db3-a3a8-2da9c32f1205"
        },
        "item": {
          "id": "8ac36688-5aac-4e66-9ed0-ffaf3f6e2ad2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "65c8ac2d-80a2-490a-b7c7-a6e0b74016f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ad551e-a2a6-464e-a695-d48c015345ca",
        "cursor": {
          "ref": "705e76f4-caea-409d-aa9c-5bb7f6a889f1",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a5ab1a67-f2fd-43ae-a3fb-e793d8ab911e"
        },
        "item": {
          "id": "b1ad551e-a2a6-464e-a695-d48c015345ca",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e69a8e96-01c9-4b4b-984d-57650754ed5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b23a9ba-898c-4cc8-a5ab-6016176e8f21",
        "cursor": {
          "ref": "8a346269-d734-43ca-8120-0eb72d7a6bdb",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "93efdd37-9763-4d73-8d91-28eecf609d24"
        },
        "item": {
          "id": "1b23a9ba-898c-4cc8-a5ab-6016176e8f21",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ba4b77b0-9128-42f2-a654-8f58ba95718f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4898448b-27af-4033-82b6-d0a558e242a5",
        "cursor": {
          "ref": "49942101-6fcb-4cd0-9ee2-b4cb50b4f9bb",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "efe93d1d-c178-4bc6-983d-61bebe851995"
        },
        "item": {
          "id": "4898448b-27af-4033-82b6-d0a558e242a5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "118eba59-e349-4393-aec6-a3b296244b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0bd67c6-3a78-42c4-b963-5f106cff54e1",
        "cursor": {
          "ref": "3be58ceb-32c4-41d6-b372-363c33230f6b",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0afb85e7-db85-412e-8c54-23dca22cf2aa"
        },
        "item": {
          "id": "c0bd67c6-3a78-42c4-b963-5f106cff54e1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2a0945ab-4de4-4482-b7d2-53a8f727baaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75222521-e4ef-4e95-a1d7-23e122b5344c",
        "cursor": {
          "ref": "36f047d0-6f3e-4a23-94ae-6fad988ce328",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5c105751-1edf-4d1e-a4cd-fb002e28771a"
        },
        "item": {
          "id": "75222521-e4ef-4e95-a1d7-23e122b5344c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "006ade6b-e46a-458c-9b4a-c2387bd3989d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1290e7a8-2148-40c9-920e-8ac46cd39cc5",
        "cursor": {
          "ref": "ef45a374-47bf-4d42-8b03-f422ed003981",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "66071e44-0055-489e-89e4-805d88ea01b9"
        },
        "item": {
          "id": "1290e7a8-2148-40c9-920e-8ac46cd39cc5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5864f91d-c13e-4197-ba51-1cec5b1fd60f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f565b8b-7e54-4f8d-b95f-16656c79cce0",
        "cursor": {
          "ref": "95195e30-5a83-42aa-8aa9-b9cee8404d24",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1cc20c71-e20f-47ff-93ef-26e521594b5f"
        },
        "item": {
          "id": "9f565b8b-7e54-4f8d-b95f-16656c79cce0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5c5ef9ba-b3a1-4724-81a7-503dbfaa5b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8c2b82-7cab-489a-a118-0cd367d8eadd",
        "cursor": {
          "ref": "c96375ef-f8c4-4a6c-b102-4e72390fc994",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2948bec8-727d-4b2d-b169-8cbd9eccc464"
        },
        "item": {
          "id": "1e8c2b82-7cab-489a-a118-0cd367d8eadd",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6e0e4ac6-8bb2-412d-9ad8-4be6cc363dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a10602a-0ca4-4369-a3da-7dada4b76e8e",
        "cursor": {
          "ref": "975e9f61-2cd5-4282-b819-5e8dc6b10926",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ef7fbbc1-399c-4f8e-a900-a889c95234b5"
        },
        "item": {
          "id": "6a10602a-0ca4-4369-a3da-7dada4b76e8e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "afae3dcc-9a3a-4194-801f-a13ff9007e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2e737a-4895-4430-b422-42aba5b8662a",
        "cursor": {
          "ref": "adcecc4d-445c-4f27-a8d2-d4c8bb5a96c4",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0dd7d176-15cd-47b8-905f-413c426d208d"
        },
        "item": {
          "id": "5a2e737a-4895-4430-b422-42aba5b8662a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c68c8087-fbbe-40d9-83f0-8de65d407a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486dce36-8c89-4549-8dd4-97cc3f42992c",
        "cursor": {
          "ref": "6a642897-5b4b-4797-b33f-b6f393dd2c8e",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "784cd975-8cfc-4cb2-9df5-fa904502adbd"
        },
        "item": {
          "id": "486dce36-8c89-4549-8dd4-97cc3f42992c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "657dbd64-13c2-4db9-a847-e4ad98719e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79989060-d5ae-4bd7-96f3-5ad8766fbd55",
        "cursor": {
          "ref": "4d52fd39-41b7-4bcc-9d1f-862c442345b0",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2aa13018-8b43-404b-991c-54566f674534"
        },
        "item": {
          "id": "79989060-d5ae-4bd7-96f3-5ad8766fbd55",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c5636783-f46b-4e33-a7b8-f73ad2dc8528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5093997-a021-4a63-b4ab-e9c71fb0cbbc",
        "cursor": {
          "ref": "04783bff-a80b-4a4a-8c35-9955d4ac647c",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "299c88d6-631c-43f2-a5c0-d401d9733493"
        },
        "item": {
          "id": "c5093997-a021-4a63-b4ab-e9c71fb0cbbc",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7c910611-1d73-4e88-8e6e-e80440a34eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444b5650-e4c7-4c71-bc10-9e2789f9bea9",
        "cursor": {
          "ref": "3c3a3dd4-328b-4c3d-8937-5d6048c914f2",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e2c49c63-627f-48ca-a9e9-785103f563f4"
        },
        "item": {
          "id": "444b5650-e4c7-4c71-bc10-9e2789f9bea9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "cbe03504-4655-4301-8808-9282409625c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec4d76f-0c6d-43c6-a929-8f9b9da8d19e",
        "cursor": {
          "ref": "f28f6eaf-fdeb-4cbb-9bf6-27531cbb0aa7",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ddb3aed6-ece0-4b7a-866a-c94bc9b728e6"
        },
        "item": {
          "id": "fec4d76f-0c6d-43c6-a929-8f9b9da8d19e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "19572bc6-3c5e-4a7f-947a-bc8c52552a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ce6c7b-49eb-4e75-bab4-8e54da471998",
        "cursor": {
          "ref": "a5392727-ea1a-4856-b9f8-36d880cfe3bb",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f71c0fd5-bac8-4099-bb56-740d9f64cde3"
        },
        "item": {
          "id": "67ce6c7b-49eb-4e75-bab4-8e54da471998",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "dc7e14ca-043a-4f8d-8e15-66e7c99a6bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dca0d25-08a3-44d2-b011-bffc60223a1b",
        "cursor": {
          "ref": "cf831709-46d4-498e-b70f-2503122e049a",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "dde576b3-61ae-45de-92e5-33f8922713f9"
        },
        "item": {
          "id": "0dca0d25-08a3-44d2-b011-bffc60223a1b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "51c8a815-670f-4703-a29d-0a8b94c3a594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eafdad31-e946-47bf-b73d-fb29fa043bc8",
        "cursor": {
          "ref": "1b631463-1e40-4799-af7e-afd253efe7b8",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d1f2bef5-50fc-493d-81cf-f2338f5ab284"
        },
        "item": {
          "id": "eafdad31-e946-47bf-b73d-fb29fa043bc8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c0d8c565-8e6d-47de-b920-75a7edcd7ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c654a6f3-d75c-4684-b3c9-eb679ba3ffdc",
        "cursor": {
          "ref": "d51d745a-de53-4c00-806c-8126e12ac34d",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "05dff5d6-468b-41e1-9423-dc728201c8f4"
        },
        "item": {
          "id": "c654a6f3-d75c-4684-b3c9-eb679ba3ffdc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "682068f6-1937-43ee-92f9-d957ec238b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69f5ea7-3463-47dc-94b2-54d85e31ee73",
        "cursor": {
          "ref": "397dea7d-3538-428a-b5fb-6856b3bcb15e",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b460fee8-7d89-4e62-8fa7-14ae0cdd4108"
        },
        "item": {
          "id": "f69f5ea7-3463-47dc-94b2-54d85e31ee73",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "209a066d-e751-46e8-8180-5d0de2aa7aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653def0b-9d2a-4840-8f18-93c9c6b6557c",
        "cursor": {
          "ref": "668554c5-a11d-4d21-8df7-999b2dd80e6b",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7151c755-0fd2-4c52-bb0a-e43301fd0eb5"
        },
        "item": {
          "id": "653def0b-9d2a-4840-8f18-93c9c6b6557c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "22b87188-e155-4413-b585-a781a24ee4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7439640d-3943-4d7e-a120-0202bac4994c",
        "cursor": {
          "ref": "bf78de1d-4ded-440f-ac00-0ac552f61aa4",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "503bc46f-3566-4d76-bcc3-5258d4238e4e"
        },
        "item": {
          "id": "7439640d-3943-4d7e-a120-0202bac4994c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5a71c79b-e0ce-4dcc-bfe0-aade6083f9ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f00d9c-d156-4beb-aae9-63a5b21eb534",
        "cursor": {
          "ref": "075b166a-4270-40a0-bf8d-4b7b58e05318",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c21d254c-4142-4727-812a-8e98e053c403"
        },
        "item": {
          "id": "10f00d9c-d156-4beb-aae9-63a5b21eb534",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a90a2910-f839-4e13-a83b-80f2920e371d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a08be1-4652-4c2b-a21d-fc4338ef4edd",
        "cursor": {
          "ref": "849605e7-5e17-4122-8cdb-1dbafe33d431",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "828734d3-148c-422b-b2fe-9abb48dc7000"
        },
        "item": {
          "id": "35a08be1-4652-4c2b-a21d-fc4338ef4edd",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4d23ebfa-8857-46e9-8505-ed79a0f2114c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f853c0-2a12-453d-8860-0db7edbebaa8",
        "cursor": {
          "ref": "8a5845ca-ab48-4149-aeb2-4f88bc9cea1b",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c5307a96-df34-4bdd-b0e5-2ffbebc16935"
        },
        "item": {
          "id": "a8f853c0-2a12-453d-8860-0db7edbebaa8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "89e798c0-eb78-4647-a8ac-f02d9240bd7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb60fd6-06c0-4e7f-835e-d0969d60e23d",
        "cursor": {
          "ref": "75947df0-be03-4b2f-abf0-e235f55f86f3",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "420705e7-4368-4e96-9a93-eda5f8e5fa9d"
        },
        "item": {
          "id": "3bb60fd6-06c0-4e7f-835e-d0969d60e23d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0d1b115c-743a-4621-8bf6-4a6975ee6d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8cd593-ee47-4b5f-b63e-1cbc1bae2d53",
        "cursor": {
          "ref": "952f27ed-8dba-44bd-9d7b-e290a903ad91",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2b0ff6e4-6222-4ad5-ae6e-8f4cad24f6f5"
        },
        "item": {
          "id": "9b8cd593-ee47-4b5f-b63e-1cbc1bae2d53",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ee86e3d7-28a2-4e46-a105-ee2a5ddba088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bf5d09-ac91-4e43-8afb-3a803519891d",
        "cursor": {
          "ref": "0b7194c1-c8af-4b68-ba74-11919a303bcb",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "570b71df-9bac-4c64-9123-5d50cd01f253"
        },
        "item": {
          "id": "62bf5d09-ac91-4e43-8afb-3a803519891d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b33c64bb-3b13-48b4-8a0b-406e9dcb3ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641a8e31-fb63-44d1-a344-83983ff0ee8a",
        "cursor": {
          "ref": "47cda637-2e40-4dd8-bc58-b2e9bca828c0",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "643d8de3-2929-4a44-9b88-e8f198e6e2cd"
        },
        "item": {
          "id": "641a8e31-fb63-44d1-a344-83983ff0ee8a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "abd546e6-2b85-418d-b99a-a0d9f8d47d37",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52dbd6d-05b7-47ad-ae5f-6e1274dc67d9",
        "cursor": {
          "ref": "3daaa7eb-1644-4e28-961c-2f1ed8e2a639",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e968cbf4-ce6d-41ca-901c-856e210d957e"
        },
        "item": {
          "id": "c52dbd6d-05b7-47ad-ae5f-6e1274dc67d9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6a1c1f0f-0dd9-436f-afce-2981787663b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96cf38d4-1260-458f-b483-780dfba4acfb",
        "cursor": {
          "ref": "dc8f39dd-f19b-4ef6-9bea-7d1752424afd",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5cad2c15-88a2-47f0-88b3-f304e82f32d3"
        },
        "item": {
          "id": "96cf38d4-1260-458f-b483-780dfba4acfb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5227cb12-ebca-4437-b2fe-8b4ffeaed06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a60347-7a63-45fc-91a6-a0be6fecb143",
        "cursor": {
          "ref": "b3d7d9ac-f248-453d-b1a8-2166071fd59f",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "10a8e393-7133-4269-a0df-b31a694cfe1e"
        },
        "item": {
          "id": "67a60347-7a63-45fc-91a6-a0be6fecb143",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f6ee754b-9ee7-405f-8486-ba1bef13657b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baff073d-4d6c-4eff-aa7e-448d3bf33573",
        "cursor": {
          "ref": "21750e05-eb87-49f5-acf4-5af8536f57e1",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "43b9eac2-5b14-43e2-9286-133f8ef4790f"
        },
        "item": {
          "id": "baff073d-4d6c-4eff-aa7e-448d3bf33573",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e0e4019b-4f5a-4bd1-a66e-b8529f527d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8427e4a7-2d90-4840-9a58-3d67ae6160de",
        "cursor": {
          "ref": "25f5b8f0-c645-4262-b325-fae14e06be1e",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6eac8026-9f14-498c-a44e-86c4031d4684"
        },
        "item": {
          "id": "8427e4a7-2d90-4840-9a58-3d67ae6160de",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "63819525-a1f3-4d5d-a3b8-9b2b19a3419f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e7fb59-555b-4181-b24d-7a00feb86804",
        "cursor": {
          "ref": "84583fe8-c12f-417e-9cc8-aec3a8286fce",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "25c7b41e-410c-4b23-9f44-6c697c53950c"
        },
        "item": {
          "id": "40e7fb59-555b-4181-b24d-7a00feb86804",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "78909de4-098b-40c0-af04-730bd54c6c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9e4126-717a-4f81-87f9-32c68a2f7581",
        "cursor": {
          "ref": "aaa8037d-4f02-44c8-a382-68a12d2b22fb",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "918d4b47-acd9-4f91-97a9-17a1280a2071"
        },
        "item": {
          "id": "cd9e4126-717a-4f81-87f9-32c68a2f7581",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b273ffaa-5be8-4b21-95fa-3cfcde0baebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c59de0b-06c5-4606-a4ef-650ebcab455f",
        "cursor": {
          "ref": "6d2f3ccd-e7f2-44be-853c-60ef19493624",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "00da1293-32b2-4762-92a2-76d93adb65e8"
        },
        "item": {
          "id": "4c59de0b-06c5-4606-a4ef-650ebcab455f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "784d70ed-016d-4f7e-816e-61cff4eca864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b99ba6b-f1df-4718-8a89-a38eb1e8b87d",
        "cursor": {
          "ref": "da88bb91-3a84-47fd-a916-c6d542a11a3b",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "edc14520-f6e7-4f34-bec7-ad9694b8c3f6"
        },
        "item": {
          "id": "2b99ba6b-f1df-4718-8a89-a38eb1e8b87d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "733a2f7c-a079-4e9a-bd7c-e1b8577f09b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6747ecd-f6c5-4be7-ae1e-99aed8979d05",
        "cursor": {
          "ref": "41ec93ee-660c-4e54-a538-407e04fb7a46",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ef258f97-dd1b-442a-9e7c-9fe44c540928"
        },
        "item": {
          "id": "a6747ecd-f6c5-4be7-ae1e-99aed8979d05",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f9af5eab-ad48-4676-8c5a-3bf9557ad8e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6e3777-f1d1-4673-933e-96b6c98f9e93",
        "cursor": {
          "ref": "9e9fac67-0920-4794-8bba-88ba1691cc4c",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ef57afac-60d6-4e10-84a3-3ce759181743"
        },
        "item": {
          "id": "9f6e3777-f1d1-4673-933e-96b6c98f9e93",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c7b8504d-e0eb-4ae9-99ac-7b629b5e17df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3dd815c-faad-4467-a181-055338c30cd6",
        "cursor": {
          "ref": "a6114e95-020e-435e-a639-edba0b941b6a",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2cd20db6-2de4-4463-87ed-abddb035f426"
        },
        "item": {
          "id": "a3dd815c-faad-4467-a181-055338c30cd6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5b55b657-091c-4eeb-9617-3de24367c778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316dd048-7c1d-43e6-8b18-f480dedb63f1",
        "cursor": {
          "ref": "5d2ab5e5-dcae-44d0-a27c-1a86c68093cd",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ea79bc32-e9f9-4bb3-8747-5eefa4c2ba51"
        },
        "item": {
          "id": "316dd048-7c1d-43e6-8b18-f480dedb63f1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "49dc187c-6b84-4509-a7bc-c4ddf5f62f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0091722-d3ad-442c-9e55-e20a71ee62dc",
        "cursor": {
          "ref": "974dcab1-651d-4f6b-94b9-e51540285887",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f4a22e18-7651-4d32-83ae-27e6a13628c1"
        },
        "item": {
          "id": "e0091722-d3ad-442c-9e55-e20a71ee62dc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "35032153-cda1-416e-8288-0216a79bb17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b798fe6-a1c5-49a2-86ef-fe6d85302bdf",
        "cursor": {
          "ref": "3ff63a94-54a1-4211-baf5-16e7aabaae5f",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "626dbc41-4688-4b49-8e17-542375cbec5a"
        },
        "item": {
          "id": "3b798fe6-a1c5-49a2-86ef-fe6d85302bdf",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fde94fb8-613f-4847-98d5-5a9e14311ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603cad82-330b-44d1-b6be-e6400c52d76a",
        "cursor": {
          "ref": "b56fad38-4bdf-4344-86ab-10a096a33ed4",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f38f0168-dc6f-410e-b891-623781dbfe05"
        },
        "item": {
          "id": "603cad82-330b-44d1-b6be-e6400c52d76a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1e7ef775-5cec-42d2-a8fd-109f5a23526b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9240d456-c529-4c5f-ad63-30d38b401c03",
        "cursor": {
          "ref": "0ac91dcd-2b54-45d0-ae89-e42e3beb7fd3",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "74973bda-c59d-4197-bd64-fb422f1e203e"
        },
        "item": {
          "id": "9240d456-c529-4c5f-ad63-30d38b401c03",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9b190b9d-9fcc-4909-9692-a6b80490ca76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6234998d-36eb-427c-a974-833498c181c9",
        "cursor": {
          "ref": "c4360932-7807-4490-9d70-f439a67b9b1d",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1ffd3858-306c-4b98-8e9c-7331c317f8c2"
        },
        "item": {
          "id": "6234998d-36eb-427c-a974-833498c181c9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6527dea9-02d4-40e2-ae67-cb57bd353ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d350036f-a97f-4458-a538-561571d3d64c",
        "cursor": {
          "ref": "2b3400cf-331c-4c94-9175-b54daf5547f2",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7bbae7d8-d6b2-481e-942e-fa68a984d5a4"
        },
        "item": {
          "id": "d350036f-a97f-4458-a538-561571d3d64c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0d51d413-95fa-47d2-b7b2-11aed360d3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5734b0f0-54a0-4ffc-92bb-ca58da71c75c",
        "cursor": {
          "ref": "e8e540a3-4f28-4555-8b43-ab431f91b2bd",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "afc39412-e9f3-4212-a89b-cf6d8ccd8cea"
        },
        "item": {
          "id": "5734b0f0-54a0-4ffc-92bb-ca58da71c75c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "70812b1c-9f52-43e8-aa3b-f471c6f103d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80772e2-5fc7-4fb0-aaf9-da350c86e1b5",
        "cursor": {
          "ref": "a498f901-d6f9-434c-8dab-8cf5c7fd73b5",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7c79208b-6dd8-4885-a088-48dfd867c581"
        },
        "item": {
          "id": "e80772e2-5fc7-4fb0-aaf9-da350c86e1b5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "527a0a9c-6edf-4f4f-b455-6598e292e358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a91c26-9466-44d1-b190-0e807b53eeb0",
        "cursor": {
          "ref": "e5fc8b82-5161-4019-b670-ce6e094e3bf4",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0ec167bc-26d1-429a-a3f9-780a0f6892c4"
        },
        "item": {
          "id": "17a91c26-9466-44d1-b190-0e807b53eeb0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "53520140-e11d-4f33-8f4b-c1618adfb266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cdc4907-3621-4501-a853-68bb746213b2",
        "cursor": {
          "ref": "109b46e8-f1fe-4d0b-8be9-9ee7236e10ce",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ef6838b8-33ca-4015-afd6-552f536d0f1a"
        },
        "item": {
          "id": "3cdc4907-3621-4501-a853-68bb746213b2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "55e3fc28-7294-4ccb-ac12-8ffbe8ce5be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8a6232-9034-4be3-9bfe-b8c320283c1d",
        "cursor": {
          "ref": "c0214343-6620-4a22-9dbd-c02559fb25c5",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "fc79e088-d46f-44c9-a43a-2d72261d9428"
        },
        "item": {
          "id": "cc8a6232-9034-4be3-9bfe-b8c320283c1d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e841d8e6-cac2-49c2-a577-38e6bbed0dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e50559-06f1-419a-b68c-e3c8ea0e9d37",
        "cursor": {
          "ref": "e1bd64d6-4a9c-4b69-b9ed-7cd3d6257926",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "219c4e74-7b7e-4821-babd-976652095542"
        },
        "item": {
          "id": "e9e50559-06f1-419a-b68c-e3c8ea0e9d37",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "65194b64-9bd8-44b5-938a-75960ee3e225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b3acc6-7eea-4045-8060-cf7f0ec66a48",
        "cursor": {
          "ref": "e2067441-2a9a-4413-9663-b8a8f66c63dc",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "311d310d-b459-4749-84f2-49e0c12e5258"
        },
        "item": {
          "id": "71b3acc6-7eea-4045-8060-cf7f0ec66a48",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "22b286f0-2f6b-470d-a6f7-64c671348d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddfb3c7f-fe06-49ca-bd09-e8e5f0ecf0a4",
        "cursor": {
          "ref": "38a11eb7-4ec2-44d9-a50b-4fbe17c195e0",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "570f5119-48b0-4d40-96a7-8d2cc371788c"
        },
        "item": {
          "id": "ddfb3c7f-fe06-49ca-bd09-e8e5f0ecf0a4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8532b344-d09a-4774-9bb0-72191f8fa18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146ae99b-7bfd-4f91-a5a9-ba18c7706ec5",
        "cursor": {
          "ref": "ccd5484b-14f0-44db-bcbe-5d8fd8babff5",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f759780a-6f96-414e-8d12-d092a9282c51"
        },
        "item": {
          "id": "146ae99b-7bfd-4f91-a5a9-ba18c7706ec5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "dadba8e1-5e25-4cf3-8c97-91e65fd15c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a79ebd-24f4-44b3-a968-e9f11ff664ed",
        "cursor": {
          "ref": "390fa49d-168f-41cd-b686-8cfe364da70c",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2a56ab6b-5abc-4a9c-b03a-a2d94c21f84b"
        },
        "item": {
          "id": "82a79ebd-24f4-44b3-a968-e9f11ff664ed",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e03bd015-149a-4deb-9c33-c82b1e54103f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34edb6fb-050a-4a26-a34e-e14432e5aa9d",
        "cursor": {
          "ref": "7c932999-f958-42b6-84d6-16427b093f68",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "19b48afe-01ad-40a3-b477-72e3b0048d3c"
        },
        "item": {
          "id": "34edb6fb-050a-4a26-a34e-e14432e5aa9d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9410311b-c254-4cae-a834-64cec8c3c209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2296dadc-f2d7-4af1-b749-f914346bfa11",
        "cursor": {
          "ref": "0b93ac1a-1c41-484d-b3eb-068e8aea7d31",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "fe129a83-627e-492b-a0e3-116ee6069ea9"
        },
        "item": {
          "id": "2296dadc-f2d7-4af1-b749-f914346bfa11",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "afec4cb2-6eeb-4f92-ac57-0deac4b2335b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f268814e-be8f-494e-b572-040c195c734e",
        "cursor": {
          "ref": "04d7f328-9196-41ed-966b-eb0977607d7d",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "342c25c9-bf8b-4181-8107-7195fe3d4149"
        },
        "item": {
          "id": "f268814e-be8f-494e-b572-040c195c734e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7a4046bf-6c8d-4467-99e0-2d494c9fd4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a57fb1-a755-486f-b9ee-5ad5cedcb439",
        "cursor": {
          "ref": "ff270125-c88c-4044-940f-5e26514e190d",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3c1a143d-9ba0-4ad2-9f8a-90fa3eae2f74"
        },
        "item": {
          "id": "85a57fb1-a755-486f-b9ee-5ad5cedcb439",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "73a0f648-7d58-40eb-a50a-aaf2eca02429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd605a01-045d-4a83-8b3a-32beb1820aa9",
        "cursor": {
          "ref": "fc364b09-71d9-4644-9519-1b91a5e802a2",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "910ea635-3573-4231-82b2-dbf1b29bc9ab"
        },
        "item": {
          "id": "dd605a01-045d-4a83-8b3a-32beb1820aa9",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d587a074-0e29-4cc7-b42d-165674a3edb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c07ec2f-9bd4-4b5e-8543-6d18396b8744",
        "cursor": {
          "ref": "434f215b-231d-48de-b161-64a97a7adbe9",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a7873e2a-63a7-4640-838e-a9d45fafe4c2"
        },
        "item": {
          "id": "1c07ec2f-9bd4-4b5e-8543-6d18396b8744",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "5a4306e3-6746-443c-967b-ac975e92fc9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a475bc-0c79-4b03-b747-2fc62d520857",
        "cursor": {
          "ref": "53801246-77f7-4a43-89d3-e25f274e0e83",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "85c4a573-69a7-45d7-82a1-f33ee9b62ce2"
        },
        "item": {
          "id": "60a475bc-0c79-4b03-b747-2fc62d520857",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "549915f9-7f69-4aed-b8ba-d79802b24ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554d3fb0-ceaf-4f6a-b624-c45983df3d09",
        "cursor": {
          "ref": "9c7a65d7-8202-426f-a4ac-76e43d7ca584",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b4b80b73-ffc9-4c7f-a89c-c8c67a61faf5"
        },
        "item": {
          "id": "554d3fb0-ceaf-4f6a-b624-c45983df3d09",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "aa942d2f-9aea-48cf-bc7a-4629e2e1044b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0943800-f4d5-42e4-9f99-3f4c4b71ac2a",
        "cursor": {
          "ref": "73ca949a-2d7d-409a-81d1-25e08abd957b",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5e7f29da-89c8-498d-8514-7d1c8ab34050"
        },
        "item": {
          "id": "f0943800-f4d5-42e4-9f99-3f4c4b71ac2a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cc555b73-a99b-420e-8d0c-e35f20cba3bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b0c1b1-9a0c-4cff-8b68-46c8e41d4ffa",
        "cursor": {
          "ref": "70413bee-a1a8-4070-9815-882870ae036b",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "af0bcddc-5e38-4057-babf-47de1d84377a"
        },
        "item": {
          "id": "13b0c1b1-9a0c-4cff-8b68-46c8e41d4ffa",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2f1d0c18-afae-4372-a5de-762074992482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd36e2f1-4bd6-4ce8-8804-95a1a29d1e40",
        "cursor": {
          "ref": "1c41356d-6867-48c7-926d-5b83043e722a",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c39ac694-076b-4e8c-9d36-289bb5e219ca"
        },
        "item": {
          "id": "cd36e2f1-4bd6-4ce8-8804-95a1a29d1e40",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "74a03659-ea03-4387-a564-695f9c6f7ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d972fa6a-3652-40a4-9f1c-2900c81c984e",
        "cursor": {
          "ref": "38445488-353b-43a5-a28a-10fc254861f3",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "73249c9f-ea7e-4170-9fdb-a0a58152647c"
        },
        "item": {
          "id": "d972fa6a-3652-40a4-9f1c-2900c81c984e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "76f2e30d-9df8-4c26-8a3d-255a6b0d1238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87dea039-a507-4ffa-9dfd-77b0539a390e",
        "cursor": {
          "ref": "b0e2f0ab-cc1b-4833-ae12-b6d9aad68c4b",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b7880162-b797-4530-a3f3-d588e94570eb"
        },
        "item": {
          "id": "87dea039-a507-4ffa-9dfd-77b0539a390e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6d1ce72c-cc7b-4d72-b719-8219513acd58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578763a0-8024-4346-a1ae-b5dc469691c3",
        "cursor": {
          "ref": "693ce744-fe9e-417a-9434-5f57091b4559",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3006b431-fdb7-4175-b695-e8265fdeca2f"
        },
        "item": {
          "id": "578763a0-8024-4346-a1ae-b5dc469691c3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b5a02d2c-2568-494b-8fc0-e95bfa6c9849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab14588f-894d-456d-aef7-dab182d55456",
        "cursor": {
          "ref": "5a0b903d-183c-4a0b-a591-953ef2a20a16",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "317fab4c-54c3-4652-b521-61c6979fcf28"
        },
        "item": {
          "id": "ab14588f-894d-456d-aef7-dab182d55456",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e5f084e0-f519-4627-943b-93f97d6ef77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c77764-3260-4f33-9d02-6ce384501bff",
        "cursor": {
          "ref": "e2a0cc4a-7490-4ef3-80d1-bfcd063f3aee",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "527e35b9-43bf-447a-b189-d8231ff56fae"
        },
        "item": {
          "id": "c0c77764-3260-4f33-9d02-6ce384501bff",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "bb77a072-2134-4ddb-8375-e0ad98bc3976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a486bb79-8ca7-430b-8677-8ae229351d70",
        "cursor": {
          "ref": "fe123f08-30ba-4ddb-b654-1ae8a25b1583",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ca129e1e-09dc-4553-9520-5d9d7e90b388"
        },
        "item": {
          "id": "a486bb79-8ca7-430b-8677-8ae229351d70",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d755b493-f6d0-4732-b44b-672c86fe1222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7befb6ab-a02a-4cfa-9c54-5c60f5b1911a",
        "cursor": {
          "ref": "7e3de612-efbc-4a16-8d2c-9e50133371f9",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "df681cf9-0a9d-4708-acda-dc7c29f71431"
        },
        "item": {
          "id": "7befb6ab-a02a-4cfa-9c54-5c60f5b1911a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "62ba55bb-c2ec-4694-b12d-1d963c33c606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65a4a22-c1e3-4f43-bb6e-c15eecf16fd7",
        "cursor": {
          "ref": "78fc5919-dcf0-4927-aa36-b7851feb6e3a",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "92168908-9f01-4372-8fde-d4c6bab5ce67"
        },
        "item": {
          "id": "e65a4a22-c1e3-4f43-bb6e-c15eecf16fd7",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9582ef8b-8b99-4e9f-bbd3-244f66123ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca5ac3f-d79c-4963-b271-60851fe7f9b6",
        "cursor": {
          "ref": "5a3370a0-4d98-40d4-92c4-53c4df74a3d8",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e4da9d0e-86cb-4e98-a148-3e575c5d6c11"
        },
        "item": {
          "id": "3ca5ac3f-d79c-4963-b271-60851fe7f9b6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "eb66e9b6-51c0-4606-b3a9-3d24605e54d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e160ab0-309b-4263-b179-ecb24e33fc80",
        "cursor": {
          "ref": "4a0c99b0-fc63-4655-89f3-aeeaa89610d4",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "21c8b13f-e134-4d5e-af92-3384f12bc5fb"
        },
        "item": {
          "id": "2e160ab0-309b-4263-b179-ecb24e33fc80",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "bf06e560-b96c-4631-aef9-6f638259fa0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694ed287-2c56-4324-bd90-4a532a16ed1d",
        "cursor": {
          "ref": "b833856a-bde7-48d3-91db-7a6f50f26109",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "97984263-51d9-402e-8d1c-ca7cc9da9c41"
        },
        "item": {
          "id": "694ed287-2c56-4324-bd90-4a532a16ed1d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0408668e-bfba-4566-8221-1267daec980a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43de0cc-f37a-45b2-ab53-3c3faca170c9",
        "cursor": {
          "ref": "2d9a7a7a-cf31-4698-8685-dbf99d0f07ba",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "69c71297-f3ed-461b-b267-f69620398be7"
        },
        "item": {
          "id": "b43de0cc-f37a-45b2-ab53-3c3faca170c9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8c3f7732-d097-40e3-a9fe-414d7f2aec4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54875a9b-70ac-4983-a57c-dbfbf1f1f7f9",
        "cursor": {
          "ref": "c22472b0-7329-453e-8b33-d78271589f5f",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2426bed9-75bf-40b4-86a3-b39a60ead7ee"
        },
        "item": {
          "id": "54875a9b-70ac-4983-a57c-dbfbf1f1f7f9",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "59e630e1-f9e0-4d45-a6f8-6d03b62155c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33463331-b22d-4b4b-a234-172645710d6b",
        "cursor": {
          "ref": "9a95bb12-8bdc-464d-a634-8d3f49fe0864",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d78843a5-fb1e-4bda-8494-fdda88a29950"
        },
        "item": {
          "id": "33463331-b22d-4b4b-a234-172645710d6b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c595ccf3-f81f-4d9d-b7db-88240e38b3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0d691f-f421-493d-b173-e23296d0b753",
        "cursor": {
          "ref": "1df6f927-4da8-4a5d-bec6-61995c0559e8",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "72b98dcf-3056-4e56-86e1-25a1c78b0f8c"
        },
        "item": {
          "id": "1e0d691f-f421-493d-b173-e23296d0b753",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f79defcc-dbf0-47c5-91c4-d5352cea57d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71674734-d009-444c-9a50-d7a197e162cc",
        "cursor": {
          "ref": "b6ea43eb-9af4-4d93-96a1-50b0c3ecb83f",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "02c6a079-de80-4cb3-854b-5073f064bdb4"
        },
        "item": {
          "id": "71674734-d009-444c-9a50-d7a197e162cc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "bfc2d8b6-635d-4f34-b81e-b1cbbc603917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff9e0e1-ec02-4d9b-9609-adfcf4989111",
        "cursor": {
          "ref": "c4440684-30cc-499c-acdd-8bd762f92213",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5f7d512d-b0dd-4980-8c30-1e875b748881"
        },
        "item": {
          "id": "7ff9e0e1-ec02-4d9b-9609-adfcf4989111",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d833c821-b01c-4b70-b268-b32e6605bb82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5676b5b-ea27-4485-9879-c823fae7eed8",
        "cursor": {
          "ref": "70d09441-3955-4fd4-933d-024f24dba4e7",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6da9cc47-a536-4dfa-bcaf-0b6be3462b13"
        },
        "item": {
          "id": "d5676b5b-ea27-4485-9879-c823fae7eed8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7223fc22-fa56-43df-addb-99d2b27720e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6ed16a-92c2-480c-a53e-b689a8500fe6",
        "cursor": {
          "ref": "46d528b3-65d4-49ba-b36d-2d885b186ed7",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "63ae3775-27f2-4712-bb7f-f2571121ef97"
        },
        "item": {
          "id": "1d6ed16a-92c2-480c-a53e-b689a8500fe6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "373ab949-b6ab-4ca7-97f1-ca458050640a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be47946-6ea5-45a2-8925-5b1d2ed1d225",
        "cursor": {
          "ref": "0ccdf1be-cbf8-4940-b1b6-d7a1997760cd",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3304152d-752c-4cd2-ab38-3b9f66b28957"
        },
        "item": {
          "id": "3be47946-6ea5-45a2-8925-5b1d2ed1d225",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3aac85ed-0727-4e9f-8b7e-fe97c19e7835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024aab60-4281-4624-8b03-7beb5ea1f9bf",
        "cursor": {
          "ref": "61e6de44-729a-4df2-b23f-649ce041f605",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "23aec94d-5e77-4618-a94c-f02d86cf0b03"
        },
        "item": {
          "id": "024aab60-4281-4624-8b03-7beb5ea1f9bf",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0a302ce4-7c87-4208-ab04-90f509924486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a39a3e9-b0cc-4fa5-a10a-fdf618cc45fe",
        "cursor": {
          "ref": "a69e1639-e7aa-4d1c-9190-f807ede504ca",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9fb6aeff-dcb6-4882-b6a0-a434b84d89c7"
        },
        "item": {
          "id": "3a39a3e9-b0cc-4fa5-a10a-fdf618cc45fe",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e918f3b6-7a75-4a06-861a-ec61820c1d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f1f13e-929b-4ecd-ad5e-b7f5862799f9",
        "cursor": {
          "ref": "0d30e703-fe0d-4068-8aef-40ec6da0f8f6",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9a5343ed-aa7a-4bf0-a228-30ad4c3c5c7c"
        },
        "item": {
          "id": "77f1f13e-929b-4ecd-ad5e-b7f5862799f9",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d061fa32-8ad9-4ca0-9725-078161f3c792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9061ad6d-494b-4806-a623-c9d3b5445218",
        "cursor": {
          "ref": "8226424b-0179-4c35-bf09-b664350b2cfd",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f3a863a5-f295-4889-ac8e-c39c8193152b"
        },
        "item": {
          "id": "9061ad6d-494b-4806-a623-c9d3b5445218",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "59d233d9-2ed6-44ef-9d66-2bebb9e2d17b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b434f3-f16e-4743-a281-e54ec6661e05",
        "cursor": {
          "ref": "b607ae40-5923-43ab-8128-5712b621134d",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "26456710-5020-4589-8786-413fb52b9e36"
        },
        "item": {
          "id": "f4b434f3-f16e-4743-a281-e54ec6661e05",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ff4aa16d-85f2-40dd-908d-a0013b749b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76027a8-7c4e-4ddb-b652-9320268becfe",
        "cursor": {
          "ref": "a9190c02-6952-49f7-bce8-6dcc5cf3f73c",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "cd46de80-46c0-44a8-927e-03a54c9183aa"
        },
        "item": {
          "id": "d76027a8-7c4e-4ddb-b652-9320268becfe",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d9223302-637c-4c88-8c95-6e7529688082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c09323d-db19-46b9-95a4-51f06334bf8b",
        "cursor": {
          "ref": "814846b9-e7ea-4512-8e49-ecf19ada14d3",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e03c132b-06f0-44c1-8c57-1256a3c2a36d"
        },
        "item": {
          "id": "6c09323d-db19-46b9-95a4-51f06334bf8b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fd7954a9-7db2-44e7-891e-3fb24e6fdc0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a699370c-10a7-4641-8d90-62eb1d1b14e0",
        "cursor": {
          "ref": "59370e0b-5350-4bf6-9756-f9a84452716e",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3af593d9-dbfe-4cd0-b7f7-1a1ebdf7c27f"
        },
        "item": {
          "id": "a699370c-10a7-4641-8d90-62eb1d1b14e0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "12a2a8eb-1b5d-42f2-8b90-7e150f677064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29640b77-d801-40f5-9410-754047a239e2",
        "cursor": {
          "ref": "617c21c9-2c3e-45bf-9120-0b0094e0b0d7",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a9b25888-dfff-495f-94ba-f08b5a33641f"
        },
        "item": {
          "id": "29640b77-d801-40f5-9410-754047a239e2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "cd77d442-efd6-45e9-8b78-4d15c623d57c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23e1a80-4929-44bc-a8b1-b478d5c030a7",
        "cursor": {
          "ref": "21fb8489-e8b2-43cd-a3fd-61ec0806ff11",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "662cb976-fc44-4207-b631-19c903644deb"
        },
        "item": {
          "id": "f23e1a80-4929-44bc-a8b1-b478d5c030a7",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "52784696-c913-4790-960c-120a035a7b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c953e52-8a17-44ce-b7e4-3689a8049e15",
        "cursor": {
          "ref": "8e7fba0f-9c9c-44d9-a3b0-d607ea784851",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d064530f-edce-4835-b0f4-ec105ddd1c33"
        },
        "item": {
          "id": "9c953e52-8a17-44ce-b7e4-3689a8049e15",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "cc49bd0d-771f-474e-8631-55d754b4389a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b95099b2-eab0-427f-baca-2a3afcff2851",
        "cursor": {
          "ref": "1be79924-36b4-42b5-98d2-fdf098cf3bea",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0bdd6ff6-e189-4f85-badb-e2cb01bd9548"
        },
        "item": {
          "id": "b95099b2-eab0-427f-baca-2a3afcff2851",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "67711f10-546d-4ce9-9c7f-4d9f59609915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967c9158-ceb1-493b-821f-332f30e23e85",
        "cursor": {
          "ref": "f05cdfe4-6959-4ac7-9ee5-ca04ae01bc77",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ed20d80b-a075-44dc-bcf4-756a2b6331a4"
        },
        "item": {
          "id": "967c9158-ceb1-493b-821f-332f30e23e85",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ab678cd8-5063-4c0f-a504-08781b30159b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6472c60c-eb87-40f7-a2f0-111e6cddaa93",
        "cursor": {
          "ref": "4ad698d1-716c-46b7-b18a-db3af3e995ff",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b9326c8b-ff77-471e-8acc-c1ac4ce5220a"
        },
        "item": {
          "id": "6472c60c-eb87-40f7-a2f0-111e6cddaa93",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "79e2c69d-2c22-46e4-ae07-21751f699da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a98cdb-f60d-4cbe-b354-83bbaaa2078f",
        "cursor": {
          "ref": "e8c529e0-2b12-4fde-bf49-dc05855938bb",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "451078d6-fc9e-4730-8b02-4a0b7aff1163"
        },
        "item": {
          "id": "a7a98cdb-f60d-4cbe-b354-83bbaaa2078f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "befdb8b9-0cd7-48f0-a622-1f8ed8425fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd50a7f2-1280-475b-9e9a-66d3daf13dd1",
        "cursor": {
          "ref": "5d3cba5f-dac5-40fe-96bb-b6df3e79e2b8",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3de7e0e1-63ad-46e8-9268-83504d6fd901"
        },
        "item": {
          "id": "fd50a7f2-1280-475b-9e9a-66d3daf13dd1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f2106467-df5e-44ca-b271-221c42269dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ab6f47-43ea-4840-b251-161039f599f3",
        "cursor": {
          "ref": "65bc3e25-3d37-4d84-aebb-809d87d34fe6",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "15134e4c-7ece-4775-ac6e-161ddad92ab2"
        },
        "item": {
          "id": "f8ab6f47-43ea-4840-b251-161039f599f3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c16b74aa-ad10-469f-930e-dbcc5549b7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e28467c-3803-4988-a55e-bad496b14cb2",
        "cursor": {
          "ref": "eff49d1a-0874-4938-b2db-77ed3d39f909",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e5c65715-c062-461c-b5df-c7b7b4503d4c"
        },
        "item": {
          "id": "2e28467c-3803-4988-a55e-bad496b14cb2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2199f6b8-eb5a-44d9-b172-b3f2e63df90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0784f8-6e52-49b4-9048-44890640a113",
        "cursor": {
          "ref": "3d67cf61-fca9-49e9-aeb8-908d80d74ad0",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b2ab1039-f0ca-4b71-b27f-61a92bb8baf6"
        },
        "item": {
          "id": "2d0784f8-6e52-49b4-9048-44890640a113",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "22a4665d-371a-4694-ab73-672ddebb7399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa8f6de-7ad3-45e6-9f5c-7ca1e48de612",
        "cursor": {
          "ref": "8f9b11ac-9d63-453c-822c-b20d133bf100",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8afcc8ea-b832-40e8-a097-70f28ffa206d"
        },
        "item": {
          "id": "1fa8f6de-7ad3-45e6-9f5c-7ca1e48de612",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "db73e102-747c-47c4-b4c3-52112256ca94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ddb3fac-3e66-4a30-93ba-ca96d235e583",
        "cursor": {
          "ref": "0316d959-3caa-4f26-9825-c3e76590bbaf",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7904cb3b-5493-46f0-874b-2ce72946df17"
        },
        "item": {
          "id": "7ddb3fac-3e66-4a30-93ba-ca96d235e583",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "43044407-9946-488b-b0dd-f6ff990e05e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a32b4e-21e1-4d18-a1b9-439ad2430526",
        "cursor": {
          "ref": "d869f427-910b-468b-bf21-d44812d6cd17",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c75185ca-c0b7-4d07-bbc9-b200ea0cd00d"
        },
        "item": {
          "id": "84a32b4e-21e1-4d18-a1b9-439ad2430526",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a13f2b63-eb5a-489d-b235-5af1531f16e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1958a3f6-6442-436d-bdc6-280d0143608e",
        "cursor": {
          "ref": "161dfc56-3763-49aa-b6a7-ce7bbbcbb840",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "900224d5-bf8d-4a88-8b11-594cd80c2775"
        },
        "item": {
          "id": "1958a3f6-6442-436d-bdc6-280d0143608e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "21019f77-49a3-4543-aa55-c16a77a96252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b8b08a-3017-48f0-a174-331be1c6186e",
        "cursor": {
          "ref": "830b2750-ad10-4e23-a44d-babcb7e5df96",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "869950f2-3401-416f-b52f-93e2b25e4a22"
        },
        "item": {
          "id": "d1b8b08a-3017-48f0-a174-331be1c6186e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9988a791-9aea-4937-838c-b6e5f957693e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16bb209d-3b87-4cdf-aa4c-36270e74a41e",
        "cursor": {
          "ref": "3b35f7af-6362-49ef-961f-eebf8b10b818",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ff9c2e25-36e2-48b4-a28c-cdb827adf83a"
        },
        "item": {
          "id": "16bb209d-3b87-4cdf-aa4c-36270e74a41e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b9c3c77c-62cf-4853-92a9-39e21d1f019c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "674fface-45f6-4d1e-9ae4-614bc3277d97",
        "cursor": {
          "ref": "a5086543-a96b-461c-87de-e14481426598",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "513d9aae-e39c-490d-9bdd-c8f58563105e"
        },
        "item": {
          "id": "674fface-45f6-4d1e-9ae4-614bc3277d97",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e23471ff-074b-4810-9714-2acfecb2eb4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f731be-0cc9-4f69-9258-09b545f0b594",
        "cursor": {
          "ref": "d4ce540d-0c75-4ff2-9702-a964363e2a50",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2cca370b-5740-4cd6-9701-0cc943564472"
        },
        "item": {
          "id": "38f731be-0cc9-4f69-9258-09b545f0b594",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "78c7a2f2-29bd-4e84-876e-5a7c8f3e9db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6903db-ba16-4727-8e85-c8277c385383",
        "cursor": {
          "ref": "e6fbd80f-b977-46c4-a240-76e8d963ff6a",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "148b6291-a092-4370-993f-a4a12f57800e"
        },
        "item": {
          "id": "1a6903db-ba16-4727-8e85-c8277c385383",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "bdbc1ce1-ff97-498d-b0e4-232c92ecd2ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80543a19-c352-40d2-b9e9-50b6890e546f",
        "cursor": {
          "ref": "a358d5bb-7b79-4c11-a2c8-5612e6dc942b",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3e754f72-d8ad-4689-9f9b-850e15bd9b23"
        },
        "item": {
          "id": "80543a19-c352-40d2-b9e9-50b6890e546f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9a1034f3-0b61-43d4-a069-5cfc2d236092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f4bd4f-04c6-4187-a817-599f84271fcb",
        "cursor": {
          "ref": "7167a1ae-78b4-41aa-a5ab-80d5b8f636eb",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0aa45037-56c3-4f5b-b6da-5b5f621ceeb1"
        },
        "item": {
          "id": "c7f4bd4f-04c6-4187-a817-599f84271fcb",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a28a4adc-e449-46f2-a065-c14e365dd2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0962847c-87d9-4fee-a3e6-f32b96d3f774",
        "cursor": {
          "ref": "23a98ddd-84df-44c4-b6c1-4ba50faafe70",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d27ebdfd-5a52-426e-becd-ca7c005fc40f"
        },
        "item": {
          "id": "0962847c-87d9-4fee-a3e6-f32b96d3f774",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "592e4cb2-4976-4765-98fb-05f905156695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a779bdaa-e9cc-4f54-a460-e061ee0b5842",
        "cursor": {
          "ref": "5a2236a4-84b5-4de1-a2fb-e304f9831a9b",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "de9fe0e5-200c-4afd-805f-01801ead39e9"
        },
        "item": {
          "id": "a779bdaa-e9cc-4f54-a460-e061ee0b5842",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "077ece18-45d4-4d37-959b-a806892f9c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "700070c4-990f-4079-ad73-83705b0d26d3",
        "cursor": {
          "ref": "46e121b9-e316-4d94-8fba-2c8cb13d3ee2",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ffe6abd2-2a56-4bf0-b0ae-a1df7a142742"
        },
        "item": {
          "id": "700070c4-990f-4079-ad73-83705b0d26d3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8e02440e-43bf-4378-8d16-83ac82b65ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b687da-f7f7-4254-adbf-6f6647ffd0b1",
        "cursor": {
          "ref": "6a125a42-4376-4ef3-901c-72023a036e3e",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "dc9c36c4-cc0a-4ce3-958f-318faeaf26d9"
        },
        "item": {
          "id": "58b687da-f7f7-4254-adbf-6f6647ffd0b1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ac48e238-07e0-40de-9c06-5e502884d797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf64b0c-ae8e-4335-b2d1-c72503cf8775",
        "cursor": {
          "ref": "6dfe544f-f23e-4ac3-8a86-ff65c7491205",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5a0358a2-1200-4aa8-b81e-a486dea8cb34"
        },
        "item": {
          "id": "9bf64b0c-ae8e-4335-b2d1-c72503cf8775",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "35b3cf2a-1daa-4259-97d1-cf073db163cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f254bf2-7556-49ad-ab76-8f055fce37b0",
        "cursor": {
          "ref": "0cca1bc7-57f4-4537-9360-0638111024d6",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8c3b649f-0bcf-49bf-9ece-012e3b88d5bf"
        },
        "item": {
          "id": "7f254bf2-7556-49ad-ab76-8f055fce37b0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2b1ff72e-5729-493b-b0f3-e0c62033dc77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e482e87c-3412-4e34-b151-93a82e6fc422",
        "cursor": {
          "ref": "dc70ee2d-18c7-4fc0-9a34-3a815d9a2574",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8893c53d-b01c-42ef-b20b-a622e41eb491"
        },
        "item": {
          "id": "e482e87c-3412-4e34-b151-93a82e6fc422",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a2bf29a9-1aa0-4fb5-8447-dd76862cfce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03546f0-f5b1-4a2d-9f59-c4b257805246",
        "cursor": {
          "ref": "26744d66-5546-497b-97b8-bcfc8a3eb8c2",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6cd938ab-40f7-4122-8bd4-dae16fcd57ce"
        },
        "item": {
          "id": "c03546f0-f5b1-4a2d-9f59-c4b257805246",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "efaf424f-d49f-4d43-a832-66cb19a3fc58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de865988-934f-4bf9-9b17-4d0cf9766787",
        "cursor": {
          "ref": "f20606bd-30e0-46a3-bf14-74bb497b843b",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c1aae92f-58e0-4995-8c00-f9c605fc2ea5"
        },
        "item": {
          "id": "de865988-934f-4bf9-9b17-4d0cf9766787",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "496a4371-72d4-4c1d-a5fa-4ead17fc0971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aca57dd-a2b7-44f4-960d-d33310a94d3f",
        "cursor": {
          "ref": "7f6175f9-787b-443e-8922-4a2ff302024b",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b203e94d-5e55-4dfa-9416-b51d5f0858cf"
        },
        "item": {
          "id": "7aca57dd-a2b7-44f4-960d-d33310a94d3f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ed2d6f4f-cc9b-49b5-a404-d89c161a77a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75cd5bf-780f-481f-a63e-cd5261e819a7",
        "cursor": {
          "ref": "e731ca51-6a7a-408c-8643-22459c8ec210",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "17fbd78c-5cda-43ea-ad29-72167a967b28"
        },
        "item": {
          "id": "a75cd5bf-780f-481f-a63e-cd5261e819a7",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7dbcafd9-224a-4665-960d-a6ab6e162ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27dab10c-1c4d-4fb2-b223-804513268dfe",
        "cursor": {
          "ref": "2da108f2-61c2-42d2-83ce-a036937765ad",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e2012d6c-5f4b-4122-9559-9a19a9a85169"
        },
        "item": {
          "id": "27dab10c-1c4d-4fb2-b223-804513268dfe",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "dd986905-2ca8-40fe-aafd-6f5024266989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58dc6523-541d-46e9-aa2f-e80d7f446f41",
        "cursor": {
          "ref": "adaf9a20-a45e-4180-91ea-70791420ac88",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "96134b8a-57b9-407a-aa42-facde49839b0"
        },
        "item": {
          "id": "58dc6523-541d-46e9-aa2f-e80d7f446f41",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2a0a3d8a-5267-48ed-8207-dd0a2cc6c284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a47cc9c-dfe0-4339-a9ae-6bc56fb74478",
        "cursor": {
          "ref": "959ac00c-317c-49b0-b8f8-3e398ca2ec6e",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "702d4fd2-06f8-441d-8abd-0dc406aa01e6"
        },
        "item": {
          "id": "9a47cc9c-dfe0-4339-a9ae-6bc56fb74478",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c22cd190-f14c-418e-aad7-3b6d31aefa5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c19f57-77f4-4b49-bec3-3237ef0d9181",
        "cursor": {
          "ref": "7b93d585-8ea5-455f-ac97-2cbebfa4f906",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e791392d-1365-4ed1-892b-d69dbc5d4eeb"
        },
        "item": {
          "id": "b1c19f57-77f4-4b49-bec3-3237ef0d9181",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f174b719-6c15-44a3-9c1b-15b529e4c351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd48284a-546e-49ac-9c0a-8c2612dda85c",
        "cursor": {
          "ref": "eb637bef-b8f5-4eec-afa3-b1869583bf1d",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6a5dd748-b3f2-48fb-8508-7b62092fcd1b"
        },
        "item": {
          "id": "cd48284a-546e-49ac-9c0a-8c2612dda85c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "debd820b-321e-41cb-8afd-8b2f0b7869fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a61b194-8eb8-4422-b922-30347aab277d",
        "cursor": {
          "ref": "611a1473-955a-4c53-9135-4558c9f0b35a",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2df04762-ee4b-4c66-a3d1-63b2f0cbf6d4"
        },
        "item": {
          "id": "5a61b194-8eb8-4422-b922-30347aab277d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e9897463-1b08-47c9-9f73-547d6e1440fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2862a654-5fd9-4015-9700-426466254971",
        "cursor": {
          "ref": "d034f5f3-a1d9-45e7-92e7-4170b31e811d",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c158d185-3b64-4a03-84bc-be2e027eb10e"
        },
        "item": {
          "id": "2862a654-5fd9-4015-9700-426466254971",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "497234c0-922a-46f5-b745-8cfd0cea726b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8630dce-db77-462b-96dd-2c9bcc095215",
        "cursor": {
          "ref": "cb5af941-f5c4-414f-984d-53b9843f9b37",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "615872d1-de8a-48e6-9a09-936589e78432"
        },
        "item": {
          "id": "c8630dce-db77-462b-96dd-2c9bcc095215",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b444d757-190d-4889-a5fe-c2a58f90cd0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0b0438-fcd4-4941-a237-ca453d4bffeb",
        "cursor": {
          "ref": "72307bd2-1af0-4b6c-a49f-845a78723917",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "39020920-c464-4372-ac7b-bc3463d16221"
        },
        "item": {
          "id": "2b0b0438-fcd4-4941-a237-ca453d4bffeb",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "60e3d65f-8864-449b-8675-b016d6d43b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ed5f9f-bf5c-4479-b29e-ff40bdfcf480",
        "cursor": {
          "ref": "5e6300bf-2ad9-448d-aa74-c6e6630e6726",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "67b4fcb4-9a70-4ff3-9af5-7b9256e47ebd"
        },
        "item": {
          "id": "74ed5f9f-bf5c-4479-b29e-ff40bdfcf480",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c6c8a515-5c71-4565-a37f-780c3ed10948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56cb301-0e8f-4667-855e-57b374984613",
        "cursor": {
          "ref": "362ac3ae-a062-4b30-91d4-c5677b76ba0f",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "5b16434d-325f-4ee3-827c-3ef2ceab0e1a"
        },
        "item": {
          "id": "c56cb301-0e8f-4667-855e-57b374984613",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "048286fe-8664-4ba8-bd10-59adeaaf585b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c382d84-869c-4e7a-8803-2c9e716495c4",
        "cursor": {
          "ref": "2e23de38-33b2-4ffd-bc36-ae6c53264380",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "4690b72d-fc05-4a04-8bd5-a07bb514ced2"
        },
        "item": {
          "id": "8c382d84-869c-4e7a-8803-2c9e716495c4",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bfe9d1f6-4a24-407b-b6db-4555b1c41e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0ab139-90dd-470c-952a-e3dc500f53ef",
        "cursor": {
          "ref": "4e5af761-64bf-444d-a814-bfd0db4c4eb5",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "d82f2445-62d4-4142-9038-b69758e224cf"
        },
        "item": {
          "id": "ae0ab139-90dd-470c-952a-e3dc500f53ef",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "bf18bc99-680f-4396-aa8d-f08807d3f72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b5569f-9161-4578-87a7-258ad16b4dcd",
        "cursor": {
          "ref": "5678c565-33aa-4f1d-8d2d-470b8626562b",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "23f51b92-0843-4268-8027-e0c7ebf3b122"
        },
        "item": {
          "id": "35b5569f-9161-4578-87a7-258ad16b4dcd",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "19595be1-cfbc-4b7a-a0ed-13e87dc5c758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085959fd-135d-4d57-8ab4-03e4228e39c9",
        "cursor": {
          "ref": "ad8610d9-3d69-48e6-92bb-c5caa2713054",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "8ee511bc-feb3-4173-9670-74a99b2b1a6d"
        },
        "item": {
          "id": "085959fd-135d-4d57-8ab4-03e4228e39c9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "38fe084d-1ca5-43aa-99f4-8133ee8e1e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98599765-700a-4863-8ae6-4f3355cc2d69",
        "cursor": {
          "ref": "12f0cbe5-d1eb-45ff-b408-b3376710bb9f",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "ba53d0ac-1fc4-4f61-9dac-f3040acb0b1b"
        },
        "item": {
          "id": "98599765-700a-4863-8ae6-4f3355cc2d69",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "77be06ea-61a5-4447-aca7-2cbe0ab8db92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120435ee-278d-4fa4-a35a-a235e4a0c40f",
        "cursor": {
          "ref": "0b75daa7-c28c-4a97-8297-a6fdfd2d4a66",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "672e9328-ed61-4ad3-8dc4-f4e0f9bb2f16"
        },
        "item": {
          "id": "120435ee-278d-4fa4-a35a-a235e4a0c40f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9f6e9ab0-d1a5-4d3b-884f-29f2756e8a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3296f427-527f-4113-be5d-f50b50df5910",
        "cursor": {
          "ref": "3428ee2c-f1e0-4b25-ad66-920f06407c5e",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "eb154509-f0db-449b-b72a-2aada25d9df7"
        },
        "item": {
          "id": "3296f427-527f-4113-be5d-f50b50df5910",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "87b2140f-47b8-4b34-b31f-4a5d3b6e80b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94294ad-da94-47c5-9e69-e817d5da1f56",
        "cursor": {
          "ref": "eebad188-de2f-4f33-95ff-ed237687b343",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "1a0cd709-93cc-4b10-af62-b38740c9a2ce"
        },
        "item": {
          "id": "c94294ad-da94-47c5-9e69-e817d5da1f56",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2dd0792b-2500-4596-a095-5160c198a26a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1164cd-df48-4ce1-9a7c-a23a545d5685",
        "cursor": {
          "ref": "a3f6c1b8-5c54-4430-87ab-f549f7bbcc63",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "1469d685-9024-446a-9d29-25d1773ac699"
        },
        "item": {
          "id": "dc1164cd-df48-4ce1-9a7c-a23a545d5685",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e1c0990b-f378-4ec3-b779-abacb0fd1a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a7b118-8378-4f84-84ec-f6b041f88272",
        "cursor": {
          "ref": "bc280a03-e839-4b09-b8bd-47c78c83451b",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "86011a7f-c37d-4c9f-8023-6dce0e5dc725"
        },
        "item": {
          "id": "26a7b118-8378-4f84-84ec-f6b041f88272",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ebdb38d9-105c-4a9b-aa72-9b05430c5ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1947cafc-91e9-46a4-b22f-6c022461f294",
        "cursor": {
          "ref": "4a4f1b0a-4010-465b-97c2-6ee340529a90",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e4f6a1e5-f270-4e55-bd79-3788e05dee62"
        },
        "item": {
          "id": "1947cafc-91e9-46a4-b22f-6c022461f294",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "223fbf47-02e0-4a95-8dcd-5fe5edd97771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b44b66-7d53-47cb-a158-f030c522c3cc",
        "cursor": {
          "ref": "6dc52375-7393-4cdf-a961-a728bea86faf",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "ca241fd4-40a8-40d3-829e-093b0673627b"
        },
        "item": {
          "id": "b7b44b66-7d53-47cb-a158-f030c522c3cc",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "effec9e4-0c01-4b74-b7c1-ab4cf66c0b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624082c5-0723-4427-8ec5-7c42efe25986",
        "cursor": {
          "ref": "b368916c-d711-466e-9f66-0d268646ff87",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "78a4379b-fdda-408f-b5cf-635128097ee1"
        },
        "item": {
          "id": "624082c5-0723-4427-8ec5-7c42efe25986",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "253c6036-682d-4f38-903b-c001baf11dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4253e9dd-12b6-4f2f-a2ea-41b80b60d7c0",
        "cursor": {
          "ref": "57a22d0c-e280-4705-b11c-2aa94ca8c0a1",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "22c5a1fe-4486-4aef-84d3-04312dcf6667"
        },
        "item": {
          "id": "4253e9dd-12b6-4f2f-a2ea-41b80b60d7c0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "23499c41-ac5a-4394-b355-e35cd6924fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4699c5fc-04b3-46f4-88fd-c130d497c88a",
        "cursor": {
          "ref": "e78841cc-f7ec-4f9a-ba00-2f644480c64d",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "40f54e11-f8a0-499a-8da3-6e69c459392f"
        },
        "item": {
          "id": "4699c5fc-04b3-46f4-88fd-c130d497c88a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "80bfc88f-72bf-47d2-82b6-3310c34021d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1bb5aaf-da1b-42d8-b083-51adac7ae1bc",
        "cursor": {
          "ref": "9aee9941-a18c-4f80-9565-f0ec51ed409c",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "56124b4c-ba69-4d12-9c9e-938fba0658a3"
        },
        "item": {
          "id": "d1bb5aaf-da1b-42d8-b083-51adac7ae1bc",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "eb6ba407-01d0-442f-8004-4e0d864fc541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9af759-5cca-4b35-b864-8414380796bb",
        "cursor": {
          "ref": "62901d76-345b-4210-bb8e-0f3335971cd8",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "91fe7832-c7fd-4a6e-a70a-4d3d5d5759e1"
        },
        "item": {
          "id": "5a9af759-5cca-4b35-b864-8414380796bb",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "43005493-b203-4db4-a223-cc0734acd9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5d7ad4-255d-45b1-8d2d-25f9f4c8f0a4",
        "cursor": {
          "ref": "5c3289d0-4f0a-4642-b259-6d11f2109c6c",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "e664c149-9c4f-459e-a6a1-71e36c8ac5a7"
        },
        "item": {
          "id": "0a5d7ad4-255d-45b1-8d2d-25f9f4c8f0a4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "69e1037a-543d-4cab-997b-7ea1e5fd84d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617413ac-61d3-47ad-85db-bddc5d9868e0",
        "cursor": {
          "ref": "cc29a155-9877-4e13-9ee0-6f19e3c8a0d9",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "e6d5719e-7a3a-4351-b55b-22554104f976"
        },
        "item": {
          "id": "617413ac-61d3-47ad-85db-bddc5d9868e0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9c05a03a-7be4-4dd1-a0fc-c2d705266159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d201710a-f0a4-426d-a76b-03520f11c55a",
        "cursor": {
          "ref": "6e3b3804-8ea3-47ee-9a4d-70728ba2ea75",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "2d060d27-1c96-4c16-aa07-e6817818113b"
        },
        "item": {
          "id": "d201710a-f0a4-426d-a76b-03520f11c55a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "70ec77c5-6e93-45f0-af5e-39a25c4b0894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9fa2f2-4d67-4e79-a4bd-1f611a394512",
        "cursor": {
          "ref": "d2b3562a-7909-4db9-b0b7-cb7e271f9692",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "76e184e2-ffac-4b41-afa2-d60fa701a005"
        },
        "item": {
          "id": "5f9fa2f2-4d67-4e79-a4bd-1f611a394512",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f8628cba-120b-4523-b573-594524f3b7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66103f4f-49bf-4512-87a3-575db4d2b09a",
        "cursor": {
          "ref": "7f69a14d-9a15-4dee-b031-3a83a0176633",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e30aa42e-4b07-40df-a67f-d1900175c5ee"
        },
        "item": {
          "id": "66103f4f-49bf-4512-87a3-575db4d2b09a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "37eab5a4-1689-4a2d-9d9a-f69f0167941d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41781eb0-2951-4c46-8907-05e7185bc14c",
        "cursor": {
          "ref": "ae68f82b-2034-4a6c-94e9-9df2ec54da3b",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "48999f05-ef51-4b17-be2a-6d79e787d733"
        },
        "item": {
          "id": "41781eb0-2951-4c46-8907-05e7185bc14c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2d9d94dd-9b33-4e14-a447-ccda55c4a104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3b610c-bed3-404e-9457-ad64507a5659",
        "cursor": {
          "ref": "c1a734e8-a28b-4d82-94a5-87216a8ed308",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "957ec3ee-df7c-46d5-9912-94f7cde3c6fd"
        },
        "item": {
          "id": "1d3b610c-bed3-404e-9457-ad64507a5659",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e3a42d09-d59c-4413-a930-5e43972d28e2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6b7409-0a3a-48ce-8033-ef2ec0f4234b",
        "cursor": {
          "ref": "8d516cab-3732-4c3c-94ca-4df08b23897f",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "babb626c-6dad-45ad-841b-04cbf2d85735"
        },
        "item": {
          "id": "8f6b7409-0a3a-48ce-8033-ef2ec0f4234b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "eaf86563-0a9c-47cc-9694-04ff3bc3c174",
          "status": "OK",
          "code": 200,
          "responseTime": 94,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df06d14-256f-4cd5-bb71-84491e64aa02",
        "cursor": {
          "ref": "0832166b-a465-4e3a-8d68-add8e862553e",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "79516e4a-05e0-46da-88a7-3c6382d28e53"
        },
        "item": {
          "id": "0df06d14-256f-4cd5-bb71-84491e64aa02",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e1c9f862-11dd-4a49-92f2-659048058335",
          "status": "OK",
          "code": 200,
          "responseTime": 1358,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2322b891-f264-4d72-9bf3-792faf6ea602",
        "cursor": {
          "ref": "b38363b5-f8ac-4d2f-8174-93238f352299",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "d76454e2-c250-4728-a669-cbb68ce81acb"
        },
        "item": {
          "id": "2322b891-f264-4d72-9bf3-792faf6ea602",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5a2c5a02-c7c0-4cb5-80f5-a95f81dc3136",
          "status": "OK",
          "code": 200,
          "responseTime": 1697,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "94793925-4882-4350-b47e-5ce88b2c3b70",
        "cursor": {
          "ref": "6797abb0-6967-4a17-90bc-666195cd0a44",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "fec9e42c-e214-4f58-b3d2-6e906380856a"
        },
        "item": {
          "id": "94793925-4882-4350-b47e-5ce88b2c3b70",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "65f347c9-ffa8-4237-a604-1f556c7a3823",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94793925-4882-4350-b47e-5ce88b2c3b70",
        "cursor": {
          "ref": "6797abb0-6967-4a17-90bc-666195cd0a44",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "fec9e42c-e214-4f58-b3d2-6e906380856a"
        },
        "item": {
          "id": "94793925-4882-4350-b47e-5ce88b2c3b70",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "65f347c9-ffa8-4237-a604-1f556c7a3823",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88e4952-1209-4171-9bd6-eba7e8ec99b0",
        "cursor": {
          "ref": "928e3c7d-1d35-4fb4-895f-0aa74da5f931",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "8cd749ba-cb92-49e7-879b-8ece8cfe9e45"
        },
        "item": {
          "id": "c88e4952-1209-4171-9bd6-eba7e8ec99b0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7e37352a-0d62-48a7-af09-a2437965a427",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a63320-cfa5-4426-9991-65af7f4daf1a",
        "cursor": {
          "ref": "66f7b9f0-bcfb-4f05-94c7-d9c5c567b18b",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "41201c37-3c15-4a26-baf4-0a958a83491c"
        },
        "item": {
          "id": "c5a63320-cfa5-4426-9991-65af7f4daf1a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "475225f4-36d8-44ba-853a-338b74acc24b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}