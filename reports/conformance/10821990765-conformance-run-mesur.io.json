{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "45015a15-b772-45fd-b409-271713246d2e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8ce8a668-5b4d-4f6a-91f7-b96eaacacdb5",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "768c9133-65a5-4d13-8fbd-1eb6e854dbb2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "247bbff7-5e53-45cb-82bc-761fe41a82c0"
                }
              }
            ]
          },
          {
            "id": "25c6caec-9c25-4a5e-98b1-d7dd76ab0010",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "38356170-71ce-4837-8adc-3aa8c31249ad",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "84f04f37-9815-4c0b-8954-53d651c17696"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0d04033a-1110-47ee-a389-64ff99884325",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "83c8faa7-83d8-41a5-8c8f-3afa359d02ff",
            "name": "Positive Testing",
            "item": [
              {
                "id": "02c4e510-c945-4aa2-b5f0-4c699032a64e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac72e036-c624-40b5-b8b3-ebd6d18aa81c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ba8a97bb-94e6-4918-bb14-7403fb81e8fc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d4a08842-fada-4056-9f08-fbade31779f0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "269534a6-b1f8-4092-8bf0-aaa75759f12e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "75957f8d-3c95-4491-abdd-6eebe7f9a17d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a30789eb-f53a-4db9-b66b-2722727a3c2a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6415e94-cb55-496b-bf2c-079f03b49f58",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "05f97c06-167d-437d-b43f-37b695f3aa5c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2bf8b1a3-fdcb-41c3-9f53-d849274198d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eaabfd60-1075-4b1c-a261-12998ce186e1"
            }
          }
        ]
      },
      {
        "id": "b5e59d9d-da05-436f-a244-304e5a287f4e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c0e857e5-c6d0-4678-8673-58e05e80d82d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "24b67f8b-3730-43e5-9f1d-42f2bf73abd2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a6745534-d802-4d90-9820-6eaa89111415",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5825faf6-0a1c-45ab-a198-dcc226bea0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b9fb989-4a48-4c04-89fb-cbce076363a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c5708a-d095-4b0e-86c3-7dc0c1300ae8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe0d162-4db0-49ed-b635-e41dd621887d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c008624-1fd4-4d8d-8052-12c954c52739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fff5baa-f53e-4c8a-bc49-a3c5be7596df",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3eb2148-32f7-42fb-acd2-deca6baca5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7767647-28fc-40c8-88e5-e1c068ca0832"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "95a8d55e-7708-4972-b44d-e1ec00978e48",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c55b79e3-83eb-40bd-94a3-6a8d59880f01",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a4fcd8-4598-4e60-a938-a1a2d0c42a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09701b92-88ec-4ae9-861b-f83c26916f01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a861fe-f6df-4948-97a7-2caa6ae7098f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45166aff-ebf5-466f-b14a-f29b7c864a16"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bf28358e-d494-48ae-b744-54295dcc9b9e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b013dabb-bd72-42c8-9399-14e866e5166d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "06184c02-ef53-4e74-8acd-661f08a3a737",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a3358c9e-5969-4704-9c43-4bcec0cc5d67"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4b02824-c89c-4820-95b9-649a7ca984eb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0bb12f4e-8879-4390-b16d-88f046299773"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5fc8b9c-8566-4261-8e18-c568859d900e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d48e9cf1-8a7d-4ded-85c5-893a08e80120"
            }
          }
        ]
      },
      {
        "id": "9d9ce3e8-b9e5-4002-9399-5220dabbef50",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "448cd5d4-6568-45e5-b039-df8e21545f85",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c1b6b2a2-9a0a-446c-b6ce-ea314a496f4c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "32642624-6732-4fd9-a13c-b7bdbc4eb335",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75429f5-b1cc-4b49-8df1-d33d63137e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a0bae3c-4895-4ef9-8ed5-679960e3eb37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18c7389-aeba-4b69-9677-a0717f793d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f2581f1-56ec-4caa-88c6-6dbc06524cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5369631a-f6f7-45d0-87ad-e3b2d528d0c1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9aa856-4250-431b-9823-5efedd2f2f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e999df5-75b1-4e19-9a4b-97ccd3375ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4bc750c-3c7b-46fe-947b-0b44575093d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c4e862c-733b-4b0e-99a4-d0fc1da17f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5aa156b-dfde-4ec7-aa37-45c1c515559c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1fdcd35-f294-4e43-87a5-6644455c92fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "848f082f-a118-43a1-98b7-43d3da59495e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1dbc5b9-52e8-4af8-9965-8198a054f125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eded0aa1-5bfb-4a22-85c1-88d7993a2e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa73221a-7ed2-4ff0-9f78-e3a33d355e2c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70a7ba0-39b0-45de-b70d-651e01600742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90bdd99c-f751-406f-ad8e-fb9e40c00c6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47902811-dcbc-4542-a219-a2f2a9f35596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9735f3a7-a65a-490e-af12-3e9f3b9dc163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf0ba0d-78b0-4828-8cbc-612005c385ab",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3689c4-1229-4f96-af10-6ded4742559c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7655021c-e0e3-496e-8a05-5ef0408a25d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48695ac3-d54b-4e84-9581-98673066716a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7be083f-ffe1-4d19-bcf0-6a26bb918c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a47401f-19ca-471d-b2ef-02f09a005506",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f987d4f7-bab4-452f-b25f-e931ff16c71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ecf1fe4-0637-4c66-9438-e78d8be9411d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe1ed99-26a0-4145-a57b-284e14ae6001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40f4284a-af8a-4717-b8ec-652503d3c80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1ef4eb-2167-4709-8db0-d54af807cc3c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6cbac6-274c-42c7-b404-251d75935e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9426733c-a369-4fd4-b7e2-cf6433d13c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d475490-5703-42e7-91da-716591e85015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b44e692-8661-472e-bfa6-0aee148a173d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a454510-3f20-465d-b308-e2b76ceef958",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4286678c-31d0-4a00-8c7d-cc4103c45d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e22fd80-bf2a-479a-9722-248424c57355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8cd999-6296-4110-859d-49721901c57c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55a67133-26e0-4495-bed8-cb2e60db0287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8a9d29-6de0-44d8-83b7-d63b50706966",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "733da4de-a077-4400-b6a8-c5c3313bd0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22e0b85-894e-4b9c-ad0c-ea39aa55ba4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03df3f9-78cf-476e-9307-2252973e92db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8528caff-a6d0-43bf-a26c-cf5c05df5a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9336d65-b56c-4c09-b06d-eaa851b25921",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8812418-9c35-4a29-a0f7-c8254f581d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84306236-0ef6-4d2b-8e53-9f3d6331c8b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e842c9-b481-435d-b683-8ba255eeac77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74309037-384a-497f-8319-3d2efac4de7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc11fba-4c44-4185-909b-877ba449db9b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42604011-f9fe-480b-a201-61e9ca326ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4929f93-2b89-4281-ab3e-b7718d072a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66f23d6-ec8b-4c4d-9129-4e092ad27077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "902ce1c9-1517-4aff-8e2b-24ae71c68980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd33dea2-add9-4798-8e0d-44fd3fef1467",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c777bedc-e82d-46a2-b9c9-12c69b313826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd82a41b-7681-44fd-9f2c-59eb7b3b5cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc3e80c-a74e-4d99-8191-f4433b4d636f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a27dbd1-0ae6-4568-8e6d-92a481f4a157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed81eb58-8c93-480b-ba1f-0eea098f11aa",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cb159c-665b-45a3-aa8a-80ae32e2f3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "260ab4d9-25d1-4bb6-a57c-b433df86272f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "369e8fb0-056b-4655-ac18-d0f17fb2dbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac19f2dd-1ad1-4f3a-9a7e-32492d549581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f48bc28-a93c-41e9-a469-61b48e0e5d18",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ff111b-9677-424c-b7d7-1fb4c2671c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6cbd11f-c20f-432d-9c23-037cc8cfd97a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c509bcd-c4a4-4b8e-8119-7b5aac58a14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2eee1faa-23cf-48b4-83a2-59674bf96ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517f6eed-d631-4bff-b298-51d7235a5a9f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1d72b9-9231-41ae-aec4-1f4c82a9f749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b80bb65-8ee7-4211-ad4a-93c6d137e8b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a64988-9c8c-49a8-aa5d-a9dffe5e2a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f23a38c-2480-4f46-a1aa-0d7715d267c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012eeea0-8abe-4021-8f5d-11702a6e382d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93688041-386e-4110-9f6b-077e0828324e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c52bbfc-fa64-4c67-83ed-47a04f960ade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111e5bba-138b-4b5c-a8c6-334e9d8a12fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc28f55d-ff96-4033-939f-d9a23d304073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55121915-60f8-48e4-bf91-ea41d1fdcda7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1aa97a-5886-4a71-9a3d-261f4fbe2d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b32093c7-fdda-4125-923a-73a185417414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10cd08d-f761-4828-b352-277cabb59251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80da2216-09ec-4776-8ae4-799d430ced12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64fb002-e2a9-403f-8932-3237ac7b6084",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dcba82e-83bf-42c7-b5ab-79b4ffb2ba6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9621430-6f28-42f1-a102-c11f2fa1a13c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a9c537-4175-4388-968c-4556d247258e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "96f5be9f-ddfb-450b-84bc-c76e327b5d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ad94dc-17bd-4f84-834e-221db3f0b07b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3d9e3d-9995-41d9-bedf-70f8af904283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f6c096f-caaa-4893-9585-8028cb49fcbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a3ebde-b81a-4c30-ab43-191504188737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de814a71-bc3e-4545-a2e0-24725efd30b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b80f56-b33a-427c-bf81-81a84a284dff",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0168e6a7-218c-4664-94aa-b3ce3e40eaec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9fd438f-9a41-43ee-8515-00e2fa28fbb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc35d7ab-737f-42ee-8bc7-5b0b13cbc59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "473cee20-1993-4be5-9b18-6102a23bcce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b3f3b4-df11-4c30-8a28-65fab429eef9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea8005f-3904-4dd3-928d-9f4d1a0eabc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "678a038a-0691-4a1c-bc73-eba08b262d71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8bb120-cfd5-4146-a8c7-6d0fa4f8f41c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f63e225b-e76d-405e-b176-f106316e3e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59c8595-58bf-4557-9805-2d6d5cac3808",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a304cb-04eb-4792-8f69-6ec1becc8071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f97274ff-9d2a-4de3-bd17-5e42c68d94a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f453f513-72c4-4b5c-9022-e9d94ab688e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b240360-8858-4921-9f19-6122daf84a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aab50f3-508e-428d-a332-a3b6a245298f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37273c68-04bd-48a2-b15c-ffaa932fd000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b852883-8cba-4393-8768-b26341c933d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8cf5044-606f-4bae-b6b5-20f1629b53e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "77bffa01-9a5a-4935-8596-a79453abf3cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbb0f1c-569a-4c69-8e30-48c33f1991da",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1eb6936-e663-4fc4-9c44-7ef5c851bbaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7d38b66-c96b-4005-a8f3-87caed1abe83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3268e657-13f3-4d00-a81c-4ec0c8fa34c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddb75a08-5dda-4a3a-87b0-e4c1b20fba70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c842131-d18a-4ca4-af56-c2f9174d348c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dce9b92-2ed5-4a62-8837-30824ec3fb72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b9bb92-fba8-4179-98c5-e8df1b964915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be58bf4a-7c8e-45c2-a09d-9e0eb0de4e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "37164c56-74ba-4bd6-8a25-ae9b1a81ed93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67156b17-f173-4485-9cbc-0f5d217775bf",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9558bbb8-fa65-446c-bd6b-e22685e231af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e2cd66-eefb-4cb6-abb1-28fb27b09325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d74178c-7d32-4d43-92b0-3a17361614cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b44a734b-19c8-4bca-aaf4-1b09bb15de81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a431fdb-4e82-4a3d-b90f-970e3c609634",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db2b843-b26a-420c-a99f-cc5adf1482eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8964e9e6-5d50-4386-9d0b-a05121643ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4fe489a-5490-4860-bc60-d20fc4e8748f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "20d9723d-6ed0-489c-a46e-e15b0b382010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95915da-8ed3-46a6-96ce-30ffc7e49c61",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86151f4f-272c-4042-8667-f584b1c59094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecaef360-3ef0-4f60-86d8-aa1f756b7a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8270ae-bab5-4e07-98a9-16c8feaa1413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e4a2b71-55b2-40bd-a91c-cdcdbc10aa94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a402bac-afe5-4d11-b43a-e04bffebe593",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42096651-68d5-44d6-96be-1e2592b57a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b138836-9787-487d-9128-8268f0fbe365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111740e7-ac3b-450e-bfc5-280d8d9b2aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5360ad6-86ee-4c27-b784-3eaf60b859a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceab1d27-dee0-4326-9106-70df7c55f567",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2460c7-8fbd-441f-bb53-4680108698f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce45a53b-95b8-4f28-a5a3-2f63244c624f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e1e10f-d599-4a51-ab31-f37e424228a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "20a1e2f5-8183-416e-9bb3-02edb7719745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11cde88-c9d9-46cb-8566-699ac732e983",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b87d69-e71c-4c31-bc3d-7c1d7782c8a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf85104-5bd1-4ce8-9c0b-69606a95a7bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce49d75-c060-48ee-8246-43f19deff50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "323d19b4-0475-4a48-9c7f-bf35d5cfc3f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97219603-ba5a-411e-84aa-a00fc5cb631b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfc051d-b12f-4c39-b08c-e87863217244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "015f3fbd-a499-4c8a-b906-0d8d42de62f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56773fcf-b916-481e-8dba-6dc77e4a9649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82eb0888-310e-4877-950e-b86608587eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "babebf0d-0964-4c7a-b04f-e0f9449c16a4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73764f27-1493-43fd-8602-3763c71e6484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b472bd-ee99-4935-89d3-76d461beffaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d93885-816a-4785-b59f-f7fb86d19d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6de0252d-8b99-4233-b7e1-12efdb007ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ab8a14-5884-45ff-a939-dc01fc195c0a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1206fd33-0857-44b0-bbda-a9dfbd623071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef75fc1-0a76-4554-9416-d79e59653e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af785f2c-1c72-4611-8899-55fde4716ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fcee3d6-8f02-407f-b906-51174f0fbed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cffbdf17-5e09-4372-8266-99ef86bc799c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6e7acc-6693-4ee9-aeb8-130f72724375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c129e2-e383-439e-bb0e-9e0cd25ec962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3148e9dd-6329-449f-ba94-2d6033710bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3618aef8-5b1c-47a7-ba9d-4e796710be97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ae9e5b-1866-4238-a060-fcb3cd2c279a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a592b6c-fd0c-4098-abe7-8d13bc658de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5af22e79-74f1-4a38-82c7-4ef334483b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88072948-83d4-48b8-8787-5d1b8b1b5342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c026dabc-6576-44e0-951e-ca8138ea9fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5d189e-132c-4c5a-978a-6bff48e4cebc",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee4d864-9087-49f5-86e9-12759c730086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46d230eb-9f36-48f3-94cc-5860070379bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc526adc-1d44-48de-b5c1-6d4aa1c8657e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7b447c0-363b-44fb-8e65-732f0034ee69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46989d6f-1fc9-4a69-bedd-b7f8b52f4ffb",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "559772b0-5803-42b9-a1cc-56775ab538b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "950f7470-a785-48c3-995c-c2a5c3e2bf44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366f2b1e-d24e-4e37-9492-445008163c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "718de93a-c819-4ad6-b5fb-2e93b1465f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bfe0a1c-1e25-42cf-b9f0-0b642b520ce0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dad4850-b41b-45a8-97e6-0dad61015d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "103654d3-25fe-470d-bdd8-9e0e9d5058fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e70f789-f6f2-40c7-8f13-c4dda3727d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb1802da-8a15-4f46-813b-543863135369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4ac0fd-55f6-4f62-a19a-e3f7169bac02",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19cf9bf4-6e33-433c-a6c2-d6557bfa6b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a57c284c-2ca0-43ed-8750-943769ea7000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfef3633-d2db-4e66-b62d-3b96b5fa06fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "13b27a23-38f4-473c-905d-6c4daec7541f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa831d8c-eeaf-43b3-a500-6f78e75673b1",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e59cb30-b4b4-4fa5-85a3-0687f6a08bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fdc306a-3873-4d1d-989f-d743435c8c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a507f8e7-e4db-47ab-bf52-517320138ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "358c389b-1bfa-421e-a9c7-e37e2bf0be14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0fe969c-aeba-468c-8a8c-2ce9669e038a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfb2c17-e719-4534-ada8-00d7cb829513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b8294d3-87a4-422c-b292-6368a288013d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fd3fbd-fe02-43f0-bb23-993444cebb3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "eb6d014e-3e87-4607-a4c5-773ae1a4809f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efdf70c-5654-43cd-9543-adc9f9b33469",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9ec1bc-fd60-4d2c-8074-ff74daf85bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9897d1-559d-44a9-a3af-5c0472507d85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4f9fed-c8ef-4e89-9696-1d9a4c83854c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "812fdaa1-faef-4213-8437-43e776f3f730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17559cd5-399c-44bb-83a5-290ee60bbd74",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "340e4b63-d353-4a35-87d6-08c4b95020d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec24bf8e-88c4-4dfe-b9f2-107194e173e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b865285-7dfa-4a3e-badc-c5acdeabe65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7b9c260-737b-403b-9090-0b4be22c0eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f930f16-12b9-4e0a-92b1-1ae9fad71c0c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "254c4718-277e-4821-a12c-6b10cd19d29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4576a7a4-5945-4d9a-a80e-00bc416f93aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bad6057-d6c6-4eaf-81b4-2431f535f080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3593d2c-51cb-4f83-a6b5-58dba31da6af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28440a8c-81c5-4179-9509-56252b576530",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "956d15b1-c805-44b9-a508-15826830e4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b35c54a3-b212-4538-8c00-c2e535eaa68b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6197a4b-6569-477b-a89f-f911cd7f48f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e3b42c4-8878-420b-899e-ae60c6487ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e3907b-2e01-45d0-b957-a31c9ef07f81",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76083ca4-270c-4a0d-b1b6-85417775adb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ccf253-03a9-40ca-bd64-4cb1a0a1a866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63a9cf0-fa47-4111-98e1-ff03d6017d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "07d4ae01-fcee-4361-b6a3-531a9e8ee692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ee3f2b-bad4-4953-8c0d-bd9d07ca3325",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fba727c-a235-4468-a645-a2928a5b07a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0653e34e-4019-410d-bdfb-793f4e3b9cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67703712-015a-4ec1-b224-2e593c6e4ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b3aef94-c47d-4e39-9e90-44df563ef646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df2297a-54ae-43f4-97f9-f796eae9949a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc6ef5b-b137-4456-b0cb-6297cd8f2b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55632e96-62c7-4270-b050-7aa5ba025f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59462838-d5b1-4ccc-a773-e48ab71eac2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "73b7f029-ccf7-478c-8727-e5d80e67df71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b78acd-a2a8-41f6-92ad-dc100608e5d0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb0a32e-76b5-4b79-8ebf-3f1571ba5d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f4f1d7-001f-4a89-8b22-a64469fe1daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea2bf567-6d29-48f7-9136-7502bf8681dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "96acc721-5ac4-4e01-ab15-497ec794912b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6dd28aa-5e5a-4a96-b21f-aa6ecdea3065",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfa9e4f-6d36-43da-8c5a-8d4d773f0693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fed2abb-f3df-4aae-a36d-2a8f4879f8f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "733b5e56-f875-44c1-abf2-ace42c5267db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "059c9fa7-3e1c-4346-bd15-964eef282329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47d96e0-8e3c-4743-be7c-e8d7c7094a18",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c18e8ad-a5e3-4e6e-8d6d-813c7ddf931b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8560b4a6-f667-4db3-9d58-68d3538b3aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d942e0b-c8ce-42ab-a58e-af9557f999bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecba2102-510f-4a7d-9028-d52263e7632f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c569a3-a9cd-4c72-97e9-d2a6134aadf1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5a22a6-f6d7-46de-8c0b-0be7a81bf067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08aee22b-0aac-4674-9766-de60b83d239d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c636e4-034f-4713-829b-8000598517a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1923d43e-c135-4cfb-be2e-9f87317ff0c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e64336-66aa-48d4-aa59-29673c70a5a1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2c9981-de12-427c-a15b-f3d305b1d855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2bd657-bd3b-4d67-adea-56399dc3701d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba1e5f5-742c-4405-830d-d4cd84932173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbb65aa3-ab93-4ae9-96f3-79f47c8c83c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc562a2-60cf-4c7d-bf4e-0a02f6d66685",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5be88b-55d4-458b-857c-1f1a201b36dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30a7d47f-c39d-4684-b303-9cfcbe17f220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8145c8-c1fe-4f6a-a466-5d75b1910a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc86f478-e79d-4763-a792-e20dc74b6981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f78c5b-0c0b-4381-b153-8858e61574a2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00337913-1a4b-4645-88a3-26969a0907c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe2d0d3-c331-4088-84a5-c0b88a5ea8a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ea76d5-5657-40dc-8146-a2abd4dc0d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "059e5187-bac7-4403-9378-603bbde11fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c91d3d7-0ae0-4b47-b1a0-0827214ce351",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "199304b5-d191-4918-af1a-36ae040b5192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e2424d8-278e-41d0-afe6-3b1779011cc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9a7c99-a85a-4160-9fd1-9ab28c2d00e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "547b4360-313d-41c3-baee-406f0dd70255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3aa5d4e-f3da-455d-8954-c151fafbd3e6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77cbe9e7-5b25-4993-a20b-1f8c85616981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99c93396-e87c-4631-817e-c53577a957fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0716eb52-fdce-492a-8baf-2f88d24e91b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a33daaf1-773b-4543-a4d7-fc5797c56e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b592671c-860c-4744-b227-08bfebf793f2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b65ef2-5da1-42bc-bde6-45b35f289db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd07669-6b74-4a19-af1f-730e980c3c76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2b44f1-d045-4cef-806e-32bcd02077ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1a8f4b0-4c45-4531-bc44-d592599bc4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fa3f7c-b457-4aa6-b9af-2e883fca4b0c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25c5f68-1efd-4117-9807-80588459a3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f79def3-b485-4781-a486-98f678f6c992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2313b8bd-6b76-4939-894e-ba86f510cbf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "666ae6d9-f74b-4695-8c6a-f76304f74af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8cff25-aeb8-43a2-b37e-d8ec108a5492",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9f09ee-d3b3-4f13-a47f-3329d90a2023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0541b788-072a-46fc-bbae-aa4d4a8ecb02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e78b60-051f-457c-a10b-7fd773b7d1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "568fea9f-1476-4431-b3c1-866a38730082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3e178f-d44c-4e87-935a-e4430e1afeed",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e95e0a-8f60-42c0-b9df-652fc0f90f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d477bac-bf4f-46ed-bbaa-ec7cb8776e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c695adca-33ac-49b3-bec8-38090b20fecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "856a1ef5-3fea-425e-a4e0-b3856dcaed78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5a8671-320f-4f9a-9d8e-353efc1798f3",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ac1c39-0d21-42b1-9d4d-63bb5f7c5b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8a066e-d144-44f7-a956-a3ffb75444b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10479ec1-1a5b-4592-986b-1c7150350c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "557008f9-6eb1-4c4e-924e-d7f1a9029b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114661a8-e65c-42b3-aa2c-41a20944afb7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd249b3-e2d1-4765-a874-d46fe81edf55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56274d20-e45f-4975-a0d2-f0caa3588e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c648791e-1776-4965-9393-dfbfcb431922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a717914-4cbc-48ae-acd9-3519754a9e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff7d09e-f877-43b1-afdb-8565f486a5a9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a83f43d-5f40-450f-9950-ff8dc911a1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bd9d671-d52f-4692-acd7-1e6e5ad18ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512967ba-25c0-46f9-a76c-5b7ebc593106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17ce9693-a196-4dd8-90b0-e4f65f64324b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb623db-bcbb-4643-b59f-140256feaaf7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91ba46d-b0a6-450e-b0ff-370383fc1a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "095f3dd7-5ad1-4698-9a95-682886a841c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97553263-d17b-464f-b64e-5b8e695d50be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9182b385-b45a-48af-964f-d279f353b2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eacb1235-7697-4e60-b2a1-6ab17168cda1",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbaa0490-8ff8-41fb-a4b3-0a1046b4419d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc82b2aa-78e9-4017-996c-046a0a9e1012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2033577-03ec-48f1-8399-d37bfe0ccc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7a298de3-6e07-43c8-9234-439243cfbda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b61707d4-b636-47ff-9dde-734c428026ea",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c447e53-f40c-4fab-b5e2-caed4125c074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a49f4df4-e4d4-4ace-ac85-ad5ad31d4dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf38b04-f9d3-485c-b117-75e767ef1e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6910567a-9a48-42a0-9ca9-252ad2e7b561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca064e5-a006-4d04-93a0-73fe7896951c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4fe9b0-c0ce-4d2e-b3ea-9b0c8fe553e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78417490-27d7-41bc-acb0-c5aac991b12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23697dd0-78ee-4d9e-b6f1-b436ca2c48e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e4e431f-e59b-45fc-b769-a7eab7f1e6d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91bb66a7-159d-4911-af23-e10c38faae6c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e54e854-bd53-49b1-a427-c7c08c00a49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a66c15b2-1336-41db-a148-ec9c4e7faa06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1095ddf7-c06d-4f55-9153-fdfe89c874a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef09f08c-984d-4bc8-ab4a-29ed226e5e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55dfb7dc-d404-40b3-9bcc-884a9be9b2f6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8dcd4c-56cc-4f62-b878-cb44993ce7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19b2753f-28d1-40da-bce5-8d9e9f290c53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048e47d3-54e6-49ab-be8c-e728c255fa2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd1b563-e386-4a4c-81bb-f8f19f236d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ff5d55-e2c4-4faa-bb50-9f7b4b83d785",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93bb6dfb-985d-461c-906b-e1cdb46308cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a349c315-dbc5-408e-bd14-4e862ccd2d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c92236c-2c86-40d6-b648-6a0489e4b28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "efaa852f-a531-4c9a-b808-2fc4bc26d71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92311af0-5ccb-4682-a0ba-eb8641fd8618",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3fe1600-3003-4395-9344-a77fbb2f9764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a6d8a6d-2869-4269-9521-7ce096a0e18f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db25ced2-af12-4db3-96e9-1ed38406be95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c69802e2-dd8d-4155-8578-aefea5d7f231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f1306e-4939-4fb9-b744-1148bad6337f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e2dd8f-2625-452b-8548-d95615c91456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e8d56f-ff8b-4f25-9855-0e04c1aea69c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1e1378-d8ac-4972-8102-f86d64a82b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fc8fed2e-85ea-4ced-96c3-6b3a2063670e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678b6f8a-8129-4097-9320-c1ab20980af0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba458b1-c6ae-477d-a609-a7f9d03aeedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3673b2f8-afdc-46eb-8a9e-6484e51511c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf82636-0803-409c-8cb8-430e95153b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3df0c131-e751-49a3-ab1c-c912143b83bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6301a4-3017-44b0-9c0c-92528dcaa30c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6324bd74-a674-4a43-bdd0-f81820697b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c77612-6078-4c7f-80c9-6d32888c8fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b32036d-c6f8-400d-acf9-118fa11f27e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67adf243-333f-4570-bc6e-93a1ccb39c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ffb02e-ebdf-4bbe-9c9f-95cc0e6550f8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b8cd23-e798-47ea-a9c2-7b429f501605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a252b1d-6119-409a-89dc-6eee304a6a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55670eb-b537-4aeb-af39-845ba3db9a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f606f883-94e8-4ed7-8d05-9101043c90c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e0de70-1a9f-4cea-a3f2-eae041536dc0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ef0119-87a1-404c-b80a-0b4d29e8f908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca19653c-6c40-4397-9eab-6cde15efe53b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79042fb-bcab-432f-bb3e-aa59b7e9dc43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec4a0bf-a4d0-41f5-b617-63338790107a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92fd0c64-61d6-4d01-a7b6-a87f0ef8a6bf",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f4ae58-1338-442b-8509-27145ae0fd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed75b7a-3017-4658-aff0-2b144f454232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696b02bd-c8e3-421b-b92f-1588023a5a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c93dfba5-7107-4220-9343-d17e4c19f9c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3eda73-dfc4-4a8f-8e52-f405d874da21",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7aad1de-e4a4-4384-b86d-58b9d2d05e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e87a72fd-3c95-482d-8356-afe89a62ae18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f5eba9-ac54-4660-a89c-5fa7e85e6212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "08f7eca2-ed89-4cd7-ac42-c182e25e0d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcdb69f3-215f-4c88-8d8e-12dd4a5812f5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac779b9d-b60b-4335-83c5-1e8dfa45b9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e2c0b2d-d3a2-4123-a4b7-d24d68c7eb7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51e7041-1c5f-4f85-a5f8-0a6353bfeb3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "291b913e-2ec0-4f20-a495-c245ddfeab4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308766a6-28ce-4bf0-b513-58c4b4272b62",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b43e2d9-3f15-4a64-99ea-e080b7cc36fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3153864-d215-4103-bd6e-889a7ee8a8f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0b00cc-4a08-4f62-91c7-5702f0455acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98d30dbd-835d-47ce-b5bd-2d9e43652e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131283ee-b49f-45b4-b2ae-07bd01446194",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "791bee9e-cfef-4674-a251-f6af7c69b1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d1f53ef-23d0-4a87-ac22-238fec0d7e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84843c9c-16eb-44a8-b350-e3abe2f42a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04ddcb69-099e-44ce-b76b-ddaaf7014211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558d988b-059b-4ec1-8d40-557af9179ffe",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4e4e69-d87d-492a-bea1-e291beede08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "138a6afd-4c9a-4cca-a8f8-a3e375e4ef8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ab3c1c-1d12-46c4-ae9c-c4af52945ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69138e94-f7e2-4d57-9b59-e8508e9c432c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce75d1c2-b3a1-4b18-87f4-1d5e5ada96a1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b509a0a-d2b0-45b8-951d-3fcf88a029b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e818596-bbf9-438d-8661-8c8671ac5a87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed98e6e-8512-43dd-8738-46c3d751ac74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "56f3ab32-e498-43b7-8346-5861793c117f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7efdba54-e3f4-4abb-8040-79a32bf7f46f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b936e0f-3439-4478-8803-ef81799a7227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf0137f3-a3fa-407f-a01a-8d1607c9dd53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76c0162-ddbd-4330-a0f8-eaeb0811ebdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd99c527-8da5-4a57-a22c-5924c12897a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd112264-257e-40a2-9928-c3217e368b1a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9dd18b6-5cb6-4ea1-a2cf-19fc54df3100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b36f975c-c185-4187-a4ea-a74dcb0145e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4fc2e2d-2ce4-4fe5-aba9-d2e715b90b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4613c61-3641-4a0a-8084-8bced77f39cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f85e9ac-9566-4c64-ad60-3007d6a534de",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5262c236-22f1-426c-807e-c7c03dd7f6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0644508c-5f24-4187-b76e-d1298039150f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9a94d0-8264-425d-b15d-587afd4305c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad8ae2c-0911-4121-b793-38d709d2ad29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a9d6df-ed41-4219-b00b-573e6a921e26",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8e17b4-4bd0-42d3-b865-1e8d103970bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c805df-c49f-4c89-9ef3-b95dd8ae8687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a06825-61fd-45c7-b2fc-5a21c0e35e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ee79047-d263-4be0-83b8-8d75bfad1998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01668e16-ae1e-4fdf-89ed-43dfcce3c818",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b52c08e-0ed8-4acb-8848-74627385f81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae2946fb-9494-4e09-85c6-01f75b5cd72b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70996fc3-b67f-4e7d-bee4-1e45f5b571a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "371cc780-c67a-4b05-88e7-328e62ff1f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405c7ffd-7d49-49ee-bef7-82f4095e593e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b440de0c-5892-466b-a008-586797ffdb73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271be634-cc20-42c4-b075-8bd1a0c107b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d11341b-f942-4c4f-9259-46d61c4c6cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2ec302c-0614-45d6-b598-6e7114322aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3321f307-6b3f-4157-b989-14a87931d3dd",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bafdb66-4d68-4e12-b05e-3fa08b915f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ab469a63-eb6d-4733-bb1b-4eda23f7e24f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3700b50-c89f-48ec-860f-24a497ab4b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7500e5e5-6094-482c-a568-a3b0f3a97a02"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "35753520-2df3-4606-9b12-8f0b67d853fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6d5ee7fd-d846-41b2-b0a9-b47f7419d9e1",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4a7184-ae68-4767-9741-c02ff29d1346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f344e0a-b17a-4ce2-880a-699c68bb6930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6f5ca1-fd52-46ef-abf6-fe2e1dfebe87",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32173289-1ef5-4d36-a91a-70eccd1fcd9d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dcf182b6-9494-4d3f-9e6c-a949e0126e4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f2ef798-3c5c-4e7d-b893-cc5afe1ad1e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5715a289-fcf0-4bab-afe3-b7b3998ea74d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72a4736f-f2ab-40ff-95fc-8349dcbfea1d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4592ff09-2306-4ec0-b84d-90d66b732fe7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "389a9238-528f-4121-98e2-59e738e7f5d8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bd358df0-26ad-4697-acf2-16ac99626014",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f949c6e5-5b01-46e0-ad0b-a9bbb4f312e7"
                }
              }
            ]
          },
          {
            "id": "fb0ab2b5-03ce-4def-baee-50596749eef4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4b25880e-94fd-4a55-a37b-a6a187a2372c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "4762d84d-bc07-4ed2-9f7f-8b7a215a6b90",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3bfb8ee-eba7-4335-9675-647558e1aee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "58176e9d-4fe7-4afd-9298-28bd48707bf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ed31cf-5e19-498b-a761-c4a363037c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3d8919c-c19e-4320-a4c0-01b988dabe69"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ff8536d4-7a23-468c-b7f2-752b6bc17efc",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "122798f3-c801-4601-ba33-b46397ccee39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5e50a25e-4e54-46b6-8240-bfc6110ce22c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee097283-e867-4a89-804a-d4f60b1fc2ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6621f893-a3ec-4c79-b406-54ece1237b53"
                    }
                  }
                ]
              },
              {
                "id": "7786cf79-f943-4102-b8f6-86781bb3540b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd213cc2-8fbb-4cc4-a06c-da3ebbbd9018",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "44dec491-3de2-4009-962f-710d5e2b33cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5f23156-ecac-4c9e-9303-df06a6ce9e8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "12dbe8b5-3aeb-42c1-98ec-fd0848961a5d"
                    }
                  }
                ]
              },
              {
                "id": "79ce64fb-297e-49e4-b186-3cfc8194d882",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "84520bac-868d-4ab1-90a3-967cf00c5c73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "93b9361a-d57b-458b-8463-f441a92d621d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6fcca914-ca37-4ec1-a009-6da8f9ce8020",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4af93ffd-464a-4dc2-b457-7b889e7bbded"
                    }
                  }
                ]
              },
              {
                "id": "ac0f0abe-fdb9-4ec7-8c41-e0ad84e6b468",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ce06af6-a8ac-460a-802d-518c0a92e17c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "081e9d6b-c4a2-46d0-a616-1a88a1794939"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59b115d9-25dc-4b6c-9e82-b86ab54a29eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "83216d7d-c86e-4bfd-ac38-426403da2f10"
                    }
                  }
                ]
              },
              {
                "id": "e8ddca8f-e41f-4bf1-8758-29dc03660e6b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5389b161-39fe-47f9-8254-a8665b39511b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57f40115-6857-438e-a1fc-67b6039ed542"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e65e4068-ed0a-4ab3-8048-a2fee33ac840",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8dd48117-ad79-4856-8206-dbf47388d205"
                    }
                  }
                ]
              },
              {
                "id": "fc836831-f8ad-486d-bcdc-64e6810c8a8e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "42f63dcc-b257-4ca7-b6ff-a3caf9e0261c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aa22e0e7-80e8-4946-838b-79624d1fb3e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c468aad9-9185-4245-acbf-488f38c31eaa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5a75e7a3-02c4-41f1-af9a-edc2c8d59c64"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "23a80157-f002-4718-812c-08208464469e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "db6264c9-df0e-4be6-a842-29c2d417c6ec"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e382d27d-9182-4ce6-9be8-c0c7be54c27f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "60213731-d53d-42b3-9f80-23584dbdaffe"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cf451d91-9ed0-4280-9b17-ae2db0f357da",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b4d7fe76-8722-442d-839e-0a1f185c8d66"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "539a7e0c-6f07-4449-aef7-6ee03e879475",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "02413ebc-5e24-4cd0-94d3-72e5fc1fd56d"
            }
          }
        ]
      },
      {
        "id": "b9b8270a-babe-417e-b0bb-c2b2e6ae6557",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "12b0a30a-9c46-4986-a9a8-98b7fe556724",
            "name": "Negative Testing",
            "item": [
              {
                "id": "62ec664d-c620-4476-abaa-9527dc563fe7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "255c3ebe-fc1f-4712-9bfe-1d9e284ced97",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9249d48f-368a-4a52-9c9a-7ab1ec7f3208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a783973c-368e-4430-ae61-c55f6edda89f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1cd5c7-b554-4386-83bc-b13897633b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "885e84da-6377-4d14-89b6-e0797c99f2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd590c5-e678-4141-8eb4-4c191665dd1d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b937d97-1226-4505-a959-12762b696aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d3cee23-b0f6-490d-b23e-50d022d37159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d173fc-3d2e-40f6-b3ff-accf4f83e087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "88132af6-509d-4ce8-b69c-d728a28d8048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4f8e29-5b82-4c8a-a982-26e4ea4e9a70",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac3d328-cbc9-4dbb-823a-b35acec9960a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e9dea2-8941-4a24-a89b-61f2f239219b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf97db0-9425-4b19-a3e5-95fb0b08a4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b937fd41-c7d5-4632-9cb9-4478016185c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659d29e8-445f-45ea-9b3f-56592afe43bd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69e17d6-0b7f-4e03-8692-9cb355e270f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0bbbfc7-2552-4099-b733-cdcf4e84e9ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a44ae64-c881-4af2-8e4c-922bfbde7007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a12ed60c-8166-4202-b287-c35fc63ca248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14765d74-2267-498a-a9f5-7805e2153226",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64052a88-1679-44a8-a077-a269ffac691f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b0daa1f-bf3b-42f5-a54d-29d19b742ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87f3fcf-a549-4a96-8597-83756cac669b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89bf2ab9-4cc8-4d93-8fd6-60751220f67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea427976-fecb-4c7e-990c-01e1d25d3aa6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59f17b6-809c-4bdd-969d-5627c1d2f4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19f022db-8532-4b10-85e9-9a9190f20d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9912c327-1a52-4a61-9d7c-b0a425ab7f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fb73320-9e7a-4b0d-b3e8-1caf0a0f74cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a702bba-577f-4521-92df-f3167beef1c5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f65d888-e7b4-481b-a652-f4490dc3f92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9670704-e06b-4e20-afc3-c455ef9447f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7d5c92-34f3-40d8-a7fa-08c8e7ef3acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a5de46d-e128-4db2-9d2f-1dcc8f0fbf91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20048da-5a52-4983-b1d0-6d1cb35cac90",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b66f348-8317-49e1-834e-5513df2dc55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7461cb01-d23e-4633-b2ee-9410429de163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edabd8b-8fa6-4e8f-81f2-88fb155a8ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b95561aa-61f1-4720-bf77-649c9a8fd621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df2be3b-3b6e-4f57-9e3d-c6c5317e59b3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a59b951-3238-46ef-aa45-b18b449073c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22448c0f-8dde-464b-a131-3cdc98c0ecfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17900d70-2c12-4042-a626-f782814f3974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "970a46af-47d4-487a-90ae-9744cd0541ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3a2c2b-f1c6-4dc0-86b5-50e12ba9ca5a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16498a95-4f00-4d3f-8cec-d9519a8b840e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a399a2-5112-4fbb-9e90-fcaccdcdb6f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8692f1f3-a248-4359-bde4-550c2c898f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "090cc817-7f1f-4704-9af6-2e6933f6b47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49dd11bf-918c-45ab-89be-aba187ddb38b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec7ba3d-71da-4265-a811-2a63bfe8475c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cb1218b-f6fc-476c-bc2a-b47e0f4470f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8e1c20-e54a-4d61-8630-70430c710324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "16ccdd45-cbd9-4549-834c-66d60cd9a284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78924790-4527-41cc-93f2-9b22e78cb7bf",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c977fa5-2e97-4d9e-beb6-55e03184f50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453633a9-c7d9-4eac-a630-40092e48e250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024dbd6d-85bb-4b68-a765-e9d64648aba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "70bac0de-c514-465b-9497-9fb96dc76036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "515b5637-5756-4949-ae98-057f62035f91",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8d940f-cbb5-4d23-927d-11b0e15bbe0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f9ae601-f4a1-4636-b828-32fcd213a749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e214c12b-9ced-4b6e-beef-ffce4e90d759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab1c5d64-ade3-4dff-a977-a59af37ba43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917b2a1e-c91a-4992-926d-a0b5f23b7357",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2967233-d4bf-4417-b6d0-0927753bc2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0642251-4bd6-406c-b162-060806d8121d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569cab41-7664-498b-a79a-c138537f432a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "324805f8-1ca1-4720-a4be-e6d6bc78a55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556a4623-c013-4e6d-8df5-5321b60c3e66",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0dca44-6e5b-42e3-8672-a97d247b7d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5177de69-8d66-41b8-bace-5ebf89ef49a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb5c87a-e94e-4aa0-9b62-f54dd109536f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba471137-ec27-4418-bdc6-11733ebf57ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f37231-5ee4-4902-b3bd-429d431e53a2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8048a88-8ba9-4b87-9c36-ea277d6a0207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d7063b2-5b6e-41e9-a1e8-f889094c6179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b204a54a-7de6-4a9d-b555-2f1895b727dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "26e95ca8-c0b9-4233-9c59-dc8dc80454a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c944ff54-bb02-4e30-9b1c-3252f67914e1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cbac9e-443d-44aa-82dd-65b177bdbe22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d5ce351-1351-4539-b0aa-ba0fa9352652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79890c11-272b-48f5-91b6-d3fbb7e7cbdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4f16645-e739-43a8-be84-f6659924e56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd879b4-5324-4f27-b06d-b82b9ff93dc3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "709f0f73-88f1-45b3-8da2-d9dfe4c6ede6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6980f48-16b4-4ed6-bbcd-684b20d1f25d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574b575c-c4fe-4499-a5d3-327d50345c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "329a5630-4a59-4105-8431-4984d4d382b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9edb22e-f1fc-485f-902c-19c7cd257bfd",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ec3800-6af6-4a26-a989-431878299d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02037997-0452-4fca-8b61-2a3ae0cb00a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7b9f85-285e-4408-be14-9dced7bd8cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8845e77a-9a7a-4d8a-be71-4529cd84972b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3178b9d-1eff-41b6-825a-835a02d675f4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c9980f-0628-4f85-b803-1f8a3d12fbfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5214758a-6c11-4af1-a2bb-29e696a1a2d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b37a4af-3f64-4d05-b116-39d09241bd07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b51cde2-1248-49a8-bc09-7129993a1a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c74fbc2-234d-40e8-8272-fa5faa7c3917",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556aaaf3-12d2-4ada-8667-3131f8bcd6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06232028-03bc-4fee-adc0-77bf534fd6a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10973af7-68a5-42d6-b3a3-a71e2d5ffce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb4edfc-720f-477a-8827-620ebebefdcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe37256-b7c1-41e8-9f51-51e32f65a23a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7f4edc-611e-4cdc-a9c5-e7f616504488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97772e6e-04c2-44aa-9c5d-8929d6c334fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95a9358-a228-44c8-bc51-c4a51f312746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78646b10-8bb0-4c73-9ce7-63c8c7e2397b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9263072b-4260-4dc2-a7a3-41a66f87bbc7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec2231e-68f3-4fa2-9ce8-27effbcc4192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a131f1b8-fbc0-4100-99fc-4c0a3d5e29b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2cabaaf-42b4-41c5-bf0b-4907d82ac191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35a7498e-1f07-4c47-9c2e-2d14831428b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57bd631-046e-4e63-99ce-6ed67000237d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b22f5ce-113e-45cc-97c5-0e2466dfa92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ef00cf-81eb-475d-896c-da11b0112668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2b2213-40aa-4a80-b927-970aeeec98d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "816d0f00-f0ce-47fc-b230-b1f046af9876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0cff2b5-fb0b-4433-8241-8df5d53b4869",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51f5d07-f099-43ef-b8e1-1ae3d2d70e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "463da61e-676f-4b03-a80b-727ae6213d4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0d5122-5920-4265-9623-86edf40b7247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17fb5495-036f-4be1-99c1-ee1169eee1cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513e3947-4e70-470a-bebe-93fc14a22762",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e059b92-fc95-466a-9f7c-a90d6c672a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd958dd-9dfe-4d64-b8c7-c87fab9f6e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc9d27b-e97c-4e79-ac74-52540091abd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5031d8d5-9a14-41c8-9208-69917738208f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e307751b-2393-49ef-81c9-d74bbbeeb9c4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13285970-0411-44c2-9643-b5aced93cc8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c33e0f91-039b-4599-9c9a-ff97538f65b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879dff77-66a0-476e-8ade-3a59736b785c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dd35495-cf10-4d92-9d31-c19e6d55ea00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03372ba7-7d64-4ca3-8523-4f083fc813e3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7961b4b8-4d31-46ac-b05c-1a05edc10fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f1a66f6-20e2-441e-ab2f-ec04f8b8dd84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426693a7-b215-44fd-96e4-cebe27ef0e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4df7c9d-1a26-46bb-b7bd-80c65f96ef70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abcfeadf-09cf-439d-b771-bb99a0168879",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da8fc12-c684-4184-afce-61f72772a8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43874a28-80ef-49d3-8490-7d42cf7af6b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08393795-7aea-4f71-babd-a08a40a453f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc39db25-8080-4598-9547-5ef733597a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc89cca-62a0-41c4-bb70-692da358d766",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b526bde-2f20-4aa1-bee9-d03bb75fcfee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27218fdf-e4a5-4407-8bc8-3521ffef80aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60751d8-2e9c-4a84-a36d-326dded114ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "916cb171-c45a-476f-8e6b-e1a7c305ef56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8e2ac9-e125-4071-b5ef-7113ffbdbdec",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66368e9c-13ac-47c8-a8c3-5c541ff2be46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "484f8995-c0f6-4f94-8456-cd362f96ba9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f770821-961c-4c7c-87bc-a5c543b95b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46521d69-8320-4914-bed7-b63cb80509b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b145f9-d02c-46be-9994-3bee957c936a",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a4b33a-dbd2-4d91-92b8-086103bc56b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a0d8f9e-3616-422f-9e1c-9fe064466450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ebb68a-37e7-4b0d-b34f-8d9b7f91acb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "034be1b9-8430-4f55-a5d5-9c3d29073f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7c75fa-26e0-4d6c-b9ef-c9db3ce8066a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c09ce6-9f08-4243-9d56-973981decc3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b84e5f-9fef-4af0-bea3-11771ab52849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b83480-1b19-448a-a9ec-1e0aa7a79d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aa64cb2-5fbc-438a-89c0-5dc5f1f3c5d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e195a2fb-b709-4cb1-b991-d58d3d7f31f4",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e328a2-2854-44d0-be0a-70bdea048862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9718bb16-3fce-4f0e-8583-66aebf0e4b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fd7ea4-41dd-4a4e-b248-4c9385200f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c578804d-2b26-425c-b33e-505040f9c0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9ebe24-1514-4584-a528-df3bd7b4ee38",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d0f38f-87e5-4eb8-96fb-44bbf0d79495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9b7294-e26c-46e2-9e05-56febca8fbd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c140a3-8c05-481a-bf7c-8c600b888c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6a1af81-0143-4498-a3d9-c5e4e4f60225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde4ac07-20c6-48c3-87a8-51ac8d6b8715",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d9a14d-d861-47c8-93ef-54928f1700be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c344262-754e-4579-b16b-67fed5d1bac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ded1f0-42df-44b8-b19f-7b672b6353a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65768a71-4cab-4684-929f-91745b5acda6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c64e6f-cf8e-4420-87d8-25da40cb7435",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62e52af-2aed-4dc6-8e44-218b9bad3200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4604b90-8287-4123-861d-0f4cdf7e3fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593a9540-f4fc-4912-a1bb-98b5d9229900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a004991-33b3-4fe0-930b-28238a22328e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "de5b97c4-3870-4ef0-90b4-5c441aeb18b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b6122222-bb65-4099-bd1a-f5f1108cb38e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4f00fe-c9cc-4e5d-8ac0-c01ad900ce75",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "78329c39-a6f4-44df-829c-dd81937f90a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb294740-0c6e-462b-b82e-6a6ab898e521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "343de5eb-83a0-4c72-acca-dc80b11766de"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f5506e0-6410-408a-bab8-67e87e336896",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "add2a540-bd4a-488c-a39e-00ef7f6e54d9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "68b4cbe7-2da5-4ebd-878f-a39f6d1e97f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0efcd14-79d9-42f9-aeb2-099fd680b688"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d0a23b6-6dcc-4cc7-bf93-01c0e4260811",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d2b04290-e65a-41ec-bf4b-76d4484872ad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06ff4bda-c65f-47f8-a5dd-868bbe99b5a3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "47acb3ec-c6a4-4de0-ba1b-64cf50ec3579"
            }
          }
        ]
      },
      {
        "id": "ccde644b-2569-4cf9-a8a0-39333d72621c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0bc2b807-21b5-406e-a6b6-d5a91c299138",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d22eb700-b9ac-4c4d-8208-f77124a39501",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8900f9ab-c905-4d6c-9c73-f8f7f5c6f9a7",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22e6f15-2587-4116-928e-e28753365e74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f86d86-f956-4074-bf2a-427691e02f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48027cf8-944d-44d3-b65d-23f4e58fcba6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06fcaec7-6827-41be-8029-8b2e1f979bdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a67b6a-daaf-47a7-8fb4-683b543e21ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79dcc71c-51dc-48e6-b45e-3465dc026ea5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b11ff0d-aadd-4c38-a59f-95878d78cba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c34d3f6-f5e9-4a27-a801-f981c3b2a76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042c529a-e72f-4b4c-bdb3-ed0b6da1108f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "569941c8-b81d-4d19-b755-24da405a3907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc2248d9-fb32-446d-94cb-0b97bac53e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff81b86-d1c1-4ebe-8558-200178f48a67",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd99ea7-814b-4375-9da1-460e06b47b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c65528-3054-4509-9173-3e8dc37597f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8340b028-a0b8-4511-95d6-024669db882c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f1f2b9-f6a5-4944-839b-6fa55399fd53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1263489-4b65-4c2b-a62b-766e4effe4c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ca509e-8591-4f67-a74a-7677a50c5d4c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc529ca5-3cc9-49f1-8cab-9df317da9a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de1a638c-67b9-4f40-9633-7de0a7899044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "914c6704-d67b-48fa-8a5b-349b7cb25a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cfb0714-33eb-4622-9c19-19c8179939e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318ac5ce-7b77-41d2-b0d2-b10caa66d75f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f28c145-256f-4175-a240-391d5afa134e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deafc685-12cf-46a9-b127-ba4cb1c1b8bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69487321-919b-4376-ac98-1fb07557c6ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "365429b8-2758-4a30-8e59-08e137d61a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f570ddf0-a656-497e-b9ac-e122bae813d3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02ddcd9-71a9-4048-abc2-801ce341825d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e51076c9-e5d7-4cb0-a73b-d509bd81c3e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b92439-358b-4a6d-a7a5-c73e77a14405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2915ee1-e24e-41c8-90e4-5e43a7792102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184f4000-1b29-489e-be9f-521c55afa556",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6a2909-7594-41a2-9299-2f2b4f1a07bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d86b229c-86fb-419a-a311-ad1d8f99d6dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de9f5e8-ae19-4742-96a9-3908a9200b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfaf1d3b-a911-4978-a949-6f7b40b03c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c6c030-14f4-4fd6-9715-0e93c3a4b818",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0597319-0361-4c5a-ad12-cdc4108e40b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c9e27b-46fd-4051-8f2d-dc07eef348f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03fd46dc-c276-4275-9010-9d20ab5cd16d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1408fd98-5878-4f8c-8b6b-c14802ea6e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded2f004-2687-4caf-8c11-233f5008c598",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86076f54-7ec1-4420-aa07-ad8529f6105d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff96a62b-a3f4-40b7-ac48-cc92d34066eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f919377-f051-4895-9478-d06d8c83d84e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e52b2796-929c-4269-887a-b7cd41c34faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c36e906-69ae-4102-a5f4-315d1a290f1c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b0b88a-8d7b-4f91-ab50-9fa002c221f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f05a350-86d9-4d7f-aed8-630fe29f2b38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63323557-c798-431d-b116-84adea4a2ef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b9a7aa-d0a8-43d2-818d-dab01b51d0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849c9947-189a-4128-bbf1-4b977b202825",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884fdeac-3340-4517-a80a-3a47238dd935",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11985354-6ce1-4557-9977-8e394fea64b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6b428f-f877-4bc6-ae9e-f1f920b8cf5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a381b5cd-bdc9-44e1-8e4b-0d5760a9eb38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe4e60f-ca20-46d2-ad12-7468de01b27e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819b8002-a126-44d5-9e6e-2f0ca2145cc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60cefcda-0ab0-4eba-acb1-7f4ccec24efe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f524c2af-b1aa-405c-9dca-a239f2f85e84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51eb7e48-9be5-4b8f-a347-586923f8c885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38457cc7-31a2-4190-af72-13bcbe81de28",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0508b5b-738b-4d29-ae97-31c0be6f1c71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74083571-657c-442d-a143-3436f3d6a1a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1f1314-2632-45ed-9207-2b8694b72304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dcaeef6-bc49-43a0-97bf-46b57087352d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b78209-7dcb-4bb8-9e7d-8227a76b2c84",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06620358-875a-402f-bd58-ef2b1d9f9190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a38dbdfa-3328-4065-88c7-e9760c6f1842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0bb8cf-94e3-4e6a-9199-47766241c4c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c72805-cf4f-41a1-9d64-198b840feaac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29e1cbb-8980-42b9-a480-982a7045582b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d1b835-75c1-4856-9751-39736c2fed74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "338dff0d-be16-4e62-8a16-dfbcd83082ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "700d4bf1-3447-47c1-9403-f0fbb31318f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6229e4f-113c-4225-a350-d9e81471db2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e367ec22-1f39-4a15-bfd2-f20d4e9d495a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cc6c5e-0a7f-48d6-b76f-36b85cef107d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fdf0bd3-badb-4cac-806e-3bc8e222a520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcabc393-cf44-4e65-aef9-28bd4076a18f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7303e67b-5fcd-4317-b165-11eb5ac606bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd4e28b-ead4-4258-afe9-a6144454ccbf",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ee8ad1-bdbc-4064-b432-61a12d45ee0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc95f6d-424d-4130-93e1-f28f362deeb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19653f17-9e79-4732-83a0-90866a359938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69b544c0-27ac-48fa-a7bd-026e70cf9431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f829d24e-d263-43bb-be05-ca3a41b9a9bd",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a875252-322f-4c87-9aa2-95214349c533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3984a2f5-a66d-4021-8ba1-1210b4d8ad21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6c73f7-a71b-4b93-8daf-cf294ae80e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c57c2641-97a8-4633-81ad-3968920bf936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df84c370-e940-47a4-8e4e-b3315fd268b6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e377bcfb-a171-4718-881f-8292dfb80f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f14c7de1-9644-4355-9fee-783b528f7f69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0cf581b-0e3c-4ee3-b49f-1db09b6b42c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70eff2fe-ae51-4ead-94ec-b441b17bd362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2adf7a9d-22fd-4970-9f55-c485068964fe",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a590b2-3b1b-4d87-91c9-c597c5b1ebc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b40491e-c403-468c-ad62-ca81558b3e1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4472583-7aea-4bf6-822b-717b6aa2a4ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89d1e639-50ce-4090-ba28-61bcf8f00225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d73e0d8-0996-4f8b-a07a-d3b730fe6431",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d673591b-0584-4777-99e0-42cb5e97973d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c64d30d7-b840-430a-b439-c8314392f74a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84818d9a-4460-4b4c-bd28-34904ba57f81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc218e05-6fd4-4efe-a409-bc6413329e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73a1c4b-6cf9-4515-ad55-4b0f8d44cbae",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c41af54-dbd6-4c5f-b858-2814a00d9036",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ab39ab1-70b7-4c06-aa54-4694cd2f62e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2700a534-542c-4026-8b5c-7fa8fd13751e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee7d45eb-0ed4-474c-a481-bf860c85da4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1bc9ec-7ab5-4135-8240-6a242c439876",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3af6297-0f81-4950-b797-91923b3d3570",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48fdf5f2-efc1-4dfe-b0da-fac734385af6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3cb5831-2740-492c-a1da-869245125587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05948ccc-893b-401f-8e77-1788ed7b247b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b77e0d-c5d7-4f62-96aa-02948ae24fd4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269cdb8c-70d4-4d7e-ada3-8b424e2492e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99e42d1a-c93c-460e-b833-dbcb12f6bcc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f98841c5-a35c-4ba0-a4cf-ecb009ef1a7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "787f9b89-a1cb-40dd-82ee-b5f0968562aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb0dc803-8231-49af-b365-c0c9f38f6ded",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb09f284-1475-4753-aaa1-8053691a2b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b728d015-d6b3-4d7c-b3d8-7968f3899a26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df7c394-da24-4166-ba4b-f52d389aa2f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03cb784e-20b9-4b25-94b6-75b76e7d7cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912083e8-bfb9-465b-8e54-270601f7046c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0f8633-9532-48a9-88da-58e07ff36922",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8999ce87-0e81-4302-bc56-5615f1c34dcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92009c89-2bf4-4cf6-ad25-681a14b2b72a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d44150e7-77d0-4c96-ad03-5a6deb6e6a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a08f47-f8f4-4e64-8541-3df466f2e854",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a05db97-0722-4f92-96be-e87ddf351375",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d760175-3445-4e8b-8e4b-a21fd6688af7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0973f97-8b28-489b-82dc-a77adc6b4384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb0dc4bb-6ff8-4b1b-9f92-0d14694f3ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5fde40-5b0d-4496-bed0-69e262e1bba6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0131b6-23f0-4364-af4e-b1b17db0e7c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44b80194-57da-4d6f-82b4-c570322e00a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7a0c4e-5400-4fe4-8f97-1788d0e0b697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a82e76b0-489d-4fd3-ae3e-880b14dcb540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feda19ae-296a-4e59-a3fc-4f1f9d24cd72",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b897711-3ccb-47b0-9af8-b48f30e3f4a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d77880a-d641-4f4e-93ad-e330d4c01be3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9c7650-bda3-4a8e-8d17-d99d0f84ee3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92f5a22a-8fd5-4453-9940-a033e85185d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee3b71a-1fe4-4f81-93c3-2d6d802c7956",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b797036-1412-4014-95df-913c928efade",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4032c233-6533-49d2-adf1-4503bf9e9184"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d092c71-df90-4b89-a2ae-3a6c2ff29fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53755e63-07a2-4278-8e8a-107eeea39dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89713b74-8ba2-4668-8665-2908a8bc7285",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16787d36-5958-4607-845c-c534365f4acb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a4fca7a-335b-4006-ba24-875316162b0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0daa9055-6863-491a-9ddf-db1dbda63187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adbcee5d-7e19-4af8-971d-d79474ef7004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99fb1fb4-0704-4a27-8548-a906e3fd0887",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f74bff-fd22-44b8-9293-8cfd1afcd628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "151151a8-1c28-4ba9-900a-bb1c1526d662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43303d4-a139-455e-b31e-6fa17afb9f43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a2af686-735f-414e-b797-b74be6f48a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f01902-f796-4592-a74a-237f240fd35c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4e612a-0d19-4d6e-ae5e-b755d9b19023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1235ecf4-b686-4ca7-808b-9a6b8d9029af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8101b517-6e01-4fe6-9d1a-71ce5c12d102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b7786c0-fc72-4bdd-89b5-ef8d7b4ee635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cb1261-8364-4cb4-bac5-90ab7084c491",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5042eee3-244f-49f4-a85b-4539326fda54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e024f8d-0906-4fac-8baf-02129681ed9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8b2e59-8883-4743-b674-f087a5e3180a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cddbfd5-f710-40fa-a93d-c36696ce8114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f45062-29b6-49f5-a357-a451f8488743",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958c6e2f-3522-47db-aed7-c4134413ca26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de9bd2d-e4a4-45a5-a165-43dbff22485e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0feec9e-7c99-4495-9e00-65969b9afc8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb265cb5-9bf3-41d8-a267-7fa4ebad8431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b969958b-fd12-4560-a7f3-a2b2156f41ca",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e166f6-f838-408e-afb4-8cb374434301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24300819-bab5-4c53-9684-76854cdf09d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02eef2e4-267e-4bd5-a353-88b0a260eb56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc32a02f-6485-4f46-9ff9-572108a81afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da2554e-0cb1-4052-b7b3-8c90c64330ab",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1457c15-760b-48b4-bdbf-94e7e4382996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b34f6c-a1fb-4f64-93b7-bf431219bde8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aef51bd-fb4b-4f42-b778-352ae7c856f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69d2032c-87f3-4e81-9bce-40ff9ac4be04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4344cbd6-421c-4426-b2bb-b7378c2315f0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13341b0-d698-44ba-a073-ed8d63623fb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd1e45b-a4de-434e-bd39-145700f5d4ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79d9cba-b5af-4451-a723-7f23a325393d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55848428-70b4-439b-bb37-364d89dac23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c05c20-69b4-4295-9faf-9c1a53859de2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b28e77-8d7b-49de-aa31-7c856342744e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a07adb96-c7e6-4488-90f4-52360b589885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bfb0e5e-9c7a-4039-bdb7-0fc88db1a444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a1977e0-a96c-4a37-892e-a483e162e9bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "655f60e6-1716-43f7-ad06-386db1c8ed7e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a886620b-0de2-4142-8ca8-bba99a1964e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c60da87-9e7b-4d2f-bf24-0e0572ed018d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e74641-3d72-4fb9-96ab-e5daf92c133e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f4c8227-6f5b-4941-a51a-63efbced6a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d680b518-064e-4468-b6cd-051f021da527",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031639f6-0aa7-4ab0-8bae-a3fe1cd6e281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00811c95-225e-43c8-8a8b-ae463033df2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96a0dbf-5754-40c4-bdda-7317b0e59ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15e4de3a-fe84-4a0d-ac21-dd9979919740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0f1c4e-107f-4621-a5a2-e74150e3937d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88075bf3-7b14-4043-9d22-cb04deec09fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e096d0ce-4a09-457c-a97a-3ee922a751de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5992edbb-8097-49df-83f5-e7bfdd430e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a53addf1-822b-40b1-82cd-70945ea91672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586d279d-ab21-40f3-823b-a80185496569",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413f5373-eeb3-4746-8380-db4d9a713443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e5d9093-e55a-4029-91d5-9afd7bfa60a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd20774-fc69-4450-beeb-4fc3d58255fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6acbbd83-4514-48ff-8bc0-0a1d956e0758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb394178-c316-41e9-93f0-d05f76e200da",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3bcce12-642c-4ee3-9294-a58cc7371249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "557378c5-230e-4059-aace-7dcbead18875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c73a9e-5f8c-45cf-9a24-9154d3d6fa09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c401bf0a-9da8-48f4-bbae-035c6e4a7be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c640fb-7cc1-4375-9435-78578d7d34a7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076721cb-b72a-4284-a542-88868afebb0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f91659dc-da2a-40fe-9fb5-a7ba04b5fb17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9fab8e-d4a7-4046-b3e8-89e002d47c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16f3987e-016d-4903-8689-c20044f38dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12afb015-3cc1-47f2-a939-40cea3d916dc",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a8a8c9-8dbd-4ed9-aeab-6c1159e929e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f363d36-342e-439c-b503-7ed05f2e2d23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9607bd-02bc-4091-bbf9-9a558198e295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cdf579a-2cc9-4e2c-9b1f-f7b81c1672f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500f3cec-5afe-423f-95a9-18b3765e7c3f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83430191-6766-43f5-88df-f6d057c035a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae0c6d98-a258-4856-bdc8-ff173a17797f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "884ca541-f4da-4c72-8408-595f242c23d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54ac9ff7-ed25-45ee-b5a3-41571692da12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ae3024-f4a2-4c6e-8510-5f262d8af58b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5fe580-7dc5-4343-9537-9200177c63b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f736cd4-eab9-40e6-9261-c182f31be76a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dddf2f47-c73e-4020-b7f9-5b892c80d93f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4a7db2f-f7ca-4c50-88f7-670a498ae2e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f05aad-e92b-47d9-b992-8d9c6255184f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e2624e-a288-47cd-8b80-6eb475ed1e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1d60690-dcd6-419b-a8e1-90711e926685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4138cb74-446a-498f-a8fb-3460f14bac40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22642a1f-c490-4bba-a5a0-411d73aaa365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93115c2b-6928-43a1-82d3-5af363c162ca",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92001845-1173-437e-8168-478282475def",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3293fd56-9bce-47eb-b7b0-1580ae38c20c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18bd441-44ec-42c3-aefe-9fb4c8c15c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71139854-2776-4e0e-9f4f-065e4f6d2f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5cfa932-4f81-479f-a062-82bb166250be",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74da089-a91d-445f-b73f-68759954943c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f16b59-30ca-4a0f-ac16-d12354dc99f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06900a2-dbec-4020-912a-571d4b98117b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c2c6ba-c7fd-44db-9b73-a82452b34fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7234022c-284a-43e9-ac79-499cbb5d8841",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc10c4a1-d868-48e2-9db4-3eff8b8f088e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc7432f3-c6f7-48d3-a3e8-f0915a743ac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc09deb3-f03f-4f8b-a99c-b2d43a7a6afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ee7b9f5-51f4-47ac-adf4-13fdc2a158f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5906f4e8-84c5-4610-b8c9-2554f20972a6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb496394-f2ae-490a-a634-1a6625900604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a6a398-2ae9-41ad-83da-3f11aa0f9a78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9344db8c-92d1-40bd-b2db-ce369123aaf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56e30408-1df0-4023-ba07-686f7a4f9ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0742708a-15ef-437a-8e21-5fab0f0cd56e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e104d01a-45fa-469e-8218-d4fb062c9b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d1d736c-7959-4848-87ef-78c1614ddb48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d32040-7ba2-44b1-bf22-a645a7c3d2f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "927ce230-886d-4f1d-aeb0-b3aa531533da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3044ac9-e30e-48c0-a5e1-3a4c77f4fbcb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14164509-e091-4698-883c-170decce5213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "872092f4-a47d-44a8-9fe6-5ac156ec78d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c966fef-567d-4a0a-9594-798969bc96c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1985d26c-0936-4841-a15f-de8a9e56b72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4dd4f4-145e-4223-8202-3151928d780f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cabf67d-1d20-4d58-9cee-0ed7c0560f52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73408952-2569-4466-bdd4-ae34f277bdac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1bc779-54a4-4410-9aa8-91550908fc1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d53577b1-1d39-4019-bce6-69de4a2be021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61754c60-3c84-4fb8-805f-9325a66130de",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b9443e-6cfc-4b52-8fd9-7a859458810b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae14224-d5c3-4208-8680-f4e853c14bb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9606f70e-7aef-436e-8799-c1904d6135c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73cb5ffa-1f82-4c58-bbb8-70879c80eb12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1c2986-a5fe-4a7e-8ed7-d1d2b3b5a845",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683a0944-7a84-40fb-804b-dfd0cd8a2744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a024e778-f282-4bd6-b661-8db35921bc9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c3b1a2-f50b-49e6-8756-61c62ea486ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2265d4e9-61e5-4257-bb07-378cc29d0353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020048cf-13ea-445a-a975-3ec17d4f23a3",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a61737d-7cb1-491c-8071-10f0a342db0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "959eea10-a340-49ba-9c56-dd9c12757298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a79562f-944b-47ff-aa30-b6ef5521324e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8868a5b8-d44d-43b1-b651-9873bfaab94c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c791062c-a557-4768-9f26-52aaa47da164",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d1fe84-9c57-4b0c-9136-7f5b5933f5a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af0cc258-68ef-4f11-a18c-8e90a3e4f3dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13216ce7-f3de-46c0-89dd-c161f409d29e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9fe814b-5427-435f-87b7-c1a82a69422a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4fb3966-0941-4ad0-8ff9-0fc593f4515a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd8a6de-eec1-4565-8725-6e80116199c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6204dd1-cedb-42e0-9a89-52fd026f760f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61b82a3-59c2-40a9-ab3e-6a9616038840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "200d9650-9aec-4145-9dbb-c7f8b50bc9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd08c031-7598-4cb0-af83-20a60c4a17cd",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601605ed-979b-49fa-a9f3-bb8718d976f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb3f4f3b-b675-4591-b01f-871ac9aac612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7a3a83-6a09-4919-a091-f2aca84ff9a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de21d37e-1050-4b1a-9a31-5a0620073422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0539c76-aeb4-4753-8596-b884746f7f55",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd593748-727b-4612-95e3-389ec853b030",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d78e966a-6a44-4395-b16b-bc3e051d606c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f734dd6-1aee-41fd-bc92-12eeae42d25c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "262281e9-4278-49d9-9470-614e75e5a7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7453215-31e8-4d52-856c-d8114f40b608",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2246e39-3173-4d65-9e3a-2e81c9e7943e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ab950b2-3602-4500-9567-04115a4cda5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aedfaa51-b57a-4e13-83b3-f556c1349e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f250a3a0-c96f-493a-8c8a-a35908a95c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b142ef10-3339-4f97-88d6-c317f8d1c16b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e34338c-7666-4723-8804-cd3ea51e10d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e359be7b-21a4-4891-b42a-a988cbcff007"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6264d844-3cf0-4067-9d20-a3c1dd24d237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aede92a8-2178-448a-8e75-44633fd5650e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31f54de-400b-459a-ac17-dc3c6b1e9dd2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05d290d-b9c1-4997-b113-3d31c3abba89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e5d7500-b539-4a7d-b267-91d83818e9d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e507a7bf-167f-4478-b4c6-d64044488a9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba51e0d4-fa64-49d3-8730-88b6674a9b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8ba593-f11e-4775-a430-d8044e43c972",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1803e9c7-aed0-48c1-bed5-f308b6c9e9cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f44d3d74-56e5-4eb6-91ec-1fe6f0145cac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c2da31-ce7a-4b31-a8b5-643f1ebe8320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d5fd4e7-609e-451a-81fe-519599dcbd41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ae876d-1e4d-4b29-b2f3-ca84e30a0843",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095401bc-6378-489e-b796-62b4373c4c9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "940548c8-d884-48b6-9c44-34f2baf075c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb61219-d2d5-4f2c-beee-9fd219f3e873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c47e1e3a-0821-437b-8e10-39df4cd552f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0c9d05-d2de-4943-8233-53ab8b6c89a3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad3fa01-7ded-46fa-848b-e7e3b3601f3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a25c2cd-9f12-45e9-83cd-99bdbbcd2b17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb63a7e7-1716-44d6-b5c4-1f55e985ddb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f8b3c6-a109-4ea2-9f2a-a448012b1a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de32b54-d9dd-4053-ae70-a653e5a1fc73",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e95ff6f-6d2f-4637-9734-7a91492729d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a888f966-4845-4e4d-960a-a2ade1fff369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e9b6c0-580f-48df-a70a-a6155eb20a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab241790-6c3a-4f6f-8dd6-92cb9609064b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23e0d24-8baa-4764-9af0-62797e552b65",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101e836e-33d8-4c90-960f-ef3076d27f85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a168c859-b13d-4c2b-b9cc-bf911101f7e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56fa637a-a74c-46a9-a069-4cdd098bbbe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a4bb780-0fe6-4253-a8c9-214fddb557b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b78150-06a2-453e-a242-ac06c54014a3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8020ca1e-e87e-4518-96fc-506e064c79a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2513803-1189-4aa1-b576-a53f598d54a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c4ba1d-ddc1-4111-874c-21af5f6024f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "049e534d-9938-4887-a0c1-d0c8d852b9f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4126331-5bd2-4d02-8ca5-346073e5474c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75341f64-8974-45c9-a9b5-4934146d40e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f26372bd-b64a-4de5-b079-6287b569560c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7d75c6-bacd-4a09-a222-ffa019f68bec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ba6d88-82ea-4418-80db-85e0c41a0a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9bb7eb6-e97d-4a47-9edf-d0d6a5ce106c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7838dd45-00a3-4856-8d29-c5554c7d876d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "152fc371-8031-41dc-80fa-b7d99039f62d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0491580-b8f4-4db4-bc1b-febda5265ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5d4e023-d593-47ba-aca6-2a08f6e18a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ebae5b-033a-4118-9d80-22976318c9d6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d843bc0-f8cf-41c0-8220-a876aae5beec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d7d4324-d8ff-4699-bb71-62649ba32be3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5df734-c4db-4793-8aa0-1f7866e13836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "730ad57d-dd53-43e1-9e85-87034c4ad2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ebe6f5-cf23-4d60-a234-e44981124020",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c911588-7766-482e-8127-1846bbbbc278",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8c20ce1-1efc-40e1-a4d8-58ca7e41fba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adad45a1-e092-423d-9654-384815bdd95a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76b27605-6bda-4c92-addc-46f8977b2d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b73a4f-3426-454e-b7cf-c2f2145b51ad",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3783bce-4d16-4af6-b087-784edae99a49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14cf89af-e86a-447e-869b-16a07895c757"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d965220f-05ff-4eb0-b516-800d1b70e3e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b991005-916b-49b7-9601-0839ab279a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7169dc-9e0d-4041-9b9d-213205925b8c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28d7449-f2ff-4844-834e-d89a01a5867c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd05c898-9aa4-49e7-804b-70625d6c0121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf78269-3485-4c25-8d16-c95972918eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb85886-6cea-4603-8bdf-e3b06efb8100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97aed380-fe9d-4b47-8528-d9fab03ab3ea",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f7e221-2021-464a-89e2-89c1085d3ad7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fd4b84b-912e-44e5-8ed4-b8556e940d7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced04617-3d16-41b5-9916-1c5e8031eba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04042ae0-dd16-4e63-8284-c22a01180435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64487ed0-bfd2-499d-b030-44613a2c2d48",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d4e2fa-60ee-4d3d-9936-a0cd50dd5761",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2520ba6-c762-462f-ba1e-d4c396d6ea78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "574301ac-59eb-459d-886c-e393955be714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5856aaa7-f25a-4ab9-90f5-50811b54d2e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e07f8e-4bb6-47b2-946e-56f932af9163",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6214c1f-d058-4d6f-9e52-d10c77ce2408",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "528e8102-0853-43ec-85a9-ccc39e1aa467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef69e4fd-e421-47ca-b9b6-b79761de44b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce82cb3-c15b-4eff-b5af-4bffbb89052e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edc47ad-cc04-4a3e-9336-b51be16ba0fb",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3700db52-6308-4453-90ec-dfd196da3789",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ceebd74-1735-4491-994c-eb5157577c3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65022210-7360-4124-9719-2eebee855c3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba523285-48b7-4dd9-b68f-4bc53ca7daa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c871b81-8771-4d93-8cf5-58003b913eca",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "888ac7a0-6673-451c-b9b4-2a3a0dce89c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d7aeba6-196c-4aff-94ef-36f27a9f204b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84b5460-80cd-49ca-ad83-a75e1c2a3f3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde6fe9d-eaf8-4dcd-b29f-e1f8cbb0fee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec242e04-2493-4422-9542-ee1d84284a30",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb23f381-c252-4b0b-8b74-62d0bd0c198e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b879d1ba-2412-4f8e-a07e-ba0b49fd27c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f886962f-c7fe-4ebe-9026-9c6b78b9af8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f6bc2e5-1659-439d-ae73-7d62ca396846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5664bf17-6102-4c2c-9bf7-3284634d4f4d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6a1e80-f2c2-4ca1-b120-c256cb643bf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abd9c57d-43a5-4f18-b34a-58539cfc04da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d80078-0d05-46a6-ab20-67700b6bf264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4d0e171-4b7a-4cba-be06-7f07bbe2ac1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b082a09f-b8af-4817-b8b8-ddb0a6cac29e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700d3e34-44bf-4a9e-bb60-01eb57a2fc56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14890bd4-6157-4e57-92cb-eee49cfa2341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24594f57-75f8-4703-bf7a-b06d74fed5b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc5d7e8-1a1d-43f1-9c92-99caec9b08f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2518853d-9769-47c5-84ce-ef14f8c4e4a2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3f63a5-cf40-4c20-8985-deaeba00d641",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d96085ec-bf68-4803-a6c7-4486d3271597"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d0174c-c04d-42a2-bd34-90e1c4578650",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0729211-bd00-43c5-9a07-3373c8fbe1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17b8914-9a63-4e37-97ea-76151a0a2c57",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533992f9-db82-4bbc-8dbd-567e02c31368",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50bce482-a708-49c4-a478-c983924786cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8972872-4744-44ce-b0e7-47c170904645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8402dbf-508e-4b65-ad9d-1f1a0c00558c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67318496-3b91-4dcb-97e6-1781406ca43b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99311059-0771-41b2-85cb-fc966e005067",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54dd646f-c708-441a-9bc3-4070782dd862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b6b605-3f43-4706-8059-51c4b593d189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77af30bc-58b6-445d-b381-983dad3a437b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5b9ca9-de04-4511-9f05-2dc0e5159da1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ba30ba-59aa-4a65-9456-a7036995097f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cf6719e-268e-4562-8678-a38f5dcccf51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc461037-1e1b-426e-b50c-d42d6a2e0b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee53c8c9-bd2c-4a31-8e27-838e2698d630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52febbf3-ee41-413b-b595-2e038540f864",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f86319b-1cc1-420e-86b9-2e0d21897d86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a2d9713-71c9-4e80-9eeb-ea724024aac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3816773-d187-4be0-b2f7-6f945fb2106c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57d4b94d-56c4-41a2-8d1c-368a3fa11560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0fe7b78-b7c3-4513-a753-41aad67c2f8f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0040c036-9120-4aa4-ba4f-2b6e3bc177af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69553375-d5e0-4efa-8eb8-9b7bca0a2d1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1926a77e-1e3d-4345-ad72-09852ac84f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80adaf14-9e7c-483d-a04d-2466963da430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93459e1d-5f9e-4791-be9a-4d2deac06eee",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0907b0f0-5dd1-4722-996d-3064d8d439e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3ec5b2e-3cdc-450c-a487-1770ffc752e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55140440-b449-4ef9-b66f-13684bcc17cf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a21e85f-e501-4bba-b8a1-e3c19608c0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca1c597-1823-42ae-9f8c-f8e86a7168d0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b7a30f-cd5b-464a-b6d7-07199eed0471",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b621767e-669b-4c91-94f0-b614b27557ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee956d87-e255-4ba5-842b-6749cf759477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b2f8fe1-c83f-4191-bceb-8edc08176856"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "980ab434-068b-4ffb-b055-9703b6ad24ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7b90689-b24d-4cdb-91a4-3c5e003d8651"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c004ad85-1b89-4ba1-acc3-63aa107078ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c4f0089f-f23e-449e-ad91-a1aace79e192"
                    }
                  }
                ]
              },
              {
                "id": "eba37329-ce83-4df8-aebe-62bbc271c27a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c515f769-efeb-44f0-b297-b482f387696d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9843525b-a7ed-43c0-8174-1687e3d873e1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3122df05-aaec-4058-bc13-5d4b2179af77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7818e924-ce2a-4a8c-bfa2-1f2266963635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a21a1dd0-9bc0-4ba3-a55c-21fb47173133"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c38848b9-dec2-42bb-8142-fea040639363",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e8a58e4-9205-4db5-a1dc-0f14355d8a12"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d037d88-e3ef-4265-a57a-993d8af29413",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34b791e5-68d6-465d-ae6e-79d11a0bbdf5"
                    }
                  }
                ]
              },
              {
                "id": "8be67930-343f-4a49-be71-d5edd79b3046",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "674fdbe7-87d8-48e2-95e7-72412b344329",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe9def7-1b98-40f2-882c-cbe4b830f8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d80441d1-a5c2-4272-acee-68e2a57032c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80de0da0-5fb0-4afc-9224-110b2cde139c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6ef0807-822c-4657-9000-da22fd8c82a4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4b8770ea-b5c5-48ce-ac53-cf2c76afd0b8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fef6a59d-bba2-4f0a-82d3-8b489c368fdb",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e750520c-18cc-4e43-b60a-2a893576d21e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bb008a2c-a5be-4d40-977d-a5411a3281b1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f205f9d-71ab-4adf-ac87-e886fe182545",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3242959-df19-435f-8319-a2c9d60da945"
                    }
                  }
                ]
              },
              {
                "id": "7a9d39ba-530d-4788-8693-784893449548",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "454c7f0e-6302-4116-89ab-93139ac12d97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5b2d501b-ce94-4aa4-b080-e4fb687dc7e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "672f2949-548a-4083-99b4-4bb00091dfd2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4641be6-404b-477f-9844-b73aae54a35f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e034a8cf-e978-429a-bd40-43fb24900d53",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7a9b587b-0815-4cd8-8815-eedb4f20d95a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e376df9-db53-40b1-87b3-146178a41f14",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5ee6d4a4-ce70-4d0a-8f95-79ce995d053f"
            }
          }
        ]
      },
      {
        "id": "470b70de-49dc-4620-bf57-d2d9f8d3c899",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "518e100d-c830-4c1c-853a-4abc7d13c6f2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "add17313-742b-48f9-8b3d-c311d0253a3a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8eeecceb-e613-439e-aa40-4613a7aff805",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a928b0-8acb-4602-b538-a4e62469ee16",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "663f8444-2507-43dd-a907-fc020a000639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7ad8c4-9726-4aae-b9da-15789b27a9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "712adde0-b8cf-4a35-ad6c-4ebf635b7c3f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "886303ba-ea78-43c7-9af6-e2bf8c798e62",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4abb6d8d-b33d-4eec-a586-9e6bfbded6fe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fc7dc96-c8e6-4831-9139-9a13676ec123",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f9d0f4a-1850-4cf1-a192-ca962090a517"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e6c16f5e-d7f3-4010-b6ef-927443dbf365",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d90acf6b-1f09-4407-9fa1-5a70c14676c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ffd0513-3ef4-4d3a-b4fe-3bec07c21b0c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1092a335-b33d-447a-ba7d-e5fe3dfac2f8"
            }
          }
        ]
      },
      {
        "id": "766eee0a-8deb-4882-8588-4bbbcac01892",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "188bbaba-e4b5-4281-819d-0ade6b7be3ae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8242a3bc-f492-4d23-9142-a8937898a9d2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "308a8877-f279-42f6-99db-09bebf624c2f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc724b0-f8e8-4270-ad15-12d29b2a2a9b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5383b17-be1d-4978-94f0-6a1bb25bb9dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55058f47-7a7f-4593-aac0-50b0e8e1fc74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "377c7906-c9b2-48bf-b3ce-5457359920e9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26269830-69a5-4b5e-9d9f-61520fa59deb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c8bbed5-4266-44c5-a6f9-822da4b25ca1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97919ab1-8105-4194-824e-174a9d4f06f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "faff8af9-1080-46c7-8223-8cfc395a0568"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "84c872c5-0f02-4a5c-870e-32c6804e4ffb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cad1ca43-e309-42f9-81bd-166c1eed6fbf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ea37b952-85bd-4e56-b0e8-9a44e9bc75d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f953ac7-fd75-48c4-a956-741d388ee774"
            }
          }
        ]
      },
      {
        "id": "1923942a-3629-461b-8aa8-b0e1e8e3c730",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ef12f885-b5db-4226-ac49-a9c598983e8f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7f3b12f6-b2ea-431d-9055-37c844308eba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "43b031bf-cf40-462e-af8e-0f282574e0a4",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a046343-b4dd-41b0-9a97-128a3646aa1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40de5a8f-2c16-4311-ab50-8cfae99479f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13fec610-8dc8-4116-905d-39e4512fe9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86307040-9f8b-4f81-86dd-7877b00348ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d6730ab-248d-4849-9b00-ddb8fdd4d3b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59f8b16a-b819-4503-9f8b-eb81235316f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "131462e0-a42f-43e9-8390-357689435c0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d05e2f75-9bbb-4bb1-871c-6c73f82f713c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "77fa3772-1709-4fd3-956d-a724f2c798f5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fd3e0865-d730-4e1d-ba3d-ae2925f267db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "44463615-2f28-4aa9-a47d-5fbdfdea3761",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c35e94d2-e6b6-431c-8af2-36f3895ada4c"
            }
          }
        ]
      },
      {
        "id": "cc6bc6f6-140a-4011-a9bf-26762599bbda",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0bdc0c4-bd9c-4506-87cb-f479fea2615e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ecf5ce03-e7af-441d-a598-acb632f03c07",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5d46afc8-c131-4669-9dce-55d1f97700e9",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b3a7e89-0bff-4fcd-be62-5cbd6180505d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0134b5b7-86ec-46e8-afa4-f867db39105f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.603174603174599,
      "responseMin": 2,
      "responseMax": 742,
      "responseSd": 48.85402281775208,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726101788128,
      "completed": 1726101798053
    },
    "executions": [
      {
        "id": "8ce8a668-5b4d-4f6a-91f7-b96eaacacdb5",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "468a2380-0c4e-4726-8a08-d1faf7c11235",
          "httpRequestId": "daa7beff-740d-4e8d-aab1-475c85c14586"
        },
        "item": {
          "id": "8ce8a668-5b4d-4f6a-91f7-b96eaacacdb5",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f633bf55-01a5-4f16-94a9-48598602f967",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 0
        }
      },
      {
        "id": "25c6caec-9c25-4a5e-98b1-d7dd76ab0010",
        "cursor": {
          "ref": "23613247-efc6-41d4-a0a4-274572cccb1f",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8f236dd7-1baf-4d7a-a3cd-d64995b4857d"
        },
        "item": {
          "id": "25c6caec-9c25-4a5e-98b1-d7dd76ab0010",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ec2fb29e-ee6b-4b9c-819c-654fd1eefa07",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "02c4e510-c945-4aa2-b5f0-4c699032a64e",
        "cursor": {
          "ref": "f6420e5a-2cef-48cb-8dee-60200b226941",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "75b6ca07-de9c-43e0-a5a1-93fb551dde89"
        },
        "item": {
          "id": "02c4e510-c945-4aa2-b5f0-4c699032a64e",
          "name": "did_json"
        },
        "response": {
          "id": "03d0c5d5-7977-48b2-b9d9-0071b785b374",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6745534-d802-4d90-9820-6eaa89111415",
        "cursor": {
          "ref": "c7d12748-5a05-4399-8995-e229f15458bf",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "94353732-8e44-4a7c-9d26-afb3b3d56800"
        },
        "item": {
          "id": "a6745534-d802-4d90-9820-6eaa89111415",
          "name": "did:invalid"
        },
        "response": {
          "id": "b161c0ee-4bfa-4ac0-a689-542d77dfc55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6745534-d802-4d90-9820-6eaa89111415",
        "cursor": {
          "ref": "c7d12748-5a05-4399-8995-e229f15458bf",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "94353732-8e44-4a7c-9d26-afb3b3d56800"
        },
        "item": {
          "id": "a6745534-d802-4d90-9820-6eaa89111415",
          "name": "did:invalid"
        },
        "response": {
          "id": "b161c0ee-4bfa-4ac0-a689-542d77dfc55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c5708a-d095-4b0e-86c3-7dc0c1300ae8",
        "cursor": {
          "ref": "b700a6a8-d0a2-4834-a9f8-abe402775259",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9076a05d-df6e-453d-8ac8-4499e2737631"
        },
        "item": {
          "id": "15c5708a-d095-4b0e-86c3-7dc0c1300ae8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5be7e912-70ef-45e4-8eaf-f5d6663ff9c1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fff5baa-f53e-4c8a-bc49-a3c5be7596df",
        "cursor": {
          "ref": "97f71eab-e9b2-4f60-be6a-bcc80b75f6d5",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "39672824-b7ba-46c3-b64a-bcbcade680a2"
        },
        "item": {
          "id": "4fff5baa-f53e-4c8a-bc49-a3c5be7596df",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "cbe6e5fd-21db-4c6c-b20f-87504fdf3a2e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55b79e3-83eb-40bd-94a3-6a8d59880f01",
        "cursor": {
          "ref": "9ce0865a-a4a2-4f6f-897d-3a37045e0a26",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a1435474-13b0-4c11-8341-a05523837ec4"
        },
        "item": {
          "id": "c55b79e3-83eb-40bd-94a3-6a8d59880f01",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "497e278e-0030-4d44-85b4-603b47bcb4c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b013dabb-bd72-42c8-9399-14e866e5166d",
        "cursor": {
          "ref": "a89574f7-b514-4266-83c8-74f941007dbf",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "330e22c5-7926-4e45-ad13-1efb9f1562ff"
        },
        "item": {
          "id": "b013dabb-bd72-42c8-9399-14e866e5166d",
          "name": "identifiers"
        },
        "response": {
          "id": "f5088852-ca80-4583-972b-e08c9e5b9f06",
          "status": "OK",
          "code": 200,
          "responseTime": 229,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32642624-6732-4fd9-a13c-b7bdbc4eb335",
        "cursor": {
          "ref": "f9ca1967-5c97-4030-8720-2b12d57eb294",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c9d1f670-c1f2-435c-99d2-d22878f033aa"
        },
        "item": {
          "id": "32642624-6732-4fd9-a13c-b7bdbc4eb335",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "652d0682-3755-4197-95a4-db13867da1c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5369631a-f6f7-45d0-87ad-e3b2d528d0c1",
        "cursor": {
          "ref": "cbc92eb8-07b2-4e24-bfa8-db2c6cf0fd2c",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "83233c5f-8000-43c3-b493-c2c1b75a8db8"
        },
        "item": {
          "id": "5369631a-f6f7-45d0-87ad-e3b2d528d0c1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "54d911f5-a708-4575-bae0-337b634f583e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5aa156b-dfde-4ec7-aa37-45c1c515559c",
        "cursor": {
          "ref": "5452e66c-b689-4063-9847-df7dd3021a44",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3de6237d-7831-4c66-85c4-9299bd85f366"
        },
        "item": {
          "id": "a5aa156b-dfde-4ec7-aa37-45c1c515559c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "894ff295-0e7a-463a-8a4b-63025150ea54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa73221a-7ed2-4ff0-9f78-e3a33d355e2c",
        "cursor": {
          "ref": "dced3073-5895-4c19-b9a4-6c4318e431c4",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b8c248f3-c901-4e0d-81be-a4832864fd16"
        },
        "item": {
          "id": "fa73221a-7ed2-4ff0-9f78-e3a33d355e2c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9dcdf190-09e7-456f-a077-21855911b572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf0ba0d-78b0-4828-8cbc-612005c385ab",
        "cursor": {
          "ref": "8e2ff54f-6013-4859-86bf-7690d1c751a7",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "387c5aa6-8696-47b2-b650-aad8a3cddb22"
        },
        "item": {
          "id": "6bf0ba0d-78b0-4828-8cbc-612005c385ab",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9e18ec49-1436-4c88-832e-5b19621ab4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a47401f-19ca-471d-b2ef-02f09a005506",
        "cursor": {
          "ref": "1e868d7e-9322-4c56-88e5-f014589d169a",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6dc01309-37b6-4fc7-aa59-2e90cb0807e2"
        },
        "item": {
          "id": "8a47401f-19ca-471d-b2ef-02f09a005506",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e2915487-f119-40ea-a892-b2f7c544b11e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1ef4eb-2167-4709-8db0-d54af807cc3c",
        "cursor": {
          "ref": "effb3e79-0cc1-4e96-a59d-6409c34f0048",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ac884241-02c4-40d8-8498-dc9fdac24105"
        },
        "item": {
          "id": "aa1ef4eb-2167-4709-8db0-d54af807cc3c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "bd98bb28-fbcc-4898-b759-8787442785a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a454510-3f20-465d-b308-e2b76ceef958",
        "cursor": {
          "ref": "e108f63a-538b-492c-9142-2ce929b7c85d",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c19291d0-1359-458b-80b2-a66bca8e6c71"
        },
        "item": {
          "id": "8a454510-3f20-465d-b308-e2b76ceef958",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "794c4a26-c428-4ca9-9188-43c2845dce7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8a9d29-6de0-44d8-83b7-d63b50706966",
        "cursor": {
          "ref": "78178fbb-3ab3-4723-81c5-08ca3b6a416b",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1c3ae7e3-f6ee-4112-b348-e442e8db402c"
        },
        "item": {
          "id": "8c8a9d29-6de0-44d8-83b7-d63b50706966",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4cbe7dbe-5891-4fb9-8905-6b339b58ae03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9336d65-b56c-4c09-b06d-eaa851b25921",
        "cursor": {
          "ref": "3cf80e87-d5bd-4723-8366-8e189e82978f",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "91b85907-f026-49c5-8934-cc690a5208ce"
        },
        "item": {
          "id": "b9336d65-b56c-4c09-b06d-eaa851b25921",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "386c42a5-6c49-4350-a0a6-9e53521f0640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc11fba-4c44-4185-909b-877ba449db9b",
        "cursor": {
          "ref": "d9a66266-b4b9-4d62-85a5-d6901e924771",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "455bf052-2321-492d-9977-122da7ec8c0c"
        },
        "item": {
          "id": "bdc11fba-4c44-4185-909b-877ba449db9b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8c69aa18-666d-469e-a135-43ff59ccf62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd33dea2-add9-4798-8e0d-44fd3fef1467",
        "cursor": {
          "ref": "d220338c-3454-4f34-9d53-02de5f7a2a9c",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "355d0cb4-de4c-4415-9fd8-eb0156b43894"
        },
        "item": {
          "id": "dd33dea2-add9-4798-8e0d-44fd3fef1467",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2f04ccdb-d09d-42b5-9665-922e72a65b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed81eb58-8c93-480b-ba1f-0eea098f11aa",
        "cursor": {
          "ref": "20b943b2-2ebd-4177-81b8-db1d381c731c",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c0d3d1ed-89fc-4d83-8af4-68e2237391da"
        },
        "item": {
          "id": "ed81eb58-8c93-480b-ba1f-0eea098f11aa",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c8d75813-2799-45b2-b5d3-85d09d2407a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f48bc28-a93c-41e9-a469-61b48e0e5d18",
        "cursor": {
          "ref": "f992859c-1b03-4723-b436-ef49f054e94d",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ce26433a-d24d-489d-941a-40d03da8d2ea"
        },
        "item": {
          "id": "6f48bc28-a93c-41e9-a469-61b48e0e5d18",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ff705cbb-003f-4053-81aa-836394026e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517f6eed-d631-4bff-b298-51d7235a5a9f",
        "cursor": {
          "ref": "e11eab18-f62c-455b-b319-cc27ec09002a",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "738d2e72-5cf9-4f72-b5ea-1afd8ca652f4"
        },
        "item": {
          "id": "517f6eed-d631-4bff-b298-51d7235a5a9f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ca359b52-96af-4e70-bfa4-60bd4934693d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012eeea0-8abe-4021-8f5d-11702a6e382d",
        "cursor": {
          "ref": "af1c7c1d-6f18-4c49-82d6-b194f5039ef1",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f76af21a-3534-4fa7-83a0-7d3e05be640f"
        },
        "item": {
          "id": "012eeea0-8abe-4021-8f5d-11702a6e382d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7f65305b-7271-460d-b2de-2ee5047ce10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55121915-60f8-48e4-bf91-ea41d1fdcda7",
        "cursor": {
          "ref": "b997ba58-d7f3-46a1-a19b-cb5ed5f24dcf",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "aaa4b593-a43c-44fe-97d0-303d1a8267a2"
        },
        "item": {
          "id": "55121915-60f8-48e4-bf91-ea41d1fdcda7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d8d8343e-651c-42b6-b4ce-8c7bd0315ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64fb002-e2a9-403f-8932-3237ac7b6084",
        "cursor": {
          "ref": "7c519858-7ea3-4379-9d1a-cebe76a03484",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b59d5d81-407a-46e1-974e-20da51ca5162"
        },
        "item": {
          "id": "d64fb002-e2a9-403f-8932-3237ac7b6084",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "16bf2ae2-c52f-4b12-957b-881c1ccf22a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ad94dc-17bd-4f84-834e-221db3f0b07b",
        "cursor": {
          "ref": "da3e8442-c2b1-4898-a8b8-a1161eb8991e",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e832e40f-8b43-4724-8875-b993da26e0a8"
        },
        "item": {
          "id": "b0ad94dc-17bd-4f84-834e-221db3f0b07b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a58f68f2-5201-44f8-8ab5-bf1b11d1982f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b80f56-b33a-427c-bf81-81a84a284dff",
        "cursor": {
          "ref": "5789d4d8-238b-4899-91d5-ea842bf9b3b5",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "713bf986-1ab8-400a-a80b-acac7b9ba4eb"
        },
        "item": {
          "id": "c4b80f56-b33a-427c-bf81-81a84a284dff",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7acfdbe0-c44b-486f-8a7a-266b83b4ada3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b3f3b4-df11-4c30-8a28-65fab429eef9",
        "cursor": {
          "ref": "019a06b6-4fdd-4dcc-8d11-c2706686b5d4",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4bae6525-f572-4bdc-b918-1802187bd9b0"
        },
        "item": {
          "id": "e2b3f3b4-df11-4c30-8a28-65fab429eef9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e1fc8ae5-8594-40c4-94e6-b52c0bcaac62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59c8595-58bf-4557-9805-2d6d5cac3808",
        "cursor": {
          "ref": "4b296e63-7ccb-4a91-afdd-d213b092749a",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "819baddd-e2bb-44ca-947d-c4c14bc7385f"
        },
        "item": {
          "id": "a59c8595-58bf-4557-9805-2d6d5cac3808",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "df57ca7e-9da3-4e9f-829b-5abcce8d4579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aab50f3-508e-428d-a332-a3b6a245298f",
        "cursor": {
          "ref": "1200aaea-a27f-4131-b80d-6ce8f7558011",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "945714b0-7366-46e5-ba12-ef1683dfd708"
        },
        "item": {
          "id": "8aab50f3-508e-428d-a332-a3b6a245298f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0c8d926a-fa5f-4a9b-bd82-de7007f44991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbb0f1c-569a-4c69-8e30-48c33f1991da",
        "cursor": {
          "ref": "5eb06f93-f088-46b4-998c-075e27d9fa62",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d54ea950-01ca-4599-b06a-1aa9b02aaced"
        },
        "item": {
          "id": "edbb0f1c-569a-4c69-8e30-48c33f1991da",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b2b165a4-0861-4108-bbcd-b284748035ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c842131-d18a-4ca4-af56-c2f9174d348c",
        "cursor": {
          "ref": "5eb62483-c118-41cc-a9f4-465c4dd912b2",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "dca6640d-a48f-4fbe-8949-089663aa2ca8"
        },
        "item": {
          "id": "1c842131-d18a-4ca4-af56-c2f9174d348c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1a3bbf87-027d-4e1f-86cb-35aef0ab2b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67156b17-f173-4485-9cbc-0f5d217775bf",
        "cursor": {
          "ref": "e4f18393-fcee-4ec0-bbf7-50bdc9bb424c",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "33b8cc3e-5150-49f9-aac6-93189f699152"
        },
        "item": {
          "id": "67156b17-f173-4485-9cbc-0f5d217775bf",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a89b3e91-2e05-4c11-a2dc-307d4ddfa128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a431fdb-4e82-4a3d-b90f-970e3c609634",
        "cursor": {
          "ref": "9d3ff245-5bbf-447e-88b1-ba93476c5d69",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b4319690-ffaf-46ca-a13a-00c9c731ead6"
        },
        "item": {
          "id": "0a431fdb-4e82-4a3d-b90f-970e3c609634",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "168b9b21-3d6a-4a6f-b5ce-0ef9e9a250b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95915da-8ed3-46a6-96ce-30ffc7e49c61",
        "cursor": {
          "ref": "7abe78ef-a989-4a62-b6ce-359dbf161bcc",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ff5f26b3-fc91-48ef-996a-a7669cf2f7d7"
        },
        "item": {
          "id": "f95915da-8ed3-46a6-96ce-30ffc7e49c61",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b9eef584-1c98-4144-9d34-add00d84697b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a402bac-afe5-4d11-b43a-e04bffebe593",
        "cursor": {
          "ref": "c62aefbd-1ea1-4480-916a-b743205220c2",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "414a71a1-b16e-4320-8a81-aab5b3f6ef8a"
        },
        "item": {
          "id": "9a402bac-afe5-4d11-b43a-e04bffebe593",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8d227eb5-8dea-455e-8d1c-1dd6dff8f9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceab1d27-dee0-4326-9106-70df7c55f567",
        "cursor": {
          "ref": "a45a9b8c-3b7e-4f3b-8647-c4886842f1f4",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "fa84961e-5076-4167-ac3c-8f0c9d57bc7f"
        },
        "item": {
          "id": "ceab1d27-dee0-4326-9106-70df7c55f567",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "aa1d51b1-1979-430e-8e72-1815ef95f8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11cde88-c9d9-46cb-8566-699ac732e983",
        "cursor": {
          "ref": "a3e71c73-9d17-43ca-97dd-cac86275b4ba",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "46f48f86-031a-47a7-bc28-77bd1cc095c2"
        },
        "item": {
          "id": "e11cde88-c9d9-46cb-8566-699ac732e983",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6bfb6e80-4ba0-48ef-b4a6-a3b5895d76d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97219603-ba5a-411e-84aa-a00fc5cb631b",
        "cursor": {
          "ref": "318c22d2-bc47-4d27-8aef-e63d023659de",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9fd08b28-8b4e-40ac-98c3-bfef1a9fcba4"
        },
        "item": {
          "id": "97219603-ba5a-411e-84aa-a00fc5cb631b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8f200c31-b855-43fe-9bab-c5594c4f6bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "babebf0d-0964-4c7a-b04f-e0f9449c16a4",
        "cursor": {
          "ref": "513f8a8e-49cb-4522-8e32-7a2598c684d5",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b737582e-1086-479c-a075-283d1a1f122b"
        },
        "item": {
          "id": "babebf0d-0964-4c7a-b04f-e0f9449c16a4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "23c711c7-b82f-4eb6-bb8b-e4d658afd090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ab8a14-5884-45ff-a939-dc01fc195c0a",
        "cursor": {
          "ref": "c0f98df3-cd59-4818-9c5c-635aeabe786f",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3e52359a-6367-4621-a458-715927a45600"
        },
        "item": {
          "id": "05ab8a14-5884-45ff-a939-dc01fc195c0a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "68e3795b-2cc4-43dc-b70a-7ae89b1421de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cffbdf17-5e09-4372-8266-99ef86bc799c",
        "cursor": {
          "ref": "806fb8a9-43eb-43fc-afb5-a78910ce9a9a",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a4b4a4cf-beaf-4079-85f0-b6242d03daae"
        },
        "item": {
          "id": "cffbdf17-5e09-4372-8266-99ef86bc799c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e552208d-64d7-4d44-b9f6-1ed6c301075e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ae9e5b-1866-4238-a060-fcb3cd2c279a",
        "cursor": {
          "ref": "b3ae7d80-0d9b-4f2e-a48e-9b80387e5dbd",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4659be1a-0dc4-4ef2-9d91-f2bfedce99a9"
        },
        "item": {
          "id": "e0ae9e5b-1866-4238-a060-fcb3cd2c279a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "04d35bc9-4e35-4a05-b9ad-4f80defd7baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5d189e-132c-4c5a-978a-6bff48e4cebc",
        "cursor": {
          "ref": "489f6df3-e3cd-49a1-ac08-e6db4905f9d7",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "35820d07-5d4a-4573-a2b2-3d12e769d49c"
        },
        "item": {
          "id": "4b5d189e-132c-4c5a-978a-6bff48e4cebc",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "60cba168-37c8-45be-af7b-40c22b8141f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46989d6f-1fc9-4a69-bedd-b7f8b52f4ffb",
        "cursor": {
          "ref": "62404c95-e5df-40f1-94b6-094faa5f6347",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "107ebafd-f016-4ee2-98f9-5d8238193918"
        },
        "item": {
          "id": "46989d6f-1fc9-4a69-bedd-b7f8b52f4ffb",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a5c7dc1c-0b3a-43fc-aadd-6a5c1e2e918f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bfe0a1c-1e25-42cf-b9f0-0b642b520ce0",
        "cursor": {
          "ref": "b700f97d-6b44-4841-993f-aa6661c9176b",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b2fb7ec4-8349-4331-94b1-3c98bef39a3f"
        },
        "item": {
          "id": "7bfe0a1c-1e25-42cf-b9f0-0b642b520ce0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "fa1a8f2a-2e3d-4277-9778-0a64accaa349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4ac0fd-55f6-4f62-a19a-e3f7169bac02",
        "cursor": {
          "ref": "ad199875-a484-46d2-911b-009d65c81cb3",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3a6a69ca-f180-4423-8a6c-50712c5806d2"
        },
        "item": {
          "id": "4d4ac0fd-55f6-4f62-a19a-e3f7169bac02",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "10e4fd5a-d60d-4dd4-923a-a240e9079f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa831d8c-eeaf-43b3-a500-6f78e75673b1",
        "cursor": {
          "ref": "0b0a52c9-0259-4264-93f1-8b12f064f717",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a8e89e04-2f7b-483a-b58a-a782ef6eba52"
        },
        "item": {
          "id": "fa831d8c-eeaf-43b3-a500-6f78e75673b1",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ed3b5314-ef00-4627-bc18-e4dcc0295f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0fe969c-aeba-468c-8a8c-2ce9669e038a",
        "cursor": {
          "ref": "7e5acacc-a9e1-44b7-9056-666eab1afb1d",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "16fb9d4b-a179-42e3-b4c0-9baab05340a6"
        },
        "item": {
          "id": "d0fe969c-aeba-468c-8a8c-2ce9669e038a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c5b45fa8-5e34-4671-9811-1a9a639f757d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efdf70c-5654-43cd-9543-adc9f9b33469",
        "cursor": {
          "ref": "85319b9b-d2b0-4d65-881f-83129ddc7ff7",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ca82155f-557a-4b22-b95a-cdf50e7eb13d"
        },
        "item": {
          "id": "2efdf70c-5654-43cd-9543-adc9f9b33469",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "07158671-ca52-43da-99b7-c608e01e357a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17559cd5-399c-44bb-83a5-290ee60bbd74",
        "cursor": {
          "ref": "380d2314-6837-45c6-822e-dbed09dc758c",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ca2f6d5f-3531-49d5-9c82-891c97ebd928"
        },
        "item": {
          "id": "17559cd5-399c-44bb-83a5-290ee60bbd74",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "69082677-1a86-4dda-83af-f2b234ad84e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f930f16-12b9-4e0a-92b1-1ae9fad71c0c",
        "cursor": {
          "ref": "c0d2db56-bc13-46df-a2ed-1fe492ddb0f6",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a429b811-d9fb-44c4-ae04-338451698c62"
        },
        "item": {
          "id": "0f930f16-12b9-4e0a-92b1-1ae9fad71c0c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ad5a0ea4-21be-4512-bdfc-34f8a552ed42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28440a8c-81c5-4179-9509-56252b576530",
        "cursor": {
          "ref": "fdcef74a-abac-4545-b9c6-2318294fc9a2",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e570a26e-5fd7-4a5f-a185-9d6399f94254"
        },
        "item": {
          "id": "28440a8c-81c5-4179-9509-56252b576530",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a96e868a-6529-4ea5-b1e4-c74074fe5025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e3907b-2e01-45d0-b957-a31c9ef07f81",
        "cursor": {
          "ref": "1798ee50-00f6-4474-9bd7-5b096df52bc5",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "cef6321d-0088-423f-b5eb-e4d025ef1061"
        },
        "item": {
          "id": "a0e3907b-2e01-45d0-b957-a31c9ef07f81",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "04c159c3-ba57-41c8-9d40-3a0749fb3b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ee3f2b-bad4-4953-8c0d-bd9d07ca3325",
        "cursor": {
          "ref": "2e648047-feec-429a-993e-b67e02630915",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "81c00e26-7424-48ed-917d-26c480177a8c"
        },
        "item": {
          "id": "35ee3f2b-bad4-4953-8c0d-bd9d07ca3325",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3e624ee2-4abc-40b8-ad14-ce95a2c2b5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df2297a-54ae-43f4-97f9-f796eae9949a",
        "cursor": {
          "ref": "b31cd6ff-4fe9-4292-94c5-c060b2d8332a",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "df39e3e1-3cf7-4f85-bf25-52213808eb0e"
        },
        "item": {
          "id": "2df2297a-54ae-43f4-97f9-f796eae9949a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "af83a762-5f1d-4e69-bb85-73690b8e4f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b78acd-a2a8-41f6-92ad-dc100608e5d0",
        "cursor": {
          "ref": "4faa22a8-b7de-46a0-bc4f-6e64b9bc75b7",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f50964ad-2bc5-4f33-8780-16673b1b778b"
        },
        "item": {
          "id": "b0b78acd-a2a8-41f6-92ad-dc100608e5d0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1ec560bc-7a8b-4f0c-a3e8-395ee36de219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6dd28aa-5e5a-4a96-b21f-aa6ecdea3065",
        "cursor": {
          "ref": "d983e9b6-d1e3-408f-b73e-3268a800e613",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "dee575e2-bd7b-4251-830d-8c43e56a5f6e"
        },
        "item": {
          "id": "d6dd28aa-5e5a-4a96-b21f-aa6ecdea3065",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c29b7480-9d5e-45ec-94e8-c7be05b3bd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47d96e0-8e3c-4743-be7c-e8d7c7094a18",
        "cursor": {
          "ref": "6f7a8b91-926d-4326-a8ef-e6ca9d2ea2a9",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e1eb9e60-eb53-4f10-bd29-325bf8a813be"
        },
        "item": {
          "id": "e47d96e0-8e3c-4743-be7c-e8d7c7094a18",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6c5d3973-0a6a-429e-b451-959206d6d53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c569a3-a9cd-4c72-97e9-d2a6134aadf1",
        "cursor": {
          "ref": "16d15c5c-9711-4f70-a46f-6f0aec4722d2",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "21ce5804-06e2-499e-aaba-13c9ee3609db"
        },
        "item": {
          "id": "b6c569a3-a9cd-4c72-97e9-d2a6134aadf1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "af12dca0-4132-4402-b67a-d570e995f1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e64336-66aa-48d4-aa59-29673c70a5a1",
        "cursor": {
          "ref": "f3b05f26-c569-45e8-a6d7-80f308854d62",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "484da1a3-9e0d-45c5-9a1a-1326a3559728"
        },
        "item": {
          "id": "48e64336-66aa-48d4-aa59-29673c70a5a1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f148e27f-deb9-4e29-8d8b-d90a5dabb2f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc562a2-60cf-4c7d-bf4e-0a02f6d66685",
        "cursor": {
          "ref": "62bd4ad7-98da-49b8-9482-f4b057a33d2c",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d240a623-58ba-4f62-9457-383d3988b602"
        },
        "item": {
          "id": "5dc562a2-60cf-4c7d-bf4e-0a02f6d66685",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1b9ca845-c99f-49d3-80ec-a88554eca9a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f78c5b-0c0b-4381-b153-8858e61574a2",
        "cursor": {
          "ref": "8d34fe2a-db78-4c71-b966-1ef35aa7de1b",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "fe81abad-b9d6-418e-89a6-7f244bf3204b"
        },
        "item": {
          "id": "03f78c5b-0c0b-4381-b153-8858e61574a2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "81d47103-0e53-4b32-bf7a-22922e713118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c91d3d7-0ae0-4b47-b1a0-0827214ce351",
        "cursor": {
          "ref": "1a8d5f04-00d1-4825-b3e9-faf3e3f5e109",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "223b8228-fe8f-4ba2-9799-a10bf50fc2c8"
        },
        "item": {
          "id": "7c91d3d7-0ae0-4b47-b1a0-0827214ce351",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "22b52097-1da0-4cec-9aad-883befa71ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3aa5d4e-f3da-455d-8954-c151fafbd3e6",
        "cursor": {
          "ref": "3f1051d5-82df-4743-b270-b0e0b3f66190",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f0e9b021-598c-41dd-b231-a057f260d414"
        },
        "item": {
          "id": "c3aa5d4e-f3da-455d-8954-c151fafbd3e6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "32cd064f-0e03-4e28-b3ee-69abd8b237e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b592671c-860c-4744-b227-08bfebf793f2",
        "cursor": {
          "ref": "587d0db2-68ac-481b-827b-77cb22b24bfd",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c48e0204-583c-4463-aee0-bcbfe7346c95"
        },
        "item": {
          "id": "b592671c-860c-4744-b227-08bfebf793f2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7a37f8e7-11a0-44e2-a9ba-a3284c8ca481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fa3f7c-b457-4aa6-b9af-2e883fca4b0c",
        "cursor": {
          "ref": "06069523-3d74-4d88-86e6-1fea37baff2e",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ed26df5c-9cd9-4aeb-abc6-0057dd2edfc0"
        },
        "item": {
          "id": "97fa3f7c-b457-4aa6-b9af-2e883fca4b0c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2a0dce01-ef66-4dd9-8f9b-ff2365ef4c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8cff25-aeb8-43a2-b37e-d8ec108a5492",
        "cursor": {
          "ref": "31b43c27-5b12-4d72-ac85-129ac3fe66fe",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "97d70aee-4caf-47c8-8e33-8b1ca12306ce"
        },
        "item": {
          "id": "5f8cff25-aeb8-43a2-b37e-d8ec108a5492",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7a7b67a4-83a7-4a28-a099-02e2e85a12cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3e178f-d44c-4e87-935a-e4430e1afeed",
        "cursor": {
          "ref": "d754538f-7505-4b9b-82c4-51efc3b5b33b",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f97ed77a-fc74-4b02-bf31-caca26454abd"
        },
        "item": {
          "id": "1d3e178f-d44c-4e87-935a-e4430e1afeed",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "50692fe5-4e9a-48da-8149-3d46b76c2042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5a8671-320f-4f9a-9d8e-353efc1798f3",
        "cursor": {
          "ref": "c517fa02-3bcf-446a-8250-77e60c26cbe3",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ba2cace4-8141-4e4d-8331-d322d4424c83"
        },
        "item": {
          "id": "7f5a8671-320f-4f9a-9d8e-353efc1798f3",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0dad5e10-9c93-4f2e-9686-5561235f771d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114661a8-e65c-42b3-aa2c-41a20944afb7",
        "cursor": {
          "ref": "50a04dcd-49f6-4607-9edc-a901cd7e39dd",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d78e8ddd-5870-4177-80b5-7c83e34ea90c"
        },
        "item": {
          "id": "114661a8-e65c-42b3-aa2c-41a20944afb7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "18405199-d444-4ec5-89e8-43812df46217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff7d09e-f877-43b1-afdb-8565f486a5a9",
        "cursor": {
          "ref": "df6967a9-3815-4dd0-a670-cb182fa34b92",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c4c641c3-2538-442a-bd67-937be0e7bf21"
        },
        "item": {
          "id": "cff7d09e-f877-43b1-afdb-8565f486a5a9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9853aca9-27ed-4618-a7b0-ed6b040123ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb623db-bcbb-4643-b59f-140256feaaf7",
        "cursor": {
          "ref": "a1ac9f83-b8da-421c-862f-339dd6a27b1f",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "566fda3e-b844-454e-915a-cbced1a24a2b"
        },
        "item": {
          "id": "adb623db-bcbb-4643-b59f-140256feaaf7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "cebf9a67-d182-41b4-8689-e09a8d74c482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eacb1235-7697-4e60-b2a1-6ab17168cda1",
        "cursor": {
          "ref": "9d3f538a-8aaa-425a-969b-1088c5505e08",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3c7f8317-baf9-48c7-bcc8-499fa5424d71"
        },
        "item": {
          "id": "eacb1235-7697-4e60-b2a1-6ab17168cda1",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ed4b250c-c8dd-414c-8d90-12632fa1c178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61707d4-b636-47ff-9dde-734c428026ea",
        "cursor": {
          "ref": "307596d8-f157-4c17-b079-35caa6ce10c9",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e68def19-cc92-478a-b5f1-fc0864a886bb"
        },
        "item": {
          "id": "b61707d4-b636-47ff-9dde-734c428026ea",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "6d6bc11d-784f-4c43-a400-1b0b0c648e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca064e5-a006-4d04-93a0-73fe7896951c",
        "cursor": {
          "ref": "cca2bffd-1c90-4e4a-9e4f-7d2011618a31",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d3216c6e-cebe-4bf5-89a1-31055aa8c46b"
        },
        "item": {
          "id": "7ca064e5-a006-4d04-93a0-73fe7896951c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "803d6dc1-340b-43a6-9c6e-af0c8678eba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91bb66a7-159d-4911-af23-e10c38faae6c",
        "cursor": {
          "ref": "6eb222c8-1610-4ab8-a5ad-5e026e0b8626",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "aac17117-2c64-41f7-9132-fd8526f7f489"
        },
        "item": {
          "id": "91bb66a7-159d-4911-af23-e10c38faae6c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5e1716c1-4c1a-413c-bee2-8026c75a99ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55dfb7dc-d404-40b3-9bcc-884a9be9b2f6",
        "cursor": {
          "ref": "f1a09d63-603c-49e3-a709-e86071ae151c",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "95db6f73-4ed2-478a-9fec-384a8a71e67a"
        },
        "item": {
          "id": "55dfb7dc-d404-40b3-9bcc-884a9be9b2f6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ae3ff3d5-6a32-4f8c-9516-feef3cf4ec4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ff5d55-e2c4-4faa-bb50-9f7b4b83d785",
        "cursor": {
          "ref": "7d4fecb7-2b5f-4484-aff5-9c1806b3a9b2",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "00acee8f-7a78-4f2d-9220-b045824a59e2"
        },
        "item": {
          "id": "94ff5d55-e2c4-4faa-bb50-9f7b4b83d785",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "51c267fa-df74-4df7-a021-2dae71fc9d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92311af0-5ccb-4682-a0ba-eb8641fd8618",
        "cursor": {
          "ref": "a3953a8d-e7f5-40fe-8855-33f11cdac9ac",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "11138a0a-8084-483f-a550-3a9e4baaf92d"
        },
        "item": {
          "id": "92311af0-5ccb-4682-a0ba-eb8641fd8618",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f168134a-c48c-4afc-a588-6f892ac74ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f1306e-4939-4fb9-b744-1148bad6337f",
        "cursor": {
          "ref": "545a0c2a-fe89-4015-9683-a9abc67effb0",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3abfa098-2cb7-49f8-9a84-067ebf2cfcd4"
        },
        "item": {
          "id": "66f1306e-4939-4fb9-b744-1148bad6337f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "80f55517-7e37-45b2-93ee-dfcfbbbd5220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678b6f8a-8129-4097-9320-c1ab20980af0",
        "cursor": {
          "ref": "075f8034-f1f6-4ebd-96b7-236187c9e1be",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2c82b23b-42a1-4055-bdb2-b48387c70bdd"
        },
        "item": {
          "id": "678b6f8a-8129-4097-9320-c1ab20980af0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "361e1e8e-a60e-45f7-9481-70e1c85858b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6301a4-3017-44b0-9c0c-92528dcaa30c",
        "cursor": {
          "ref": "824dae62-5a45-4f08-9e5c-b39e2f9dba05",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c04099f4-6bf5-42f3-b9db-bdb4667047b2"
        },
        "item": {
          "id": "6a6301a4-3017-44b0-9c0c-92528dcaa30c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3a9dcfb8-d7ab-4b0f-8a87-a603925ca260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ffb02e-ebdf-4bbe-9c9f-95cc0e6550f8",
        "cursor": {
          "ref": "5abacf87-c892-48d8-80d5-3f7f0996e613",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f898b901-f6ef-4c16-98ce-5e3b0d7aeee4"
        },
        "item": {
          "id": "04ffb02e-ebdf-4bbe-9c9f-95cc0e6550f8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "dcd869b3-f0cc-451e-a7a7-cafba84c8acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e0de70-1a9f-4cea-a3f2-eae041536dc0",
        "cursor": {
          "ref": "fd133314-ff0c-4ac2-8819-4176cd5b84a3",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e804510d-9410-4975-9686-97cb810562a6"
        },
        "item": {
          "id": "51e0de70-1a9f-4cea-a3f2-eae041536dc0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4474aab1-93cb-42d4-a022-983f1cedecd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92fd0c64-61d6-4d01-a7b6-a87f0ef8a6bf",
        "cursor": {
          "ref": "04d278e8-78fe-429d-92eb-50ec3ed7820b",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6d400805-d0cf-411d-b788-c047c36b9da9"
        },
        "item": {
          "id": "92fd0c64-61d6-4d01-a7b6-a87f0ef8a6bf",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "89b195e2-cc35-47d0-992f-ffdc0538e9ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3eda73-dfc4-4a8f-8e52-f405d874da21",
        "cursor": {
          "ref": "25d047f6-927c-4d3b-8d84-b133a42f0177",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5308a4fe-fddc-4773-8a36-eb92a8cdd9a9"
        },
        "item": {
          "id": "5a3eda73-dfc4-4a8f-8e52-f405d874da21",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "39ff8ccb-7661-40e3-b9ad-63a3e63f9f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcdb69f3-215f-4c88-8d8e-12dd4a5812f5",
        "cursor": {
          "ref": "3a3df194-df78-42a4-9a25-7eede8a68da9",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "984156dc-00c6-4b1b-b086-bbad6bea10f3"
        },
        "item": {
          "id": "dcdb69f3-215f-4c88-8d8e-12dd4a5812f5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7aadde49-e6e8-4709-911f-c9e796154b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308766a6-28ce-4bf0-b513-58c4b4272b62",
        "cursor": {
          "ref": "761628ba-8d9a-4be7-9c8b-46af83666a9a",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "adf44401-40c1-4657-aba5-b24a6455d228"
        },
        "item": {
          "id": "308766a6-28ce-4bf0-b513-58c4b4272b62",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4c6a923d-9c67-45bb-9c01-cb0a2d8d4b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131283ee-b49f-45b4-b2ae-07bd01446194",
        "cursor": {
          "ref": "bb7a1df0-0ae0-4ed5-ac49-930449250802",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f7f5143a-0846-46a5-a178-52e0ae69eab2"
        },
        "item": {
          "id": "131283ee-b49f-45b4-b2ae-07bd01446194",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5025ee54-c4c6-4adf-93a0-402bbc443ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558d988b-059b-4ec1-8d40-557af9179ffe",
        "cursor": {
          "ref": "995248d0-2cd7-45d1-95b0-757a1ba8eb65",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bac8cdc9-97ef-4414-98b9-7621346fbc8f"
        },
        "item": {
          "id": "558d988b-059b-4ec1-8d40-557af9179ffe",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "29cdc20d-2c41-45fa-9a21-60ffeaf5df1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce75d1c2-b3a1-4b18-87f4-1d5e5ada96a1",
        "cursor": {
          "ref": "f62af76f-0c28-4a75-97c7-db01feb17172",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "51420293-25ac-4ccb-8ebc-13683bcb68b4"
        },
        "item": {
          "id": "ce75d1c2-b3a1-4b18-87f4-1d5e5ada96a1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "07ee77b4-14c1-441d-814c-6c48f769da08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7efdba54-e3f4-4abb-8040-79a32bf7f46f",
        "cursor": {
          "ref": "c529b96f-630c-4afd-bad7-f5dfd417da53",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a850477b-06d2-4114-b5c6-68267b006acb"
        },
        "item": {
          "id": "7efdba54-e3f4-4abb-8040-79a32bf7f46f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2f30ece5-8a0c-4d1c-9b2c-d1fcecae49b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd112264-257e-40a2-9928-c3217e368b1a",
        "cursor": {
          "ref": "a92f1e3d-0644-49be-acd2-fdd0919baeeb",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "11bf315d-eb87-4afa-9000-73e9a5bd9928"
        },
        "item": {
          "id": "fd112264-257e-40a2-9928-c3217e368b1a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "123f4962-27e1-4741-b1e2-a9712bf75986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f85e9ac-9566-4c64-ad60-3007d6a534de",
        "cursor": {
          "ref": "e599440c-34b9-4d3d-bcc2-0ea14ab46346",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "dc10c64c-ac1b-4392-ba2f-cfdb6e8b4405"
        },
        "item": {
          "id": "9f85e9ac-9566-4c64-ad60-3007d6a534de",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1e7087bd-55d8-405e-8806-0efa0296e97d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a9d6df-ed41-4219-b00b-573e6a921e26",
        "cursor": {
          "ref": "0c2023d9-a07a-465b-9a2f-6bf941f53c87",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3c07562c-297c-490a-ab69-c6db9f30f548"
        },
        "item": {
          "id": "55a9d6df-ed41-4219-b00b-573e6a921e26",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "37ffda4d-299c-47ef-8117-d72b396370b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01668e16-ae1e-4fdf-89ed-43dfcce3c818",
        "cursor": {
          "ref": "d634540a-3b61-4e11-bdfd-083cfc69d9a5",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b69e669c-2341-41b7-920a-4407ee01532b"
        },
        "item": {
          "id": "01668e16-ae1e-4fdf-89ed-43dfcce3c818",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a3a4ef0c-386b-4eaf-bd16-56dd9f563dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405c7ffd-7d49-49ee-bef7-82f4095e593e",
        "cursor": {
          "ref": "7caa6c99-b69f-4ae5-8dd9-61db6e3bfd33",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1952adfa-165c-4d67-b9c2-b47cee2fa372"
        },
        "item": {
          "id": "405c7ffd-7d49-49ee-bef7-82f4095e593e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "62e33bc2-1ccb-4a34-89d5-0891e6589dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3321f307-6b3f-4157-b989-14a87931d3dd",
        "cursor": {
          "ref": "67ef536b-e22e-4ac3-b078-059a127570bf",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e6322b8d-c48b-4e41-8edd-1a70f1a3566e"
        },
        "item": {
          "id": "3321f307-6b3f-4157-b989-14a87931d3dd",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a822f1c5-c6a6-4c52-a2af-ea319ebd3c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5ee7fd-d846-41b2-b0a9-b47f7419d9e1",
        "cursor": {
          "ref": "7083c3f9-1e0b-4e78-8f0e-4b1c237e778f",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "249157d8-4754-483f-abfd-4a3f5f856af3"
        },
        "item": {
          "id": "6d5ee7fd-d846-41b2-b0a9-b47f7419d9e1",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6674d01d-d7e1-4e3b-8ed4-3e2cc9f93868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4762d84d-bc07-4ed2-9f7f-8b7a215a6b90",
        "cursor": {
          "ref": "a9ef2887-a320-4e4b-ab15-8fb75f34421f",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fad7c220-7d06-4bb4-9a75-a0acb8b72e5d"
        },
        "item": {
          "id": "4762d84d-bc07-4ed2-9f7f-8b7a215a6b90",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1787122b-01fc-4b01-8e9a-2009c2bafbf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ff8536d4-7a23-468c-b7f2-752b6bc17efc",
        "cursor": {
          "ref": "4ad22b6c-6d9d-4764-a541-0dfc21f6a346",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3b0af1a4-a157-4e0d-a0b4-f2f1f341df40"
        },
        "item": {
          "id": "ff8536d4-7a23-468c-b7f2-752b6bc17efc",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6c72de36-9ab3-4d7b-a27b-74b6f47248f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "7786cf79-f943-4102-b8f6-86781bb3540b",
        "cursor": {
          "ref": "a4793a4d-fa3f-48d3-ab89-297eb5bc1d4f",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "de3d8d85-dfd7-468c-b694-d3cb809d8e91"
        },
        "item": {
          "id": "7786cf79-f943-4102-b8f6-86781bb3540b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f494c8af-c8cc-4b2d-b6da-1fd740c83d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "79ce64fb-297e-49e4-b186-3cfc8194d882",
        "cursor": {
          "ref": "8d76ab0b-bdc5-48b6-a1df-1dffa92dfe03",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3673e452-603e-423d-9da9-f713642c5233"
        },
        "item": {
          "id": "79ce64fb-297e-49e4-b186-3cfc8194d882",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "58405819-388f-4114-b172-b64a2a05c148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "ac0f0abe-fdb9-4ec7-8c41-e0ad84e6b468",
        "cursor": {
          "ref": "bc99287c-66ab-4599-b864-8e68f870567e",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f31bcc96-672e-41d2-8d01-961a84f4399a"
        },
        "item": {
          "id": "ac0f0abe-fdb9-4ec7-8c41-e0ad84e6b468",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e59737c7-244e-436a-95b0-254dd18b428a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "e8ddca8f-e41f-4bf1-8758-29dc03660e6b",
        "cursor": {
          "ref": "78401d78-9ec8-4837-abe5-4eb8cc8f6208",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "fc10cfba-46fa-4acc-869e-4002045ba1f4"
        },
        "item": {
          "id": "e8ddca8f-e41f-4bf1-8758-29dc03660e6b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "27b63a2a-31ae-486f-a085-7ebef1a1e33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "fc836831-f8ad-486d-bcdc-64e6810c8a8e",
        "cursor": {
          "ref": "71daa40c-c542-4d85-b814-f414473a92d4",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "37fef1b3-1351-470d-8a00-f28b71547c37"
        },
        "item": {
          "id": "fc836831-f8ad-486d-bcdc-64e6810c8a8e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "98c9035c-6e53-47f4-a36d-d0d38a7fc550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "255c3ebe-fc1f-4712-9bfe-1d9e284ced97",
        "cursor": {
          "ref": "68624b26-0259-424d-aed8-a75b572e9890",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "24c293f9-0b76-46a2-a1b8-40dc4ac11f66"
        },
        "item": {
          "id": "255c3ebe-fc1f-4712-9bfe-1d9e284ced97",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4ef3c1b6-8893-46e8-ad70-a9830865f60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd590c5-e678-4141-8eb4-4c191665dd1d",
        "cursor": {
          "ref": "295d5c86-9ab2-470c-a3c6-e6967aa080d6",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e88368ed-54b2-4043-8cf2-3c1d181f8710"
        },
        "item": {
          "id": "ebd590c5-e678-4141-8eb4-4c191665dd1d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "85d75ec9-11b8-4a3e-84f9-57f42678f1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4f8e29-5b82-4c8a-a982-26e4ea4e9a70",
        "cursor": {
          "ref": "9827905a-af61-4a85-a0aa-4bea84f8a170",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "430d12f3-14ca-4110-859c-4d2b4dd57eae"
        },
        "item": {
          "id": "ae4f8e29-5b82-4c8a-a982-26e4ea4e9a70",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2d146cff-b3e6-45c1-9dae-bc02ea1a024a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659d29e8-445f-45ea-9b3f-56592afe43bd",
        "cursor": {
          "ref": "afaea303-e4ed-444f-8a27-6ecbc8f56c85",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "321daee5-7ca7-47f0-86ac-3e3267aac72e"
        },
        "item": {
          "id": "659d29e8-445f-45ea-9b3f-56592afe43bd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0549eed2-4bb5-45ae-93cb-595c5af0f184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14765d74-2267-498a-a9f5-7805e2153226",
        "cursor": {
          "ref": "f3fdf76b-2dca-43e4-9c53-6ed92cdf3c24",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7939c0db-d6ca-4ea6-a767-39d8b2e7ea9d"
        },
        "item": {
          "id": "14765d74-2267-498a-a9f5-7805e2153226",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8ea58e04-b9e6-43f7-afed-0c35dc61c6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea427976-fecb-4c7e-990c-01e1d25d3aa6",
        "cursor": {
          "ref": "3ea3794f-e83b-4704-9e01-e0cbb99d8aa8",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "eb1325c6-53ea-4bb5-8870-913893e54e10"
        },
        "item": {
          "id": "ea427976-fecb-4c7e-990c-01e1d25d3aa6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "15f590ab-d71f-4ebd-b42b-8b689392c47c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a702bba-577f-4521-92df-f3167beef1c5",
        "cursor": {
          "ref": "80cbb72e-28a9-45be-9470-1cb5ae6befd0",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "741c3626-df22-4a79-9db4-67619a15a2b9"
        },
        "item": {
          "id": "6a702bba-577f-4521-92df-f3167beef1c5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "37804e36-9218-4fe6-a1d2-a2189d7dbfe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20048da-5a52-4983-b1d0-6d1cb35cac90",
        "cursor": {
          "ref": "84f3bfee-11c9-4289-911d-d295fe3238ff",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "dfa39d09-2d05-4c3c-9dc5-dd48db22428d"
        },
        "item": {
          "id": "c20048da-5a52-4983-b1d0-6d1cb35cac90",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3ab81349-7a92-42c0-9360-ac82c9846dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df2be3b-3b6e-4f57-9e3d-c6c5317e59b3",
        "cursor": {
          "ref": "c7f00e81-8a0b-453c-93e2-89ee01024d63",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "654ed5d5-e807-43b8-b1f0-0d4851009488"
        },
        "item": {
          "id": "2df2be3b-3b6e-4f57-9e3d-c6c5317e59b3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4380dc56-9fbd-498b-8256-8d3fd6dfc747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3a2c2b-f1c6-4dc0-86b5-50e12ba9ca5a",
        "cursor": {
          "ref": "62103306-c3e5-46dc-9e79-86d742e5f8d1",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ea068409-1c5e-40a7-84c3-c4aa6ee7989b"
        },
        "item": {
          "id": "ee3a2c2b-f1c6-4dc0-86b5-50e12ba9ca5a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "85b20437-c555-42e6-adee-df696c0d8976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49dd11bf-918c-45ab-89be-aba187ddb38b",
        "cursor": {
          "ref": "f9da0a46-0637-4b2c-8773-c71bde6eec71",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "240b4c11-03b4-4bd7-bb32-ece239fe54cc"
        },
        "item": {
          "id": "49dd11bf-918c-45ab-89be-aba187ddb38b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "aa2fe164-c99c-4748-a62e-ce2a8fcdab50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78924790-4527-41cc-93f2-9b22e78cb7bf",
        "cursor": {
          "ref": "97012611-cb2f-42cd-bb3a-6c9cc43f1355",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cad783d2-1a79-49bc-b75b-976e8b251f8b"
        },
        "item": {
          "id": "78924790-4527-41cc-93f2-9b22e78cb7bf",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "96781612-713f-4c34-8163-3a284a77aeb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515b5637-5756-4949-ae98-057f62035f91",
        "cursor": {
          "ref": "ec1e4ea8-26d0-4cfe-859c-e8151189b55c",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9a5d4807-c6cb-4699-81f9-281ee52ec5af"
        },
        "item": {
          "id": "515b5637-5756-4949-ae98-057f62035f91",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0222f9b9-fbbc-434f-8682-dd2c0b5dc91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917b2a1e-c91a-4992-926d-a0b5f23b7357",
        "cursor": {
          "ref": "58e702ef-93a5-41cb-844f-369928c1fe25",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "eef4438a-69e9-4795-9d19-ef19111f3b70"
        },
        "item": {
          "id": "917b2a1e-c91a-4992-926d-a0b5f23b7357",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4b7604bc-b175-463f-b3a9-a41f79e292dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556a4623-c013-4e6d-8df5-5321b60c3e66",
        "cursor": {
          "ref": "a3a4becd-14c7-4d62-a7be-ee912e56c916",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "33f9ae02-51a8-40fb-a350-6ac66d9ddec4"
        },
        "item": {
          "id": "556a4623-c013-4e6d-8df5-5321b60c3e66",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a9b068cf-eee4-48a2-ad64-99df84c91a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f37231-5ee4-4902-b3bd-429d431e53a2",
        "cursor": {
          "ref": "a08752af-354b-41f2-8185-f02804c0ef43",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1dcf5f42-23be-414e-be1e-07298a330e44"
        },
        "item": {
          "id": "76f37231-5ee4-4902-b3bd-429d431e53a2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "31ad363c-c527-4504-8050-27296bdd8831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c944ff54-bb02-4e30-9b1c-3252f67914e1",
        "cursor": {
          "ref": "4ad0d6fd-342e-47e8-8106-002e89477128",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "09d6624c-0af0-47d8-a763-d8d3b613f253"
        },
        "item": {
          "id": "c944ff54-bb02-4e30-9b1c-3252f67914e1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "20a73401-3610-4832-a7a4-eb41b08e5c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd879b4-5324-4f27-b06d-b82b9ff93dc3",
        "cursor": {
          "ref": "53914a1b-c80d-499b-a1d4-28262cfc6b31",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "dcbc19b3-57c8-4b20-b45e-efa5ae72ed1b"
        },
        "item": {
          "id": "5fd879b4-5324-4f27-b06d-b82b9ff93dc3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6fff2e2a-2b48-43c9-9aa1-4a3a9f424df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9edb22e-f1fc-485f-902c-19c7cd257bfd",
        "cursor": {
          "ref": "0edce7cd-994d-4774-a8bb-15dd230f4e3a",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b4bbe7a6-b24b-49d3-9409-9dcbaaf1190f"
        },
        "item": {
          "id": "a9edb22e-f1fc-485f-902c-19c7cd257bfd",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bddb7e6a-d860-4be3-a7d4-038f49b559e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3178b9d-1eff-41b6-825a-835a02d675f4",
        "cursor": {
          "ref": "8c3350df-8a2b-4968-9f66-d4a283fe34e8",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "20b89807-9661-449c-bcd5-67914be1190d"
        },
        "item": {
          "id": "b3178b9d-1eff-41b6-825a-835a02d675f4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d7289a58-97fc-4e52-b3b3-1403a37d3af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c74fbc2-234d-40e8-8272-fa5faa7c3917",
        "cursor": {
          "ref": "c3bc1b0e-f985-459d-92b7-09fca9870669",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "037d68f5-d1f3-4072-adaa-eea4f186bab7"
        },
        "item": {
          "id": "9c74fbc2-234d-40e8-8272-fa5faa7c3917",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "da87556a-81f9-4807-9cd7-41897864d39e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe37256-b7c1-41e8-9f51-51e32f65a23a",
        "cursor": {
          "ref": "8bea1b0a-8a85-440e-8268-f367d11b706f",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "24315ab7-e5dc-49b2-9722-5554d79e6504"
        },
        "item": {
          "id": "5fe37256-b7c1-41e8-9f51-51e32f65a23a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "31d58cb9-6328-476f-b72f-fbc3da98ed3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9263072b-4260-4dc2-a7a3-41a66f87bbc7",
        "cursor": {
          "ref": "138993b6-d6b4-4541-8b67-a169e696fb11",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "eb0b1bea-60db-464c-b7f9-ac4dbd86a26b"
        },
        "item": {
          "id": "9263072b-4260-4dc2-a7a3-41a66f87bbc7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "415e43ce-8627-40b8-9bb1-3bc46540a6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57bd631-046e-4e63-99ce-6ed67000237d",
        "cursor": {
          "ref": "885abbf7-f886-4385-bc33-e6a46d8de0bb",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a497553d-e13f-43d3-a7c9-aabb71268b55"
        },
        "item": {
          "id": "c57bd631-046e-4e63-99ce-6ed67000237d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0382590a-d2a6-452c-9d21-b1c5d65f3d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0cff2b5-fb0b-4433-8241-8df5d53b4869",
        "cursor": {
          "ref": "93bc2565-322c-4bc7-ae0a-9bb7bf0227a1",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "30646f3d-845b-47c1-be0d-eeef355eb24c"
        },
        "item": {
          "id": "a0cff2b5-fb0b-4433-8241-8df5d53b4869",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d8d21876-6d70-4f88-9d93-11a5243b942b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513e3947-4e70-470a-bebe-93fc14a22762",
        "cursor": {
          "ref": "7c0c8e86-4c40-4434-9bfb-96f166fa5980",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c8ab6b44-8c4d-4f87-9078-34d4545f55a1"
        },
        "item": {
          "id": "513e3947-4e70-470a-bebe-93fc14a22762",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b3e1506b-360b-4cf9-bb46-86ff95452104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e307751b-2393-49ef-81c9-d74bbbeeb9c4",
        "cursor": {
          "ref": "44689ffe-9c07-42e1-a32d-d4b0ed3343e2",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "bbecd1a2-53da-491c-a844-d93928bad797"
        },
        "item": {
          "id": "e307751b-2393-49ef-81c9-d74bbbeeb9c4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3725f682-488d-4e33-8d18-dc4bfda606f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03372ba7-7d64-4ca3-8523-4f083fc813e3",
        "cursor": {
          "ref": "397bf7cc-c1af-4942-9cf6-4ac43507e988",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1ff108b0-eccd-47cd-abce-028d40dbcfd1"
        },
        "item": {
          "id": "03372ba7-7d64-4ca3-8523-4f083fc813e3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b6cb5354-6576-4dca-a34f-3878f074e0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abcfeadf-09cf-439d-b771-bb99a0168879",
        "cursor": {
          "ref": "48a32784-c5c6-490e-8c80-4ea6d6f47872",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1a962ce3-dfc8-4f8e-aad3-bd1565f69d8f"
        },
        "item": {
          "id": "abcfeadf-09cf-439d-b771-bb99a0168879",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b8ead73f-b525-4901-b676-a3a704896441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc89cca-62a0-41c4-bb70-692da358d766",
        "cursor": {
          "ref": "81f3e012-bbe9-4630-9e39-41c2f01288b1",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4bee7cae-84ed-41d4-8d86-51219553cfd8"
        },
        "item": {
          "id": "4bc89cca-62a0-41c4-bb70-692da358d766",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "60af0df8-4fa2-419f-b250-7908cbba030c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8e2ac9-e125-4071-b5ef-7113ffbdbdec",
        "cursor": {
          "ref": "65b3ce1f-22f4-477b-9470-a6b51ee5b868",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "cdb2e541-901f-4c2c-bacc-9b2b812fc27d"
        },
        "item": {
          "id": "9b8e2ac9-e125-4071-b5ef-7113ffbdbdec",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "133d78a8-d73c-4e1b-b61f-6fa471697bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b145f9-d02c-46be-9994-3bee957c936a",
        "cursor": {
          "ref": "d0bdfced-9331-4eed-bbba-97682d97c320",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4f41c02f-4b7a-4cbf-a359-671560321959"
        },
        "item": {
          "id": "50b145f9-d02c-46be-9994-3bee957c936a",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d3588dfc-1bdf-4a56-9048-3b6ac41e4b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7c75fa-26e0-4d6c-b9ef-c9db3ce8066a",
        "cursor": {
          "ref": "432347a4-1068-467d-b43e-d70d0ee27361",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "fa6c231e-f042-4212-90aa-4f223ad64407"
        },
        "item": {
          "id": "2d7c75fa-26e0-4d6c-b9ef-c9db3ce8066a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "048b84d6-c2b3-4819-ab67-e9cfc87e7cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e195a2fb-b709-4cb1-b991-d58d3d7f31f4",
        "cursor": {
          "ref": "50b92dda-6ad4-4735-b3be-22acd4da9a74",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "507cdd5b-b1bc-4f82-a039-afee648ae9ba"
        },
        "item": {
          "id": "e195a2fb-b709-4cb1-b991-d58d3d7f31f4",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ebefffe3-1499-43d5-848e-0f8b720ac8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9ebe24-1514-4584-a528-df3bd7b4ee38",
        "cursor": {
          "ref": "5c18d8ab-1742-4933-b356-248ea6d179b9",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1e630afd-e8d5-449a-890d-aa9679e6261d"
        },
        "item": {
          "id": "4d9ebe24-1514-4584-a528-df3bd7b4ee38",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "bb31f3ab-6391-4daf-bf6e-2c93de989a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde4ac07-20c6-48c3-87a8-51ac8d6b8715",
        "cursor": {
          "ref": "1808f0b2-3b4b-41c7-a590-04c87048794c",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b96c28c2-cc82-4698-945c-3fc225755d43"
        },
        "item": {
          "id": "dde4ac07-20c6-48c3-87a8-51ac8d6b8715",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1d05d9f4-133b-4fb4-a6e2-4ef66c30db54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c64e6f-cf8e-4420-87d8-25da40cb7435",
        "cursor": {
          "ref": "d58416ce-7d32-4a83-8ca9-899d2c54baaa",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2eb3da2a-8647-4d28-bec4-62f4115fa809"
        },
        "item": {
          "id": "25c64e6f-cf8e-4420-87d8-25da40cb7435",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9a06cf40-b202-4a67-b233-0a56f1ba504f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6122222-bb65-4099-bd1a-f5f1108cb38e",
        "cursor": {
          "ref": "de541319-fec9-4aca-bd32-2c4c91028dff",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "49ff73ff-2d9f-40a9-b69a-b1c5cd3a46b9"
        },
        "item": {
          "id": "b6122222-bb65-4099-bd1a-f5f1108cb38e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b0b24870-d672-4eeb-b627-1644c489b14f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8900f9ab-c905-4d6c-9c73-f8f7f5c6f9a7",
        "cursor": {
          "ref": "30b67428-8e5e-4929-ab7b-78a3ebbe9b9d",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "139e5c21-a540-4d5e-9ffe-378c927f0d2e"
        },
        "item": {
          "id": "8900f9ab-c905-4d6c-9c73-f8f7f5c6f9a7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c602f305-0b22-433c-a8b8-14e691a85b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48027cf8-944d-44d3-b65d-23f4e58fcba6",
        "cursor": {
          "ref": "2fcafcbe-6ecf-4021-b08f-92a17cbd7bf8",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ba56e398-af00-4bf6-b153-6a7e68aa462d"
        },
        "item": {
          "id": "48027cf8-944d-44d3-b65d-23f4e58fcba6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5caed964-2575-450b-a9cf-1bf60720898a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79dcc71c-51dc-48e6-b45e-3465dc026ea5",
        "cursor": {
          "ref": "76bbbe6b-78dd-413a-9686-6bee8925bc14",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ee274e78-1645-4ddc-a8d3-99b038ddcd55"
        },
        "item": {
          "id": "79dcc71c-51dc-48e6-b45e-3465dc026ea5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "72d12e4a-0109-4ced-8884-1caa28ac5af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042c529a-e72f-4b4c-bdb3-ed0b6da1108f",
        "cursor": {
          "ref": "8e625ec2-54b4-4320-b8dc-cac496efb3fa",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "99ba5b00-76c4-476f-a2c3-59fa452e4b22"
        },
        "item": {
          "id": "042c529a-e72f-4b4c-bdb3-ed0b6da1108f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5c5ff094-a064-42ab-85d8-cc2c4b79521e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff81b86-d1c1-4ebe-8558-200178f48a67",
        "cursor": {
          "ref": "6314246d-7b66-4c88-948a-91e7da02e38b",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c461e2f7-f55f-4c55-91f9-392a17592dcd"
        },
        "item": {
          "id": "1ff81b86-d1c1-4ebe-8558-200178f48a67",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5a1eee73-56d5-431c-a55f-e9e40ef19758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8340b028-a0b8-4511-95d6-024669db882c",
        "cursor": {
          "ref": "81dcca59-db9c-41f4-a79f-57a18554c02d",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "364fea8e-a935-4438-87e8-8e264d0c9442"
        },
        "item": {
          "id": "8340b028-a0b8-4511-95d6-024669db882c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "72bd3d0e-1afb-40aa-a5c5-f6781a5d01e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ca509e-8591-4f67-a74a-7677a50c5d4c",
        "cursor": {
          "ref": "9cbf625f-ca65-411f-a7be-735851150c7f",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f7cae3e6-4554-450f-8014-9f9ad8d99e7d"
        },
        "item": {
          "id": "64ca509e-8591-4f67-a74a-7677a50c5d4c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0bcd7e47-d4ba-4667-bc38-88d864f42270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318ac5ce-7b77-41d2-b0d2-b10caa66d75f",
        "cursor": {
          "ref": "0c12fbbf-2441-4559-8328-3501bc39a68e",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c3a18fb3-4b40-48b4-b17f-d638dfb5dbf6"
        },
        "item": {
          "id": "318ac5ce-7b77-41d2-b0d2-b10caa66d75f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ae906f6e-8c2d-4d44-91b2-1cda1a6975c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f570ddf0-a656-497e-b9ac-e122bae813d3",
        "cursor": {
          "ref": "21a6f9de-8952-4e76-9f3b-9ecf4b9401c5",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "26645559-3eec-4092-b78f-587e26cc8cbb"
        },
        "item": {
          "id": "f570ddf0-a656-497e-b9ac-e122bae813d3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b27282c6-b14d-4aff-8157-0bd0aaab9c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184f4000-1b29-489e-be9f-521c55afa556",
        "cursor": {
          "ref": "6a6359fb-0e6f-44cf-9e5e-c57502862e22",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7fde2869-369d-40c3-8ccc-023202f3fc09"
        },
        "item": {
          "id": "184f4000-1b29-489e-be9f-521c55afa556",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "be6df5d1-59e1-4eb4-85e3-d152f94b01d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c6c030-14f4-4fd6-9715-0e93c3a4b818",
        "cursor": {
          "ref": "e41909a3-f00f-401b-a357-8106ea6362d2",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6e93dcf2-3872-4137-a773-669e6f6d2d72"
        },
        "item": {
          "id": "00c6c030-14f4-4fd6-9715-0e93c3a4b818",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "aa2a3c88-7c39-40ea-9c01-7808ac02dced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded2f004-2687-4caf-8c11-233f5008c598",
        "cursor": {
          "ref": "df8a545e-8484-4971-a1f8-607882b1d740",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "66089e87-9c5e-4824-b109-597536098bd0"
        },
        "item": {
          "id": "ded2f004-2687-4caf-8c11-233f5008c598",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "da9cdf95-beaf-40a4-a5d2-262af58e11f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c36e906-69ae-4102-a5f4-315d1a290f1c",
        "cursor": {
          "ref": "96f0e51f-765a-4683-b776-9294e57429e4",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "11454ab8-78e0-40e1-a64c-f9add903fe49"
        },
        "item": {
          "id": "4c36e906-69ae-4102-a5f4-315d1a290f1c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "658614c6-da1b-4fe7-b942-6d0be119ad9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849c9947-189a-4128-bbf1-4b977b202825",
        "cursor": {
          "ref": "447b6e4a-a8e7-4d2d-97ed-b0612e187b76",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5fd772cb-e042-482b-bae5-4f4d777293c2"
        },
        "item": {
          "id": "849c9947-189a-4128-bbf1-4b977b202825",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "cb165704-e1f9-40ad-ab73-4c9371b798a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe4e60f-ca20-46d2-ad12-7468de01b27e",
        "cursor": {
          "ref": "7bc93ac8-d326-4d63-bfdf-55b0ceaf7ff1",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e5ef5c54-8c37-4d4a-94fa-c9866fe17873"
        },
        "item": {
          "id": "ebe4e60f-ca20-46d2-ad12-7468de01b27e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9e912e5d-36e2-455b-97c2-932f774f1537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38457cc7-31a2-4190-af72-13bcbe81de28",
        "cursor": {
          "ref": "78903199-6c5d-4aff-b5ca-db8641247f74",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0ac6e770-e5e4-4b5e-b9cd-bb4708fa5dec"
        },
        "item": {
          "id": "38457cc7-31a2-4190-af72-13bcbe81de28",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "32438767-6240-4ac7-adef-850c401b53bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b78209-7dcb-4bb8-9e7d-8227a76b2c84",
        "cursor": {
          "ref": "79c0a036-0bed-4992-a3a5-06b9816d1c80",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7d718a96-042f-461d-8301-e04b89c0d746"
        },
        "item": {
          "id": "b7b78209-7dcb-4bb8-9e7d-8227a76b2c84",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8d96322a-a7a6-4e51-8d97-53839e987706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29e1cbb-8980-42b9-a480-982a7045582b",
        "cursor": {
          "ref": "b19f3342-fa7e-4412-84e5-ad5e46046ca0",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d8748a72-9782-4d42-8a8f-5254411d6d09"
        },
        "item": {
          "id": "e29e1cbb-8980-42b9-a480-982a7045582b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "67812a71-c1ce-4a81-8cf8-648a54bd83be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e367ec22-1f39-4a15-bfd2-f20d4e9d495a",
        "cursor": {
          "ref": "81a7584d-4b96-434d-89f5-c1942938ef53",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "708f4d4e-d21a-44ee-a66a-e88922ae7b00"
        },
        "item": {
          "id": "e367ec22-1f39-4a15-bfd2-f20d4e9d495a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0dbbe09e-90af-45ff-a54a-e0587b4313db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd4e28b-ead4-4258-afe9-a6144454ccbf",
        "cursor": {
          "ref": "625ddcc6-0a93-4518-be6c-e669828ae4dc",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "08d344bd-f17f-4234-a6c7-34890afcaab2"
        },
        "item": {
          "id": "efd4e28b-ead4-4258-afe9-a6144454ccbf",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1f29d732-3f73-4f5e-a8cf-af060893622e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f829d24e-d263-43bb-be05-ca3a41b9a9bd",
        "cursor": {
          "ref": "24370530-3ec9-4101-b96b-5628f2c80129",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a44c2264-2376-4963-b688-bc6f76b83656"
        },
        "item": {
          "id": "f829d24e-d263-43bb-be05-ca3a41b9a9bd",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "acf008e1-f1ac-471f-b30d-e3df8787296c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df84c370-e940-47a4-8e4e-b3315fd268b6",
        "cursor": {
          "ref": "fb73031f-1740-4049-9a24-f4a9bee4037e",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "67e478a4-a04c-4a72-aeef-5b04c810b459"
        },
        "item": {
          "id": "df84c370-e940-47a4-8e4e-b3315fd268b6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a48c89ed-245f-45f3-9bad-f1126be80cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2adf7a9d-22fd-4970-9f55-c485068964fe",
        "cursor": {
          "ref": "f95eaf40-686c-4b10-861c-00bba9309146",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "418c0419-971e-4a96-abbc-66e26fb3e0d0"
        },
        "item": {
          "id": "2adf7a9d-22fd-4970-9f55-c485068964fe",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "35173127-ebca-4b7d-b605-067e13148999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d73e0d8-0996-4f8b-a07a-d3b730fe6431",
        "cursor": {
          "ref": "c1d16bd4-69b5-4d24-aea6-4d3661454f46",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "56129a98-f017-4941-995f-6f966ecc7961"
        },
        "item": {
          "id": "7d73e0d8-0996-4f8b-a07a-d3b730fe6431",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "07b78851-c4e6-4cdf-a1fd-a4ffe7d5334e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73a1c4b-6cf9-4515-ad55-4b0f8d44cbae",
        "cursor": {
          "ref": "5ae29cd4-81c5-49ba-a9de-07c08ec336bb",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2b72ace4-4c81-4ead-81cf-c1f64e6ed081"
        },
        "item": {
          "id": "d73a1c4b-6cf9-4515-ad55-4b0f8d44cbae",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7bc8af03-b94b-46b4-8f60-d4dbbbefc00c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1bc9ec-7ab5-4135-8240-6a242c439876",
        "cursor": {
          "ref": "3e9b18bb-99b1-49ac-a3a0-dc64fff7d5e7",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "061d6dac-2fcc-417e-82cf-5d9ccaf65bbb"
        },
        "item": {
          "id": "ae1bc9ec-7ab5-4135-8240-6a242c439876",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7c24d80d-7b14-4caa-904a-0369424e79ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b77e0d-c5d7-4f62-96aa-02948ae24fd4",
        "cursor": {
          "ref": "84660b03-00a0-45d1-98a2-7a1223c90209",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e8b66db1-cdf9-4c7f-bae9-1aaf9126718b"
        },
        "item": {
          "id": "88b77e0d-c5d7-4f62-96aa-02948ae24fd4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "155987cf-89b7-4471-bd83-fda7a726f41b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0dc803-8231-49af-b365-c0c9f38f6ded",
        "cursor": {
          "ref": "7fed9a8b-7a93-40f1-b942-bf58e9a48cea",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0286e127-61e7-4bac-a1d9-5ca9289d96ac"
        },
        "item": {
          "id": "bb0dc803-8231-49af-b365-c0c9f38f6ded",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8daf3b2b-8877-47b2-97cf-17a8e20193a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912083e8-bfb9-465b-8e54-270601f7046c",
        "cursor": {
          "ref": "c4a9c33f-612e-4db0-8e1f-6f634f7d8a0e",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "fb8db9cf-11a7-473d-b655-c5fbcfc2d8c1"
        },
        "item": {
          "id": "912083e8-bfb9-465b-8e54-270601f7046c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2b476047-d60b-4bdc-99d1-dcb249acd2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a08f47-f8f4-4e64-8541-3df466f2e854",
        "cursor": {
          "ref": "6397f462-c561-43ac-8403-5422ac4a2ac7",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "96277f4b-de5d-4a81-8a9b-b8aa98fd7e21"
        },
        "item": {
          "id": "06a08f47-f8f4-4e64-8541-3df466f2e854",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8208d225-258d-481d-b382-2593158e0ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5fde40-5b0d-4496-bed0-69e262e1bba6",
        "cursor": {
          "ref": "a7972110-a774-48ec-b560-5e0f4c19cddd",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a3486a7c-69f8-4cae-8d60-b9eab0dc276a"
        },
        "item": {
          "id": "3a5fde40-5b0d-4496-bed0-69e262e1bba6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "cbd6f91c-0c4d-4d10-b760-9f21e3073609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feda19ae-296a-4e59-a3fc-4f1f9d24cd72",
        "cursor": {
          "ref": "ce9ff639-63e8-4c6e-ab4f-c1d7146a8dc8",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "89bf4eca-7a49-467f-8077-dc6fd0386d38"
        },
        "item": {
          "id": "feda19ae-296a-4e59-a3fc-4f1f9d24cd72",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "86bb3724-592c-4c1a-8d09-78f80065894a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee3b71a-1fe4-4f81-93c3-2d6d802c7956",
        "cursor": {
          "ref": "a52a8bdc-4931-4acb-b8e5-9c5c7eaee2f4",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "28aede46-3a6b-4d76-b15c-e434eab21154"
        },
        "item": {
          "id": "1ee3b71a-1fe4-4f81-93c3-2d6d802c7956",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "99d72e75-3615-4d67-982a-a24a78c906d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89713b74-8ba2-4668-8665-2908a8bc7285",
        "cursor": {
          "ref": "d16ad112-39fe-4400-a19f-3fa3e58f942c",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4e21eb9e-41a1-46da-a710-c1dfaf7091e2"
        },
        "item": {
          "id": "89713b74-8ba2-4668-8665-2908a8bc7285",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f3377319-76c5-461c-988c-b3b66d09cc24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99fb1fb4-0704-4a27-8548-a906e3fd0887",
        "cursor": {
          "ref": "d92000bc-688b-42f9-b2bb-d09476346094",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e379f75a-8e0d-4a3d-a5b1-bc4b373b5931"
        },
        "item": {
          "id": "99fb1fb4-0704-4a27-8548-a906e3fd0887",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d629d269-2607-498a-b439-b57ef27b7c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f01902-f796-4592-a74a-237f240fd35c",
        "cursor": {
          "ref": "c1bff8ca-a94d-40b5-8ff9-5127f147dbd0",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "168f2922-b923-4864-83a7-1e1dbef067bd"
        },
        "item": {
          "id": "e7f01902-f796-4592-a74a-237f240fd35c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "208b8e9e-ecb8-45b5-bb6d-746620d9be3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cb1261-8364-4cb4-bac5-90ab7084c491",
        "cursor": {
          "ref": "c2796681-7479-425c-8f98-63d76d70ef08",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c183f33f-4fa7-4f5c-b998-ddac47d8d5e3"
        },
        "item": {
          "id": "c3cb1261-8364-4cb4-bac5-90ab7084c491",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "932575f5-2103-4594-8b1f-0cf9313bb58e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f45062-29b6-49f5-a357-a451f8488743",
        "cursor": {
          "ref": "610b963c-b2d9-4282-a071-f7a295490a51",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "393447da-d9ef-4886-b360-e17f931c5af4"
        },
        "item": {
          "id": "87f45062-29b6-49f5-a357-a451f8488743",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0c3673ae-6a77-41f0-bb08-91a8a1bf52cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b969958b-fd12-4560-a7f3-a2b2156f41ca",
        "cursor": {
          "ref": "007cb08a-270c-4be6-afe7-426911686ea8",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "1822703c-ed55-4508-8988-168556774549"
        },
        "item": {
          "id": "b969958b-fd12-4560-a7f3-a2b2156f41ca",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2e75db05-10b6-44b1-aa1b-1f5458ff1796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da2554e-0cb1-4052-b7b3-8c90c64330ab",
        "cursor": {
          "ref": "5d75f454-41c7-454e-90bf-76eb69360fca",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c02358d7-b1b4-4dc9-9cb6-949180cbb3cf"
        },
        "item": {
          "id": "2da2554e-0cb1-4052-b7b3-8c90c64330ab",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "162ff0ca-735f-4ed8-b44a-64a24105383b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4344cbd6-421c-4426-b2bb-b7378c2315f0",
        "cursor": {
          "ref": "6d5409d8-b220-4c43-a137-8bf59aa9c757",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "dba04b31-1006-4f0c-b2c8-099ea1c08f54"
        },
        "item": {
          "id": "4344cbd6-421c-4426-b2bb-b7378c2315f0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1c036e9d-ce5b-4a14-aa70-e8ce3954d8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c05c20-69b4-4295-9faf-9c1a53859de2",
        "cursor": {
          "ref": "4d839b8f-f28a-4f0a-9e3f-2f50d5e17401",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e04ec228-9974-44dd-a6ee-7d18a1a0a042"
        },
        "item": {
          "id": "55c05c20-69b4-4295-9faf-9c1a53859de2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "56b2d229-5e32-43a2-959c-0074bf65dbd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655f60e6-1716-43f7-ad06-386db1c8ed7e",
        "cursor": {
          "ref": "8ffde754-e0d6-48e8-a5e2-07990b13491e",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7921fd5e-c7f3-489b-8a78-83cc0e5d1161"
        },
        "item": {
          "id": "655f60e6-1716-43f7-ad06-386db1c8ed7e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a8bbddc1-dff2-48e5-a936-9190c50df49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d680b518-064e-4468-b6cd-051f021da527",
        "cursor": {
          "ref": "68d13077-9839-402c-9ed0-1de13071e981",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4970e6fc-a04f-4c7d-b3d8-39fcadbcc7f8"
        },
        "item": {
          "id": "d680b518-064e-4468-b6cd-051f021da527",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c05ac09d-1227-4b21-a639-af2691656b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0f1c4e-107f-4621-a5a2-e74150e3937d",
        "cursor": {
          "ref": "f2ac9160-e772-48c7-9d8b-c2c1d74d4d82",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "da3b8511-b0d8-4cb2-b517-c376bdfdfe46"
        },
        "item": {
          "id": "1a0f1c4e-107f-4621-a5a2-e74150e3937d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b9216c0b-8180-458c-bda5-74cef1ac0461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586d279d-ab21-40f3-823b-a80185496569",
        "cursor": {
          "ref": "aa5a35f1-6d0e-48c6-af8b-e56a88606b97",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6fe195fc-090b-4dce-a136-022f53c954cd"
        },
        "item": {
          "id": "586d279d-ab21-40f3-823b-a80185496569",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "97398784-bb74-4d43-8483-2f5023c3e2ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb394178-c316-41e9-93f0-d05f76e200da",
        "cursor": {
          "ref": "2c5a1aa0-907a-4f30-bc2a-aa70dc1e4d04",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "adf5fddb-c279-485f-b39a-e16cfa4468cb"
        },
        "item": {
          "id": "cb394178-c316-41e9-93f0-d05f76e200da",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d8efaa05-7f77-4e8e-9298-83df80ecd29f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c640fb-7cc1-4375-9435-78578d7d34a7",
        "cursor": {
          "ref": "bcab76fe-8749-4da9-9607-a64f6b128476",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7973188a-bdf8-49cf-8471-afd9a6368ae9"
        },
        "item": {
          "id": "92c640fb-7cc1-4375-9435-78578d7d34a7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9e1a4e41-a1e4-4946-920f-f9e13d929a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12afb015-3cc1-47f2-a939-40cea3d916dc",
        "cursor": {
          "ref": "6803287b-80d3-407b-a453-dec7b2d9d4ee",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1fdd9c45-dbc9-41c9-a74f-5ba32dc67c01"
        },
        "item": {
          "id": "12afb015-3cc1-47f2-a939-40cea3d916dc",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f16a7430-f074-49c3-bbf4-2f236d64fe2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500f3cec-5afe-423f-95a9-18b3765e7c3f",
        "cursor": {
          "ref": "64d268cf-558d-4b37-9845-f8496bb0f848",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "dadbb228-cd79-4a35-9fab-c80df7009106"
        },
        "item": {
          "id": "500f3cec-5afe-423f-95a9-18b3765e7c3f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a1482fe0-b9ee-439b-8bdf-3d5bbafa7130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ae3024-f4a2-4c6e-8510-5f262d8af58b",
        "cursor": {
          "ref": "6bef1746-5ba8-4ac6-8962-8e7aa2e51dbb",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "fe451785-32b3-49a9-8274-57244ea3a9b5"
        },
        "item": {
          "id": "82ae3024-f4a2-4c6e-8510-5f262d8af58b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ba0f5b40-2b8f-48e4-9468-081609860dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f05aad-e92b-47d9-b992-8d9c6255184f",
        "cursor": {
          "ref": "d914d556-3bac-42e1-8444-42ea1f763751",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0d74c012-6a00-458c-8067-579eea1882d4"
        },
        "item": {
          "id": "d2f05aad-e92b-47d9-b992-8d9c6255184f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "aef8c469-fc44-4828-8f5b-53f6ca7d9d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93115c2b-6928-43a1-82d3-5af363c162ca",
        "cursor": {
          "ref": "98d85db6-7268-4aa9-8bc9-44377b447d87",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "74e2b3dc-277f-4457-ba85-7ed0a0a092e6"
        },
        "item": {
          "id": "93115c2b-6928-43a1-82d3-5af363c162ca",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "62ed6dcb-b469-4e95-9555-7b34037c76dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5cfa932-4f81-479f-a062-82bb166250be",
        "cursor": {
          "ref": "85e1b06b-60eb-4ba2-a63c-d755ba34548b",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d3a24d88-9d2c-4590-b9ca-7b64206ee572"
        },
        "item": {
          "id": "f5cfa932-4f81-479f-a062-82bb166250be",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "19e2adba-afa3-43b6-af5c-6692b9bd2194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7234022c-284a-43e9-ac79-499cbb5d8841",
        "cursor": {
          "ref": "2e509946-7a3d-477b-aa2e-22eaabf10ca9",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "6362b849-925f-4cd0-b8e3-598cf4957439"
        },
        "item": {
          "id": "7234022c-284a-43e9-ac79-499cbb5d8841",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "787014fa-1758-4637-a971-2b52e8d99913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5906f4e8-84c5-4610-b8c9-2554f20972a6",
        "cursor": {
          "ref": "84e8a6a0-476e-4d1b-b9d9-3678f584c370",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "297d5738-ac22-4694-8fd8-9417b54daf63"
        },
        "item": {
          "id": "5906f4e8-84c5-4610-b8c9-2554f20972a6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6d6dd72d-d18d-4754-bf8a-26a08897538e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0742708a-15ef-437a-8e21-5fab0f0cd56e",
        "cursor": {
          "ref": "ab238e31-1bee-46bf-b965-6cdc067c34ec",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f0825442-7516-4199-9e69-9f0abcd1bd15"
        },
        "item": {
          "id": "0742708a-15ef-437a-8e21-5fab0f0cd56e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f9fec68a-89ba-423b-9eda-5e11f7c1c6c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3044ac9-e30e-48c0-a5e1-3a4c77f4fbcb",
        "cursor": {
          "ref": "695f13c6-b202-4442-94aa-da1ac5a56275",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b04c1850-7557-4883-a474-a601540b91c5"
        },
        "item": {
          "id": "f3044ac9-e30e-48c0-a5e1-3a4c77f4fbcb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a6afca29-6580-4a5e-885e-27a9a53774b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4dd4f4-145e-4223-8202-3151928d780f",
        "cursor": {
          "ref": "00c6beba-437b-48a5-ab2e-74eb4e2ede27",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e925acda-ea89-4ae2-9388-56cb519ff491"
        },
        "item": {
          "id": "3e4dd4f4-145e-4223-8202-3151928d780f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0fa12fb4-989c-437e-a4fa-3d9bf0e7bfcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61754c60-3c84-4fb8-805f-9325a66130de",
        "cursor": {
          "ref": "6a895a9f-fd57-45fc-b3db-4fa692aee1d9",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a3b20013-377e-4d02-a67a-23ebf5ebb770"
        },
        "item": {
          "id": "61754c60-3c84-4fb8-805f-9325a66130de",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0ac3c0b7-8ce7-4cd3-a598-ce93d9235223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1c2986-a5fe-4a7e-8ed7-d1d2b3b5a845",
        "cursor": {
          "ref": "d0a06575-4edf-4023-b5b5-c8f61a44686a",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "19f7cc6c-dcad-4e09-8fbd-9d774f8ad207"
        },
        "item": {
          "id": "0b1c2986-a5fe-4a7e-8ed7-d1d2b3b5a845",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "769e9d25-02fa-491e-a1b9-8f6b0f95e63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020048cf-13ea-445a-a975-3ec17d4f23a3",
        "cursor": {
          "ref": "f14d747b-0b20-4600-b98a-3e729e4fc2d0",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "aca57a97-8ad5-429c-b95f-ce9821963853"
        },
        "item": {
          "id": "020048cf-13ea-445a-a975-3ec17d4f23a3",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4b7ea2db-0f47-4f14-958e-81a08a97c000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c791062c-a557-4768-9f26-52aaa47da164",
        "cursor": {
          "ref": "b4373f67-881f-4cf7-822a-5d59b2c274a6",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "be31c165-dcd7-46a6-844d-7697b5422968"
        },
        "item": {
          "id": "c791062c-a557-4768-9f26-52aaa47da164",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5309b693-5371-4d7b-87b8-2a911c0374a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fb3966-0941-4ad0-8ff9-0fc593f4515a",
        "cursor": {
          "ref": "1f317ed5-174d-4f1b-998b-e1de06ab26f6",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "524460e4-47e6-49f9-bc8b-900c19905200"
        },
        "item": {
          "id": "d4fb3966-0941-4ad0-8ff9-0fc593f4515a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "234140c2-9d58-42c0-ba57-7e1c7fb5ac00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd08c031-7598-4cb0-af83-20a60c4a17cd",
        "cursor": {
          "ref": "b29d9378-5cad-48c3-9104-79597448db42",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "161f0d0d-5b76-4bf8-8c5e-0d3ab93d9792"
        },
        "item": {
          "id": "cd08c031-7598-4cb0-af83-20a60c4a17cd",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e952c7b2-ec48-458d-93fa-8fb4ae800952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0539c76-aeb4-4753-8596-b884746f7f55",
        "cursor": {
          "ref": "ff830488-7308-46ad-b7b0-e11f5ae97724",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "59fc5c0e-b327-4cbf-bc58-42813279da84"
        },
        "item": {
          "id": "f0539c76-aeb4-4753-8596-b884746f7f55",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "cd121dc6-5d2f-41f5-8d6b-26a52c391945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7453215-31e8-4d52-856c-d8114f40b608",
        "cursor": {
          "ref": "29f2bd2e-4c98-42cc-9953-8365293aefa5",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f2f146ab-f8bc-403d-9905-667007c6e126"
        },
        "item": {
          "id": "e7453215-31e8-4d52-856c-d8114f40b608",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "52ebb09a-82a6-40e8-9d37-239715f41aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b142ef10-3339-4f97-88d6-c317f8d1c16b",
        "cursor": {
          "ref": "74a36f46-19dd-4421-9584-5dd8c8ef6eb3",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b212f89f-7803-4611-9c85-5432b07b5984"
        },
        "item": {
          "id": "b142ef10-3339-4f97-88d6-c317f8d1c16b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "239574c9-8b12-484e-a3ae-b767c2eb40bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31f54de-400b-459a-ac17-dc3c6b1e9dd2",
        "cursor": {
          "ref": "f261f8ab-fb7b-4301-a34d-a2e3aee92e91",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4d2fac85-35ff-451b-9c2f-301915ca347a"
        },
        "item": {
          "id": "d31f54de-400b-459a-ac17-dc3c6b1e9dd2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8caacf34-4e07-4fae-87c4-dbf6d0422a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8ba593-f11e-4775-a430-d8044e43c972",
        "cursor": {
          "ref": "4aebf47c-cef5-4de2-8e52-d42800478c78",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a08c7c38-c781-4ac6-b8b3-e7ce1f4021ab"
        },
        "item": {
          "id": "3b8ba593-f11e-4775-a430-d8044e43c972",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1017d22b-74c0-4e9d-8851-209777ac4219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ae876d-1e4d-4b29-b2f3-ca84e30a0843",
        "cursor": {
          "ref": "cf9b6773-f356-4483-8ba2-2751933500fa",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6cf1f153-ce4f-4078-b788-2df30845c3b8"
        },
        "item": {
          "id": "17ae876d-1e4d-4b29-b2f3-ca84e30a0843",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "961b01bf-4e5f-4e9a-a88d-64ddfe8635c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0c9d05-d2de-4943-8233-53ab8b6c89a3",
        "cursor": {
          "ref": "4959b3f1-6e44-4b12-a2f1-762b0a9bd1dc",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "16025bb1-f5e9-43f2-a4bd-4bfc991d2a81"
        },
        "item": {
          "id": "7f0c9d05-d2de-4943-8233-53ab8b6c89a3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "364606c5-a80b-41b7-ac27-6bdfff336233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de32b54-d9dd-4053-ae70-a653e5a1fc73",
        "cursor": {
          "ref": "f7372d06-cab2-45fb-8d29-db26e40fb5d1",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7bab7bfc-f386-4d72-8808-bccc02e46e2e"
        },
        "item": {
          "id": "6de32b54-d9dd-4053-ae70-a653e5a1fc73",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e138842c-7173-4666-b524-2a4ac4409a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23e0d24-8baa-4764-9af0-62797e552b65",
        "cursor": {
          "ref": "073ff814-3a8b-40ab-a715-da1b9ee81203",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f63db2a2-85dd-4c22-a07c-05dfdae58afb"
        },
        "item": {
          "id": "e23e0d24-8baa-4764-9af0-62797e552b65",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2f6e1f0f-c25f-4dec-8b32-6376790aadf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b78150-06a2-453e-a242-ac06c54014a3",
        "cursor": {
          "ref": "0d2e3163-4e29-4428-bb8e-58f5c707259d",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2b00f142-0691-4869-8dfb-bf7c85aa010a"
        },
        "item": {
          "id": "40b78150-06a2-453e-a242-ac06c54014a3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7862e669-b8dc-446a-950e-72f287e63ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4126331-5bd2-4d02-8ca5-346073e5474c",
        "cursor": {
          "ref": "b39c53db-c0a4-46c3-a44d-388851a2b14c",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "547af0ee-a459-40b8-853c-70d017f0d7f8"
        },
        "item": {
          "id": "e4126331-5bd2-4d02-8ca5-346073e5474c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b4b04b42-6e49-4379-b01e-6058d544adee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9bb7eb6-e97d-4a47-9edf-d0d6a5ce106c",
        "cursor": {
          "ref": "873d0145-33f8-43ef-bfc4-c887075debce",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fa0bdce2-ef9f-4443-bf7d-d5bc0d167cdc"
        },
        "item": {
          "id": "f9bb7eb6-e97d-4a47-9edf-d0d6a5ce106c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2c8e4374-b427-49cc-ba38-ef7d947bbbce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ebae5b-033a-4118-9d80-22976318c9d6",
        "cursor": {
          "ref": "3eec40f6-e8b6-40f2-92f5-04cabab9339a",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6a2d22c8-deb2-4713-8cec-cd55145b2efe"
        },
        "item": {
          "id": "50ebae5b-033a-4118-9d80-22976318c9d6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3807609f-36db-47a6-970e-4e4f7b0ff14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ebe6f5-cf23-4d60-a234-e44981124020",
        "cursor": {
          "ref": "b15ea844-97b3-4224-8d84-f5959629a7d3",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "419ea226-1245-4114-ba32-79f0d7e6d25a"
        },
        "item": {
          "id": "21ebe6f5-cf23-4d60-a234-e44981124020",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c726992a-a7a1-4d29-b86f-9444bc574398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b73a4f-3426-454e-b7cf-c2f2145b51ad",
        "cursor": {
          "ref": "9306881f-2e72-45c5-b2ae-78c6c42004da",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "48e9fef3-6d72-40e9-8273-3c6a4b2a8841"
        },
        "item": {
          "id": "c2b73a4f-3426-454e-b7cf-c2f2145b51ad",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "bcd05bc4-5dea-4bde-899a-7a52f07abd48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7169dc-9e0d-4041-9b9d-213205925b8c",
        "cursor": {
          "ref": "c41e1cdf-cadd-4dad-b0aa-1c791122a260",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0aa68b09-4440-4a0d-b136-0c7d73c81a09"
        },
        "item": {
          "id": "3c7169dc-9e0d-4041-9b9d-213205925b8c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3b5e06de-f38e-40e6-bd44-5fda35c4a59e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97aed380-fe9d-4b47-8528-d9fab03ab3ea",
        "cursor": {
          "ref": "dff39830-2d8f-4b8c-93f5-7985472cd83d",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9a44e753-0cbc-48e7-ae42-7705ac5ba0f4"
        },
        "item": {
          "id": "97aed380-fe9d-4b47-8528-d9fab03ab3ea",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "023469d4-733a-4cc2-ab1e-2b35af2c3d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64487ed0-bfd2-499d-b030-44613a2c2d48",
        "cursor": {
          "ref": "1373eedf-31b1-4045-9cb5-eb8007d8c782",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "5797fe29-b67d-4786-b5e4-bc90fbe237f3"
        },
        "item": {
          "id": "64487ed0-bfd2-499d-b030-44613a2c2d48",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "aed26e63-672e-4e30-ac74-4f7ee22ac545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e07f8e-4bb6-47b2-946e-56f932af9163",
        "cursor": {
          "ref": "0513b24a-5ea2-46ec-9cc1-a234c0bde114",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b1d8b046-4418-4ceb-adaf-36288046c79e"
        },
        "item": {
          "id": "40e07f8e-4bb6-47b2-946e-56f932af9163",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9f2b04ca-c1fc-476b-8399-88782244a5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edc47ad-cc04-4a3e-9336-b51be16ba0fb",
        "cursor": {
          "ref": "49caa9af-b502-494b-968f-fbc0f48fa68b",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a4fe2d88-9b25-425b-8718-d3567513d509"
        },
        "item": {
          "id": "0edc47ad-cc04-4a3e-9336-b51be16ba0fb",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "63df3a8e-d6fc-43f6-9427-47ba24fc0500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c871b81-8771-4d93-8cf5-58003b913eca",
        "cursor": {
          "ref": "447fadd1-f319-4366-b7f2-5f18a887b76d",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6bb56d01-6309-4f94-acd9-1078aa5af9b9"
        },
        "item": {
          "id": "8c871b81-8771-4d93-8cf5-58003b913eca",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "69c90d1e-d329-4fc0-9c65-57d76f121947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec242e04-2493-4422-9542-ee1d84284a30",
        "cursor": {
          "ref": "8fa26a4e-5063-408a-ac07-a8e41eda4483",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a92053a6-34e6-4b2f-8c46-e031c3600c47"
        },
        "item": {
          "id": "ec242e04-2493-4422-9542-ee1d84284a30",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e592d123-1d27-4a45-831e-fb2d0ce5b315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5664bf17-6102-4c2c-9bf7-3284634d4f4d",
        "cursor": {
          "ref": "89090f33-7ce2-4c05-9c24-86e0a2da245f",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "bf3e6593-ac51-4681-bf5c-f37e1996029d"
        },
        "item": {
          "id": "5664bf17-6102-4c2c-9bf7-3284634d4f4d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1e54302d-cb77-4a1e-a3f8-52bfc16073d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b082a09f-b8af-4817-b8b8-ddb0a6cac29e",
        "cursor": {
          "ref": "589da70c-494f-47d0-bbe6-3a7fa8b62462",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e4f6bd5f-e20d-4097-9e18-05e326c37f44"
        },
        "item": {
          "id": "b082a09f-b8af-4817-b8b8-ddb0a6cac29e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4b2d0264-b534-44a0-8161-80bf29b77f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2518853d-9769-47c5-84ce-ef14f8c4e4a2",
        "cursor": {
          "ref": "738e0f90-3f4e-4c72-9ee2-4f9e7b49d4d2",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "bebfcb0e-791b-463b-ac9f-1b0798924998"
        },
        "item": {
          "id": "2518853d-9769-47c5-84ce-ef14f8c4e4a2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "cdfcedd6-fa71-4cae-a610-b740057af048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17b8914-9a63-4e37-97ea-76151a0a2c57",
        "cursor": {
          "ref": "8e6b8998-a10c-4f87-b8db-21730aceb4fb",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7e863682-6654-41da-b6ae-08909836c004"
        },
        "item": {
          "id": "d17b8914-9a63-4e37-97ea-76151a0a2c57",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "26bad285-c638-477c-bc0f-3e721347128d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67318496-3b91-4dcb-97e6-1781406ca43b",
        "cursor": {
          "ref": "a83b090b-0c67-4b64-b996-9d9e6a62ef0a",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "964822f2-08fb-4c3d-97f8-72ca6eb8279c"
        },
        "item": {
          "id": "67318496-3b91-4dcb-97e6-1781406ca43b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b1fb2481-ac26-4b90-87fc-472308b026ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5b9ca9-de04-4511-9f05-2dc0e5159da1",
        "cursor": {
          "ref": "5778ade8-d607-4fae-9ebf-bf31a96f263e",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "09b654dd-9c27-4e97-b1e8-f8e30787b05d"
        },
        "item": {
          "id": "aa5b9ca9-de04-4511-9f05-2dc0e5159da1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9b07427b-a014-4974-b0cb-ead4d466b924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52febbf3-ee41-413b-b595-2e038540f864",
        "cursor": {
          "ref": "cd4c7590-bf0b-4a5a-a9b9-af8974c212ce",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1af4bb49-fcbf-484d-893d-1025b65d4589"
        },
        "item": {
          "id": "52febbf3-ee41-413b-b595-2e038540f864",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "57e98a95-8e9e-44e5-889e-f67d11bd1a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fe7b78-b7c3-4513-a753-41aad67c2f8f",
        "cursor": {
          "ref": "9702c369-ffe1-4b3b-8ef7-23ab4e9509b3",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f46fd45e-1d6d-4ea9-90a1-bb73f06e7c5b"
        },
        "item": {
          "id": "e0fe7b78-b7c3-4513-a753-41aad67c2f8f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f632b592-2588-4bf6-ab6c-36c396e00b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93459e1d-5f9e-4791-be9a-4d2deac06eee",
        "cursor": {
          "ref": "8c4dabd5-a02d-4aa9-b4eb-97beb72eacfd",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1367b5e4-67f9-4e6b-98d0-a6f93c6f7bfd"
        },
        "item": {
          "id": "93459e1d-5f9e-4791-be9a-4d2deac06eee",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "667fe217-9a80-488c-b982-6e6d1178dd6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca1c597-1823-42ae-9f8c-f8e86a7168d0",
        "cursor": {
          "ref": "0afc870d-0d92-4010-833f-df6bd75fc8f0",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5c77a3e5-b01d-4ca9-87d2-1abb202a3fbf"
        },
        "item": {
          "id": "aca1c597-1823-42ae-9f8c-f8e86a7168d0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d9121472-90d5-4911-a3f8-1f46cdba6e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c515f769-efeb-44f0-b297-b482f387696d",
        "cursor": {
          "ref": "e0767358-22a1-46ea-810b-42083cc46483",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2a611396-8f37-4901-8565-ce966b29a2bd"
        },
        "item": {
          "id": "c515f769-efeb-44f0-b297-b482f387696d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1aad8658-96d4-4e79-88c6-30619a28a743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "674fdbe7-87d8-48e2-95e7-72412b344329",
        "cursor": {
          "ref": "2c54fbdb-1dc0-424c-9271-2d66a2613ff2",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "92a84616-515a-4ada-a879-78b73c1a1b35"
        },
        "item": {
          "id": "674fdbe7-87d8-48e2-95e7-72412b344329",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "30d8aeec-e457-4881-a455-252e6c024e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "fef6a59d-bba2-4f0a-82d3-8b489c368fdb",
        "cursor": {
          "ref": "11c8957b-51ff-4005-8776-4c6863f13ceb",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c4a8dfd3-7c8d-4dda-b9fe-3af327b58022"
        },
        "item": {
          "id": "fef6a59d-bba2-4f0a-82d3-8b489c368fdb",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6f0362fb-72ef-484e-a3d1-f9817d26aa27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "7a9d39ba-530d-4788-8693-784893449548",
        "cursor": {
          "ref": "6ae3799b-8bdc-4787-a6cd-c5c42e7228e3",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6bb451cb-4f1f-46b3-95ae-aa3f8b69913c"
        },
        "item": {
          "id": "7a9d39ba-530d-4788-8693-784893449548",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b18cda80-e160-4584-8f02-b6db19c41c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "8eeecceb-e613-439e-aa40-4613a7aff805",
        "cursor": {
          "ref": "421bf324-a0ad-459f-97e5-3b13d7240d61",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c77fbb66-0fe1-4680-bf72-66531a4cf2e5"
        },
        "item": {
          "id": "8eeecceb-e613-439e-aa40-4613a7aff805",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "05de2aef-4654-4a1b-9b53-3ffe1ec31e87",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eeecceb-e613-439e-aa40-4613a7aff805",
        "cursor": {
          "ref": "421bf324-a0ad-459f-97e5-3b13d7240d61",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c77fbb66-0fe1-4680-bf72-66531a4cf2e5"
        },
        "item": {
          "id": "8eeecceb-e613-439e-aa40-4613a7aff805",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "05de2aef-4654-4a1b-9b53-3ffe1ec31e87",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308a8877-f279-42f6-99db-09bebf624c2f",
        "cursor": {
          "ref": "b18a1f71-9278-4c9f-9add-581cf38be633",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9013dfbe-1953-4d88-9fc5-4a2149c022fd"
        },
        "item": {
          "id": "308a8877-f279-42f6-99db-09bebf624c2f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "832fe350-27b8-4a7a-a1db-cdf2b3def6df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b031bf-cf40-462e-af8e-0f282574e0a4",
        "cursor": {
          "ref": "d5a75aa0-23fd-4e46-b87b-dcf91653f034",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "bfd74283-7442-4d58-869e-1aa46bfa0182"
        },
        "item": {
          "id": "43b031bf-cf40-462e-af8e-0f282574e0a4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "bea9c351-1b92-44a2-92df-219219612bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}