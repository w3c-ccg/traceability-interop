{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "45bbd64d-d54b-4705-866e-525ef27d1207",
        "name": "Clear Cache",
        "item": [
          {
            "id": "15b06897-b928-4ff1-97dc-9796694eb7f0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "137fae50-079a-4ab9-aff0-eb431c2f703e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1131db7c-1b44-498c-8b87-c663929a4fbf"
                }
              }
            ]
          },
          {
            "id": "eb6ab28f-8e34-4aa1-be15-24b6aa9b412c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2c8cac02-8823-43d0-b819-d7ee8da1b48c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ee953c7d-1f89-44fc-bd6d-b2a9b5b92558"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "85bf396d-e183-43fe-8eb1-d689f47c908a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "dbaca1b3-02b4-45fd-ba3a-c629610d51b7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7fcf30c5-ff6b-4dc5-9aa5-876e4d553be2",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db7e93f5-5861-47c3-88c4-449dc1582ffa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f355e2f1-80a3-4836-81a3-649e487f7240"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e5c85df0-8cf9-455c-8d85-c0fe65f812a9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6f07ac24-5b42-472a-bfb4-1edbc8826748"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c493417e-ba92-4860-b820-6f6a946a3a4f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6c41c737-fb20-4b43-a119-82dcf688e40f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28b2a950-4970-4326-a34f-137d46c1d0d5",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b32d3c85-eb86-4340-ab02-7d47268fd5a0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18f0429f-9d67-4a7c-993c-04d87f4355cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d8572ba6-eafe-432b-9aab-891c75253560"
            }
          }
        ]
      },
      {
        "id": "645e40af-6ea4-424a-a464-c24ad009f134",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "68279c23-d066-406b-9c39-f326f130eb45",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b0d2848e-d2b1-4a06-95d3-0f661a1208a6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e95c82d3-91f6-42c2-8d7d-3b93e3c0f415",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c01d0f-7ace-41a4-862f-4f9583c530fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71038cf9-51a0-4c41-bdb1-5ddf4497f30f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099d66b6-b8e8-49e8-b800-f713952da6d5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bad8f52-e620-4496-bcb2-0c6e68a50e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "367b0cb7-0858-44ba-b5be-016672c3d367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d12df6-72e4-44eb-a298-424661662651",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fa0239-b03b-45f8-bd0b-8181c6bb2aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d79f831a-9190-49ca-a900-a9d5a0f3dc52"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2f7de6c8-5f45-4db8-a81d-7544322ed5d6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e0b94253-c4f6-449e-bdf5-ca017cddbbba",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d170dcd-912f-4e5e-9420-b0b47741e123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe0ee3b9-bc5c-406f-bd40-452e81bde451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b242e3-395b-4ce8-b08b-d3f6a43eb00d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "805c2cb6-43da-4364-a570-02a3a023f4b6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "16596f42-979e-43ce-b774-63dcf2cc18f3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0b91791a-31bf-432e-a0eb-127b7fbf3f7c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "38711bf4-80bf-49b9-83ff-96a7395b51f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "24119b26-cd52-44e8-98dd-88cad40e1ec3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "69add223-b909-4a87-a132-779c0f3a8d19",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "21d4de84-304b-42ac-b3d3-ba06fa43be3d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86d530b7-228d-4531-a8c0-11981c2e0d00",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6aac3f30-5be7-4357-b554-01b5e6dc8ada"
            }
          }
        ]
      },
      {
        "id": "93a989a4-cd91-46a0-bb4d-a730578ba25e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f43114c1-4107-4c1b-bc78-bdbb7ebb96f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "13073d52-5b9b-4010-b537-ddaa930912cf",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e238077f-0353-42ef-90c0-28b2941c7859",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "214b9722-6b19-477c-8f7b-82dfb83be01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00995a28-32f5-43c5-a856-8ad8f6429be2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2710c723-edf7-4d1d-a19e-e8d7df632375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c559279-69c1-49dd-a21c-9c4356e445c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff786c11-1e69-40d9-956a-cb2f2a8a4a1e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "057d5f0e-162a-4c1c-af72-cfa6e1cd8d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "612acad7-ed54-4f4e-94c1-8108cdeb0e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c275c7e3-55a2-4419-b8d7-e2d85f5757ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5422e56-c508-488a-95e8-0efccfa15fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7067073-43d7-4424-a258-01696f9b78a1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b29b41-09dc-41e3-ad1d-f1f99e5f4ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a410ed2a-2b1b-45ac-91f2-f3407fb04542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0696bfbf-8910-447c-87f9-bb8153fa3578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbd8a688-eba7-4b70-b395-229d53e14edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e716b7eb-b3f3-44fd-8758-d8b792220b45",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "749a49fb-0bae-4af6-95b9-cac13ec40939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c86f696d-2633-438e-a55b-5a9eef021496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f5467b-b189-4fba-ab61-76c4de4fe572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92f179b1-a838-4967-a7a4-139af78e6f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2fb09b1-ba2c-4a42-819d-d588953804d8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e82f7f1-fa19-41ae-aa85-f010d874bb69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c2a8834-1b10-443a-a748-f5a6678ed3f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf31526-c554-4c4f-bb5a-3f7c1e468688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d22eecfb-3aea-4197-be26-3cfe9a56b7b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6465570-8a48-4a78-acef-ae0bdb8fce83",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99898bdd-d665-4afa-9826-b42663f6671f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9624378-66f2-4c0f-91b4-2501af5b57d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85d8e57-d34b-42a2-87e0-45cd7cd57e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a82ea304-0b0d-42da-ba65-8fcb36a1b0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62a0365-a20f-4c43-9716-4f8516877c99",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45ce4ca-8679-4ab2-bbc2-aa08830cc14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38ddd523-581a-497e-9e84-ecaddd69812e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7f0f4f-fb90-4474-9f87-77d2e0ae7d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82baea2e-f81f-4e3b-8201-57852e346c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63ead3d-d407-4b2a-a5ab-fe9f62d6b040",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8e7da5-8a2e-4acf-af02-92c3097a7efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe3f438-1877-4ec0-b6a6-673c64acd996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557ed89a-0861-4add-b9f3-4c26c97807fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff94e82d-86dd-4aae-b8d6-17eef7a9db8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a60e15c-a25f-48ea-bc4a-020043b0a952",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c25a10c-3251-4e09-88db-a6669f63e348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f50391f4-1dd7-4c92-a185-716ecca52913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc9af5d-1078-4e6c-9d2a-c01c5822f60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd4a744d-0309-4d46-9226-48b176aa7c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed95af0-5da3-41ff-b7a0-e46331328209",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eace7ee6-80a5-43a4-9b50-960114f21a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb95dc98-cf2c-431a-bd70-25ca921bf79d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5d3ace-1779-4a00-8d2c-880752ad4782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "defdecf1-22e2-40c3-b96e-e7fee40770d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3df1b5-9a7c-4348-9170-8404d520e345",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40abef80-8d8a-4cfe-b224-4329578ebf12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96596859-8427-4d3d-a58e-f7c0bd4f1dbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2bd19f2-4ddd-4680-9c35-8503c8e716ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd2bf325-96c1-4c2e-9328-731bfdfab19a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97a5240-1340-46c4-a738-ff0e0f242634",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "393226cb-9282-4647-8f6e-9ae8026f62d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c32b948-a77a-480e-a182-64b8ab51ac0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f6d12d-6f2c-49ab-a022-d8681fad64d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7303476-663e-4755-98cc-892eea65de89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4be1179-9ea9-4649-b090-b2e3579e3363",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d4c44c-546f-451d-ae92-28dfefd46a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb23e23e-9573-44a4-867a-adadca505fdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9befa5d-0727-4e1b-b476-964017ab2b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "507a2e47-97e6-4856-adb7-b70bf0ab4200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231dc0dd-8f00-43ff-8a96-c319c9881ae1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d23ede-412e-43d9-87b5-d21fb00082b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a27b87-673d-44d9-8830-67aebe234388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1568dd4d-351a-49de-83cf-21bf09024e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a7a1fe6-ab40-45ea-b222-059e37e59aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd0321e-35a4-4382-99bb-bd56cd04fe7d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b578a8fa-5453-4a60-83ee-dad8f3587d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e8b6c17-4161-47de-9d49-9474d800c063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222d0935-afd7-43af-b240-0341d23440be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e1056c9-4730-4621-83e4-4641ab6cd712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c43090c-a102-45ae-b5c8-da4320905ede",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1442e4-0381-46dc-9ac4-bc9a36d65280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5cc02b2-c5ed-4844-8c87-fe820f5dd918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1cbef88-5443-4f23-91f5-c12f1b4d719c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a2889ae-28df-4e2c-b290-b254b8e3b79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104b4f9e-b16a-496f-8a24-93a37cde5cae",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab453a5-9d73-49a2-bfbf-12c2d61d1630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58aec4bf-35e8-40b2-88cd-69ad4ea19353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab26d2d1-8325-48ce-b978-d789824eae5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2189fff0-950e-46c0-9f3c-c75d3de49283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cfd042d-b7ac-46b3-bf30-20854eef782e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03884fd1-d8b4-4289-bfd5-5d78340ab4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d01025e-f055-47d3-9b4f-c708c40d6885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94831a12-4ccd-4074-afad-4f54313eb688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5632d0dc-98a0-453a-be14-9adffb3afe30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c316b8c-a1e8-4b2a-b0dc-5ba91a64d456",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "122a7de1-06dc-4eeb-a199-3ad99552e654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c202e736-bfbe-4a9e-9688-c80248845b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e835da-8c43-45b8-bfc6-9aea8dd62668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07433253-833d-4b75-a0e7-2e212b50082d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf415e7-4799-42a4-9d45-34dec3aa3dc4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb22181-34d3-4de5-9c0f-f5251ecd44e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e6ad6b3-efeb-4ee4-8cd5-0c21f790cd32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39641744-8f7f-4ce2-b1c8-c2570f70ac70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0481e8a-5d59-4f55-afb7-2959eaca978c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d621dabb-1d5c-45ad-9aa2-df189e17e28a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ba6385-4691-4bc2-99d0-22662690f3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2652835e-e695-423b-a45c-7538cb03bded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47f54bc-3bc9-4c65-b518-d5061d65d459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b83f8e2b-0204-43f3-8097-3abdb78431d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbbbad0-12e0-485e-a107-add1090cf37e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c52a48c2-9a00-4b60-9f4b-8ded12c8666d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a86b7a1b-4338-45d9-9b8e-32e7be1c01ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1968f6f-278b-4d6e-8c47-eb48e66a5a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "188eb567-bccf-43a1-8e36-ddb6ce4862ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03569aec-43d8-40c5-8f56-904099015bac",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5411d1-db52-4685-86f5-33d4c3ac63ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be53333-b5c2-456d-856b-0fa021ef90e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa93eff3-1948-4950-a5fc-710b4e9b3701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5a2328-464f-4fa3-9525-33a537ba4486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caee9cd1-db0e-42e6-bf14-77adee36b892",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc13eccc-40f5-4e4a-959e-abe4aaa8d0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "765849ac-cebb-4d36-8c36-11ef808ba88f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d82821c-e6bb-45cc-9b6e-89131714e5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "81886ce2-9f6c-41ab-8e12-680320069ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e699a2-378d-49a5-840e-b9efe9ae74cf",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8655f2-c832-4fc9-9615-6103ce53b5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da43754-ea2d-4f0e-ae32-f5958f21a4c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4214a9-991b-4963-8f93-6cd6a61592a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "297b2e2f-7baa-448c-9fcd-435292450395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b4bcbf-b711-40bc-bf20-1210ffc80cbe",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46bb3008-d971-46db-8b29-42584697eafa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd02b70-3529-4fd4-bc05-10d2c59ce3b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2656c48-8df7-4a0c-afa7-6e3982eb3928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e57c23de-5e5a-492d-bcee-40eee64fc8ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4e429b-5d66-4c5a-ac7f-0dbbdc9934e3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91be1a90-3b58-4913-b6d1-90e985594b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8dc981-b50c-4e4e-bcbf-fd0a4374231f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca7001da-68ee-4545-8ab8-eccf282b887c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a9189fe-8d43-43bd-bd66-7018e2ecb074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb83d5b-2919-42da-ba86-14ef3390ff66",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36bf0eb-451d-47db-a598-32c41067bcfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9e11066-4ae6-4cf5-95e1-c20785789085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676b7c2d-32ee-4c49-8c8a-91e8f1069f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a527c87-01c2-4fc1-bacc-13e34248e19a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6d3338-dcae-4c7d-b154-fa42c1722893",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "807e297a-c1a6-4b9b-88b5-00e180a73556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6aceb52-ee95-4d4a-a4f0-bd7f24da83b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afdd8ba1-000d-4d73-844c-b4f93cce684f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "95fd4279-bbf9-4a67-832f-79e1a14be642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd3e3e8-25f7-4491-8dd8-48ba710f1af0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4881a67-5454-416b-8feb-313c910a56be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f2dba6-37f7-40c1-b63f-4824e87eb56b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ad088b-6362-4793-a01e-f2229d9f0537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "494e702d-1880-4a51-b7a9-e40d4bfecebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3560733-f200-4ab6-a4df-c843aeb8563b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23233a18-0367-4084-b2b9-e7969383444e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b97855de-c25c-4236-8bbe-d491af7a1a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6caae71a-7d25-44ee-8d50-7e8455164191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe4200d-074d-4fd6-95a8-68319f021761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b835cf99-8bff-427e-b370-60d36b526c2c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c21fa31-c104-47e2-b680-92644515cd38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb47f6d4-4e9d-4409-a189-f7e35012eeab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361748a9-10c8-466c-81c9-b621348b8afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95d71736-67bc-44a3-80f4-8dff74222bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5bbb559-3724-4424-b19c-f56bbcfa8a5a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "594e6505-45c7-4d48-b9fc-e5d3cdb54ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aeb5f07-af49-4035-9df6-1177bfd6c1eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02dfd0ab-b10c-459b-9b95-f922c21aad9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa2e10b-60b3-45da-af61-2d4626bd1b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1748dd7-841d-4923-ad11-13b969e14505",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e792010d-006d-4401-bf3a-b497a6db8297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40cb897d-625b-45c0-85e1-16c3c7e91d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81b50f2-8dfa-4e80-a707-4e35eb671a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33610f4f-7817-463e-adc6-20aaa5289057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16bc3194-92bb-4506-b63b-60cbe2700780",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce609f90-7b06-4946-ac92-f6b1e4813f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e0133ec-0b24-4a65-80a2-b4e3f5c40cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd47e82e-2eaf-4a4e-8fe7-a103b82d28ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1d7d1f91-bb0d-4e8f-aba6-20022afecfe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2ffd1a-0fe4-440b-b190-1016d37c7703",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a3980d-7661-46e3-9ab7-3f53408cdbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71df0c40-d476-41fb-8a3a-e59a73a6675e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ca9cfe-f07e-4993-8994-8dae9297faff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9fccf3f3-002c-4b05-abdb-4657de04e656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6650a2e5-4030-4b93-bf31-ac85d5c1f73c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa419aa-c3f9-4ccf-b8c7-6445819a9a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f45616-19d1-441b-975b-c3dfa8a6f2a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675f59df-4cbf-4c50-bbf3-eaf0c3b6cb99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ca01177-3b5f-4520-a0ae-943d4b81809d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efdc010b-d58d-40f8-9121-389d84ae4a11",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "605a011d-7a38-446e-9e8a-76c9ac342f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcdfc0ed-20fd-4724-bf04-fb956cdb598a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e496a9c0-9eaa-46d9-98f1-5c14812bf705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "75405e7c-ac8b-4027-a14b-b5e616a3ae71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db0aa1c-ebf0-4137-8a35-20102d411b96",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6cf630-17b8-4982-ae01-d0cfda657408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60e18e93-895c-4534-9e9d-bd3d09435e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7718fb-93e6-4d95-9c0f-2f79676b69e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d52f3760-90e2-4d57-948f-06c429fa396a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6820e27f-838e-41b5-95a4-a5c6832ce8d2",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "982f8cfa-ede8-4d6c-8508-e0048fbd096e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7023b214-c626-44a8-975e-dcb5df87b870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc32bc19-30fe-4c21-977a-b54ac92e1d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "685e580b-f941-4a7f-8d60-d637453667e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fcb72ac-9619-4830-99c3-7d3d84470794",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d26696f-1359-468b-9a8e-0697f352b238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bdfd524-0a04-47bf-985e-314e58c6ada9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f998f95a-dfba-4d99-a911-3f074909337b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f3a5240-5b1c-4b5d-87b4-62febdf256a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6f1cba-4302-4b5f-9f18-e0c489c4b7ba",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd274fb-163d-4689-a2a6-c0c201e017a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a776d92-f927-4a88-a56b-7417d5d7c647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a34550-3089-48a9-b639-c206d1849e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1cdb70f5-0e3f-4ac6-b0e2-8040e869c2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c6f9d4-4397-46d5-afcd-c9d608e911bd",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2069d832-62ec-4b56-96ec-11c5cdc463e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32471640-0615-4d92-a2d2-34a831ce5aec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e9fde7-aec0-4654-8dc2-fc306de19eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "51804c4b-81d1-4e5f-81c3-4cb7db3af38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6eb9bd-3de5-4d1a-98f1-722a77849263",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e8c7b3-3600-4421-8734-63be0726ba94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "480efc4f-b4f1-4f80-bc3d-9c540753b5f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0120f77-ec35-47a4-a73b-918ad2fe50bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b05c90f-4452-4c03-88e9-9540b9280e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00503279-6dd5-445c-88cf-971eefc442a4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4321e38-f2c5-4d44-a379-3495759831df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1caa59c1-eb56-4879-8f7d-18d9669fd79a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462b9b9d-1064-4a34-b9cf-b2d7d862eca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5df5c148-4422-460e-930a-bb9afd4ad04e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297fdf32-e649-48e8-9023-03ef1db2a038",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a80bae6-1458-4388-b563-d9b6df2d61ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6eef1c8-2519-4b0b-99e7-12e97a7645aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46806a84-718c-436e-8793-d434f0a43c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "13a0e3ee-1176-4a47-9187-bffdad08b3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929794ee-71e1-473a-8a00-abc2edbb51a2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a03bd1d-553b-4601-8e43-02c328df98e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff37425-0b99-4547-a931-b5eb0335b0e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c120a397-c404-465e-9c0c-4112e4db58a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec6be795-2d10-4dcb-be7d-7eab94fc5451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9648e67a-1fc2-44f2-b05e-19649208ace9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d8539a-23f1-4fac-bb87-6c51f8d2754c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e39ee3-f748-47b8-8b50-4e44611adf5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b002507-afeb-4454-88e5-883f9dc5d266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98892b5f-27a5-443f-923a-0376f2e66740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86aad85a-365c-4928-9862-f3c516f3addc",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd19d7c-19bf-4777-8260-a2b71e1d711a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b826ff9-aac6-4c94-b5ba-b2f7b610f2b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c3116f-6d98-4d46-bf9e-146570d8e05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31b286f6-7ebb-46ce-b6a7-84d32a28436e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c65d5b-7f2a-4f16-b87c-cbc371bb1f2f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d382993-da4b-4613-84cf-1e9011abbdd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "704963d8-cbde-4cf7-adbd-3a2cb405cf32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebde8207-0e3a-473f-93fe-c17bb7eec2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b813019e-83e9-405e-8cb4-d6a27d229a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd1a19d-ccca-437d-b015-4252932565d5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23dc3840-3fe1-4299-a127-11b078bb5c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c5401e0-bd6b-4aab-a7bd-e93953f9298f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7ede07-e6c8-4be3-b652-f06214c84f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a051e6f-9336-42fd-8aef-8ef9b5d87cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beed58a0-76ab-4926-9a01-7c78828d6807",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0dc9873-8298-48dc-90d0-a3052d59e0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7673907f-5f32-4343-9309-8fd3c1022499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7b97dc-898f-452a-a943-97f362e860c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "08f0dee6-3161-436a-948b-6b1b2b1a0d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd8c2f5-586e-461c-9fe5-afc77d6c86f3",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b4b76e-ea74-403a-ac36-23579c9d3806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eb2f579-fddf-4831-9b1c-68c856ffafc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50257a17-db2d-4527-b6a1-48acc98f6ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdfb4b39-f527-44d7-b320-081972ab52ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2717a5d3-d28d-4b69-b696-ae123c2211bb",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abcdd1f-950b-4bd1-b5ed-8fb98d848c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9659baa-fa62-4857-b706-df6054772b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37e2634-b46e-469f-ada8-72b491752c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8af11e9b-9cb7-437c-a09a-c2e9c2cf6a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1ad857-95b6-493c-a453-8e5379e8a0c0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "751e1059-59ce-4692-b935-594bff14eb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b62bf89a-dbb2-4424-b8d8-b69b4942efcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8d60f2-780b-4218-95c3-6576ccfd3165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5aeb084-5fda-4c60-99da-113a9fb47ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b234cc-29be-4887-aa4d-f96b80c6f6c7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42430dc6-d4a3-4058-a209-fbd22139917e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ee39ac-176f-4924-9f51-3d0fa0699d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382bbdb1-543f-4a84-b752-3f75a5bc5d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d3fe5410-a16c-4bd1-9938-8ae054013319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53d2583-7bf2-4c87-9ecd-ad1872b99d31",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2476ce52-ed93-4bab-b0a5-17868a159be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a9dc82-5308-41ad-bc25-fb78400297c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656b9624-de3a-4133-a80e-0a4c2e647d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0bd5d4f5-5b72-429f-a01c-945430c5fba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dcdb33b-f6e0-44f6-bff3-c687366b959e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d5a96d5-abaa-40a0-a0ac-9780d9bfe014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f66c5357-a5da-4929-ba64-7a52fb6a9196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb30a513-0e92-4c9b-9a27-dd490108309e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3631bd68-f877-4887-b518-29b166641ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cc4b0d-6574-41e2-af11-81f9cc3b8d2c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd5b14c-972b-4e7b-9714-6d24de2e8695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9244259a-b75c-4d0f-a56a-80693fe68101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d00c31-0656-40e4-ba7d-2f6aeaa0705b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "25785430-4ac1-4978-ace4-15326d680fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ef12bd-a95c-4a63-b4b4-188cea907dbf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825e2e3b-909a-45ba-8926-aa67c08bdbbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "318eccbb-93c5-4b70-acb9-50f96a1a46de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f7a4aa-1862-4442-9e81-fa71d9860c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "347621e3-1f1d-4e4b-bf58-6a0f79c03ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535d5406-540d-42c5-b03f-ecec93f7e152",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "620dce4a-841b-4c6a-af10-fceadda5846a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323acbe1-18f8-411c-bb12-1784ecfb2c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "096cde90-8c66-407c-9b5d-68283b99fd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4eb5ae9a-12be-4c26-9271-90d1961c92d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9252b77-d700-4dab-90e5-89021b99d414",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51124714-b5e9-4fe5-9f74-7be37126f55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b9ae183-67bc-4dec-912e-327b8582cb15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6525d5c-293f-4f6b-95dc-27744d6899ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d014a31-879d-4a16-a456-731df3667215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0f8fc8-bb7d-4de6-8425-a7a2288b8c78",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa846b7f-97a6-4193-91cb-d685a0d53a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "962c657e-3dbd-428a-b333-038f09d85a54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d146a363-3e03-435b-92dd-fa16249c6d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "227d4052-d2a4-4c80-8d2e-c902d44fcb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c20acc-7f08-4c8e-ba1d-a95b8db931ac",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11c4e5a-25c6-412b-866a-f7c6353c6db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "212e76ce-56d4-40fa-b710-d8b961941b03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80cfd55a-1a75-432b-8bae-03602fba4011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42359b13-95fa-4c1c-9d60-5dcc25611e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fa677e-3df0-4d59-9dc7-df814b9c0cd3",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4da8e6-0bf7-489a-b18b-3320cacc3534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30def01b-f588-48bc-9eac-617705d431ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bbfce6f-4d01-4994-a91f-64eba794b0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3151838e-7bd3-42e9-9aa1-d5f24287ea3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4494968-5881-4d3d-93d9-2bbb7d2cc602",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b37debe-3f06-4b3d-8610-fc5f45bd0ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae492d28-1f4c-4f7c-8593-a7070bf377dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ca35e4-847b-46c6-9f2a-48024d8632ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9132686d-4be5-4a71-8556-91747601ef97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2cb0ac5-37dd-43a0-b720-99ff5393cf23",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d73e73-0290-43e5-9786-9690c8f8774b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0531b055-7bd2-4c8a-bee1-e46b060c883f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9965df9-e20d-470a-ad0d-4442eb527069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58dc6a18-ed08-4631-b2af-3d1ffde6c918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a77917c-0ab6-435b-9a51-ffc9b5330886",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c8cef7-f493-426c-973e-ac7388c3f7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197ff869-809c-4e71-99ad-52624611be19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10bc64cf-5e67-4608-a741-27476a9a5553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1852f517-9d45-4f65-8887-525c48762507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00c7660-281f-4da3-8e01-a1e403dfb544",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e407fff2-ff1e-4cfa-8f28-9c92d5f9cc0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d3c664-d0cc-4f05-857d-427221b9f52d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1964e25-e21f-4e13-8476-5f2beaa426df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b19c3ac9-7956-4edf-a8e5-1cd8235a114e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bcd8fef-b23f-435b-a37d-ee9c8627d1a2",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd043c7-1830-4e65-bcfa-094ce5ad71c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f34c03-f9a4-4198-9e13-8533ba11bd18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df3d16f-280b-43fa-b178-8b1a6dc52dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "313586b4-abf2-4bb7-adfa-500bcae69a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e773283-49f3-43b1-a8b0-96b49d10c03a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a7c0b2-bc68-4339-9251-6857a7d584c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c2f20b6-819b-4ab3-ad70-45fd4c1764ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17528bd5-fff0-48a0-a375-ab438f0dc092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b53232d2-6b8c-44d7-ab2b-171513d0c252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eafba01-fe5c-41db-a83c-f8e71aff0f35",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556d2872-5a74-4991-8c7b-32b168f42617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9471c41-dcf1-42db-a4e1-b1a1b3bd687b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64eaa6d5-3812-433b-9036-53f1908de151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa3e0a51-05d3-4faa-a043-f60be8871e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706e5b1f-775a-4b3f-9295-e0a715fde9bd",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28bfab8c-a674-40ac-bca0-92945247aa0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bdc34bc-717d-448f-8762-4ef9a12a1505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee1a55d-d248-4559-a0a6-d6a6ab96a3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9fb08540-7886-48fe-a4a1-798edf1f7493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9ebe03-d3b2-471a-91ad-aba9db580730",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cffcf716-51b2-4e5f-8064-ce6791a4bb59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e061f039-0974-409b-9939-8869b9fa1191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720d4383-2df0-4720-86db-42df804be9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7103d664-102a-4c04-8fd1-6a2b38288311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d1dffd-60e7-4c7b-9cad-0a2446730404",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e1c924-52e5-47ef-9f8e-0e52e8d8a07b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ffde49-3313-4618-8505-467923d694af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e519e452-0b67-485f-a024-62aa79f6a1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c070fd0d-375c-429e-a0c0-956300655a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89aea51a-b135-4b82-9d85-19419d87b29e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f55c52-c64b-420e-bf64-d9785a36c3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd2982d-28b4-424b-972f-81cd938ef51e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2046f2f1-46b3-471d-8a2f-5d1372df98f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b14163b8-1f16-4304-b2b2-1fc3bdc98c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8fd2c2-7f13-406e-bb62-8c787f952e75",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6dc38a0-f618-408c-bd24-70121230966d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "862609f1-bb8e-40b4-aad5-cfb03a0ef63a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c102cba6-01ab-48b5-ad8b-4ebb33a639a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "820601ef-f3c2-49a2-89d9-3dadb1014bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098bd9c6-9467-4f5a-b889-0e023d8e0986",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff909925-26e9-4342-99ad-8a4e9d0a3d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5420a16-59c8-477a-bcf3-7680f9863714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc92d9d-cb7e-4b21-8473-594823b78b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae2a98ef-2701-4dfa-a5b4-688d373016c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ceebcfc-7fb6-438d-90ba-73cc47892aab",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d72b72-e15f-42e9-8ab5-c90003f211bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62fcfe93-7b27-451c-ab01-a0a72c02d766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614aa4b5-edba-42dd-af22-46e1343efcf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "627a1799-8167-4ae0-97dd-f4567da53241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7db8c88-14bf-4c96-8569-6fb089568480",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd0563b-fdb9-4335-9683-5cc0ce55e48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fcd3b47-fafc-41e3-9d77-a07893f58f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d060175e-6c1f-4493-a891-edafd4699d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d3370f93-3985-4474-aa95-7434b1cd3f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0481028f-1002-4cfd-938d-4738338d33f0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa9eb2c-1c10-4feb-bf3e-aa1cc6ae0b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984147e9-f997-41c5-80a9-886bd63d5a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca2deab-e238-4509-a8e4-30e1610a470c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d324e61c-230c-49ed-ad8f-79ac6abd3066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eecd9e8-3389-4d8f-bce3-f0007a1391b7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31719e35-24e4-4613-8f70-c52cfb0e0dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14af1be6-cd9b-403e-88f9-aeb849ed6cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beaf2a15-b599-4afe-9f8a-ae97b8e7c9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccfbe487-a6d9-406b-b4c2-8c1eea4c3fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43645617-4e7a-422d-8631-d7ac6ef9613d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28e8f84-4b66-4961-856d-c5dbaf061a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e7edb2-ad0c-4266-9ca2-65da70af56c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd1ac00-48da-4eea-9f89-ee2f37335d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a410047-db7d-428f-9a8a-81e4547fcd7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4921d769-c771-4070-88a3-93cd018923f0",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02f4f03-f27f-42f5-95c8-ac067a1ec431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f86f4f7a-0808-4bcd-a311-47abcbf3034e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39959052-55d3-4c88-aa51-fd4d7b90e7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "baba27d3-be63-4dd8-82ba-69f21e09a38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b162e3f9-7b94-435e-b248-28b461658d40",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf7cd59-10bb-4298-a6a6-8b4ce31771ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a117c38b-9e6e-4618-9a8a-9558b778348b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e49a89-2acd-4ffa-be1d-1edb7643710b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "284f874e-8aa6-4dc6-bcd2-912a196c15a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2e140d-84cb-45f3-9e3d-a9bce4af2966",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c87d2b-b476-489e-98d2-6783f01644fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25794e28-1962-4b64-9126-e2385f231123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34064de3-0e42-4c50-b9f9-e4bb3ebc221f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3a159dc-7de0-455f-bd64-73d649161ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6650176-759e-4719-8628-2cc2636f5d6b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e5e013-11a1-436d-863c-01fae1d98035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc0b2e1-5a73-4d5b-9fd1-aa1fbef2467f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89242e89-8c69-4029-8166-c7101c995c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "61f9f4ea-28b7-4990-a088-dc5d5eda7602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6f042c-7049-48d5-9e82-3da6b178407e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61299248-2877-4916-a4fd-9ed5bc5ca091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32726017-7a22-40d3-bc81-7fca3b9be1fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54532311-7626-4725-a5c7-a90f363e1757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "04220127-2575-42ab-974e-8f7be0169276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067b95d1-2cd9-4c48-958d-0f0816aa82fe",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d4f4ea-ce28-42ae-ba35-bab835035803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0311a19d-7346-4259-a5f7-1d312034d0b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4574e2f-a645-470a-9c0c-3e4e4fcd5871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd524383-2443-4cac-9d3c-b80f9103bc29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd94eeb-5bfc-43d2-874e-767868e6863d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df373e33-2633-4acf-b5f7-1eeea814e953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bef6513-eeb2-4e5e-af38-f2c1ea0eac82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b2f44e-8ead-4c09-82fc-e69d9fc75050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4666ace4-cc6d-406f-8445-d94e2c0177dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a492cc82-1ddf-4df0-889d-8aa42e7b5cf4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c29338e-42a7-456d-a1c0-14a84fd04a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b009d0-cc9f-4d91-8f4f-2c929c3d1955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7aeebd-aca5-4972-9ddf-0e2a0c6b420c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1291a43-4e5b-4f39-a079-51f2fb359442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56dfeb8c-a52b-4879-91c3-3180de99bf58",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07120c8f-6a52-42ec-9a76-66119d24189f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8bc90c36-8458-4f1e-89f6-5c200202983e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb358a61-8fdd-4fa9-ac0e-05d847d07183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a8b32bc-d8e3-4a1a-81ef-ca7f07e0eb24"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1aaa53ad-f5a8-4087-93ca-cb4e562e1c68",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e0bb2746-3143-4529-81c9-bbbdaf92c152",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6f84d6-c031-4310-a63c-7b384e24c1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "187057cc-471c-48fe-8ade-f9bf2b1490bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b805c60e-c1fd-4fac-90bc-3683f045ba21",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95b02780-5bbb-4560-805e-995073392122"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80e703fd-d676-48a7-872d-4c4049e305ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "270f01d0-051a-42e8-a258-36e1a662c2d6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d65f9c77-1bda-472b-8b96-c55c919e0b22",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a665d50-d2ed-4695-a651-9be685de17bc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2b6525b4-ccad-4f5c-ada8-990de2637f63",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c371ef68-bad5-4f28-8264-7ee376ad8c24"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dff575ac-91ae-4ddf-93e3-8c0b3ec713d9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2e55a722-850c-4cb8-be16-f0379c818fb3"
                }
              }
            ]
          },
          {
            "id": "9aad9813-4cab-416f-9a1f-c57181d6630a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a88ba249-482a-477b-9614-c389629cb3eb",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "2109f426-1a52-4e16-8ea1-2f11a7bf689b",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbfa445-bec2-4b07-85e2-3041651d8f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "aeffcb80-fa7c-4cf1-83e0-d0fae8c97309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078c8ac1-e31c-470d-bfea-d1d9a4d70361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11c86b32-2d08-407d-8630-0c5a1190a76a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "37caf00e-db1b-4099-b905-55d64e278695",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4623438b-6805-49b5-9089-1d468e0102c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c66a37c-c1a4-45c5-8418-deb806246d91"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "067cd3c2-cf38-485e-a0f8-501eb1f472fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cd5eeac9-6a5e-4cf5-ade2-60888143a0f9"
                    }
                  }
                ]
              },
              {
                "id": "d19453e2-a333-43f0-a32b-32ac48d1909e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "abbce9ae-25c2-4823-9e38-4f2a23abd2ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b04f2165-cc02-41d3-ad23-6e0a22be4696"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff4aaff4-ac8b-4adb-881f-a46ac09284b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "56318c5e-1adc-4ee9-9726-84ad76acf96f"
                    }
                  }
                ]
              },
              {
                "id": "3d1d2ae5-ed19-4f95-8db4-3b2bae331213",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d0af758-9c93-46b8-8fc5-dbadcfad07ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c81ea616-a59c-48b6-9af4-a3ec485649ae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de61b63a-73fb-4681-8da9-88ba7e53ffdc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "05d1fb78-9dda-4703-9c06-7f4425ea60a7"
                    }
                  }
                ]
              },
              {
                "id": "322e1be9-ade0-49ef-9a3c-dea889330b5d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c40cc41-a9a4-4ece-b2bd-3311c9da3b03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d80fe3e0-c04c-46c2-bf0f-543755114267"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4987a465-3b6d-4220-90b0-8f14e14f9020",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "38b1b171-e148-4aef-bac5-0cdbe771d7c9"
                    }
                  }
                ]
              },
              {
                "id": "b11a3003-6774-4774-9a4a-41e94e9e6a42",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2c230f3-075a-449e-a6f5-6a502281f121",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e2115766-06c6-449a-834f-19cf82ab0b7c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46435771-32ce-4715-809a-37b74bf9675f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9882becf-622b-4ebf-b552-84a529d584c2"
                    }
                  }
                ]
              },
              {
                "id": "58523378-1ba3-483c-9c61-9bd45f19aeb2",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "928d50de-d97d-49b2-9e84-87fc084e81a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "92306cd3-27e4-4263-9565-bdffd58c7b5c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0ebb18d-c20d-4074-8f07-7a8bd215dffe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b199db2d-5636-48b8-a6a4-2b08aa308763"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2f56f6f3-511a-4eda-a5b7-77eba45dd56c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5cb52041-4708-4f98-b1aa-3ace81ac5922"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0f28d0bc-b6b9-4abd-9699-340dc7c876fb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "19f60e1b-5a07-4e3a-b945-9e0f2ddf1788"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f8f0a02f-e2d2-42d5-ae2d-70ca67cd5809",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "01535628-f346-460a-b831-1194af8ae626"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69716acd-047d-441b-8e3a-1cc2bb9ca166",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6437a5b3-f077-4661-bb90-f9010c0d15ad"
            }
          }
        ]
      },
      {
        "id": "5abaff2b-4aff-460b-9122-2e16cac4ba64",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d3702cb7-64f7-457c-9566-91ec36417843",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9476838e-a4c9-474f-ac29-43a8f6417b36",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cfd806d3-9666-4811-b53c-15b7bc49e5b1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a03c45-d5c3-4fc0-8357-2d0fa6538dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "173f73c8-bf45-4fc3-951e-2ed4a07c8a92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1b6e14-926c-45ae-b0d5-7a343c79730a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a678370e-bd7e-4a0e-9d52-da20d5aca12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b696ec-98a1-414f-a6ff-042942298dd3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84330ca4-abee-4173-bab8-889c2e8e3674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f201a2-5629-40e7-8776-d2bdec9e8b73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dafc63f5-9c71-4e4a-868d-0cdccededfaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb44923-579e-46ab-bed3-48d02901f0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd41b9c4-005a-447a-b397-735a21e9c693",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "720f02b4-5449-4a7d-8bf4-6a647acfe854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e26b778-53cf-4df7-9e4e-210fcf846252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f62b65-c1f6-4f75-8312-844f1d970fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7831f4d7-5a2d-4e8d-b42c-c172f8c1cc7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8bd6de5-0f0a-41e8-a6c2-08030b12d9fc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04637fd-931b-477c-b8e2-b510adc521d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23d7cf08-b2ab-4bc1-a985-ec0dd79a491b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f463f5-7a11-48a2-9045-d694c361579a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf90358b-25f6-4039-b992-b732522fcf09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20f39d0-8c25-43ca-8395-ad75964cce30",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32324bfc-848c-4507-8162-cb28c30682b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9762c2b-8a7e-43a7-8ffb-90abe5622060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62c9c48-5e55-444f-be8b-ff7f0578e45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b859021c-778d-4e0f-9c02-026ad8ddd93e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ebcb34-8d8a-4ed2-aba1-6c84836ae8b0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f31ef2-8a42-4bcd-8162-9bfd8c42ad58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5210b85d-93f0-40c6-840e-55ecc119e4c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a75eaf-ba86-4e18-bacd-a944d286786c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "148f70a1-ff0b-4bff-8b4d-df1c063e7e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b52eeba-eb10-4e0d-bf27-37ba4df5fe7f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8d95e5-137a-42b1-bed6-3997c821e2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2ccc019-24ad-4c72-9cf9-9d27f9954a11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8fa110-1a24-441f-9d79-0c5569f1242b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4eaa583-c659-4907-b0cc-97e6b4deeb2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f905438-c502-40f4-b7e8-23a231a08d98",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44eb28b2-4da2-4b7f-be98-d78effbb13ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b88f07-94d0-4a61-85b1-9b7e330fdd2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92a7a7e-abcf-4e7b-9d6e-13082f288626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d520794f-3589-423c-b558-c66b1135deb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8da5a4e-1b48-4a1f-961d-4e93cb15aa81",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481cd2b2-5721-4318-afeb-28013af86881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae09b0fb-2d7f-4084-a9c8-16ef3c9f92b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4abb1e08-f056-40f1-b5b4-a66ea6e7ba49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64d1751e-1c65-4da8-9406-a0e060d304e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfb83c0-8d09-42e8-bb98-2444e105c63b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26ba519-27b3-4311-bd6e-e7a8aca3a8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "303fbb50-939b-490e-a831-21cb53ae9acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a976f8-75bb-40f4-b7dc-9873beedecc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f15c89e9-79f2-47ba-9bed-9e3f5130c64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a29bd1-3ed1-48a5-830c-e1c06b77602c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4b65b9-d7d2-4c9b-aa70-ee98694e68f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d6552d7-39c1-461a-8305-b73ea7ba5afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c505fb-de8a-4d72-900c-5612608195a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a1877ef6-a8a5-4ec6-a760-32bc71b30a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a575af67-4171-4c3e-a691-8d09837a988e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e94b89e-6e86-40cc-9c50-565722bf8351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3d01ae2-fd1e-42c9-8f65-101ccec3f2f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79194342-a32a-47d9-b692-a5d5614ebc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fef07e27-b1f9-4142-9c55-c392600742d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d32fb31-505e-4116-bd01-de3700437c98",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1ec630-a82a-401e-a7b9-c624c0af0834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb96029-3243-4869-bf4a-1650142a3892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8ad0b8-a319-47f1-9d86-7d416ab4ee87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3974b85-3d30-4df1-881a-8e21e9dec9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec69eac-49c3-4306-9826-c802648433f0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41003684-72a1-4d34-8fd9-eeb489e54678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0be63686-c604-4d18-8ffe-ceba6d85c5e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0faf1670-9ce4-4f8d-8c79-6f530784efeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdcba0ab-6a79-48b3-ab36-78ca9bbb98a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d571b34-7d60-4984-816b-ae689e844ec7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ef84df-6238-413b-be0f-7c5a10331556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb01db0b-22ea-4315-9b39-55773432f30b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad9773f-8b21-4944-ba2b-ca0b99b1932a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "48e70114-9980-45af-8cf5-304da0dd920b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156a77a1-d26d-4e41-afb4-7125cd9cdc38",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9726a485-58da-43b6-ae29-65f899d46d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "569515d1-debb-422a-b824-1e9b38005742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6492131-60f8-43b7-9bf0-2347340d55c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "09e5ce39-4866-4cbb-8fb9-58c7311965bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a1a339-3127-4075-9045-02974f88628e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22d39cd-7146-4c54-a21a-cc1568f5bfe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "215aa69c-cd0b-4329-8443-010dddbe8876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa4a319-3ec9-477a-88ad-66bf656c4c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "01c9350a-0037-442b-9674-f1d619ad4033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb02ca6-6ba6-4eeb-929f-b3da95b1bfe9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc24187-fa28-419b-aab0-f73ebf64bbbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7158c1f9-40d1-425d-a135-e58c8b9dd2a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e3e666-43fd-4277-95bb-e9e77776e180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8060e9ba-e35f-42fe-a1c7-1ff346134265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade3dc33-8fa4-4c2d-88d8-55e750579239",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdca0f10-6c79-4e79-b547-3dc55e935edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adfaa0a2-3f4b-48e5-85d8-de8b58ea4a4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f6ad9b-b4cc-4e4a-8e4a-48dea8ae9f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd0242a-21f2-47d4-86e2-efeab2d8f5e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd58c7d-8365-4889-b71a-abb72f0b330d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9358d20b-45f4-49e4-b1cb-1966b05d7885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d41b66fe-b772-4bd3-add5-4b54ef0f64ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf71d8ba-140a-4d61-9f0e-2c9e30e7cadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4488213f-6866-4a79-8bbc-821e4b48246f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ffab083-d917-4de3-8517-d7c58b6a6347",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf02dd4-a62e-43b9-b039-ba99e12b6a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff7bbeb-ffa9-4c11-998c-f8fd9eddd62a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd134628-819b-433e-a698-376044cfe67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d2c208a-89ab-449f-975b-f4b4f77c9195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8e87c1-db07-4125-80df-c987a5bfbc22",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b15cbd-5cec-4ee6-8232-88f35ab70d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8948f76b-80d9-4a54-98b1-b788424a1545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e945fc4-16ac-41d1-b4df-b6d39cb63439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ca683b3-0340-4545-ae32-a770a298f640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deedf377-d96b-4474-bb26-4add162a7fdd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1322e9a-2b69-4b4a-b34f-81f1352073a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7380c443-c44c-4097-95b5-2d04377bbdc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6450726-dbde-4119-92e6-8f947b6a67ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "623d17cf-2f9d-4b1e-80cf-ff6e25213559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e548400c-43f8-4686-b7b8-cbac32c777ac",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d11278-8a37-4a97-b61f-a6ee25ba06bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06dcd006-890f-40eb-a935-2ba3bf9078d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc2fd0a-dad4-4377-8b8d-68e1175ccdf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e490a88-2f5e-4d0d-a516-a237e38febe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96e37f0-7711-4bc2-980f-f327c40397be",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464c9491-4dde-48f0-b205-d2ec11fde8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a5fef2c-16f1-4e34-b205-05a4e2b622ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a018f2-0fdb-4dae-aaed-11cbc0794fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70d47367-b74f-4577-8e49-62b434fcdaf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ca794f-fe60-4c64-9c29-1bfc725d14ec",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a3fc69-c8e6-4fbd-8ee8-11df8e8fa4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5569451-dc09-4847-83f8-1cc6b7e83ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d212ae95-2466-4666-b566-8046390e5eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "869758dd-54dc-401c-9c72-72242df6e9ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e788d6-4b57-46a5-b989-03e50478e34e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a8909b-30a4-4f85-8f07-22e81cd016e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c421983b-046b-4827-ada9-9d59982234d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26322725-39ad-4c72-b818-ab00aff82ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43456275-8b25-4da8-a4f3-addc51ba2788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ba1ef9-0cb3-4d97-8b90-e5b21559bc66",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6127d4e3-7951-43a4-ae7b-bea5aa49ea5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2418c3a-70d7-4883-b556-b80167d7d93b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0fc5da-f28b-46e3-888b-e36b3ada5f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54259792-8a31-45ca-9e79-5cebf32831a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cd88e1-f886-4751-b67d-47c4ae9e8bbe",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d9eadd-03aa-456b-90dc-059ccdc10e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35627d4a-e7e2-48ba-b7e6-3e7c7c26abec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3e875b-0177-4e57-a944-832a93d63040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc5b80e-dc67-4ac2-90cc-c4a6877b0bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f7cb44-a6ce-45cf-af1e-38d87babcb65",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae3c664-f3a6-4f23-91c7-f05608b97293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "988127d8-00cf-4727-b341-9444c9e7ec2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a5cd6b-88bb-470e-821f-690e983fc319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1498de54-33c4-42d6-b894-f30a601b85eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a88724-34ab-4caa-b9c5-bfc3b53486e8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8b2c92-52bb-421f-9ec3-6f6cec0a456a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f67095-d56e-453e-af58-76863783903b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5f44e9-d5ec-4d55-89b5-54fd86dc8aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75542357-ab19-4a56-a86f-9ee0edbc9261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88dc98d5-67d0-4903-9eb5-deba654dbea9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2765041f-0064-4af4-9c9d-42c8efafeac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc1e9fd-74f2-4a13-88ae-21f84a3bca4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e659d97a-055a-4725-9e5f-e7231b825357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60103f6b-84e0-4418-a7f1-d285d8bea2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb9bcc2-76e3-494f-9670-89844918e120",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a8f8b49-944a-421e-8fd9-56ae1df35a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb30a28-fb0b-4d8f-b5c3-aad07939a4ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c432a3-a317-472a-bbda-da9f33706126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d19a780-214c-4a87-a4b1-e3a7c353cd42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f17977-fcab-4631-92d6-ae77f0d96286",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5a9754-bd48-4e7c-ad54-f691dfa8d68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d3d0328-cfbb-4e3a-ab64-b5c2f4faffbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72fb359b-8e45-49ce-9f5a-a2f9c79ba58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffb150d9-a12b-49cd-9358-c05798808c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ac5621-0791-486b-b0e4-a561c79fcd9c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c05bc0-647d-40c3-a2f7-3d5deaf5ea27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "606431b1-f689-4b3e-884a-8dcac6028a4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc556ecf-1b4a-483f-ae35-312931752672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "944d6e13-8b78-45c1-bc63-cb9130bc31eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba58fc34-9f09-49f5-827c-bd3022127339",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540cb3db-ac3a-4ba8-ab3d-92042218fce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ecc1a0-bf1a-4bb3-99d6-5e13e7a27bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f1ba1f-7f6f-49af-a791-5b3ecfb5ca44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca5b4bb-5b72-415a-9a0f-a1f5c4913905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6b8fd6-e905-4a23-ab96-0c4887b580f3",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "045326b2-4b26-4e4e-883c-0627807fb5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c32e30a1-1054-48df-8590-27190321adc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da387a24-8cd1-456a-a8a4-f06f9aaa3cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0737740-d679-4672-8901-6cc85921c5ad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "98574c8b-1e5b-4a49-a64d-2bb019eb01f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8cce7144-4dd2-4abf-aec2-2b6fce7e9e22",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa805e71-e243-4f04-80b1-ffb526203a8e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1dbb81-b576-4662-9207-3a504c63f63e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1bbacf-1ac4-44ac-b1db-415c9e3fb4aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f09eed8e-6b56-46d5-b096-34435078ba14"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22e87581-8081-499f-95d7-1123c8a168cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "800681dd-fb8a-47db-9689-62d9e92a0357"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a479393-9f2b-4367-9055-2560e361844e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1de9f6e-8c55-40f7-90b3-f155b95f2a47"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed0754af-5333-46f0-a722-5a79930c7af6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1aea0b4d-d389-417f-952e-42f2c2ba8ff9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "29eddd52-ee6d-487f-9cdf-9833a2cb48b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b4f69dd8-4b3c-4ff9-a2ca-7f64745be1ef"
            }
          }
        ]
      },
      {
        "id": "fe04e2e2-baf7-4bda-b8f3-51bf45e29c06",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "69edf257-86df-4e66-b07c-17e2111354da",
            "name": "Negative Testing",
            "item": [
              {
                "id": "402ecb68-904e-43cd-8250-f151c961a6cd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8ac5bcbc-a550-4304-8758-88b8e053d407",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d4a143-b746-44f9-b00a-478ded83f1ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59b4a1e2-41bc-481c-bca7-2ad3527a9bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8919807d-cd2e-4795-9de7-895069390eae",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b230421-c7a3-41d2-ad61-4abf6ef48314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f56287b-a53a-4db7-a913-9b310fb911a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf198c3-8a0b-4cb0-9fa1-c107f92a9faf",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a9123a-27c1-49cf-be29-4eba67bb96d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba87c1ef-813d-4c4e-9567-c199fdc08e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7fff38-648d-41f8-94c1-19f98b34e994",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed04a28b-1c7f-47ba-98d6-1c63a032638a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5edced51-655b-4ad2-9ead-141de99bba58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c16ff2f-e791-47f8-b13e-0e5c6a4a7d6d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92da352-c05c-4537-87c0-3c1114b47d70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48fcba2e-1fea-4dfd-9e33-f06f8fc8d4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02035695-1977-48be-95d0-390ed8a4633a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b1ad45-59c0-49a4-b617-cae01e6d6e8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9a9f9fd-ae18-4f52-809c-943be6227355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660dd068-10cb-4633-af97-5fded3fd0247",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e1f3fc-f9b6-4d5b-be2d-a723c9071dca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "775fefee-d7fc-4dd7-81e7-634c6b38917b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7aaec3-34d3-4424-83fe-9615f9aee6d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3245e332-529c-4686-a107-c561fe1645c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7aa33f-2aed-46f3-874e-0493c31b4da9",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813af14e-afbb-4d93-a908-ba68c95c94ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9725c4fe-a13c-4592-89eb-2e146a287a61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9f9efd-df4a-482a-8922-56076704e703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c385296-5b88-406c-b1f8-cc346564ada3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a4361d-5f6f-41e3-b20a-ccc17159cdfe",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2f2141-f923-4fa7-9483-51ba848fb67a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e2938ad-d75f-44bd-a8c8-69dc427e6d97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d34b61-2102-4cd4-9919-54fe4659b9bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b1bac5e-0492-42d1-aa08-85f653897ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0971e9f0-2580-4496-9151-34f41c8b3c7f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f6cb90-cbf8-4f74-b79a-edd4b82bcaeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cb78dfe-ddf0-4436-8e98-42f1603ebb19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7fe77d8-73cc-45b1-b527-d38d34dbdafc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a22d487f-14d6-45c7-a170-d8ec91c132b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe7ea58-57c4-4985-b426-66b7d15a77c9",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa6241e-e31f-483a-b9d2-4c67982ae5c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eba4c84-d497-445f-8627-24396987c5d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7557b0f0-cecd-40a9-87aa-b02a78053de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ea5f306-2a1e-41ed-85c4-c48016cb56b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61cb8f33-8c5c-470d-8f9f-d9dbcf3afb47",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ad21f3-32d4-4b77-9d9c-02a92cbe264c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f161fc0b-735a-4788-8504-40ebab1bee84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12d33a5-cadc-4d18-83ff-5f17e48a8aad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc7c01a-3cfe-4055-a76c-7c1cadb3baa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ddb791-8a1b-4142-94f3-255b42a65b55",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898ce8b4-36ec-4f88-bab8-b2490c08fef9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "336654d8-0328-4ec0-b7d5-e4a4196a6bac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04a5f2f-4312-4356-ae64-a9dcc39c722e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e5a086a-984a-4ccf-b967-355a4917311e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5296760-6420-48eb-8b39-dd3b008c40b8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea9fe30-d275-45e4-b9e0-b84f79e375fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03a5d429-e7fa-4dc1-b01b-b20286981254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb635f32-1df2-41eb-a4c1-0e03a151d71d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c24c034-5169-4886-98f3-46c950b1843c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da6c426-28dd-4ef3-a8b0-44fb8d197df7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d392e69f-df3b-4b19-b565-af6fe20f240f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60708b2f-b1d3-488c-885a-de10b00af932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b61dd98-773d-4f3c-9991-d7960cd1be17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae60b45c-e84e-46d9-99df-38555375550f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74df8b1-c1ea-4cf2-940e-2ecd57180d80",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b20200-be9c-4b61-af3c-c40ad631dd2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a3bec21-88d2-43ba-9c8e-1a01aec590db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9303d4-f71a-4556-95b9-c5c9906cc2a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b06ee48d-16ed-4bb7-97a8-b9878bdd6494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e534833-b051-4112-84d4-65a6fd491a33",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ad25c2-d6f3-42c2-9f51-67f76ca32e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c256a275-a038-4d1c-a876-1df42af857d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c6d9f5-7e78-480c-bab9-2f9e33b5a06c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ef1a1a-cf29-45ce-bf2a-2ac4969c7775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0bfd3a-6bd8-48ca-99e0-414021ab4519",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d625aa-b3be-43a1-874e-a97756164ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39e21641-5cee-4595-88cf-cb75dc58e40f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40593256-bcde-4098-b6e3-8a93d9be038c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff538a81-57fb-487f-93d5-85c1af9113a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3ed3d5-b889-4447-a684-205037476d4d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4316b4cc-2727-407d-8b0d-642ee87ed99a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77522fdb-aa43-4b51-9147-8947342947ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fcd52d-7ce6-4984-b7f2-efc8e12b2f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7652ad68-156e-443e-a565-2d5dc69245bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2823a2-fd3f-4804-a824-d14237626e59",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b4a6bf-4b20-436f-b1b9-941515865671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cfa6995-1d6d-4879-a508-e8ca58a8543b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9a1068-7025-4470-ab58-d63b858c6ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b27c009-e66f-4acb-aafb-5882a18f440c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412d1d35-fec5-4cd7-ba1e-b937d86b11fc",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec68ada3-507b-4802-8f67-82800aeb10e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17bc77a6-fc63-4b43-9529-b85ebca7931c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae698c9-76f0-4f20-9ae1-31ad1470fb2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d7a6808-5661-4434-a475-3bfa025a1d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f16cfe-4172-4e4d-9100-2c44df379c88",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385cbe51-1f9c-4ac2-af22-a958bc0c3ee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a266ce3-5645-4235-91ee-e016d91c5b61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "294ebfff-a61c-47a6-9a39-fa06a00bf91e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "815e1e9b-1d40-4433-8207-1ca4c0f905f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffcb4daa-aeea-4bbc-873f-8cb74f9ff18b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353134db-596a-49b5-ad3e-920afa981043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "990ed5d7-1865-47a2-a1b9-5d074ad0f7d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6c81b8-dfcc-479a-b3ca-7448256c5eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e45dff2-df74-4389-9bf9-d07b35a5f6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8e7b2c-1e45-4df3-aa82-7cc6f3504981",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34dc66d-ec6e-49eb-ac0e-b848da7132fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb0fd90b-9a8d-4ad5-a2ef-95ceb016afec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c3d0c5-373a-491e-b81e-1a63ec738d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0cd38c2-5d37-45f1-8071-b60ebfa39924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b6dd1d-86b0-4ced-955c-3d33f25989ae",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce5de39-ae79-4410-9d21-3c25f5ad8b78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50467268-5188-409b-8825-7ca4ff87ff6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2feab3-a8ee-40fa-9410-b1be45f1a95d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "068449d7-a4f9-427f-9d62-651d08c1c184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfce79f0-97ba-4421-ae2b-8fbccc9f244f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85e983c-11da-4308-8bbb-a8e159b69346",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb2b16f6-f88a-4194-ac88-1a0105da85e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65611f08-3ec1-4ade-8cd0-55d382853b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19a5f82d-e2cc-4d84-86fb-507e4d21fe5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fc3f15-5f67-4f12-9154-8aec35b79d6b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb32332-2864-4ac0-a7d8-ef6ce1265746",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4211bb5-138f-4959-87d3-e7da596419c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e745a1db-de77-4da9-a6cd-1e088dae02a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6021c867-d078-4935-8c2e-e46705802021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a80948-4e2b-46e3-8ca4-ec28549c6327",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b863087-3b37-4250-bfdd-68651f4d189e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b50d73-4e97-4674-9e07-84c130184d42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb17710d-6afc-478d-84a7-89aa39009efa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee35985-03e1-4032-969c-fa60caaac2b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d7f9fe-2924-4e9a-b92d-12a2bb1a6a6a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5799d8be-2dac-4e71-9bcc-aab58db6a371",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4229f9b-2fda-4ebe-a659-ab4596a3072c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "531cb5e2-fdb0-4bff-8934-e431780d0140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9775a45-0249-498f-b7de-26b7db2e0284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c6c724-0fd5-4f29-8453-891033bc2634",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89549851-e9a0-4ac8-b997-59541bf6cf6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c1c5e54-19de-41f0-8300-caf0ec0fa5f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f12c52-0492-482d-808c-2269da33e72d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "866b45c9-a49f-4eb8-89ac-e2595a02b726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4316f295-8702-4221-a8b3-e326670c2e57",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db18f85-4e61-468d-949e-6c57a68c2a70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cb932b6-ddf6-4aa2-92c1-1dc8aa40e59e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1bb2d3d-08a1-41e5-8fef-00b54bc40850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec91819f-1fba-4deb-b364-31645af8aa5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5a1c27-a223-4d95-bfd0-df0e444651b0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416bdc06-b10e-4bec-aed0-dfa3c3c964b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05b660d7-c6c2-4af5-90e5-c85687aa7c8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8407dac-359a-4c11-99bc-6dd3427a2002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d05212d-58ce-47ea-b002-8972f884fa00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261f0b6a-8ece-4a40-9164-12c57b582f79",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ff2da0-3add-4f47-a86c-be86c8a0b76a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2408de4-ee61-4ba8-bffc-d9ecf33a15bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c04445-82c1-44d6-bda5-e230d710c04c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82239a0f-969f-4445-9f65-03ce1899cc53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e438139a-19b8-42ad-a8b6-8704494187a6",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b76f744-8f8d-4eab-8211-add20f6f30fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2655e8f-7da4-4be7-91f3-836c095a7f16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e169b55c-174e-4934-ade7-66120a949098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "288413af-79f4-4167-a2e4-66ec30ba1c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433e343d-25bd-4565-9737-04f41988a8f9",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4039b3-d0e1-4276-8dad-6fa82fc51eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d0d873-2f8e-4648-996d-a21501e9b05f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30be4132-ce52-4fa2-935c-6ad2131a9818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6743a50e-71ba-4e1f-b94d-09251eb3027e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8da766-9cb3-4a66-b723-1e11670a2e35",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c38fe44-8c91-4aeb-91dc-5532ce700444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4079821d-0f9c-4052-a114-747d5ba00008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "882199d8-a6ec-43c1-94b0-e72a70e6b534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514173e4-d73d-4b17-8332-0cf9434ebb28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8875df23-80ad-4a26-ac8b-239bd17499bf",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6481216a-65cb-43aa-83c9-b316ba0215cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d699deac-680a-4c80-8471-8488d67421f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f60c200-a08f-4a73-9d5d-e413c4171e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e51044b-be90-4968-8c81-1395f298d6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea227a1-1141-45cd-9788-0be44348d4f9",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727f5835-6c71-4fba-9fdb-b21f02f5561d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "613a5352-e17b-40f6-acf5-17978e953d1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be033691-a1da-4764-a428-593a34397d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab50d2f-733b-41a4-9b19-ebf941dbc2f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78b0c43-314d-4a9d-9a74-8453908bbcf6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad3fff6-efd9-463c-8af0-5233af35d216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7d46f1b-9989-4725-8695-d025daa2ee79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce4d2bf-f06d-44a3-b7ec-00ff471ada86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bc4afa5-a764-462f-b8d2-aa096d659ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f56673-dd61-409a-b960-3a49753a0b4e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575e6ded-78d2-4cd2-bc5e-06d51599c2e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f46d85b4-8d30-490e-acd9-076c9571d4b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5387bf1-8130-433b-bf5a-cee1839b2b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddeb707e-5820-4a1e-8209-be754cd7d7f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ddd3c0-3895-423b-9fda-896021f1e957",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5906fa-56cf-4e9a-8c44-4b611878b047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0246a598-aad2-47c3-89ff-7ff52cb556c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ea576a-fe87-441d-a323-13ceae506402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba0a63d4-28ff-4e36-a4cb-6907c4274933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99fd1e50-27eb-4a9e-ad37-dfddc8229a07",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0765c8f-8669-4996-a2be-0eccbf92c669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50243e85-dbc1-46cd-87fb-de0b925ffaf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60bb51a9-d5a1-40ea-abde-da7341b7e86d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57905102-f433-4d5f-8c7a-a70622126f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389be392-9212-4bcb-8715-25cf5b1fc86b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cdd1d53-4aed-47e2-b8c5-ca200ab3e57e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c46b995-4480-4b7a-b78a-2c4fb4f3e02d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a6312a-6d6e-4287-8503-68b7f37e7563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c09e6629-3878-4741-b40f-f72bc086f7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89614bf-38cb-45c2-b1d8-88d86fe0bcdf",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d39b6a-d8b8-45a7-9a47-c9bc01b0fc77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93e0263c-b954-4a4a-9d36-d254d5b33349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2cf051-9dea-4e58-9776-00ed2668482e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2327a2b7-e724-4570-bd7b-03f783fe1329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64058528-103d-45d9-8991-caf4aca9b5c3",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43720ea4-5de6-461f-9fdd-57195ce65ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3936a99-abc5-4129-a4d1-3c09149a29a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2255c95c-7b5c-4454-a10c-33cdbf73ce3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5104c07e-8e2d-43f8-b11a-24227baeed29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a935963f-ef70-41af-a0ab-7ed24a5e8dd1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce7f470-7d19-4a59-8e59-807ecc61a13f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "599ffd46-9346-4a80-a5a3-6f92828f3508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61500907-db0e-4acf-9298-142ad555effc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08679b48-f492-48c5-98c4-2c6250b16679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1fe1b10-dad3-4e11-b52f-36d3701733f0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58b675c-ca46-4b68-811a-1c9b20f8888b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fefecf3-9fd0-4d91-80e9-98a60c4aea9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5309bbb7-ad8f-44a2-b024-1161663a9972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad12eb3-edcd-4a6e-9581-79f615aea24b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbc1fca-54d0-4687-b458-b908f6620831",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba2cd15-a5e2-4a8f-b017-7d462fe1f61e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a9d3f66-6037-4c40-b131-07d8574b715d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71da56f-3b28-488f-8ef7-a7049b7c0e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67475298-ec50-4d27-8e3e-40681cfc6258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2dc31aa-8351-458e-ad1b-93742ed05b9b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc25bd8-06c6-4c65-9abe-f7895ae61253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "495752e3-3812-46cf-930b-d6cf48174a0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a9891a-a4b0-45b8-a44a-daeba005d575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4d23ce6-3fa6-47b6-8583-c026c45ed639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557df0cd-0510-424e-8b9a-0fd05762282d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edeb77d7-ae4d-4ad8-a8b1-960c88416b15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d690586-2dd9-43a0-89dc-6da9b32d11fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3bc3738-f85e-45f0-8aea-fb752f4fce5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3955ab3-eb58-4b14-b468-a0fe223bea17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0801a3-f484-48fb-aef7-54d1cdd66e27",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095c7087-00ad-4e3d-b60d-d9b339bce785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc66c17b-f522-4f2e-8ab9-b239054bacd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea37123-5d93-462f-9c94-f3fb7c63354d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c07d91-0585-414e-9056-1b44b8f75c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265cda52-663c-4ef8-be32-3e260f7bcef3",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50fc769-324a-431b-a2b0-ca2bc5aaa774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4014d5a-50a9-40a5-bc27-aaab9502240a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bec93ae-1614-46f9-98f7-d76356d5d843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f55bc1b-b42e-4ac5-88f3-e68c78d99d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5391b9f1-2982-4e57-99f3-f17c7764df57",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa557d8-64fa-4291-baab-837caeeb6c5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f74128a0-0169-46e2-8df1-706832faa83a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a17cd5-2e8f-4aff-b433-c6b3fd4076d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233e5a9f-dc7b-4894-9ea0-d1d21f747119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a48702-b08a-41b9-82bc-b321eb19bb56",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6d005d-ea6a-47cd-9fe3-d88c333966f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c00f02-788b-43d7-a835-8e99036475aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87368642-da32-488d-b5c0-93371d75f1c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93d277d6-7a7f-446f-93a4-7cc8fd3067c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861d3627-16ab-429a-9f9f-0805323d89a9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8100c6a-e77a-41fa-8a4c-134544b9f449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9abdfdcb-f3a3-482c-878f-13451efbbff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "055ef0f8-7f69-4d08-a542-c5bdc36e07da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d7a22d6-b94d-48b8-b9e2-4908a0f6d8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa1d24e-bd07-4048-924a-15034026b315",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393929df-5ddf-45ff-8aed-6abce3a565b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "492ac064-84fb-4822-a0a9-3ce0ae1d9843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1e7430-d08a-42fb-a060-745c2d32cfa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca673fa7-270f-416d-9f75-1bb4335d3c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cffb3bd6-dc19-4dcb-ab03-939536c555fa",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0ffdff-1e52-4e6e-b19d-2554e4c11f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8515d31-a10b-493a-a617-9ccfe71a9dc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b5e716-ef54-4109-9342-35c2be38fab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc7bdb6f-36fc-4796-b85d-6574506980f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2689e4e4-ee49-471e-92b7-646b04eda105",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2650193-bf4e-45ea-b380-f7a499dbe13d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1a1a0a-7621-4d50-a236-89c856911947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e857b4e-9007-4e1a-847b-0b508bd9c106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fbe933a-cdff-4d6a-ad17-1f4caee2a614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4756b8a-2d93-4bb7-a319-12c58a0f9b8f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1a46ee-3e19-41df-a6da-ce61b888cea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b26446-7c80-4170-969b-ae45c105278e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81ba35d-e639-44a7-b75b-ed7a8da8edfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5453e08a-8bd5-403d-aaa7-7b8a7d10c0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c056269-9960-490c-a3eb-daca07a522f5",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8cb230-7afc-4b33-bd29-6a34ad25ce07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a7ea17f-3377-4886-844b-ddc5bd49c107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db903a0-b689-4887-a02c-45d0996d2df5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2262679-866a-4374-a221-f0ff2dacce04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a382116-b650-46b1-959f-45696537b11d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2832dc-6404-456b-bae1-f1c0beaaea6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa67d73b-3a4a-4b63-8414-d881171db0a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cfcc447-1f53-452c-8a1f-249794b5a197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14caf1b7-c0a9-42cb-84b8-35d873a161a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c42307-b12e-430b-a4e5-f39978489494",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a59052e-be72-4b87-87d6-bff1ab5d86ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c512b0ab-f7c7-45d5-8b35-2866728b7ae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b6d07e-bf7d-482a-9282-64503cbeb4d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e69169e-6be4-4211-ace3-546fdd0fc47b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e868375-3c09-4b0b-ae19-6bcaa4e2c91c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e98e1b-9d7d-43ac-992c-53ad3362ae48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaaa4817-86fe-4177-880d-3804dd3a4fe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e49b0a-7e97-45d0-8386-5e4b25a807c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4b2a092-e2fe-4216-ab7b-db46c0c3b5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4380d715-35c7-4853-a4a1-b0ea486c6912",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9435879-ff2a-4aa8-a778-1b5a4568c42d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5c183ed-f209-4193-85e2-297b45d9b66b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6bd5cc9-c786-4e1b-8eab-1366578c4d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "744083ba-191b-45ca-a3d4-0dbc33f8cdae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd989ca-7fe2-4785-ada8-9cef210db748",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3924e53-0b79-4b56-a4d3-e2223ff16d2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "655576e0-d64c-4292-b31e-5a8d0c8bdd48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9649da-1177-4ed7-85ac-896d653ecfe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b4d56c4-6930-4af9-802f-6439e44f7542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ec1827-c90d-4722-ba96-fd481ce4d646",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f3a848-c378-49f5-8f0c-4736d98348d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ae87ee1-c6a5-445a-8771-6245873aaa98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d02b2b-e362-4eef-bdc6-493aba749fd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d6772da-9ad4-41cc-a1f9-edb6a638715c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e899c4-0ef0-4c9c-915b-f7905b24db0b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90fe00fc-aff3-4ac3-982a-b8a15a3f12ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49e42e04-2f3b-4920-af8f-786ed60517bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0373e268-4ad8-46d3-81fa-848d589ef959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de909c32-53fa-4f72-8cb0-ab6b17bb2b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31aa95cd-1a24-4b1d-8be0-03476c177ef5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59992142-d5ca-4959-a7a2-8cbfb9079256",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f02a7b7-2f83-4150-a838-c4bdf2734f7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa31618c-7353-49f0-8923-05dd8dc795c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "186811e5-6945-41f5-b111-d98a496f227d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9cb68e-3de3-4f42-b7ae-e6ae9db4fbde",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d06f06d-0555-416f-bc64-434953eba3f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92f9676f-715b-401f-a053-c053cadf43b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb35dc3e-5c25-4b74-87ee-0bfe086e3ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8c314f7-8534-437b-ae2b-6a8b31be307d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8349fa51-2931-48a3-b1b3-02c9f5258fcf",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d297c486-bbff-4293-a826-a5824a81f53c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e97796b-70c9-4bd7-8d6e-d86f4f77edac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ab28c1-b3d9-4259-a162-5040c71603ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "588242b2-149c-41fb-b6bc-d3e6b11ee48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56847a45-0222-494e-bc7b-28d9cb1410fb",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fdba49-0ea6-4b5c-a06f-455496ffed2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25a73106-3d4a-499f-bd14-e5d21c188827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d6c645-4793-44f4-904f-194ae3c86a2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb17d62e-db33-48fd-9569-632dfdfc0093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ca16f5-841c-4d26-aeae-6bdf927f31c5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9e0820-e386-45ed-b2de-010d6425a123",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4df10a1-f4ea-4bae-bfc6-50897b002b8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28bc9fb-8221-46d0-87e2-4c58da7f1213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "643841f0-8ec1-4fdf-8fc3-bc8aff93bdb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694f83aa-0e5c-409d-97ea-e3b309fb54f3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9701a7-aa70-4260-9339-793c259ca6a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b55e355-0e55-41b6-bb55-631a9daf7319"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8651517-9955-4db2-b98c-ba72a46741ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f764918b-94a7-4d98-90c6-41ffa0ab1855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5067c3c-8d01-4799-96a7-94d81c9febc9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3cc9955-2f79-4d09-960f-abb823910ae0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4548fe0f-f50e-4dd3-9833-a32baf55606e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e01c81c-e024-4813-a77b-ee5cca5a0998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2776a95-1fb0-4dc3-9f93-d87565988bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f9ebc4-6650-40e3-bd91-3fbef64d2d47",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf3947d-c30c-4714-9e5e-c5ef0ca82c55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b44e409-e653-42e5-99ee-e46c316524b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d759e08-323a-441e-896d-60c5fbe8b2af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054e5f61-7ca1-4a16-9483-5cb7a1418404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13d3bb4-e28a-426e-aad8-93d58b832bd8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1908f216-549e-4d62-ad52-ae0f08dd4197",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18b5c7a9-aade-41ca-ad4f-4ac22bee45fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd98e8a6-63fb-4ea8-8220-cf2e972f47db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5629e2da-b4a1-4f81-89ff-019bc699a315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5832a87-2eb4-4b3c-8acc-e63fd0df0af0",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2ea6d4-a0a1-4719-b636-3231b6cd19b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97e1b977-d217-4987-a1e5-7de71dab8c57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad4c14b-66bd-41fe-8f4b-61fc2be82404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4bd21ea-ef1e-4374-b3a9-338030956040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b8ec0d-f2dc-4d30-bee3-446436ac7379",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64b2d21-242e-40f9-8379-9f94f3dc3c88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba1c0552-5142-4fe6-8fb0-de446e453ef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d57fe1b-4852-494d-9a21-78ee995265fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc8fcf50-957b-4c28-8616-7e8c2ac808d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db1d0c2-7b38-47cb-9e9c-2ef61b2c424a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aaa0f10-628d-4fbe-b39e-0d28555607da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c7c2cb3-3cb1-4e57-998a-47a89fa8824f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2dd6d7-089c-4f72-8bd0-a6fb2da54681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fe0d315-2e47-4284-96cc-8e41686d2977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23e6bb9-b661-4965-9391-2d6b9bae5be6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46302983-9f68-4f83-8354-53413246197a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a2d2a26-698a-4fc4-a541-545b2a58686c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a6aace-f995-4ab9-b9e3-49bd3c210167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b0ce514-f19b-4a79-bb15-1c1ded2c9cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a0a4a9e-8f37-4ee2-9f81-201511d400c7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda687f5-b339-420f-8500-8b4f426e163a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1455fd7-3d48-47ea-9e67-5a583dfe9a45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "027800a2-8085-465e-b014-847bf7f08f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce356fc9-6cf5-4194-a607-93bb00a78e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48df06c0-98af-4eef-b1b5-73c2c137163a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d23dbcd-7027-44d7-868c-c39fd7728310",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5452bb07-5770-4155-a2ef-46d12a561b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e07075-0162-48d9-b9fc-ef854676897f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88ebeaed-f0c6-4b16-b6c1-e919a356b098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb183b57-31c5-4613-85e7-38c983a659e0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6677c197-adc8-4a8c-888c-68c2da42fee6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5b9c001-0014-4add-a284-c24b42b9b31e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ed2542-72e8-4628-aabf-42c8af4e9f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "576a7e14-4a03-4c41-bcc6-99a486364402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2d8278-77d0-4117-8760-1c845115c125",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842d0c8a-fbd8-4e10-9677-63ee0a909ce0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d32ae4f3-6e7b-4f4c-bb9f-45c3230c3369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8184c5-b3c5-4cbb-9dcf-a1f3291ae978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f47ed09b-21a6-4b7b-9945-120e9d445389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e4b524-030c-4017-a574-30614bbbb921",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2245b88c-cc79-460a-84c6-c943381f6bbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dda5bca2-74bd-48fe-a06c-ea7a8fd3f8ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a5136d-0f1c-455f-889c-725f3bd4fb82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef98ff2-cc2d-4f9f-b5de-a0ce01a42515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a333d12e-a192-475b-921e-4d5ef79ebe6e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11163f9a-7e95-492d-849a-dd994b0bf951",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c31a5fc7-fc1d-495d-a749-d326eab0534b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5549a15-9331-4493-a23b-376409ee030b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b035ff-8406-428d-90cd-1a86821936b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e265c37-555a-4601-8edf-a625997d95da",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "844a27ec-0e52-4bd6-ad2f-bfe701110f2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27ccc53c-a7dc-4e68-86e2-a37b02417691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed4eea8-93c3-4b66-a8b5-f7fc24eb553c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8142a01d-ebe8-41c3-987c-b718b275ba9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40632b52-9ca0-40c5-b09d-ba1f7664def1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c252b6-1ab2-4651-a5fd-1bdb08ab4df7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6145c70f-1195-4dc7-ac57-c66855f239f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ceb1e0-be1c-4079-8946-6b89d7af59a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "678d448a-4805-4ccb-ae20-ed5cc2ff23fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f23f8a6-b595-4c0e-817c-c8a9f635a0e2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba17390c-203f-42c1-942d-3d7ebd554cd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "155e7ce6-ac4b-4887-a356-8ea8ea3de0d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cb7c89-c6de-4c61-b5dd-ed11edc94254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f31d9725-5382-49b2-88c8-300fdedd2471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "990f53bf-cd8d-4229-b295-ecc975cf73d5",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2f07e8-77b8-4324-b81c-072bbd02fecf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11df3f76-fcc7-4f77-b3a4-d7d980d5c1f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda209bc-3ea0-4175-ac3b-88fcab89f6a7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37869964-107c-4af4-82fe-11ed39840d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71bbd44a-27ef-464c-92fc-c546a2d36307",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908c5ebc-e1a0-445f-b4e3-7c95971605d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eafbedc2-e0cb-412b-8bd5-2fc7e2671d94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8428357a-56c6-40e5-afde-2a875c9f6c37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "014f8ae8-168e-4b10-847a-2ce78bfa08ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab47e54d-61ea-4dff-bb22-ad0f8b393634",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e646ae6-3cc8-4c7f-821f-67cbf701d5dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b93c4f4-2dc9-4a70-86bf-4027f39af04f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e939ab89-83bc-4e57-b9ef-fb776b972a47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9230c2c0-472a-4f5a-a75c-c305cfc5c714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e2f9dd-7cdc-4677-a4a8-02fd8848330a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97beaee-1b0d-40e1-9f3e-19f478ed5b7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ae206bb-3050-47dc-a3aa-d9635e090427"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "525994d9-c8bf-48e7-b924-e983b4e3c09a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa0dca96-59b7-43e7-8f00-5997f27cdde8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d33605e-7c8a-4f4d-8beb-944ca0170741",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b076fb47-362f-497a-8c50-6aaef93ea344",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3664b1e6-3c6b-4f2a-b44b-a984f39fd709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb4439a-0f49-4e35-a846-f781df498735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9523d92-8c0e-4463-a0db-65b374ac4172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4e0a53-82b5-418e-a860-167ced09f753",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12152b77-5cb4-41d4-b85c-aa2b7b166c35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "232f8e70-33ba-450e-893c-82836f6ad17c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c55f02c-ecff-4ddf-a74e-d8080d77e93a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f124079-3c9b-4d01-9665-e0f56b939ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bedddfc-e9f4-4e0d-b6b5-4751242eb6da",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb7c13c-ed20-4592-9ba9-46f39b2c651e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "018379a5-e0cf-4787-8850-5f4814c14b2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a270e4-742c-4859-880f-fbf0d832ed86",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e2e3ba7-182b-4358-a93a-a323607730a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af2413fa-365e-4b4e-a6ca-522145478c13",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df210acf-cb4d-40ad-94d8-bacf71b912da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f2341f7-7cab-4c39-bfbe-9fb7130540bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87cdec7c-6892-473b-bee3-3b16245cc440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "564b068a-e395-46b3-b740-02218ee69d84"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3867f7e4-ac60-461f-b338-28cc28e07584",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b6bd784-c40b-4210-a4f2-fde0284881e9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a2ccadb-1346-45a1-8ba2-938163ac5251",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "99141d4a-4950-4035-a52b-61c8748c33e2"
                    }
                  }
                ]
              },
              {
                "id": "1cfe1a5b-b0f2-4428-bff2-bfbd88131367",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c5c102c5-6959-4c43-bf75-4737c0a748a9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba08b2d8-7381-4b26-8880-0680cb59235d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7c7f86b6-8314-4097-9174-855c0b64ecab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "129ac43b-b60c-4944-bbf5-8fdb9155a54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dae929cf-860c-4d73-afdf-60c68181f167"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96ccba12-7c44-4282-b556-965f375baffc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc413593-c607-4849-95bc-dbc173c00e1e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee8a3200-f95a-4e47-92fe-359fe7f3c57b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1f30ca8-9ea2-4b27-87b2-9c66216787b4"
                    }
                  }
                ]
              },
              {
                "id": "47c75429-590e-462c-9644-086798eaecf2",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "02d96cef-f423-4ad3-b4cb-d66da52f5f46",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b62fbb-90fa-4d25-b83d-23a3ab00cd07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "595722f5-7c52-449f-985c-cfbf1c1838d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530c8950-2253-4f70-8644-0d2e0321f658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9528309-76fd-45cc-8c0e-5afc9ca8f0fe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ac9ce787-984b-4131-af33-719bd62454e5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "14c75cc9-db82-42e2-b802-2342b580dd03",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f4dbf8b-b830-4730-aa2b-b27c87243ccb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1d320dfa-7ea9-479f-8678-0fedae53ef0f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6139bd6-55fa-443b-87b9-6e68885c180e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7cdb0c84-a7b7-4c6b-bec3-7287f87ca99f"
                    }
                  }
                ]
              },
              {
                "id": "47b5e5fd-e629-4f28-a329-4b777f050d17",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "af5fdc89-82ee-4698-bff3-92a94193ded0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a1880525-f98a-4bba-939e-a956edcbc397"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05df6ec4-6842-4e5e-831a-52ec6d967821",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79a7a483-ad45-4195-87f5-39bc3af20705"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f814f109-4629-47ef-9dcc-be589a56b144",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d2306dae-a6b4-49fc-a5f8-adcccbe885f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3006194c-dd62-46f6-9ec1-28ad728f0932",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "db5f38ba-fc68-46e8-9e11-b44c9398d2dc"
            }
          }
        ]
      },
      {
        "id": "43c4bd8f-7d85-4465-b8d3-dcd24ea13a10",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "61176166-d350-4743-823d-d44320d89ff9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa6d5e3e-0389-4576-a52b-41256500cd1d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "86b3009f-ea28-4879-8b4c-1ab71a4560a6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dcc49a9-d571-4673-98a4-baa433d7afdb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "efc49557-079d-4f6f-ac31-e798a8823e64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0231ea-7892-4ce0-ac7d-5f012491863c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29977a00-c187-40e5-981e-31aeef056a63"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "414ae458-b585-4a45-9bef-d0d8fe1c749d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b9743d5-d2dd-4ae7-9369-c4610c7ebc48"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "42d50a05-3107-4ed2-aca6-0ecb38631d05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4213189-cb74-4680-957c-4c2a5005c59a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de9639f0-ca1b-477b-94c2-2ec99b768543",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f9b952e0-3c02-421f-9422-9947ae018cd0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f4bc2c3c-aa3f-4a5c-99fe-191a87af4bcc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "10bf36d7-adce-4866-a691-ec1339abc67e"
            }
          }
        ]
      },
      {
        "id": "8c1db62e-5d81-4c17-ad59-fd965237c6fd",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ae115901-2bcb-472e-be3f-c274cc5cf117",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c0b33e85-9e73-42d8-be02-470fdf9555e2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bae96f51-719c-4a11-8f62-e4a60a69a9ff",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e0b7cb-5653-40ec-b285-8149d8002f7a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dad104f4-1aa8-41da-bb72-08e6c508dbc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "691b9caf-e1d6-4455-ad39-2d3f85b9783d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9bdbdb3c-dc47-40fd-91ea-5423aa58be55"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "accce361-0cb3-42e5-83a9-cf753f97fef2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27ffabdf-1c01-464a-8a3d-4fc7d18b4c5f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8af6a98d-de98-4623-8d70-ee14932e3e7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23ab8fd5-69bb-4768-ad47-0a018d125513"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fecb9c66-8c82-49cc-a0ad-4818a6ff0292",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5112046c-5566-45cb-9334-2c3128ddbc8a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c22c0dc9-7dc3-4f2b-8984-a9702a585822",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7bfb8b34-daf0-44a6-b275-c1d698c3e762"
            }
          }
        ]
      },
      {
        "id": "39316284-dd87-4d59-85cf-b4874dae7472",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5a3b01b3-ebbe-4d6a-82d7-bc35ba75eb17",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2b1079a2-8734-4137-899a-76d06728b630",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2efff658-391b-4888-baca-298d82bca206",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2679e1-e206-4c80-8626-59ed6b14f347",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de42802e-afe7-4f0c-8de9-bc3106c2daf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec363600-a1f1-4482-97bd-6906784692f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f3a5a18-3d9c-4455-8747-65b12ce65666"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7350de68-20f9-4a1b-ad9f-83c1d8ef050c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0af5511a-3ba1-46cd-8abb-e628cdf88f49"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "01fa85ec-3cb7-422c-aa60-a2a542a200f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27aa7b6c-ce74-43d6-9484-bf1f8ac593c4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "101a65d5-be5d-4e8c-9d03-89bcbe0ca8bb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b2d9cbd0-bf04-4f10-8c9e-c699bf4e1ed7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "934fe53b-80ee-4d33-b2d5-3c70a5c5b003",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c406d5a3-8a84-4317-a687-c1c8adfa931f"
            }
          }
        ]
      },
      {
        "id": "b94074f7-28b2-4848-93b0-4dc14c5fb24f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31fe48c8-93a3-4b1e-88f3-eff9dd0c8285",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ba4554d4-0e9a-4340-ad52-ea5c677b5846",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "927594a0-76b1-4640-a52e-c2f6b7cfd21d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bab9b5fe-c08b-4f40-829e-93da61ac8557",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5ddc91ff-859b-4527-908d-0e675b9e6eea",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 242.46031746031747,
      "responseMin": 21,
      "responseMax": 6291,
      "responseSd": 907.9299729202046,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1717547841702,
      "completed": 1717547911444
    },
    "executions": [
      {
        "id": "15b06897-b928-4ff1-97dc-9796694eb7f0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "95995112-c155-4a85-b94c-414b86e78000",
          "httpRequestId": "ca9e1f62-64e0-4879-8dc3-6690336d2fd5"
        },
        "item": {
          "id": "15b06897-b928-4ff1-97dc-9796694eb7f0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8eacaa0b-871a-4d24-909e-e8572995a72e",
          "status": "OK",
          "code": 200,
          "responseTime": 112,
          "responseSize": 0
        }
      },
      {
        "id": "eb6ab28f-8e34-4aa1-be15-24b6aa9b412c",
        "cursor": {
          "ref": "999463f2-94a2-4112-bcea-69a162c2321a",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f784bef2-7e9a-4826-a414-b57035e5f30d"
        },
        "item": {
          "id": "eb6ab28f-8e34-4aa1-be15-24b6aa9b412c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a5c2f8a3-6ec7-47d8-af32-8783024ee1d3",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "7fcf30c5-ff6b-4dc5-9aa5-876e4d553be2",
        "cursor": {
          "ref": "9f1b5402-dc4e-419d-b48f-913e98921003",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8d9a62d8-477b-4a4f-9b84-61963623e08d"
        },
        "item": {
          "id": "7fcf30c5-ff6b-4dc5-9aa5-876e4d553be2",
          "name": "did_json"
        },
        "response": {
          "id": "7046ba8f-c5c2-40a8-9dfc-3c2eed98f971",
          "status": "OK",
          "code": 200,
          "responseTime": 256,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95c82d3-91f6-42c2-8d7d-3b93e3c0f415",
        "cursor": {
          "ref": "900d8da2-903a-459e-ac05-95f9c3cd1532",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "25c99891-91e9-45e6-8cfa-a6e8758cdd7c"
        },
        "item": {
          "id": "e95c82d3-91f6-42c2-8d7d-3b93e3c0f415",
          "name": "did:invalid"
        },
        "response": {
          "id": "ab1b356b-901b-47e3-8ff6-c04e3a3cbffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1947,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95c82d3-91f6-42c2-8d7d-3b93e3c0f415",
        "cursor": {
          "ref": "900d8da2-903a-459e-ac05-95f9c3cd1532",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "25c99891-91e9-45e6-8cfa-a6e8758cdd7c"
        },
        "item": {
          "id": "e95c82d3-91f6-42c2-8d7d-3b93e3c0f415",
          "name": "did:invalid"
        },
        "response": {
          "id": "ab1b356b-901b-47e3-8ff6-c04e3a3cbffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1947,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099d66b6-b8e8-49e8-b800-f713952da6d5",
        "cursor": {
          "ref": "b6ba0210-b565-406d-ac62-2b458b8abbb7",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2812c90a-153a-4289-a4db-77e498fcd740"
        },
        "item": {
          "id": "099d66b6-b8e8-49e8-b800-f713952da6d5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "bf2bdc66-ede5-4370-aa3d-d311428765a6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2537,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d12df6-72e4-44eb-a298-424661662651",
        "cursor": {
          "ref": "b250af20-e774-4214-9d12-d40e1a02e1bc",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "505d2c2f-5cfb-4326-af98-664205692df8"
        },
        "item": {
          "id": "26d12df6-72e4-44eb-a298-424661662651",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d7dfaad3-fe8f-4c94-a11f-561b22523d8a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1945,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b94253-c4f6-449e-bdf5-ca017cddbbba",
        "cursor": {
          "ref": "aca21b1e-5f98-4d75-9192-af9313311973",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "79b3c8b8-3750-4a51-95ce-c01bf865f9f7"
        },
        "item": {
          "id": "e0b94253-c4f6-449e-bdf5-ca017cddbbba",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8fdce07d-7926-4726-8c58-5fa3a8ca2c5e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b91791a-31bf-432e-a0eb-127b7fbf3f7c",
        "cursor": {
          "ref": "0e60649f-f6f6-4541-b0e2-ad48de490e4b",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d08e142e-05a2-4a28-a6ca-ea90bfd91910"
        },
        "item": {
          "id": "0b91791a-31bf-432e-a0eb-127b7fbf3f7c",
          "name": "identifiers"
        },
        "response": {
          "id": "6523f61a-e32a-4a5b-b44b-8c5fe7fb9cf8",
          "status": "OK",
          "code": 200,
          "responseTime": 2194,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e238077f-0353-42ef-90c0-28b2941c7859",
        "cursor": {
          "ref": "6ad7a5b7-5a9a-4d0d-9386-ee160d639a35",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8add51e5-5a34-4cf1-9d99-b07866a298d1"
        },
        "item": {
          "id": "e238077f-0353-42ef-90c0-28b2941c7859",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bef4f4bc-78ed-4398-9c7c-1a051f04f689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff786c11-1e69-40d9-956a-cb2f2a8a4a1e",
        "cursor": {
          "ref": "ece48c78-4da5-4bb5-a9ee-48adcef23f61",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d2a13ae5-be7e-4b29-ab6a-b9e8986ad961"
        },
        "item": {
          "id": "ff786c11-1e69-40d9-956a-cb2f2a8a4a1e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e4dce24d-eb19-4f19-98b5-eabfe33e889f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7067073-43d7-4424-a258-01696f9b78a1",
        "cursor": {
          "ref": "854a64ad-4337-4385-9e41-6827bb0c6cad",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0f443e8a-ea17-49fa-ab9a-d32819648cc6"
        },
        "item": {
          "id": "f7067073-43d7-4424-a258-01696f9b78a1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "673069fa-e1c7-40d3-b2ae-e709afe440bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e716b7eb-b3f3-44fd-8758-d8b792220b45",
        "cursor": {
          "ref": "823a9c32-4618-46ab-9417-1bf1f791a967",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "af0545eb-6201-4faf-80e6-03a0fbcb8dfa"
        },
        "item": {
          "id": "e716b7eb-b3f3-44fd-8758-d8b792220b45",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "15dec7a3-efa9-4629-844c-d9a39546202f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2fb09b1-ba2c-4a42-819d-d588953804d8",
        "cursor": {
          "ref": "d9652cd0-84c0-407b-9d02-33400b863505",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "323b8931-9aaf-4c1f-a8f1-36218dff58af"
        },
        "item": {
          "id": "b2fb09b1-ba2c-4a42-819d-d588953804d8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b0f3dce1-30ca-4b8b-8714-c0e99d94eb6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6465570-8a48-4a78-acef-ae0bdb8fce83",
        "cursor": {
          "ref": "9a605130-4c26-454d-aff1-9a3b997d8f0e",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "41728884-6b68-4aba-9db8-256262dd924a"
        },
        "item": {
          "id": "e6465570-8a48-4a78-acef-ae0bdb8fce83",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f5445b2c-c130-4bd8-8a57-82f75e9b30e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62a0365-a20f-4c43-9716-4f8516877c99",
        "cursor": {
          "ref": "1d581662-dc67-4825-9a79-75fb85507cfd",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "819c031d-2988-4313-8ead-1ecb63184245"
        },
        "item": {
          "id": "a62a0365-a20f-4c43-9716-4f8516877c99",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "87847f81-4796-47b2-a828-2a0743bc4906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63ead3d-d407-4b2a-a5ab-fe9f62d6b040",
        "cursor": {
          "ref": "31f5debf-a7c4-4d1b-8f6a-0655999d7a82",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a2ead641-980a-47d0-a1ab-412cb9dc950b"
        },
        "item": {
          "id": "a63ead3d-d407-4b2a-a5ab-fe9f62d6b040",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "21c0012d-3454-4d9c-ae38-30bec6190a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a60e15c-a25f-48ea-bc4a-020043b0a952",
        "cursor": {
          "ref": "387de7dc-a87e-4ad9-99de-32858ca0764f",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0e81982e-9a47-40eb-b237-ee7812355080"
        },
        "item": {
          "id": "3a60e15c-a25f-48ea-bc4a-020043b0a952",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "70ae24e5-97dc-49fe-9f83-f6a49254462a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed95af0-5da3-41ff-b7a0-e46331328209",
        "cursor": {
          "ref": "571f4f23-ca78-4ce6-b74c-1dfd16f60db0",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "48fca080-1a54-430b-93ac-0bf4be2e3898"
        },
        "item": {
          "id": "bed95af0-5da3-41ff-b7a0-e46331328209",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6f12aed7-1a5e-44ef-9cbe-155f4689e70a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3df1b5-9a7c-4348-9170-8404d520e345",
        "cursor": {
          "ref": "2f3c6699-eaf0-4ada-bf48-dbf8e0f36bb9",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3d811b7e-0876-47b1-b192-702e7f33c90c"
        },
        "item": {
          "id": "3e3df1b5-9a7c-4348-9170-8404d520e345",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "707b0025-f9d3-4cb3-9d73-b44686ec6dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97a5240-1340-46c4-a738-ff0e0f242634",
        "cursor": {
          "ref": "0bb51928-0b60-4c5e-ab45-10ca57260318",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8cb42daa-a62d-4198-a298-57b22891a9b9"
        },
        "item": {
          "id": "f97a5240-1340-46c4-a738-ff0e0f242634",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "868f1b72-6001-42dd-96dc-28bc09edef53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4be1179-9ea9-4649-b090-b2e3579e3363",
        "cursor": {
          "ref": "ae53902e-b120-41e5-b424-4f929a110d32",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "91464b43-9724-45e5-85c2-6c43bf153f70"
        },
        "item": {
          "id": "c4be1179-9ea9-4649-b090-b2e3579e3363",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2dcc4c3c-e8cf-4590-b3fc-9b70402a94d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231dc0dd-8f00-43ff-8a96-c319c9881ae1",
        "cursor": {
          "ref": "6a7863d2-5cf7-4d47-897c-484f97920f9a",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7d2a60bf-50ed-43af-a65c-ca6b56595953"
        },
        "item": {
          "id": "231dc0dd-8f00-43ff-8a96-c319c9881ae1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "177b1546-bfd7-438a-b42e-9cf9459aab99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd0321e-35a4-4382-99bb-bd56cd04fe7d",
        "cursor": {
          "ref": "facbb7ef-2e8e-48fb-9954-b76cab08a06b",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d7dfab67-1189-4175-b369-f7cd8f42d40d"
        },
        "item": {
          "id": "0bd0321e-35a4-4382-99bb-bd56cd04fe7d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8a17e9e8-46cb-4fce-b77b-61c684793fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c43090c-a102-45ae-b5c8-da4320905ede",
        "cursor": {
          "ref": "6f0dfeeb-5190-4f2c-89fc-e2691bf3f265",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a30dba8d-50d4-44ce-b0c7-20fa84ed4caf"
        },
        "item": {
          "id": "5c43090c-a102-45ae-b5c8-da4320905ede",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e23c3f7a-dda0-4bcc-9dc4-2335489333b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104b4f9e-b16a-496f-8a24-93a37cde5cae",
        "cursor": {
          "ref": "cd0fc13f-c184-4b04-ab41-8efa906a53bd",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8c4d76d5-2779-40a1-b3e2-5798f66ce511"
        },
        "item": {
          "id": "104b4f9e-b16a-496f-8a24-93a37cde5cae",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "23809823-9544-43d7-8080-7f7e75d3f28d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cfd042d-b7ac-46b3-bf30-20854eef782e",
        "cursor": {
          "ref": "88cea756-789e-49a6-995f-0f883d93805b",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1c7244bf-da72-4a7f-bb6e-194fc0830a82"
        },
        "item": {
          "id": "4cfd042d-b7ac-46b3-bf30-20854eef782e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "38c06e11-12a3-410e-9019-b36bffccb128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c316b8c-a1e8-4b2a-b0dc-5ba91a64d456",
        "cursor": {
          "ref": "70c4e523-66df-4755-9af9-d925049e1d38",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0fe103d1-8735-4876-9b05-b83b35c29ddc"
        },
        "item": {
          "id": "5c316b8c-a1e8-4b2a-b0dc-5ba91a64d456",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "dd4fec44-46df-444b-916f-db995d807f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf415e7-4799-42a4-9d45-34dec3aa3dc4",
        "cursor": {
          "ref": "ddfa045a-7a6d-4bf7-90b7-1e67fb8e38a3",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "60f1b879-f740-493e-9af4-009981d80805"
        },
        "item": {
          "id": "6cf415e7-4799-42a4-9d45-34dec3aa3dc4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b3caf4dc-1499-482d-8883-915c9e4c5d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d621dabb-1d5c-45ad-9aa2-df189e17e28a",
        "cursor": {
          "ref": "8ef183ac-3629-4230-bf53-3925c345a5cc",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3184a0a9-4854-4a72-940a-d4652d8c5d5c"
        },
        "item": {
          "id": "d621dabb-1d5c-45ad-9aa2-df189e17e28a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "73536ec7-ad89-4cfc-8950-e0cf76fa8da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbbbad0-12e0-485e-a107-add1090cf37e",
        "cursor": {
          "ref": "4eee7478-aaaf-4963-a0cf-9488bd0b3b1d",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0048ce83-c3c2-4aec-9eb4-06d7e18f623f"
        },
        "item": {
          "id": "ffbbbad0-12e0-485e-a107-add1090cf37e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e4e3d147-13b9-4cdf-b222-f7190b78138d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03569aec-43d8-40c5-8f56-904099015bac",
        "cursor": {
          "ref": "6bd12a80-a301-4093-bed1-f422a8ad9a2c",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "871a26b2-4a71-4bac-b3a4-c9b6d4aa6d24"
        },
        "item": {
          "id": "03569aec-43d8-40c5-8f56-904099015bac",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2fedbcc7-295a-43e5-971d-a8599d22b67a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caee9cd1-db0e-42e6-bf14-77adee36b892",
        "cursor": {
          "ref": "5640a3e6-6360-4cc0-913f-1230dd18a1b4",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c5be776b-d6aa-4707-bf96-a269bbce7be9"
        },
        "item": {
          "id": "caee9cd1-db0e-42e6-bf14-77adee36b892",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "96b368ef-80b6-45a4-ad12-4fad6c0bf380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e699a2-378d-49a5-840e-b9efe9ae74cf",
        "cursor": {
          "ref": "b4e53871-f3b9-48ef-acdb-00ebb4503835",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9253d7c0-3db7-4090-89df-590b477d6621"
        },
        "item": {
          "id": "a2e699a2-378d-49a5-840e-b9efe9ae74cf",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5e08af25-0269-4ea9-87d8-13a25760e3cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b4bcbf-b711-40bc-bf20-1210ffc80cbe",
        "cursor": {
          "ref": "4cc63df9-0413-44f9-af25-c0955fc42415",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9113b66b-8eee-4249-83f1-f5f08014b0c4"
        },
        "item": {
          "id": "15b4bcbf-b711-40bc-bf20-1210ffc80cbe",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9dc2e9ad-1f22-4de9-a10c-45ee62e89b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4e429b-5d66-4c5a-ac7f-0dbbdc9934e3",
        "cursor": {
          "ref": "04fbf54f-c928-4cf7-9dab-12256e178709",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "99306906-2a98-4da5-91e6-f88f3077029a"
        },
        "item": {
          "id": "5f4e429b-5d66-4c5a-ac7f-0dbbdc9934e3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "28a04df2-557d-4838-9c3a-3008afc9902c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb83d5b-2919-42da-ba86-14ef3390ff66",
        "cursor": {
          "ref": "1436f04b-cc14-4558-959a-d114a83e1cdc",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9b6bf3c0-dc0a-4b70-8cf8-fd7f99ae3ff3"
        },
        "item": {
          "id": "5eb83d5b-2919-42da-ba86-14ef3390ff66",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7821a3c3-23e5-4dc1-9026-fee5630b7cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6d3338-dcae-4c7d-b154-fa42c1722893",
        "cursor": {
          "ref": "28b20016-338d-4347-9600-8384b689456d",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ed1fa2ff-f2a7-45ff-8d5b-f1957acb249d"
        },
        "item": {
          "id": "8d6d3338-dcae-4c7d-b154-fa42c1722893",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "19984130-7c3a-4f37-a6ab-e94a8c98921b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd3e3e8-25f7-4491-8dd8-48ba710f1af0",
        "cursor": {
          "ref": "17229e0c-07c5-4d74-bcd4-691e4ab844d7",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "86d21f58-a322-4657-b952-0ae903663b19"
        },
        "item": {
          "id": "fcd3e3e8-25f7-4491-8dd8-48ba710f1af0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a5e59412-8b8d-485d-8ecd-3dc2476fc0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3560733-f200-4ab6-a4df-c843aeb8563b",
        "cursor": {
          "ref": "5c0df8c8-1b01-4976-8c38-3af9e81b8f3e",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "834f9de9-132e-46c7-9335-aa84dd53ca72"
        },
        "item": {
          "id": "b3560733-f200-4ab6-a4df-c843aeb8563b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ea1660f7-b555-4de2-8f81-9a88fd1cbc2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b835cf99-8bff-427e-b370-60d36b526c2c",
        "cursor": {
          "ref": "8f25d5b6-b002-4e03-ba10-f77ac003b04f",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f0121ff5-5cde-4a4b-819a-76dbaaf03dbf"
        },
        "item": {
          "id": "b835cf99-8bff-427e-b370-60d36b526c2c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "dbc9b1f7-04dd-4879-a5f2-2cadba903c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5bbb559-3724-4424-b19c-f56bbcfa8a5a",
        "cursor": {
          "ref": "6e8610dd-34d5-429b-ae24-6da943729c7c",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1f1255d4-3b2c-42e2-beb8-653a0290c158"
        },
        "item": {
          "id": "e5bbb559-3724-4424-b19c-f56bbcfa8a5a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5fce264c-bb9b-4d2e-8c31-9896a13453a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1748dd7-841d-4923-ad11-13b969e14505",
        "cursor": {
          "ref": "b0f28ecd-9c5c-4071-b8c5-76a7ffa35a6b",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a2b4e40b-4da1-46db-959d-c28171dade0b"
        },
        "item": {
          "id": "c1748dd7-841d-4923-ad11-13b969e14505",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5b07be9b-109e-4393-ac65-347048c5f226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16bc3194-92bb-4506-b63b-60cbe2700780",
        "cursor": {
          "ref": "e215139b-1f54-498f-b85e-fa6c607aca5b",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7e503dc2-16c6-49be-8f0e-3fb46840ac54"
        },
        "item": {
          "id": "16bc3194-92bb-4506-b63b-60cbe2700780",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "91ee0b71-8c70-4d5a-8b93-bda4d88147b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2ffd1a-0fe4-440b-b190-1016d37c7703",
        "cursor": {
          "ref": "8fc392dd-e8b9-4365-bd23-b14b2d33af19",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "fa5c1bb1-ecdc-4687-9818-7b8909f1ca57"
        },
        "item": {
          "id": "db2ffd1a-0fe4-440b-b190-1016d37c7703",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d5c9b0ac-1e90-4ef5-91c0-1fadaa875993",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 49,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6650a2e5-4030-4b93-bf31-ac85d5c1f73c",
        "cursor": {
          "ref": "0bccecb1-bfc4-4140-80ab-791c401718b8",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "861892ce-89c0-4691-8f4b-df023e22f5c6"
        },
        "item": {
          "id": "6650a2e5-4030-4b93-bf31-ac85d5c1f73c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "097cf514-854b-41e0-b539-12ed3dcdc674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efdc010b-d58d-40f8-9121-389d84ae4a11",
        "cursor": {
          "ref": "3eddedc9-7b60-46ed-8603-749d010af54d",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ae8a9004-c670-479c-b16a-058f71a2b13e"
        },
        "item": {
          "id": "efdc010b-d58d-40f8-9121-389d84ae4a11",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "97d43975-a46f-4a39-855c-d64184ff802d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db0aa1c-ebf0-4137-8a35-20102d411b96",
        "cursor": {
          "ref": "7f007f95-7222-4189-a7da-cb947a8232bf",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "dfaa7ca3-142a-4822-ab54-7e4268e57646"
        },
        "item": {
          "id": "1db0aa1c-ebf0-4137-8a35-20102d411b96",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7fdc29c9-9875-4261-9688-adcdb1bdabde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6820e27f-838e-41b5-95a4-a5c6832ce8d2",
        "cursor": {
          "ref": "d33a2b69-26ab-4574-b8b9-54a226291ca8",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "48a15cab-0d27-44b4-b348-cf516ac89ce4"
        },
        "item": {
          "id": "6820e27f-838e-41b5-95a4-a5c6832ce8d2",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9e8be043-8286-4707-8a0a-55fb19e5ba35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fcb72ac-9619-4830-99c3-7d3d84470794",
        "cursor": {
          "ref": "da224a69-719c-4672-b004-66283456e983",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "34012693-50e6-41b4-8f25-ef94706c831d"
        },
        "item": {
          "id": "5fcb72ac-9619-4830-99c3-7d3d84470794",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2119300b-b575-4bac-85a6-5125b3ac0861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6f1cba-4302-4b5f-9f18-e0c489c4b7ba",
        "cursor": {
          "ref": "5b496e33-3fdc-4522-9d52-ff4bf636cd05",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6de77c81-29f4-40ff-8a03-702f73b5157c"
        },
        "item": {
          "id": "7a6f1cba-4302-4b5f-9f18-e0c489c4b7ba",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3418cad9-6e2d-4b56-920d-7b2a1c595dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c6f9d4-4397-46d5-afcd-c9d608e911bd",
        "cursor": {
          "ref": "e781ae56-34d2-45d9-93e4-f1c5c0b4683a",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "74b2d56a-5ee1-4306-9b43-2eb0415a7ffc"
        },
        "item": {
          "id": "08c6f9d4-4397-46d5-afcd-c9d608e911bd",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "1cee54a0-48b8-416b-9acf-4fcd051271f3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 47,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6eb9bd-3de5-4d1a-98f1-722a77849263",
        "cursor": {
          "ref": "80debd3d-5237-49de-8173-0fd2946c5e40",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2ba18e9b-0beb-4fd1-b6a0-793d3695e872"
        },
        "item": {
          "id": "2d6eb9bd-3de5-4d1a-98f1-722a77849263",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3b7fb734-e428-4400-bdaf-db1587d2f08d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00503279-6dd5-445c-88cf-971eefc442a4",
        "cursor": {
          "ref": "4c17d1ab-1523-4432-b8e2-e0a68a3ac674",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "213c3acc-10ac-4c78-a7bd-99f96d1f48bb"
        },
        "item": {
          "id": "00503279-6dd5-445c-88cf-971eefc442a4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d151c65d-012e-4ca8-b645-12d47014e367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297fdf32-e649-48e8-9023-03ef1db2a038",
        "cursor": {
          "ref": "f1b026ec-8027-46bd-bf80-62d3fbbf97df",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3caf7023-868e-456a-afca-6dc7a50bf9ac"
        },
        "item": {
          "id": "297fdf32-e649-48e8-9023-03ef1db2a038",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "930f0bb6-852a-45dd-95de-6c17f21759ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929794ee-71e1-473a-8a00-abc2edbb51a2",
        "cursor": {
          "ref": "4e033cae-20e5-4b25-862b-96b9c592fbff",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d56a6d43-8e05-4fb8-9203-aee8ef41e99a"
        },
        "item": {
          "id": "929794ee-71e1-473a-8a00-abc2edbb51a2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "20cdcfe8-9036-4516-ad82-6994e3b14437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9648e67a-1fc2-44f2-b05e-19649208ace9",
        "cursor": {
          "ref": "a4841b47-d01a-4e39-a081-2c38add08755",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "79bc6fef-033b-4e64-b3cc-12408cc7a8d6"
        },
        "item": {
          "id": "9648e67a-1fc2-44f2-b05e-19649208ace9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6f442584-dc65-4cc7-9344-1c013b2e7905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86aad85a-365c-4928-9862-f3c516f3addc",
        "cursor": {
          "ref": "2d1d733f-7edd-42fa-9fae-d4290f97577f",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b313fe33-6d23-45ed-87c8-0067909984f4"
        },
        "item": {
          "id": "86aad85a-365c-4928-9862-f3c516f3addc",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "12d79ed9-6554-4b5e-8cf8-8385628d84dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c65d5b-7f2a-4f16-b87c-cbc371bb1f2f",
        "cursor": {
          "ref": "cf409f9c-70dc-4f58-9a9e-8122ccbd3fe3",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "34d18cc8-9be1-4ebd-8936-5eb318ff248b"
        },
        "item": {
          "id": "65c65d5b-7f2a-4f16-b87c-cbc371bb1f2f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "80434126-289d-4289-94c2-5b10a938ffad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd1a19d-ccca-437d-b015-4252932565d5",
        "cursor": {
          "ref": "cdd17f1f-137c-4947-9265-1f7f2286f1c0",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6bbc0201-cce7-47b3-a8ca-2058bbcfdc7b"
        },
        "item": {
          "id": "bcd1a19d-ccca-437d-b015-4252932565d5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "07e28d00-64ca-489c-a5b5-aff39f605caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beed58a0-76ab-4926-9a01-7c78828d6807",
        "cursor": {
          "ref": "ba4fccaf-c6f5-4d08-90c7-2bca7efa808e",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "50b0c690-ff1f-4cbd-b8f5-770228347560"
        },
        "item": {
          "id": "beed58a0-76ab-4926-9a01-7c78828d6807",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b3d1e6c3-9e52-4da0-a647-70e912366b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd8c2f5-586e-461c-9fe5-afc77d6c86f3",
        "cursor": {
          "ref": "e9998790-aa8a-4990-9545-64c9923afb22",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "88508970-2e19-4ded-b011-3f92ae303f63"
        },
        "item": {
          "id": "afd8c2f5-586e-461c-9fe5-afc77d6c86f3",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3b992567-b9db-4585-84b3-a0dc724cc2e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2717a5d3-d28d-4b69-b696-ae123c2211bb",
        "cursor": {
          "ref": "0ff354db-cff4-4e6d-9f52-3ec58a0a8576",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3bb97713-c473-4ea1-a5ff-7e43e4260b2d"
        },
        "item": {
          "id": "2717a5d3-d28d-4b69-b696-ae123c2211bb",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7d0731df-1d9e-44cd-9987-7f3c61ee865a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1ad857-95b6-493c-a453-8e5379e8a0c0",
        "cursor": {
          "ref": "da8dad38-ed1f-4b5f-8019-f29247911341",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5d4bc899-12fb-4dce-b54f-7865aa2e8024"
        },
        "item": {
          "id": "fe1ad857-95b6-493c-a453-8e5379e8a0c0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a29e30c7-4579-402f-85fe-625e7d110611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b234cc-29be-4887-aa4d-f96b80c6f6c7",
        "cursor": {
          "ref": "ca0c27ff-af25-49e4-925c-1c7dda52ebd7",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "682b7b96-bf74-426d-91a1-5f540a898c08"
        },
        "item": {
          "id": "c7b234cc-29be-4887-aa4d-f96b80c6f6c7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "03afa5ca-76bb-4ef8-a02d-27d90d81b0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53d2583-7bf2-4c87-9ecd-ad1872b99d31",
        "cursor": {
          "ref": "e0f0e0e6-4c40-4af2-98ca-5944e19f56b2",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d28041c7-d5ae-48cd-a4aa-e57ad49d6a43"
        },
        "item": {
          "id": "e53d2583-7bf2-4c87-9ecd-ad1872b99d31",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "80dfafe0-168c-4abe-9d67-329bc879861a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dcdb33b-f6e0-44f6-bff3-c687366b959e",
        "cursor": {
          "ref": "37ee4bc3-d817-41cf-b4a5-625f546dd028",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "aa77ba68-0a74-467e-afb9-2be45f53f383"
        },
        "item": {
          "id": "4dcdb33b-f6e0-44f6-bff3-c687366b959e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b8e49a71-1ee7-4eb4-8c56-ef7973da39cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cc4b0d-6574-41e2-af11-81f9cc3b8d2c",
        "cursor": {
          "ref": "f61aa796-062a-4d3b-b859-b01ccb458210",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5dfd224d-a54f-4d8b-8a93-727fcc4dc505"
        },
        "item": {
          "id": "46cc4b0d-6574-41e2-af11-81f9cc3b8d2c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0330db86-d882-4329-94f8-f21bbdd503be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ef12bd-a95c-4a63-b4b4-188cea907dbf",
        "cursor": {
          "ref": "535679e7-040e-4a98-91e1-f39a27ead15f",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f19b57ec-19c1-4360-a969-28b66103b4cb"
        },
        "item": {
          "id": "80ef12bd-a95c-4a63-b4b4-188cea907dbf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a67c5542-0532-4f52-8163-9f503b89ffbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535d5406-540d-42c5-b03f-ecec93f7e152",
        "cursor": {
          "ref": "5b3aa877-1faf-4a85-aed1-aba746be9846",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f4305b1d-645f-40d8-91b9-d750c97cb5a6"
        },
        "item": {
          "id": "535d5406-540d-42c5-b03f-ecec93f7e152",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a0c506a7-1b53-4347-bb1c-faa027edb853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9252b77-d700-4dab-90e5-89021b99d414",
        "cursor": {
          "ref": "40ca8175-c17f-4856-999f-f1fdaa2ea360",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4d73d2cf-1846-4ace-8996-b8c7f1ed5461"
        },
        "item": {
          "id": "d9252b77-d700-4dab-90e5-89021b99d414",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a52598a6-36e4-42e1-b4fa-8ff5dd405ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0f8fc8-bb7d-4de6-8425-a7a2288b8c78",
        "cursor": {
          "ref": "8ab184cc-f7de-47af-8e03-f620fc3830f8",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "faf67246-43fc-460e-a350-57022e035920"
        },
        "item": {
          "id": "dc0f8fc8-bb7d-4de6-8425-a7a2288b8c78",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ee81bc2b-7bef-4243-b665-54b1bc999e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c20acc-7f08-4c8e-ba1d-a95b8db931ac",
        "cursor": {
          "ref": "2e219b60-4c15-4a41-b4b8-c3da2d104f78",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e3ffe812-809b-4ac0-8a53-d7a05bd31d4f"
        },
        "item": {
          "id": "47c20acc-7f08-4c8e-ba1d-a95b8db931ac",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c9db0303-5eaa-4d8f-b949-d685c9f4e72d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fa677e-3df0-4d59-9dc7-df814b9c0cd3",
        "cursor": {
          "ref": "f00975b2-0692-4ffc-964a-6ba01363bbe3",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8e2b4397-c6e9-4933-91c9-19f2400b4055"
        },
        "item": {
          "id": "59fa677e-3df0-4d59-9dc7-df814b9c0cd3",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "04ce305e-4e17-4610-9d0b-496b3f708132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4494968-5881-4d3d-93d9-2bbb7d2cc602",
        "cursor": {
          "ref": "5e74f17a-ee92-45c5-98ff-68c10a9a21f5",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2eb376ac-8e20-42ab-9a62-4012f44749bb"
        },
        "item": {
          "id": "d4494968-5881-4d3d-93d9-2bbb7d2cc602",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ae6e6f36-13bc-431e-b7ae-9ae4d006c013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2cb0ac5-37dd-43a0-b720-99ff5393cf23",
        "cursor": {
          "ref": "73fe3e5e-1c50-4ea0-8368-d6651a7c5cc4",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b6322b14-441e-4339-9497-f05f575da63f"
        },
        "item": {
          "id": "f2cb0ac5-37dd-43a0-b720-99ff5393cf23",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "102fc85f-8696-4d24-aaa2-cad754b7296f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a77917c-0ab6-435b-9a51-ffc9b5330886",
        "cursor": {
          "ref": "43da1330-26cb-4a49-af14-97878987e21b",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d4edd550-b841-4a48-b1e2-898c8e650154"
        },
        "item": {
          "id": "6a77917c-0ab6-435b-9a51-ffc9b5330886",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5446ea80-37bc-47a4-b026-5c4d6955f439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00c7660-281f-4da3-8e01-a1e403dfb544",
        "cursor": {
          "ref": "b31fcaa2-a0b4-414e-b6a5-f9086bab1b27",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a7ed64b7-9caa-40d9-95f9-925fc98eef8a"
        },
        "item": {
          "id": "a00c7660-281f-4da3-8e01-a1e403dfb544",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "be5f1aee-218c-4175-8e33-04352d8a65bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bcd8fef-b23f-435b-a37d-ee9c8627d1a2",
        "cursor": {
          "ref": "3897c864-33fc-47d7-87ef-70b375ac55bb",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "845e79b4-b9af-4374-8467-73c2a80364bd"
        },
        "item": {
          "id": "5bcd8fef-b23f-435b-a37d-ee9c8627d1a2",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "acdd4030-5f32-4a54-9466-3102a75a0a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e773283-49f3-43b1-a8b0-96b49d10c03a",
        "cursor": {
          "ref": "ad6f595b-68a8-479e-8c89-67ee8dd91e21",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0da6d488-0920-4f67-9166-1a9dd30590ef"
        },
        "item": {
          "id": "7e773283-49f3-43b1-a8b0-96b49d10c03a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "13e4166c-483f-45d0-9f61-baf8dcd5b2a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eafba01-fe5c-41db-a83c-f8e71aff0f35",
        "cursor": {
          "ref": "23133f91-dc91-4419-8c82-5db61ca40600",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a4617d8f-883c-4386-b251-3aa714d3dfd3"
        },
        "item": {
          "id": "2eafba01-fe5c-41db-a83c-f8e71aff0f35",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "25750a58-2398-4884-8943-e8a9db16d598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706e5b1f-775a-4b3f-9295-e0a715fde9bd",
        "cursor": {
          "ref": "cabfbc5c-bfe7-48f4-ac40-dde7c0671595",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "264c3294-ebbd-4379-a51d-195553aeacc4"
        },
        "item": {
          "id": "706e5b1f-775a-4b3f-9295-e0a715fde9bd",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9bb49b3e-1555-4140-bf0e-3981a47a50f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9ebe03-d3b2-471a-91ad-aba9db580730",
        "cursor": {
          "ref": "d76a5f06-e3c4-4f98-b2cf-6327b87d498a",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e214e6e0-87b3-4f0d-835e-b9abaae7528c"
        },
        "item": {
          "id": "cf9ebe03-d3b2-471a-91ad-aba9db580730",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "50fb4893-b9d3-40dc-a6b1-8b8eeb9054da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d1dffd-60e7-4c7b-9cad-0a2446730404",
        "cursor": {
          "ref": "3470e5ad-1f5a-4685-8933-d9f26056bcc8",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "58c03ee6-5e58-472b-9117-1b2ffab1e6d0"
        },
        "item": {
          "id": "63d1dffd-60e7-4c7b-9cad-0a2446730404",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9861c4d5-cf47-4b22-bacf-073fa9c464d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89aea51a-b135-4b82-9d85-19419d87b29e",
        "cursor": {
          "ref": "bd704d6f-34b4-480f-9675-8e405f605df2",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5d4b6c2b-c4cb-4270-a91f-136c05ef3028"
        },
        "item": {
          "id": "89aea51a-b135-4b82-9d85-19419d87b29e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "79f168df-1630-4bbf-a31c-184033e7540b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8fd2c2-7f13-406e-bb62-8c787f952e75",
        "cursor": {
          "ref": "25a00439-11bf-49ea-9544-75fdbdf21787",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "db34e952-91e7-45f7-b62f-b5b855b5f9d4"
        },
        "item": {
          "id": "6c8fd2c2-7f13-406e-bb62-8c787f952e75",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2fd88f08-c97e-4ae8-ab24-8c6673891534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098bd9c6-9467-4f5a-b889-0e023d8e0986",
        "cursor": {
          "ref": "dd877257-3537-470b-85cd-993799cc0e8a",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "edea5b3b-abe1-4ecd-a0f2-0a78cf1a3c1e"
        },
        "item": {
          "id": "098bd9c6-9467-4f5a-b889-0e023d8e0986",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "fbbc2718-514f-4141-8eaf-b608bb49f91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ceebcfc-7fb6-438d-90ba-73cc47892aab",
        "cursor": {
          "ref": "9656eabb-db7e-4850-8e2c-47e4f0547dee",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "976bf1b9-a660-4009-bf66-43b36ed2c423"
        },
        "item": {
          "id": "3ceebcfc-7fb6-438d-90ba-73cc47892aab",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c859286e-b6a3-4ebf-b1b7-6146e7e3928d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7db8c88-14bf-4c96-8569-6fb089568480",
        "cursor": {
          "ref": "428e25f2-7da8-4c05-a387-35a9f879ada0",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0cd5e0b3-01b3-4234-91fa-074324c1544c"
        },
        "item": {
          "id": "e7db8c88-14bf-4c96-8569-6fb089568480",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b5a32a0d-8576-40a0-bcdf-5299d23cb7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0481028f-1002-4cfd-938d-4738338d33f0",
        "cursor": {
          "ref": "c6916266-157b-4fac-8a97-def13946d7ce",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "42d2bc16-a572-4813-8339-86138669cf43"
        },
        "item": {
          "id": "0481028f-1002-4cfd-938d-4738338d33f0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3d733ab8-2458-4135-8258-4c103d75a795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eecd9e8-3389-4d8f-bce3-f0007a1391b7",
        "cursor": {
          "ref": "2e8a1983-c95d-4fc0-a13c-42ea1090e3c0",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c805f142-babb-4755-ac79-e909cead02e0"
        },
        "item": {
          "id": "9eecd9e8-3389-4d8f-bce3-f0007a1391b7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a2b9fe6d-717f-4ee9-9be2-cf42efc7e76a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43645617-4e7a-422d-8631-d7ac6ef9613d",
        "cursor": {
          "ref": "0d7b90ec-2d12-4ef8-be44-5f83683af9c8",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8facecf6-f19f-4663-b1f1-555c814c12e0"
        },
        "item": {
          "id": "43645617-4e7a-422d-8631-d7ac6ef9613d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0ac663b4-03fe-4db1-b356-eef3578e386a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4921d769-c771-4070-88a3-93cd018923f0",
        "cursor": {
          "ref": "4db2c0ad-93da-47d3-bc7b-9251434cab2a",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "545ad6f8-c034-4b4b-b0bf-48ff10bf4506"
        },
        "item": {
          "id": "4921d769-c771-4070-88a3-93cd018923f0",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3c96d367-92e2-4fca-b437-154b819320a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b162e3f9-7b94-435e-b248-28b461658d40",
        "cursor": {
          "ref": "d7d685d3-1337-4e30-8250-a550f6b91a1e",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e358ca3c-5996-447a-8225-346be6efb8fc"
        },
        "item": {
          "id": "b162e3f9-7b94-435e-b248-28b461658d40",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "284b7490-4fec-444f-bae2-e1253847dc90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2e140d-84cb-45f3-9e3d-a9bce4af2966",
        "cursor": {
          "ref": "108f3b2c-2a94-4d32-afa3-f219a031f6dc",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "41c7dfb7-2b67-4fda-9090-554121aa87d9"
        },
        "item": {
          "id": "7c2e140d-84cb-45f3-9e3d-a9bce4af2966",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ff3353d0-f063-406a-a98e-18cf96ad1c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6650176-759e-4719-8628-2cc2636f5d6b",
        "cursor": {
          "ref": "bb18c515-f232-40e8-8136-0444afad3ab9",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "14267092-d502-4187-bd22-f84c2eb8abd6"
        },
        "item": {
          "id": "b6650176-759e-4719-8628-2cc2636f5d6b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8734cb0f-9335-426c-b0fa-607ee698492c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6f042c-7049-48d5-9e82-3da6b178407e",
        "cursor": {
          "ref": "633fefc4-8159-4274-b9cd-325ab172c44c",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "60cdd2f9-7c8f-4629-91f9-cc12a95ecadf"
        },
        "item": {
          "id": "2d6f042c-7049-48d5-9e82-3da6b178407e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5e94194e-c5a4-4a50-a052-4470468d23e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067b95d1-2cd9-4c48-958d-0f0816aa82fe",
        "cursor": {
          "ref": "25a2bce0-8f2a-4a18-859d-cfe826df798f",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1d8751ed-fb2c-400b-a341-06fe963f1a16"
        },
        "item": {
          "id": "067b95d1-2cd9-4c48-958d-0f0816aa82fe",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "07146308-cf56-401d-a8c5-3a78bacbc6e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd94eeb-5bfc-43d2-874e-767868e6863d",
        "cursor": {
          "ref": "a7915f7f-aafd-41ef-9fe9-68d841f93fc8",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "299b7a0e-f724-4e1e-ad04-d9d03f464304"
        },
        "item": {
          "id": "fdd94eeb-5bfc-43d2-874e-767868e6863d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e83fa282-f3f1-4aa1-9987-c5ea75a0405e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a492cc82-1ddf-4df0-889d-8aa42e7b5cf4",
        "cursor": {
          "ref": "a5110a39-a8fe-431b-942a-234eeb8e1c93",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "18893a83-e7f2-46fc-b4ec-7523f730f89b"
        },
        "item": {
          "id": "a492cc82-1ddf-4df0-889d-8aa42e7b5cf4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "712e9c54-586b-491d-a1dc-afc7730df5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56dfeb8c-a52b-4879-91c3-3180de99bf58",
        "cursor": {
          "ref": "4dca1dbb-9d42-4047-8257-0b27670237cd",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "26888e33-721e-4a1a-ac78-63e50bdeab9c"
        },
        "item": {
          "id": "56dfeb8c-a52b-4879-91c3-3180de99bf58",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4df3bf57-29dd-4a3b-9f2d-3ac17ed05756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0bb2746-3143-4529-81c9-bbbdaf92c152",
        "cursor": {
          "ref": "b8d58736-0834-4cce-a9e2-b1a57331213e",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "48232c99-2e33-4d00-9e47-e4575e676d30"
        },
        "item": {
          "id": "e0bb2746-3143-4529-81c9-bbbdaf92c152",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3949b1e9-5528-46f3-8ec0-f072b78839bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2109f426-1a52-4e16-8ea1-2f11a7bf689b",
        "cursor": {
          "ref": "642aa46a-a29c-4464-8368-16dee62dde51",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8f046685-5bc4-4090-9eda-cbfcf7e12bf8"
        },
        "item": {
          "id": "2109f426-1a52-4e16-8ea1-2f11a7bf689b",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "7d69733d-2640-406a-b69f-acdd2a840aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "37caf00e-db1b-4099-b905-55d64e278695",
        "cursor": {
          "ref": "2cc48c79-0d0f-4603-89c8-277f07163863",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c08c5710-0f8f-4760-874e-75e2202cac2a"
        },
        "item": {
          "id": "37caf00e-db1b-4099-b905-55d64e278695",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b0eb4a26-d2b4-4608-9b54-bef659365478",
          "status": "Created",
          "code": 201,
          "responseTime": 6291,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19453e2-a333-43f0-a32b-32ac48d1909e",
        "cursor": {
          "ref": "18056f30-d02a-4bf3-9bd5-ade67896fa05",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f5a67e55-fcf7-4c8f-98bf-2817f4b59673"
        },
        "item": {
          "id": "d19453e2-a333-43f0-a32b-32ac48d1909e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a4f50402-e9b9-4a65-b51d-36867797f504",
          "status": "Created",
          "code": 201,
          "responseTime": 5765,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1d2ae5-ed19-4f95-8db4-3b2bae331213",
        "cursor": {
          "ref": "7cdf07a2-a9b1-4667-8997-56b9cef1daad",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "305c46e7-0487-455d-9e5f-f5561b84e9de"
        },
        "item": {
          "id": "3d1d2ae5-ed19-4f95-8db4-3b2bae331213",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c309edeb-5911-4d69-a4e5-aa0cfaaeb5fd",
          "status": "Created",
          "code": 201,
          "responseTime": 5369,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "322e1be9-ade0-49ef-9a3c-dea889330b5d",
        "cursor": {
          "ref": "65223d2b-d472-4417-b00c-7537bf3bbe0c",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "30bd4b90-fad7-46d3-a974-2b4bf9b55972"
        },
        "item": {
          "id": "322e1be9-ade0-49ef-9a3c-dea889330b5d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1dbc5700-a5bf-4f53-a6f0-d0cf8cfbd726",
          "status": "Created",
          "code": 201,
          "responseTime": 5179,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11a3003-6774-4774-9a4a-41e94e9e6a42",
        "cursor": {
          "ref": "7e35fdf0-268c-41c2-bbf0-3ebb5b06bbdb",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d9555ae8-3045-4a58-9bc1-a6af190aec80"
        },
        "item": {
          "id": "b11a3003-6774-4774-9a4a-41e94e9e6a42",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8dc4728b-c6a0-4f4d-9188-a8b9012e297d",
          "status": "Created",
          "code": 201,
          "responseTime": 5159,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-06-05T00:38:06Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-06-05T00:38:06Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "58523378-1ba3-483c-9c61-9bd45f19aeb2",
        "cursor": {
          "ref": "e00dc71d-ddfa-48fd-b641-4bf573476f39",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d0e9b743-b1ed-4810-81d1-f2457e15d492"
        },
        "item": {
          "id": "58523378-1ba3-483c-9c61-9bd45f19aeb2",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9aa868c3-f29e-484b-9518-da0c286019a6",
          "status": "Created",
          "code": 201,
          "responseTime": 5482,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd806d3-9666-4811-b53c-15b7bc49e5b1",
        "cursor": {
          "ref": "c638cc4e-311a-4aad-8f2b-c26b506ec7a5",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "78e7dc17-8c06-47a9-bcdb-f85464f84167"
        },
        "item": {
          "id": "cfd806d3-9666-4811-b53c-15b7bc49e5b1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ff50b400-57cd-4d13-9a66-eebf12632ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 175,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b696ec-98a1-414f-a6ff-042942298dd3",
        "cursor": {
          "ref": "15473a68-7f57-487f-95b6-4fe9a106c29d",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "93048d19-7263-4928-84e5-fbcb64586aa1"
        },
        "item": {
          "id": "a8b696ec-98a1-414f-a6ff-042942298dd3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e72dd8f6-6a70-4293-8ba8-a713c31d97f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd41b9c4-005a-447a-b397-735a21e9c693",
        "cursor": {
          "ref": "23126de8-d7b0-4934-ad6c-835a8cb06a62",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2f9346c6-08ad-4690-ab09-d8b1e4812f4c"
        },
        "item": {
          "id": "cd41b9c4-005a-447a-b397-735a21e9c693",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4a8009f5-39f1-441f-9de6-9f87e6a562e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8bd6de5-0f0a-41e8-a6c2-08030b12d9fc",
        "cursor": {
          "ref": "5ab3e8b4-0631-4d1c-b8b1-453fe1393195",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a5975496-3226-4c6c-9b0d-b3b77a047a3d"
        },
        "item": {
          "id": "f8bd6de5-0f0a-41e8-a6c2-08030b12d9fc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c72860c0-c358-48ee-9de9-090a66d6cde1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20f39d0-8c25-43ca-8395-ad75964cce30",
        "cursor": {
          "ref": "1110e0c7-da4c-410d-abf6-7080274c5d5c",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3f39705f-a6e3-4591-82cb-f1310255b320"
        },
        "item": {
          "id": "f20f39d0-8c25-43ca-8395-ad75964cce30",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f0fa170d-3358-4b94-999a-5eb747b09455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ebcb34-8d8a-4ed2-aba1-6c84836ae8b0",
        "cursor": {
          "ref": "834ad53f-71e3-4db7-8f0d-bd9f5e6322a7",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "79c49947-01fa-42df-9c6f-951e002e1126"
        },
        "item": {
          "id": "c2ebcb34-8d8a-4ed2-aba1-6c84836ae8b0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b43b50ce-0c6c-4e05-aa90-9c60a5588907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b52eeba-eb10-4e0d-bf27-37ba4df5fe7f",
        "cursor": {
          "ref": "4e9864e6-19e1-443d-bc48-86c8af8e8e20",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a93a80e1-e182-4c17-9ab4-cc0de46b59f1"
        },
        "item": {
          "id": "9b52eeba-eb10-4e0d-bf27-37ba4df5fe7f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1a96121c-68d0-4ae3-bbdc-6c16e9c8ac4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f905438-c502-40f4-b7e8-23a231a08d98",
        "cursor": {
          "ref": "c6ca1d45-4f33-481f-86f4-de27d68a67ca",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ca9948e4-d364-4031-b8da-aaea144e9131"
        },
        "item": {
          "id": "7f905438-c502-40f4-b7e8-23a231a08d98",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7cdb9018-1c97-497d-90e0-e890644667a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8da5a4e-1b48-4a1f-961d-4e93cb15aa81",
        "cursor": {
          "ref": "9582de72-2f82-4af4-9fc0-b9669224852d",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "573c0344-9fdb-4f77-9070-fbe85fbc2908"
        },
        "item": {
          "id": "c8da5a4e-1b48-4a1f-961d-4e93cb15aa81",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4b7a557f-cf35-4de2-af9f-98ab669349a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfb83c0-8d09-42e8-bb98-2444e105c63b",
        "cursor": {
          "ref": "a46a48a0-8c54-47ab-a927-35bf681b647b",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "782c8582-89dd-4c7f-87d3-39beb01e995f"
        },
        "item": {
          "id": "abfb83c0-8d09-42e8-bb98-2444e105c63b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "60cad0a4-1283-48d0-ab95-846d30577341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a29bd1-3ed1-48a5-830c-e1c06b77602c",
        "cursor": {
          "ref": "c0c3162b-3d21-49e1-a504-a2acc19b1005",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7dae1423-1fb0-43db-887f-2b183ee9dbfd"
        },
        "item": {
          "id": "b4a29bd1-3ed1-48a5-830c-e1c06b77602c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4c8d7921-bffe-42b2-8997-d17d826511e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a575af67-4171-4c3e-a691-8d09837a988e",
        "cursor": {
          "ref": "65b1cd78-e527-4f1e-896f-fabe8bb98575",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "50c4cc56-5e98-4cc6-afd8-be21c1747976"
        },
        "item": {
          "id": "a575af67-4171-4c3e-a691-8d09837a988e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6875a7c2-3491-43dd-b3fe-9b7ce3320587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d32fb31-505e-4116-bd01-de3700437c98",
        "cursor": {
          "ref": "919ac0ba-175c-44c4-8dc1-39e460dd1cd8",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "114fc3eb-39d9-4061-ab1e-5490c23819ab"
        },
        "item": {
          "id": "1d32fb31-505e-4116-bd01-de3700437c98",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "43760d17-2ed0-4a1d-b7b9-27bb6cf7d417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec69eac-49c3-4306-9826-c802648433f0",
        "cursor": {
          "ref": "7232d6ff-04f9-4126-9e60-fd0aec9b733c",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "058828f6-7177-4bed-b3ef-13677cb886f9"
        },
        "item": {
          "id": "3ec69eac-49c3-4306-9826-c802648433f0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "662e7261-62a0-4f81-ad49-b6c3c44a68d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d571b34-7d60-4984-816b-ae689e844ec7",
        "cursor": {
          "ref": "8ef5b54f-9448-4af2-ad44-840a6664391d",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9f07d161-e3e9-47ae-91fc-60415c52055e"
        },
        "item": {
          "id": "8d571b34-7d60-4984-816b-ae689e844ec7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3042549d-af7c-4735-b514-119168aedd81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156a77a1-d26d-4e41-afb4-7125cd9cdc38",
        "cursor": {
          "ref": "85be2053-2fdf-4165-9d1c-ff331261a777",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "53bb9ac9-591c-4c80-bd55-1a8f547710bf"
        },
        "item": {
          "id": "156a77a1-d26d-4e41-afb4-7125cd9cdc38",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "54a45732-ef01-47ea-9232-8f486bbe49f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a1a339-3127-4075-9045-02974f88628e",
        "cursor": {
          "ref": "51cf9711-6acd-4988-8544-cb1b84fd6ebc",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ea91e8f7-7350-4852-85fc-6d14f41fceac"
        },
        "item": {
          "id": "11a1a339-3127-4075-9045-02974f88628e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ea2fd826-939f-46b3-aedb-fee86ebe7764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb02ca6-6ba6-4eeb-929f-b3da95b1bfe9",
        "cursor": {
          "ref": "841a2bc7-d7b2-4125-8d0d-06a38bf5eee1",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0604b6f7-904b-47dd-a2d1-b6d605189278"
        },
        "item": {
          "id": "0bb02ca6-6ba6-4eeb-929f-b3da95b1bfe9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "29241f77-3618-48c2-8a90-47413f0f9157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade3dc33-8fa4-4c2d-88d8-55e750579239",
        "cursor": {
          "ref": "dd6a983b-28bb-466c-9def-02aed610fa18",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ce5b2fe9-19cb-49f8-931a-37cb416041c8"
        },
        "item": {
          "id": "ade3dc33-8fa4-4c2d-88d8-55e750579239",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3610f201-e12c-4d98-ae8f-4f6c9b3c6dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd58c7d-8365-4889-b71a-abb72f0b330d",
        "cursor": {
          "ref": "9082704c-505c-41da-852a-134fb9b6a96d",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6883f189-7c36-4a3f-80d2-fd8e3e7bfc5b"
        },
        "item": {
          "id": "2dd58c7d-8365-4889-b71a-abb72f0b330d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8b069269-c76a-4511-afc9-cb2f9739f41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ffab083-d917-4de3-8517-d7c58b6a6347",
        "cursor": {
          "ref": "72ddd997-2985-441c-8c27-63f22ccc4545",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "fd2c3246-ca25-4b84-bbcf-69bd92ee8f68"
        },
        "item": {
          "id": "9ffab083-d917-4de3-8517-d7c58b6a6347",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dead9a40-ff30-4549-8ae9-eca6bba5fa21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8e87c1-db07-4125-80df-c987a5bfbc22",
        "cursor": {
          "ref": "728313f3-baf8-4133-a941-0db53bacc3c4",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "16772a4d-1470-48bf-b8b1-9f30b13c214c"
        },
        "item": {
          "id": "2c8e87c1-db07-4125-80df-c987a5bfbc22",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "04e38a5d-bb8d-4105-880a-6d449510dec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deedf377-d96b-4474-bb26-4add162a7fdd",
        "cursor": {
          "ref": "fdb4344b-e906-4944-a4ed-2873ef784561",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "55afaab8-6d29-4358-bae6-10332c2a8665"
        },
        "item": {
          "id": "deedf377-d96b-4474-bb26-4add162a7fdd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8f73c9a5-97ce-47e6-b1ee-80828a88584a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e548400c-43f8-4686-b7b8-cbac32c777ac",
        "cursor": {
          "ref": "6dffef3e-0177-4088-ba94-67449f7e0bfd",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "320f556f-356c-42fc-bb07-b33865a58889"
        },
        "item": {
          "id": "e548400c-43f8-4686-b7b8-cbac32c777ac",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6038ed36-0e5e-472b-bd07-cefbc0220770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96e37f0-7711-4bc2-980f-f327c40397be",
        "cursor": {
          "ref": "ea246f8b-7ea6-485d-a5b1-236030bbea48",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c33174b4-95d7-4421-8fe4-81ca192139f8"
        },
        "item": {
          "id": "b96e37f0-7711-4bc2-980f-f327c40397be",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ca2fd059-19cb-474a-89a3-174b94b9c413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ca794f-fe60-4c64-9c29-1bfc725d14ec",
        "cursor": {
          "ref": "d9709d52-c6b3-4690-8bea-c088245b23eb",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "10be1bfe-e58d-4f22-81e6-d4639b223915"
        },
        "item": {
          "id": "78ca794f-fe60-4c64-9c29-1bfc725d14ec",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3249b86f-008e-486e-a92d-e2b62ea891d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e788d6-4b57-46a5-b989-03e50478e34e",
        "cursor": {
          "ref": "b8033679-78fe-4215-b6f6-79ee13f080cd",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0e39f42a-a471-4dd5-a42a-e9a5ac354294"
        },
        "item": {
          "id": "89e788d6-4b57-46a5-b989-03e50478e34e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "98b57931-9913-47ee-8685-8c0b4d7b9f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ba1ef9-0cb3-4d97-8b90-e5b21559bc66",
        "cursor": {
          "ref": "293dfc58-0161-4c6e-9544-ab98a04b3185",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "92cd8dfe-1383-444e-9cdf-f9011c98fdab"
        },
        "item": {
          "id": "09ba1ef9-0cb3-4d97-8b90-e5b21559bc66",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "837bf485-4499-4cdc-bedc-29ec2ea49f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cd88e1-f886-4751-b67d-47c4ae9e8bbe",
        "cursor": {
          "ref": "2cc2af86-27df-43d4-9c5c-87169b2e708f",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "14678c19-0723-421e-9c3a-acacb4edc088"
        },
        "item": {
          "id": "d9cd88e1-f886-4751-b67d-47c4ae9e8bbe",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1abe5ba4-af8b-420f-bd96-c85d2d63d534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f7cb44-a6ce-45cf-af1e-38d87babcb65",
        "cursor": {
          "ref": "c6906786-66e4-4698-a79a-2a0112feff80",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1a8e4f4f-25db-42d5-a22f-ac0d98065737"
        },
        "item": {
          "id": "39f7cb44-a6ce-45cf-af1e-38d87babcb65",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "29387d0f-e143-43ed-b762-f86765b9657e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a88724-34ab-4caa-b9c5-bfc3b53486e8",
        "cursor": {
          "ref": "c4940c28-d3fb-415c-8111-2e0f4703dd3d",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "fe205434-f6c2-461c-8c9a-78c7fd581edf"
        },
        "item": {
          "id": "a8a88724-34ab-4caa-b9c5-bfc3b53486e8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "432d48d0-3ee5-4e6d-abf0-8f2720528169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88dc98d5-67d0-4903-9eb5-deba654dbea9",
        "cursor": {
          "ref": "269f5d1e-8fd7-42b7-96d8-b9f3ff4c7fbb",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "835e3eeb-66c0-4615-a00b-c647ceeeeccb"
        },
        "item": {
          "id": "88dc98d5-67d0-4903-9eb5-deba654dbea9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8977c175-4362-4691-8dff-b6f55748e817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb9bcc2-76e3-494f-9670-89844918e120",
        "cursor": {
          "ref": "8fafcea2-be4b-4b9b-9c56-d7b019f3aec8",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f1105538-0e44-46f3-b830-96b59147ed27"
        },
        "item": {
          "id": "0fb9bcc2-76e3-494f-9670-89844918e120",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "eddb3ae7-1cec-4b37-aff1-cb489d3d8c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f17977-fcab-4631-92d6-ae77f0d96286",
        "cursor": {
          "ref": "de2d0ecd-ea44-4856-8511-55e8a8cd17eb",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4774a4c4-97c5-4695-9ac9-810cd4520ae4"
        },
        "item": {
          "id": "44f17977-fcab-4631-92d6-ae77f0d96286",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ecf05369-a6d4-467b-8308-a1e5cf573b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ac5621-0791-486b-b0e4-a561c79fcd9c",
        "cursor": {
          "ref": "482ac674-b9f3-4f2f-9766-6a71350210c8",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a291fa65-06b5-4dda-a632-1c9a5b8fae97"
        },
        "item": {
          "id": "f2ac5621-0791-486b-b0e4-a561c79fcd9c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "fc25d0ef-dc08-4422-bd67-9680ff2c0893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba58fc34-9f09-49f5-827c-bd3022127339",
        "cursor": {
          "ref": "918c1c44-2777-49a2-89e2-0a40b6858041",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "12c7b9d5-70a9-47d2-b5ab-70919f826748"
        },
        "item": {
          "id": "ba58fc34-9f09-49f5-827c-bd3022127339",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b4eb1f4c-4db3-4f10-982c-e00509d752fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6b8fd6-e905-4a23-ab96-0c4887b580f3",
        "cursor": {
          "ref": "6ce598a7-c5a9-4f9a-b334-bc61d66eae9e",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "39334abf-c92c-4dc5-bcec-f12b4b9d3800"
        },
        "item": {
          "id": "3d6b8fd6-e905-4a23-ab96-0c4887b580f3",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "efac6021-350f-4993-a0de-683adf3126f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cce7144-4dd2-4abf-aec2-2b6fce7e9e22",
        "cursor": {
          "ref": "01c8a707-0439-4ac1-a688-21d060eb08d6",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "43fa0fdb-0560-481d-a24a-bd8359a4deb0"
        },
        "item": {
          "id": "8cce7144-4dd2-4abf-aec2-2b6fce7e9e22",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "06c0db49-b42f-4879-a352-65404b6808d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac5bcbc-a550-4304-8758-88b8e053d407",
        "cursor": {
          "ref": "f35f9a0d-0222-4108-9fe0-6b1c1c626f73",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ba12668d-0267-4b96-a898-3f800ac727f9"
        },
        "item": {
          "id": "8ac5bcbc-a550-4304-8758-88b8e053d407",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "28da018c-6632-45ee-99a6-6a9512aafc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8919807d-cd2e-4795-9de7-895069390eae",
        "cursor": {
          "ref": "d7059852-a50d-4d04-8cb5-28e18b57a7ad",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2042b2bd-3220-4edf-bb80-c269aa04b34d"
        },
        "item": {
          "id": "8919807d-cd2e-4795-9de7-895069390eae",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0e38e91c-31ae-4b74-98b0-a34178400ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf198c3-8a0b-4cb0-9fa1-c107f92a9faf",
        "cursor": {
          "ref": "4a615df6-7831-45e9-a783-5ca21f029c8d",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "16149151-23eb-4c98-9cbc-8d37744bb36f"
        },
        "item": {
          "id": "ccf198c3-8a0b-4cb0-9fa1-c107f92a9faf",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "698d84d0-3c69-4e61-a06b-aea8f7116687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7fff38-648d-41f8-94c1-19f98b34e994",
        "cursor": {
          "ref": "33210c93-5d4a-495d-97f0-8e75e2ee006f",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6d8eefbc-cafd-4081-a526-88a2f6b2b9d7"
        },
        "item": {
          "id": "3e7fff38-648d-41f8-94c1-19f98b34e994",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f673d560-491f-4fc9-91a6-0a141d6b597c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c16ff2f-e791-47f8-b13e-0e5c6a4a7d6d",
        "cursor": {
          "ref": "57f95dd4-340c-48bf-8810-bb64d1033529",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "fed7cd55-2c0f-472a-92d8-46756f1f047a"
        },
        "item": {
          "id": "3c16ff2f-e791-47f8-b13e-0e5c6a4a7d6d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2750b07a-1ab4-4421-99c4-0fba3d534cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02035695-1977-48be-95d0-390ed8a4633a",
        "cursor": {
          "ref": "11bac8da-dfc3-4c89-ac47-327adbbb929d",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d768b1a2-91b8-4403-a325-41b778c43b0f"
        },
        "item": {
          "id": "02035695-1977-48be-95d0-390ed8a4633a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "894770f7-a47e-4645-bcb0-68371cf41d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660dd068-10cb-4633-af97-5fded3fd0247",
        "cursor": {
          "ref": "156ed0d9-bcc2-4d16-819c-3e765b8297f3",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6daeb8fd-03d0-4cfd-b7d7-195af2d71a34"
        },
        "item": {
          "id": "660dd068-10cb-4633-af97-5fded3fd0247",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2ad764e8-6e33-46c6-9f59-6e423138b2c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7aa33f-2aed-46f3-874e-0493c31b4da9",
        "cursor": {
          "ref": "5fdc3efd-0244-460a-9916-c6bb64519d53",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d7051008-9603-475d-86fa-a43effe79c53"
        },
        "item": {
          "id": "cc7aa33f-2aed-46f3-874e-0493c31b4da9",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0184d4b1-0a7d-4095-aff8-71891f66202c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a4361d-5f6f-41e3-b20a-ccc17159cdfe",
        "cursor": {
          "ref": "56f86f24-e1e8-4bed-b1fd-d7aed8046623",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5624f767-3e0e-4bdc-ba02-81c6b35913b0"
        },
        "item": {
          "id": "d9a4361d-5f6f-41e3-b20a-ccc17159cdfe",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "88d901d3-9451-40f2-ad21-6c5d72f629c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0971e9f0-2580-4496-9151-34f41c8b3c7f",
        "cursor": {
          "ref": "35517489-ffa7-449e-a74d-79656aa5c1c5",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "078d94ca-b92f-4e7c-889a-dce020ef0080"
        },
        "item": {
          "id": "0971e9f0-2580-4496-9151-34f41c8b3c7f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b7d0da7d-ba7b-4837-8df1-8ea159a15c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe7ea58-57c4-4985-b426-66b7d15a77c9",
        "cursor": {
          "ref": "463c5ded-7f79-4d7b-bba8-2d39542eb1cb",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "057c59ed-4bdd-45d3-b4c0-3eccac0d22b1"
        },
        "item": {
          "id": "7fe7ea58-57c4-4985-b426-66b7d15a77c9",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a274dd23-5830-4f50-9577-989084be789e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61cb8f33-8c5c-470d-8f9f-d9dbcf3afb47",
        "cursor": {
          "ref": "3a9a2b08-d72a-41de-b6b9-dc6d6ee6995a",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "89e1fa49-a283-4aca-800d-f97f6f9483b6"
        },
        "item": {
          "id": "61cb8f33-8c5c-470d-8f9f-d9dbcf3afb47",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "97c23e4b-56a2-41ce-b898-ee220ce3116a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ddb791-8a1b-4142-94f3-255b42a65b55",
        "cursor": {
          "ref": "d5f00ada-a773-424b-9e43-e57647b4183b",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "002cceba-093b-4995-8db4-08a5ea134a43"
        },
        "item": {
          "id": "86ddb791-8a1b-4142-94f3-255b42a65b55",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4bc137cd-c6e5-4d47-8a99-ebc0c3e0a941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5296760-6420-48eb-8b39-dd3b008c40b8",
        "cursor": {
          "ref": "a14d7023-837a-436e-afd9-a2701f54858d",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "baaf13d9-d6a0-4a5a-be65-bce050636674"
        },
        "item": {
          "id": "a5296760-6420-48eb-8b39-dd3b008c40b8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a02106d8-01c0-444c-8e45-4114c52cd83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da6c426-28dd-4ef3-a8b0-44fb8d197df7",
        "cursor": {
          "ref": "32d3e68f-c90b-48b4-b54e-92d13d4678c4",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "73e7d1b3-682f-4d47-857e-9eacde5da806"
        },
        "item": {
          "id": "3da6c426-28dd-4ef3-a8b0-44fb8d197df7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d6b49e2f-3a34-45a3-a4ab-7a270c886cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74df8b1-c1ea-4cf2-940e-2ecd57180d80",
        "cursor": {
          "ref": "800822d3-d475-44cc-92cc-f16ef159e4d4",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "90859f2f-a261-4ad4-969e-0f587eb473af"
        },
        "item": {
          "id": "e74df8b1-c1ea-4cf2-940e-2ecd57180d80",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f9900879-1657-404a-b05a-a47babb19de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e534833-b051-4112-84d4-65a6fd491a33",
        "cursor": {
          "ref": "3af50772-6f7f-4ad6-8750-067eba40e4dc",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2a39b822-2aa6-4e8b-a4f3-7f4bd33f0c4b"
        },
        "item": {
          "id": "9e534833-b051-4112-84d4-65a6fd491a33",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3710db69-e181-4c71-be41-7550f4706368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0bfd3a-6bd8-48ca-99e0-414021ab4519",
        "cursor": {
          "ref": "41fd97d5-6ed1-45d5-9fbd-d3b5db92bd38",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d96399ed-84f4-416e-91ba-dbf6fe984229"
        },
        "item": {
          "id": "be0bfd3a-6bd8-48ca-99e0-414021ab4519",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "af9d78a6-45b0-4892-bcbd-affad15e6987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3ed3d5-b889-4447-a684-205037476d4d",
        "cursor": {
          "ref": "4bc4a421-7c2a-4430-9725-0b873dfaccd2",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "788a0096-40b6-4fac-bba2-92e8dea79ea9"
        },
        "item": {
          "id": "5e3ed3d5-b889-4447-a684-205037476d4d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9b2edd05-a47e-4d81-b845-009f3eef67ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2823a2-fd3f-4804-a824-d14237626e59",
        "cursor": {
          "ref": "e9a64527-7e8e-499a-87f2-3a042da0e204",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3cde6b19-0904-4b9b-9f49-673a3fe44223"
        },
        "item": {
          "id": "aa2823a2-fd3f-4804-a824-d14237626e59",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "af5b9464-7060-4a50-93a1-c7c157023ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412d1d35-fec5-4cd7-ba1e-b937d86b11fc",
        "cursor": {
          "ref": "5dc5814e-adc0-4cae-81b6-752e6cb25dff",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0780a5f4-8968-413a-b19f-300549c9fbda"
        },
        "item": {
          "id": "412d1d35-fec5-4cd7-ba1e-b937d86b11fc",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "559c6fb6-1eb8-49f0-b607-49c90efba8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f16cfe-4172-4e4d-9100-2c44df379c88",
        "cursor": {
          "ref": "c8067576-b4a8-4212-82bd-f6f7aad5b7e5",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a1d40030-6d69-474e-b58e-984ae368901c"
        },
        "item": {
          "id": "03f16cfe-4172-4e4d-9100-2c44df379c88",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "213dd5da-df63-4813-9d5f-bfb569929a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffcb4daa-aeea-4bbc-873f-8cb74f9ff18b",
        "cursor": {
          "ref": "41305145-d7d6-4fb8-a065-4cb947523187",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4e9d3212-8a19-4379-a5b9-a682b484beb0"
        },
        "item": {
          "id": "ffcb4daa-aeea-4bbc-873f-8cb74f9ff18b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7b80c042-1f62-418b-a374-e4a170589cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8e7b2c-1e45-4df3-aa82-7cc6f3504981",
        "cursor": {
          "ref": "5ccf3606-95d3-4e14-986b-bb745cfce145",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "44e725af-5831-4bdd-af72-1336b6fbb142"
        },
        "item": {
          "id": "8f8e7b2c-1e45-4df3-aa82-7cc6f3504981",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6707818e-2033-47b4-89fc-5afc23a63457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b6dd1d-86b0-4ced-955c-3d33f25989ae",
        "cursor": {
          "ref": "f80f716a-5c4a-4d9a-8b0c-a041048c11fb",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "05c6efb9-0e8d-4850-9185-41fea24723ef"
        },
        "item": {
          "id": "b3b6dd1d-86b0-4ced-955c-3d33f25989ae",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f9a7b408-43bc-4246-8241-32a441851877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfce79f0-97ba-4421-ae2b-8fbccc9f244f",
        "cursor": {
          "ref": "a58fef17-fa16-4dad-ac2a-f0f4229034e0",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8c9b3c0f-751b-454b-89c1-d9fd1b797dfe"
        },
        "item": {
          "id": "cfce79f0-97ba-4421-ae2b-8fbccc9f244f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "60c095d0-f4ae-49a7-9f13-a26b6417dd72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fc3f15-5f67-4f12-9154-8aec35b79d6b",
        "cursor": {
          "ref": "06834fbf-65ac-4e51-a558-9d2b6e5ed026",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "28019492-593c-4c11-b332-22abc1e5d368"
        },
        "item": {
          "id": "64fc3f15-5f67-4f12-9154-8aec35b79d6b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "eb611199-4a73-4c71-a5bf-62472841c6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a80948-4e2b-46e3-8ca4-ec28549c6327",
        "cursor": {
          "ref": "93cd10d6-731d-4d0b-aaa5-493a1356be61",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "aed82619-e3b7-4939-a6e3-41acf973690c"
        },
        "item": {
          "id": "81a80948-4e2b-46e3-8ca4-ec28549c6327",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "edde93f8-4ad5-4732-8794-645623662d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d7f9fe-2924-4e9a-b92d-12a2bb1a6a6a",
        "cursor": {
          "ref": "79d86af3-30d0-4264-9324-c2ef107e3a05",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e4fbfe79-2340-4a66-b145-986ea6a1eadd"
        },
        "item": {
          "id": "06d7f9fe-2924-4e9a-b92d-12a2bb1a6a6a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8a906c7a-bbe3-4a63-ab3e-a353a40ec2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c6c724-0fd5-4f29-8453-891033bc2634",
        "cursor": {
          "ref": "4cf4edf9-46d9-4302-9d13-2772fa819507",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8cd9b3b5-e325-4c18-8d1b-b302b257e8cc"
        },
        "item": {
          "id": "a2c6c724-0fd5-4f29-8453-891033bc2634",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3246b561-64cf-4722-93a9-bb5b5b2b2471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4316f295-8702-4221-a8b3-e326670c2e57",
        "cursor": {
          "ref": "c95a0ffc-d806-4001-af22-5c811170b95c",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "eb97799d-5fec-497f-8a91-c64e2c8cc193"
        },
        "item": {
          "id": "4316f295-8702-4221-a8b3-e326670c2e57",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "15e903a8-5a6b-4744-aa0a-abee16e34151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5a1c27-a223-4d95-bfd0-df0e444651b0",
        "cursor": {
          "ref": "24ce1b36-0802-4c20-a15e-8330362c3a92",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "600f6b0d-f1ee-454b-8155-bc98f9deb5ab"
        },
        "item": {
          "id": "ae5a1c27-a223-4d95-bfd0-df0e444651b0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9d49d887-bf0c-4411-8e45-8cc49b8e78e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261f0b6a-8ece-4a40-9164-12c57b582f79",
        "cursor": {
          "ref": "4026691e-8209-49a6-ad22-b81833563205",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "66da2e5c-6aab-44a4-8dee-88d13bc0161a"
        },
        "item": {
          "id": "261f0b6a-8ece-4a40-9164-12c57b582f79",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "10e89921-2763-4b36-9a95-82efa517b82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e438139a-19b8-42ad-a8b6-8704494187a6",
        "cursor": {
          "ref": "f3bfcbb8-d937-4743-becc-f30c53195a0c",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "bb25e794-f9dc-4a19-b3d8-726d37175e0b"
        },
        "item": {
          "id": "e438139a-19b8-42ad-a8b6-8704494187a6",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ace546e7-dc51-40a0-9eef-b4c422924a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433e343d-25bd-4565-9737-04f41988a8f9",
        "cursor": {
          "ref": "83f39723-add7-43a2-b080-95b839bcc15c",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0347107e-1d56-4ed8-af02-beddda6fae3f"
        },
        "item": {
          "id": "433e343d-25bd-4565-9737-04f41988a8f9",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4efdd8c7-a73c-421c-8d3e-d0888eab5ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8da766-9cb3-4a66-b723-1e11670a2e35",
        "cursor": {
          "ref": "bc24d616-420e-410c-9b2d-f0d2f73d17c8",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "fc3b0bdf-4df0-4ec8-8444-412659edb1c6"
        },
        "item": {
          "id": "fe8da766-9cb3-4a66-b723-1e11670a2e35",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9e488755-80c6-4e20-8bc7-7b4551ff6606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8875df23-80ad-4a26-ac8b-239bd17499bf",
        "cursor": {
          "ref": "9b224455-1f5c-48e2-86bc-1553d3f80abe",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "48c67339-f63b-451a-ba6c-7da906e6b468"
        },
        "item": {
          "id": "8875df23-80ad-4a26-ac8b-239bd17499bf",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "82570047-114a-4257-bfec-45ef4d20f905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea227a1-1141-45cd-9788-0be44348d4f9",
        "cursor": {
          "ref": "8bee22bf-34de-4427-82b9-d45e62dafb77",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c0c0757e-93b6-489c-a785-2104ebb324da"
        },
        "item": {
          "id": "6ea227a1-1141-45cd-9788-0be44348d4f9",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5968e292-a432-4939-b0c8-7c1f9115e2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78b0c43-314d-4a9d-9a74-8453908bbcf6",
        "cursor": {
          "ref": "7274423a-c6e9-43f1-a326-6e2a0d6c9f60",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "32ba1bab-7b89-41fe-8f79-403fbc042a3d"
        },
        "item": {
          "id": "b78b0c43-314d-4a9d-9a74-8453908bbcf6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9eaa05c8-cb88-457a-bf04-c4d20af3fda2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f56673-dd61-409a-b960-3a49753a0b4e",
        "cursor": {
          "ref": "a6b33d15-7493-4a3a-bc9e-78a3c7087d94",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9844b550-98e9-4575-bca2-689bacf6e6de"
        },
        "item": {
          "id": "85f56673-dd61-409a-b960-3a49753a0b4e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c554188e-e461-4e0d-acde-467b4ffd683e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ddd3c0-3895-423b-9fda-896021f1e957",
        "cursor": {
          "ref": "2ce26887-83d2-40df-8952-6bed3e574e67",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2aa120b7-181d-4365-9813-14d09b6d5e59"
        },
        "item": {
          "id": "64ddd3c0-3895-423b-9fda-896021f1e957",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4ec3f594-107f-4995-9d64-b28c8174aec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99fd1e50-27eb-4a9e-ad37-dfddc8229a07",
        "cursor": {
          "ref": "69f5bc01-6d3c-4df9-94f4-8207b4ef9aa6",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3af8bb2a-a9c9-4120-b280-5409b55d48af"
        },
        "item": {
          "id": "99fd1e50-27eb-4a9e-ad37-dfddc8229a07",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "cf3894a5-d5b7-4384-bb5d-4184919010aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389be392-9212-4bcb-8715-25cf5b1fc86b",
        "cursor": {
          "ref": "dc09fc00-61eb-42cd-b555-22129c16bcd0",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4f53a78d-6a20-43c3-8204-eb8d4b84469a"
        },
        "item": {
          "id": "389be392-9212-4bcb-8715-25cf5b1fc86b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "743f7322-bb3e-46fd-b464-434e6717e2a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89614bf-38cb-45c2-b1d8-88d86fe0bcdf",
        "cursor": {
          "ref": "80665cb4-6acb-4dbd-8506-df0ce58bf928",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "42ee2190-3139-49f5-b445-4eab6590c245"
        },
        "item": {
          "id": "d89614bf-38cb-45c2-b1d8-88d86fe0bcdf",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7428ed5f-a3e8-4a1f-bdee-6f0bc07b8e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64058528-103d-45d9-8991-caf4aca9b5c3",
        "cursor": {
          "ref": "3fc7cbe8-2624-4ac5-a502-87c3b529b648",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f38f82fd-ccc1-4657-b894-ba08b2ba85c8"
        },
        "item": {
          "id": "64058528-103d-45d9-8991-caf4aca9b5c3",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "80790bbf-4801-44ef-b7ad-748d6b044132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a935963f-ef70-41af-a0ab-7ed24a5e8dd1",
        "cursor": {
          "ref": "d21befe5-d375-4db2-b6df-4779e02e8e75",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "91cf9a70-f24c-4bb7-901f-975434494422"
        },
        "item": {
          "id": "a935963f-ef70-41af-a0ab-7ed24a5e8dd1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "47b6a3ab-bf5a-4d31-8f72-63dc7488c19b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1fe1b10-dad3-4e11-b52f-36d3701733f0",
        "cursor": {
          "ref": "018ea5b4-bf53-46b4-a50f-2e3fb05f542a",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "57f6a636-1dcc-4d37-9eea-6ea01f9aa571"
        },
        "item": {
          "id": "a1fe1b10-dad3-4e11-b52f-36d3701733f0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c7d41fa5-e27b-4146-84f5-00b7ec25df08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbc1fca-54d0-4687-b458-b908f6620831",
        "cursor": {
          "ref": "1dd2e785-7325-446b-8363-2579fd1ecb46",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ed273cbc-bce2-440e-83ab-2210469d9ec6"
        },
        "item": {
          "id": "7cbc1fca-54d0-4687-b458-b908f6620831",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ceb2420b-532b-467d-94e7-00ea41ea0ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2dc31aa-8351-458e-ad1b-93742ed05b9b",
        "cursor": {
          "ref": "81ed5d2b-5401-4b2e-ae50-25061907c4bd",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "386c9f0f-90cb-4050-96f8-e2ee54206200"
        },
        "item": {
          "id": "e2dc31aa-8351-458e-ad1b-93742ed05b9b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "fef0bb53-c5bc-43a4-be88-fff803045cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557df0cd-0510-424e-8b9a-0fd05762282d",
        "cursor": {
          "ref": "c0eac33a-7bed-40da-8b55-21bf8ea767d7",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5067d67d-cc3e-4e40-ac85-4e731df72110"
        },
        "item": {
          "id": "557df0cd-0510-424e-8b9a-0fd05762282d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c8741e16-7820-4c70-a6ed-2e646b499bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0801a3-f484-48fb-aef7-54d1cdd66e27",
        "cursor": {
          "ref": "5b6c5892-fc4c-4e05-a6a8-207755eb096c",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "645aa38f-18a3-48a7-b407-33e11dc0ccc8"
        },
        "item": {
          "id": "4c0801a3-f484-48fb-aef7-54d1cdd66e27",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2ac06c4d-cbb5-4390-bd9f-e8e02a855309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265cda52-663c-4ef8-be32-3e260f7bcef3",
        "cursor": {
          "ref": "67b1511f-e219-4cf9-b650-1a312ffd8243",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "363c4c62-b603-4935-8541-57f12ebd21c5"
        },
        "item": {
          "id": "265cda52-663c-4ef8-be32-3e260f7bcef3",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8c2ff251-b9ee-462b-bf28-175c22e2ce80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5391b9f1-2982-4e57-99f3-f17c7764df57",
        "cursor": {
          "ref": "c76bf38e-2002-4adc-8fba-23e1e4c325e4",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1f4c439a-72c4-4579-8c4c-321512afa786"
        },
        "item": {
          "id": "5391b9f1-2982-4e57-99f3-f17c7764df57",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "cfe66232-c696-476f-85fd-170f9ddfa89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a48702-b08a-41b9-82bc-b321eb19bb56",
        "cursor": {
          "ref": "a3a8f217-d176-47c0-adff-49475c7195e9",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "27851271-c2e4-4ade-8a3d-d74ada26216b"
        },
        "item": {
          "id": "d3a48702-b08a-41b9-82bc-b321eb19bb56",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a421c93b-f349-4e42-b28a-8eb49348b8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861d3627-16ab-429a-9f9f-0805323d89a9",
        "cursor": {
          "ref": "3e823d59-2e55-4412-8cac-56a87df9521d",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5af431be-bffe-4f18-b219-6176c3645f72"
        },
        "item": {
          "id": "861d3627-16ab-429a-9f9f-0805323d89a9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3d14998e-3e87-4282-9a78-0dec91544308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa1d24e-bd07-4048-924a-15034026b315",
        "cursor": {
          "ref": "e8e6dabc-0958-4b69-b4be-48b8c5d39adf",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2132d590-91da-40f3-9ffd-11e6c9fab917"
        },
        "item": {
          "id": "6aa1d24e-bd07-4048-924a-15034026b315",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "81e7f644-c530-492b-959b-bae7e2bcf715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cffb3bd6-dc19-4dcb-ab03-939536c555fa",
        "cursor": {
          "ref": "7225ba7f-8f95-4382-84b7-b2f71431619c",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b5dd2a87-158c-400c-ab15-e480e6d9aea1"
        },
        "item": {
          "id": "cffb3bd6-dc19-4dcb-ab03-939536c555fa",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "239d134c-e139-4d77-a367-60dbb0ca7f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2689e4e4-ee49-471e-92b7-646b04eda105",
        "cursor": {
          "ref": "77efcec8-3d89-4890-be43-d8216250b5e6",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4962b768-83cd-44b7-961c-5dada72ff6d5"
        },
        "item": {
          "id": "2689e4e4-ee49-471e-92b7-646b04eda105",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a46490e1-b94d-45a8-bfe3-1a79249492dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4756b8a-2d93-4bb7-a319-12c58a0f9b8f",
        "cursor": {
          "ref": "1e93d9be-2aa5-4bf2-8d22-be65224433a7",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "55e8834b-2479-48bb-bfe8-4c7bdafd7c4d"
        },
        "item": {
          "id": "b4756b8a-2d93-4bb7-a319-12c58a0f9b8f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7820b027-d7d4-4d1f-bd56-00be27843af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c056269-9960-490c-a3eb-daca07a522f5",
        "cursor": {
          "ref": "75ab8966-c7e7-4da0-8428-7847be311f83",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "19720993-2fc8-4822-adc6-3264f5f261c7"
        },
        "item": {
          "id": "2c056269-9960-490c-a3eb-daca07a522f5",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2d34db66-7fa7-414c-bdc1-ca1648a79503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a382116-b650-46b1-959f-45696537b11d",
        "cursor": {
          "ref": "34853b33-c755-4770-929b-4980bf5261a5",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f35eea7e-53a7-4ce9-8135-d89f8bd1dcd5"
        },
        "item": {
          "id": "1a382116-b650-46b1-959f-45696537b11d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0f57d6b3-371f-435f-9dc1-d51415dd32ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c42307-b12e-430b-a4e5-f39978489494",
        "cursor": {
          "ref": "0d142902-8cad-488a-ab4a-e7e2e7037d0d",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1f6c2c7b-1e5b-4f5f-9e8a-957a46ea11ac"
        },
        "item": {
          "id": "f2c42307-b12e-430b-a4e5-f39978489494",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7c74d35f-a450-4219-9526-c73d937d6739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e868375-3c09-4b0b-ae19-6bcaa4e2c91c",
        "cursor": {
          "ref": "0acb6f04-3e48-4f5f-96fc-4d9bc9926b59",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "195975cb-5543-471a-8c6f-ac6f9084417d"
        },
        "item": {
          "id": "6e868375-3c09-4b0b-ae19-6bcaa4e2c91c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "93acfc41-3e30-4fe4-880e-137ae24ae95e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4380d715-35c7-4853-a4a1-b0ea486c6912",
        "cursor": {
          "ref": "06a2d085-83fb-4061-95dc-2b7cf70d1d26",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "397f7200-d039-452b-ba62-2f17dd289c3b"
        },
        "item": {
          "id": "4380d715-35c7-4853-a4a1-b0ea486c6912",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e7b5cfc6-d002-4b11-8ed9-ddb546468c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd989ca-7fe2-4785-ada8-9cef210db748",
        "cursor": {
          "ref": "65454d0d-3125-48c8-917b-3de85e5fe8d6",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6368db00-2bcb-4b74-9f03-4cbc10764554"
        },
        "item": {
          "id": "9dd989ca-7fe2-4785-ada8-9cef210db748",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3924dce1-85ea-4945-9026-8450086d8072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ec1827-c90d-4722-ba96-fd481ce4d646",
        "cursor": {
          "ref": "87e33ad8-c46b-4c9e-8b6b-36f4e8fee9bb",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ef7ea93a-8b39-4176-8298-15346d5820a3"
        },
        "item": {
          "id": "94ec1827-c90d-4722-ba96-fd481ce4d646",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "80a1be14-e247-4b57-af88-5508ef01879b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e899c4-0ef0-4c9c-915b-f7905b24db0b",
        "cursor": {
          "ref": "019feb11-a984-44d7-b904-67f11d7ea722",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a8878715-6047-4e1b-a8a5-2f0b21eeb3fb"
        },
        "item": {
          "id": "59e899c4-0ef0-4c9c-915b-f7905b24db0b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2674f25c-0245-4f72-9c25-e270e69a451c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31aa95cd-1a24-4b1d-8be0-03476c177ef5",
        "cursor": {
          "ref": "02d6dc0f-512e-4e6a-a202-fcefff4c5ac3",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "192c40bc-8d59-4a67-ac50-4e31cde40c0c"
        },
        "item": {
          "id": "31aa95cd-1a24-4b1d-8be0-03476c177ef5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d9d9f547-15ab-4f25-b2af-7625d7c79472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9cb68e-3de3-4f42-b7ae-e6ae9db4fbde",
        "cursor": {
          "ref": "d63da637-1b36-4156-ac12-9c9d6a1f8464",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e5a45b8e-1697-4393-8068-284ea82b67b9"
        },
        "item": {
          "id": "0d9cb68e-3de3-4f42-b7ae-e6ae9db4fbde",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "47930739-63bb-4bb7-95a1-6824229c6245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8349fa51-2931-48a3-b1b3-02c9f5258fcf",
        "cursor": {
          "ref": "73ff9fbc-76f7-4477-8f5b-0f569dceffe8",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4384bb0a-006b-4a14-8c90-b2eb58bccc49"
        },
        "item": {
          "id": "8349fa51-2931-48a3-b1b3-02c9f5258fcf",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "84cfa25c-30e1-4d93-a740-5487eb5af002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56847a45-0222-494e-bc7b-28d9cb1410fb",
        "cursor": {
          "ref": "c2dd5f8f-938f-48be-961a-be3f65cbb2d6",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "75c4d189-4004-417a-80dc-aa9fcab30199"
        },
        "item": {
          "id": "56847a45-0222-494e-bc7b-28d9cb1410fb",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e05b9398-4b4a-4b36-9840-7131afa57ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ca16f5-841c-4d26-aeae-6bdf927f31c5",
        "cursor": {
          "ref": "799819f1-0e5a-464d-a753-dd6975ebf6df",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "652d22d9-50f2-45a3-b8d1-9f5e7dd90ec6"
        },
        "item": {
          "id": "c9ca16f5-841c-4d26-aeae-6bdf927f31c5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "58dfd5f8-97b2-4b0e-9a42-cd6f78a3c13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694f83aa-0e5c-409d-97ea-e3b309fb54f3",
        "cursor": {
          "ref": "84a321a1-d64d-4e37-8377-13a5c9f15287",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a181e30d-09e4-446f-bb2a-a33ebc2e1506"
        },
        "item": {
          "id": "694f83aa-0e5c-409d-97ea-e3b309fb54f3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "77c6eda9-04bb-4955-8c90-636e7d4b58b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5067c3c-8d01-4799-96a7-94d81c9febc9",
        "cursor": {
          "ref": "cf0bc0d2-34ad-419c-9b28-a97d15bf77d9",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f44c3c41-5b0a-4ed2-b4f7-f33cb9ef2c51"
        },
        "item": {
          "id": "b5067c3c-8d01-4799-96a7-94d81c9febc9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b46b4ac2-b2e3-4da6-a88f-5ff77036113a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f9ebc4-6650-40e3-bd91-3fbef64d2d47",
        "cursor": {
          "ref": "bc7f25d7-3227-4a3b-a184-8adf47251c1c",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "19446272-a415-49b9-9460-d4ea233d1f5a"
        },
        "item": {
          "id": "37f9ebc4-6650-40e3-bd91-3fbef64d2d47",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "836f6695-8a62-4e1d-935f-6f7c8d1882b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13d3bb4-e28a-426e-aad8-93d58b832bd8",
        "cursor": {
          "ref": "5c13143c-223b-42db-913c-87342b84fa9b",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "311100da-13cd-4694-b524-230a833ed529"
        },
        "item": {
          "id": "c13d3bb4-e28a-426e-aad8-93d58b832bd8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9a618839-c07d-445f-a350-c90b1c9a6707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5832a87-2eb4-4b3c-8acc-e63fd0df0af0",
        "cursor": {
          "ref": "bde15bff-0862-40f1-b33e-9778b1ac64df",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5a9d38e2-af09-4f9e-8e35-3f5fed01646b"
        },
        "item": {
          "id": "f5832a87-2eb4-4b3c-8acc-e63fd0df0af0",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "050c2657-f3a0-42d2-89f7-163c8637a806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b8ec0d-f2dc-4d30-bee3-446436ac7379",
        "cursor": {
          "ref": "542bb9a6-c8aa-4fe8-bd9a-b9758bc11b12",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5a332b8b-bee2-4800-bd7c-d7e68afb6fe0"
        },
        "item": {
          "id": "b4b8ec0d-f2dc-4d30-bee3-446436ac7379",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fa4a33b1-7fc6-4c7a-86e1-39f57bbbe4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db1d0c2-7b38-47cb-9e9c-2ef61b2c424a",
        "cursor": {
          "ref": "84ca36b4-0f14-4757-913c-fd1e7fccedb0",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f4227d04-848c-4e93-adae-0f3cf8d931bc"
        },
        "item": {
          "id": "0db1d0c2-7b38-47cb-9e9c-2ef61b2c424a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3e05e6b8-9994-4d4c-a706-61dc020808bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23e6bb9-b661-4965-9391-2d6b9bae5be6",
        "cursor": {
          "ref": "f0ef6ade-4153-410d-a5b2-11fd0b499f24",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0d374558-bd39-40ec-b2a2-8cbabbe9257b"
        },
        "item": {
          "id": "d23e6bb9-b661-4965-9391-2d6b9bae5be6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "86891f8f-524c-4d0c-85eb-607bc905abf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0a4a9e-8f37-4ee2-9f81-201511d400c7",
        "cursor": {
          "ref": "4dc6f3d5-c9a7-4e00-a094-118e2250891a",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "eba837ab-6149-49b0-abe9-63b6f2ba2ed5"
        },
        "item": {
          "id": "6a0a4a9e-8f37-4ee2-9f81-201511d400c7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b079fd19-f18d-4af2-afba-00faafd43858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48df06c0-98af-4eef-b1b5-73c2c137163a",
        "cursor": {
          "ref": "47783b5a-0ba5-4888-abbc-3800673dadea",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d2b728fb-ab40-42ad-95d6-fd0a4d9ad073"
        },
        "item": {
          "id": "48df06c0-98af-4eef-b1b5-73c2c137163a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e35f2b01-6cd6-4612-9cd6-5fee10600e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb183b57-31c5-4613-85e7-38c983a659e0",
        "cursor": {
          "ref": "9bbede5d-0230-404d-a979-5e50386516b7",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6b45ba72-7f1c-49f7-b382-aa1b6540a426"
        },
        "item": {
          "id": "fb183b57-31c5-4613-85e7-38c983a659e0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "88d21d6c-13ee-43d2-a9dc-f7af88f3dc22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2d8278-77d0-4117-8760-1c845115c125",
        "cursor": {
          "ref": "87aa0b0a-f3ed-4b5e-9d3e-da74f36d608c",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "cc89d086-f5fa-474c-a31f-4f35c58b11dd"
        },
        "item": {
          "id": "4e2d8278-77d0-4117-8760-1c845115c125",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4a9ee4f4-42b3-44d8-814c-315565e63c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e4b524-030c-4017-a574-30614bbbb921",
        "cursor": {
          "ref": "0e3df90d-6f95-49c7-bee9-faa1daa7a2ea",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2efa922b-761c-43bb-97c0-87eece7f8983"
        },
        "item": {
          "id": "51e4b524-030c-4017-a574-30614bbbb921",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "56a22bbe-2f51-40f1-b072-0707280eb4f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a333d12e-a192-475b-921e-4d5ef79ebe6e",
        "cursor": {
          "ref": "d620423f-ff5a-49d0-a69b-683b2e9d0e2f",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "384478f9-c596-4787-8061-349907fa1d21"
        },
        "item": {
          "id": "a333d12e-a192-475b-921e-4d5ef79ebe6e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0da1abdb-1edd-45a0-8170-fb64a21b47ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e265c37-555a-4601-8edf-a625997d95da",
        "cursor": {
          "ref": "08d91627-32d4-4d10-be25-d103c50d5a0f",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c707603f-2bc2-435a-864c-edb2e11b2651"
        },
        "item": {
          "id": "9e265c37-555a-4601-8edf-a625997d95da",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5d936e67-1a0b-46ab-8aa9-10665b759c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40632b52-9ca0-40c5-b09d-ba1f7664def1",
        "cursor": {
          "ref": "65fbde49-7aa1-4134-84b7-b64fbb5ea4b3",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "43b9b097-2eb3-49dd-bec9-40fa4cd80695"
        },
        "item": {
          "id": "40632b52-9ca0-40c5-b09d-ba1f7664def1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ab67920b-2dd4-4a98-b643-d401a821cda8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f23f8a6-b595-4c0e-817c-c8a9f635a0e2",
        "cursor": {
          "ref": "f306befd-66ca-4243-b526-0db802bb8dfd",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c9e50400-8fb6-46ba-b42a-18b39cee878a"
        },
        "item": {
          "id": "0f23f8a6-b595-4c0e-817c-c8a9f635a0e2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "15244e4a-d618-438c-b8b9-4b1ab5449fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "990f53bf-cd8d-4229-b295-ecc975cf73d5",
        "cursor": {
          "ref": "c76b7e1d-9f51-4ce3-8145-c39809e1c2ee",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "787f6d89-f311-44c9-8357-ae0091732a97"
        },
        "item": {
          "id": "990f53bf-cd8d-4229-b295-ecc975cf73d5",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2068d3f8-a023-4968-82a7-9f3262da0ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71bbd44a-27ef-464c-92fc-c546a2d36307",
        "cursor": {
          "ref": "5f30a8af-e528-4436-b7f9-a30de282d4a5",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f350b85e-7283-4ea9-94b8-c97d59892c5e"
        },
        "item": {
          "id": "71bbd44a-27ef-464c-92fc-c546a2d36307",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "91eb9ba8-e456-4f31-ab2d-2daca1202577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab47e54d-61ea-4dff-bb22-ad0f8b393634",
        "cursor": {
          "ref": "c274de97-1aeb-4ca9-a1d2-8c0e665de9ef",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c0f6ac58-2026-4822-9dcb-c562be70e2df"
        },
        "item": {
          "id": "ab47e54d-61ea-4dff-bb22-ad0f8b393634",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6db7af60-92ec-4d71-a750-2742a3f616b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e2f9dd-7cdc-4677-a4a8-02fd8848330a",
        "cursor": {
          "ref": "c7fdf2a4-aa19-4036-bf52-b26bcb1b006b",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2e1372ad-49d8-48ee-9e77-ca1a80f01200"
        },
        "item": {
          "id": "83e2f9dd-7cdc-4677-a4a8-02fd8848330a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e13e5f69-8200-4458-87f9-48b2b64d8a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d33605e-7c8a-4f4d-8beb-944ca0170741",
        "cursor": {
          "ref": "b6b03ec3-c645-462d-9d9c-e240f32e6e7a",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ef630f82-d94f-43e0-bffb-9a990c75eb8f"
        },
        "item": {
          "id": "1d33605e-7c8a-4f4d-8beb-944ca0170741",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ceb9f615-7157-4f01-adaa-0fedf6acf46f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4e0a53-82b5-418e-a860-167ced09f753",
        "cursor": {
          "ref": "7ba211b4-77e9-45c1-bf49-dd591f30984b",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "64d121d1-5f1c-41c9-a12f-20c1cbd1a6c2"
        },
        "item": {
          "id": "7a4e0a53-82b5-418e-a860-167ced09f753",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5913aa8f-7850-4de5-913c-c1e28ede176e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bedddfc-e9f4-4e0d-b6b5-4751242eb6da",
        "cursor": {
          "ref": "114af539-555c-496b-9d13-132ff75c0a54",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "883bb8d9-6a79-49d5-97ee-99b29510bebe"
        },
        "item": {
          "id": "6bedddfc-e9f4-4e0d-b6b5-4751242eb6da",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7d69a9cf-c5dc-44ba-a780-96bd1a840cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2413fa-365e-4b4e-a6ca-522145478c13",
        "cursor": {
          "ref": "06e61503-74b2-4a70-9c8a-8064adaf537a",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4bb23358-5636-4729-9f7c-8b6f46dd261e"
        },
        "item": {
          "id": "af2413fa-365e-4b4e-a6ca-522145478c13",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3c4fbbb6-6ee8-4604-8c58-22d41d4d3489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c102c5-6959-4c43-bf75-4737c0a748a9",
        "cursor": {
          "ref": "0d407a29-3cd0-48b4-85b9-0909d806b74c",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7d898712-2b49-4e35-979f-b98103eaddbd"
        },
        "item": {
          "id": "c5c102c5-6959-4c43-bf75-4737c0a748a9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d950a120-988e-4029-802d-4e4a20c1379a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d96cef-f423-4ad3-b4cb-d66da52f5f46",
        "cursor": {
          "ref": "3dab829a-b1c7-4556-8693-b50293547a05",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0742a01a-0574-46c6-9775-b652a35dfc51"
        },
        "item": {
          "id": "02d96cef-f423-4ad3-b4cb-d66da52f5f46",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a0e9621a-784b-43e6-9cf5-501cb6b216ec",
          "status": "OK",
          "code": 200,
          "responseTime": 2210,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c75cc9-db82-42e2-b802-2342b580dd03",
        "cursor": {
          "ref": "3f1d28de-1710-4387-99a2-6340307bce41",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a6114723-8ab6-4388-b8b6-04f2007b4f1b"
        },
        "item": {
          "id": "14c75cc9-db82-42e2-b802-2342b580dd03",
          "name": "credentials_verify"
        },
        "response": {
          "id": "168a3c95-61cb-4333-aa4b-ae6c8d33e61b",
          "status": "OK",
          "code": 200,
          "responseTime": 2457,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b5e5fd-e629-4f28-a329-4b777f050d17",
        "cursor": {
          "ref": "735b3a44-629c-44e1-9f92-aafa96de3456",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4e34c5db-ed88-4d00-b283-c166344307c7"
        },
        "item": {
          "id": "47b5e5fd-e629-4f28-a329-4b777f050d17",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c09dd258-ce2f-4392-8707-8db57381aa94",
          "status": "OK",
          "code": 200,
          "responseTime": 2647,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b3009f-ea28-4879-8b4c-1ab71a4560a6",
        "cursor": {
          "ref": "b5b529ef-8363-4081-be99-aa023d259c0b",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bd89a6a0-397f-4f75-81c4-ce895d9b2504"
        },
        "item": {
          "id": "86b3009f-ea28-4879-8b4c-1ab71a4560a6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "21818276-2470-4af8-b6ce-cf55f1ca98d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b3009f-ea28-4879-8b4c-1ab71a4560a6",
        "cursor": {
          "ref": "b5b529ef-8363-4081-be99-aa023d259c0b",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bd89a6a0-397f-4f75-81c4-ce895d9b2504"
        },
        "item": {
          "id": "86b3009f-ea28-4879-8b4c-1ab71a4560a6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "21818276-2470-4af8-b6ce-cf55f1ca98d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae96f51-719c-4a11-8f62-e4a60a69a9ff",
        "cursor": {
          "ref": "90ff30a1-2baf-47a5-8814-8fcaa1af7f78",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2c894628-8ce6-4540-a8f5-29c95da06629"
        },
        "item": {
          "id": "bae96f51-719c-4a11-8f62-e4a60a69a9ff",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2a52e018-ea18-462f-a356-98ca22d10a2a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efff658-391b-4888-baca-298d82bca206",
        "cursor": {
          "ref": "1519b61e-0639-4d73-aa0c-2ff37f99db23",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3b8c489b-beec-44be-8803-de59e9e38c7a"
        },
        "item": {
          "id": "2efff658-391b-4888-baca-298d82bca206",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5b0b9b52-8b19-4141-9cf6-81e112e889a3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}