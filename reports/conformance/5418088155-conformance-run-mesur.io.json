{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2876e885-87cf-43f1-9735-7683d84c98e7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "79497b94-e08c-4497-8ecf-283fffb9fcc0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "06592942-8497-49dd-9d5c-dc8c976e8b37",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9d0aa628-d648-4311-9cd9-7e3984a2af85"
                }
              }
            ]
          },
          {
            "id": "7655e269-e41b-4ad6-8568-531b68f75bcd",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ae0dc662-3992-41ff-914f-2495783f0eeb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a1ce7b0e-39c5-40b0-8766-a0afa497295e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "465b5bb1-3fb7-4cc6-8564-d0f37487e581",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1dc7a8c7-83a7-42a7-9b91-4e7f058589bf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6dda80b1-d283-4a68-9bb2-8f9b0a0919be",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8cce1e8b-899b-4477-bd22-75d086d19080",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3537e822-d23a-4ee6-8ba2-be2cb7179957"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "be02d674-778b-4549-9ec8-7f81a89c9ca0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5c844786-2c67-4e90-9d78-86e3d68a31bd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f8c4e9b2-3ed8-4b93-b3ef-c5760c15e398",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d314ffc3-3de7-433d-908e-67a1ca4a7ddb"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3318f56-5d5f-412b-b8b8-7ad2210d4613",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3fceadf9-79ae-423e-9094-b2cb42ed546c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4d39c55-f90f-48b5-b4f5-9940dfba9a1e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de0faf52-ecc7-4feb-99e5-8dbd6776177e"
            }
          }
        ]
      },
      {
        "id": "1f4d43e5-43a8-46cf-8eef-8598b672e9ef",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "79fd3b47-b500-4dbd-86ef-8defb2387a1a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0ef156a1-a456-4ff4-8574-2bc48db1afb6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "81bb7ed8-cc25-41ac-931c-3c0079cad4d4",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91aa7207-dcd0-426d-8a4d-15d047539d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d06ba903-2a87-41a9-989b-cdeb57ad2a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a24450d-e7d7-4038-9856-9edcf253dc09",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eea5a2b-1d71-4f60-87e8-c9e37f3b100c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "704f3a56-dd84-475d-88c5-5b92757f67b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db8572c-7bae-4be0-8fa2-c06d35cd9dd3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cfe6175-fc51-4db4-bd27-f088de95cf77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a1cd84f-8efd-4cad-a3d8-dd46c4c89d8f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2e82491b-89db-4dfb-8be6-75f877b629b4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "62ec0950-b72a-4bfb-bc68-296647d9bc57",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f8e201-400e-48de-b727-a53485f6105c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c5f5d250-1d45-4fcd-9cbb-3d6993b4f077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6b062b-ad1a-4aaa-8395-0d634665ce0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9894da9a-fd88-4bf6-9172-74a7d9b71974"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6001c289-3a19-4059-9f86-d01ac7c14708",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a05b8d42-4368-4b31-80dc-b7ba1ece5d1a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6ea6269-a235-4b7a-952f-db14842e590a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0a647854-75c8-4cb7-9519-2e0880b95de9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "70b53c54-7ab7-48ad-8843-49e2886e9d4b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d63b0dbb-c7a5-431a-99e2-d861641eb2d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f72afb0-9631-4738-8cb3-3b6315a4172d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "182b1e57-7fd9-47b9-ae1e-d33cbe8e30d4"
            }
          }
        ]
      },
      {
        "id": "adcaf3e0-5fa1-4abc-8135-68ddbadded33",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "be4d3045-9e52-43cd-ae76-53c57abfedd8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "220dc9ab-4edc-4732-84e2-4e75c4c4b4a7",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "dd912730-1fa9-4e17-9739-e393a537ec0b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1197e13-89a1-4277-a494-d5f7f0d65afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f13db193-0674-4b3c-b834-b38a0bd301dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f403dd55-2d34-483e-9fb0-6e508139f78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3e9aa80-4817-4969-b06b-88fb455424b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca56e8b1-45b8-40ee-ab7e-dad4e6016d1c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e01d6d-c49f-4e94-896f-1c661e6b6e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e71a47a-babc-4658-9780-3c5878cb8f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d7ae1f-1db8-4395-93ce-f0a0ee46739d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1666725-198e-4397-ae29-dbaa61a9d3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a32756-6dea-436c-a379-5c6f1f74f333",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e304427-909d-4d92-a22e-8a899dc30ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab946d67-03ce-4387-85a2-06e588e13590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0410d1e8-1948-45dd-9657-bd3c44499d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22c2a511-0a25-4dab-9aef-93b419a2d9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77aec10-5a65-4982-82af-445ddc52a9a5",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7a8af8-b1e5-412e-83c4-5e0d73d96708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cb0b3b6-d0ba-4ee3-8db4-c054aae15648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd05e47-7bd1-4739-b417-fff79a2aafd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "276318e5-8134-4835-8c81-7b72f60a96f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0d8cb7-8496-4c8e-bed3-37dcfd74c202",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ceb583-f492-42fb-965e-19cc7738a9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f9ad9a9-0ff2-4eb0-98ec-7d2fc20c32a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a418f5-f093-448c-a80c-eb5aeea4caa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2187e73d-21a9-480b-9873-bc7c9fb67a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d808b922-f092-435b-a6ef-4482e429456b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5f44d8-7a45-404c-9209-c6eaf4182b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb81e666-b153-44f3-af46-21e6483d8332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0119db66-3a86-4032-bbd2-a552b69a667e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91aa1ac0-9fb3-4f6d-a8b8-cfc5722e3789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b516f2-5449-44f0-a3a8-66bfff1dfe57",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5f4d2d-a41a-4ac0-a05d-0da3b3a44abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "332dc3b8-0262-4a26-9e13-c079cb8ef477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04cc33d-d08f-438c-aebe-54d31ed6b02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de18ee7f-66d9-4dde-969f-a5b5e6753e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa17cbd3-8f15-4053-8ba3-942f0b8125d1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6430be7-59e3-41cd-b5cc-39987c5c1a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f862e9-01ab-4bae-9a15-af5589378386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc99c555-26a0-4f15-9821-52fbf92f165a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55cd17a8-25f9-4de7-a6b6-595239598f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe31058-ecbe-4078-8d45-c3d9e4a66117",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03e2c53-31e8-46a7-90cd-7be77a443ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adbc9d1f-a5b0-40ee-9a36-cbb38a7ee290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fdfe05a-0343-494c-8b1b-e8213891c13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "151ca10b-7579-4a7f-aab2-d0068eed3dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081429fa-0297-40d4-923a-dc5b545c5e91",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81c6530-7555-47c0-8b6a-ad27f237bcd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8d2450-3f24-4451-b645-ce1fe9aed33d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732b2444-08d0-46bd-9c94-bd3f60a08f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3076a813-4c99-4b85-b901-7ce441e313ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0534291-2d03-49d5-a8c1-0ee27fc13d77",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da50f722-b394-4c4e-90a6-19d8e6de333e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55690e7c-b36f-41ec-81dd-b9a942c50ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21cacb7c-e677-4f09-89a4-fddee3ee8e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c60817a1-47a1-4fe2-adf8-4c1620a8cea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21f0565-8bf8-411b-9e99-238cd335c458",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16b6d47-8df8-4790-a68e-264c71cca678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ed2581-524a-466e-8293-f1a574e47e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9144aad-27ca-42e0-bb52-7a625cf2a236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6018635e-7bd4-4317-921b-0ae8dcfae275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989e6b68-5eb1-422a-96bc-e7709e80ff32",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "808975b5-fcd0-42b9-bcf3-04e94b2c4f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901e902f-77c9-4af6-a9c7-6643b5d3a18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3db3b0e-bbca-45ac-8e65-c6d4e296033a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d48026b-de3e-46e5-ba5c-04cc64084f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858faad8-f26b-4dcb-a566-679dd7adac94",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7fba9d-b4df-4c40-b34c-af07f72ca687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db1b369-aec9-401a-b0aa-87e49f147252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4b45a9-4911-48bb-9aea-a19b6a2a68d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc212b41-8ac4-45f1-a70f-b4f205873d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cbf6a9e-5db6-4bdb-81d1-d028e51e34c8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b19fabb-c1b5-4d62-a500-2629c5ccad2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3167f706-ba40-4f77-9ce8-7dca7733b881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7c7c92-d8db-454f-b7a8-8c622a5ce516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8b4f921-aef0-4fe4-b215-cc46ea5fadcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02aecb57-e7ba-40d0-8efd-fb87fe23ec40",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ccf554-1f4b-42ed-b3c9-60c0858f59a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93249f34-b3e9-46a6-b9d9-0fe236ce5e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b58606-a186-481d-b669-14a1bb1a71b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38b7b15a-cc95-4b71-aba7-a4a78e548c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d109ff3-1ebf-4efa-9675-b011b3a9d8da",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4ededd-378e-4125-ba39-60d606cfa76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb2096df-eb5c-42b6-8485-8a291c8803cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6fa45be-2b9a-45a4-8d63-32770374d35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40ed2bbf-37fc-4c14-88d5-e70b9e3e86c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413da136-0b2f-44ef-be88-0e99065d472d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be0ffe3-797f-4707-9b16-00972f4f9f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35f27a15-25ef-492d-9d9c-bc6e76519037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee3872b-c889-4b39-aadf-b25871d2ae3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "66d8db9f-2adb-4d79-8fd9-dde79caa16dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9b07eb-fa30-4fab-a0f6-7f602733dd81",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41906b3d-8a18-4f3d-a57a-b7f4b741b95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "328d2958-112e-4ace-8f1c-57c66cacb245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065e9835-b129-49f7-8046-b0925fe924b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac3dff64-69ec-4df9-8263-77e08142b5e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf29885-2e37-49f5-8905-0fb8d2da52b9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "507c5cf5-a555-443c-99ae-c870d91e1cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb39af2-5e40-48ed-93a5-e7392f43ab90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127cd4a3-4cd6-4821-a7fa-169b14b839a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14cdb069-7e3c-474a-af62-88739bd57d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea65182-593c-4450-a856-4d2277458dcb",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5992131a-0c13-4fb7-b601-cdffbdfe8813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae36d2c-8f8e-47ce-bdd8-8d705a4f29b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f113d7-d0b9-4616-a6fa-092da94feac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d262d848-806d-45d2-b74d-dbe7a29e5b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc34d3b-fca7-4d57-8974-6afec59f0159",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934db0d5-45ce-4495-8fe5-f6eaa69d0ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c360b98f-ebcb-436f-b904-0795b56839d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3a83f5-86e3-4570-8ac8-513ec655e5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e2f5427-f501-4e6a-9af4-6b014db3f490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ddae1d-8d9e-44ca-8fc1-55f1510f64ce",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ac9743-0aa3-4f83-9d4e-ad9b1b800ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "584ff2ea-a01f-45c4-9dda-337ff3582cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c4ea3f-e28d-4fb9-b8c3-e0daaeb5882d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e131a76f-3248-4fdb-b980-cc32d6077f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4977bac6-9255-4524-8951-9e397693df5c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e8a319-b956-4358-a045-799e8df06cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c6d7c6-a74a-4db1-9ea1-a13b0fb6c807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147b8ee3-9319-4692-9d7f-b0698e159947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d721545-b7d5-48d3-9633-227c42b558da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7070d8d4-b328-4048-9ab0-cf32d7ee6b14",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2a123b-1c67-4cc0-8834-bd4a0bc390a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f641d41a-9502-4a8e-a080-e75a827b6b92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d067718-4fa2-4f2f-b664-3336df07708d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4853894e-891f-47dc-8f0e-d48a988bb2ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d665a9c-a693-4883-9a81-4ed3f31d2621",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e27c4ae-db2e-4947-99e3-dd5c7986421c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab5f996-a1da-4f47-8257-711df5cac44b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394f5dc0-cbd5-4057-b79b-43e59969a796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3ed2529-6a25-4240-94d9-6dd22da2a6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc47324-ac54-4c00-a9a7-8bbca8ea5109",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6fab07e-d173-411f-8be2-c9fa4850c697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00bdc8ac-b2ee-4ab0-b981-d75e8c172c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e41a17f-6d35-407a-8f59-10eaf92fad43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "62cff495-a595-4cf5-aafe-f23fd9cfee4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7df928-7558-4b23-8ed3-064cd4898b73",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8572c2-d6f1-4284-9bab-492e927598eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2fd46a6-805f-4325-8091-412befdd1320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac78ce43-8bdc-4c9f-82ff-1c720411c4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6fdaeed-fb75-421f-b623-527204bd5ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed08389-4958-40b5-9957-8ddfd93a3003",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39fe270-d570-499d-930c-f135243eb3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80185d48-e160-4aa3-9fa5-5a1f2b3aa8be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c85001-eb56-42dd-a262-df0387397cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b519e659-3978-4242-9edc-515ccc9559be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b32b82-489c-4c1f-b4ac-d626ca18020f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48014e2f-7758-44b6-9eb6-de3a7446e29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a18356-8981-4b15-9136-a9a226509840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658704f2-ecde-4527-855e-9e9d4d8da21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b6ebd5b-7820-4ad7-b084-67a0a6a1f8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12724cb1-4928-4dd3-8820-af03e43190e1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a351ef42-d105-4f2f-b8e3-5b45f278887b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb8ef932-bac9-45b9-a63c-6d91b039e9b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3d9fd5-e999-4e3e-90ff-fdb1bf6ddf46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b17b67f-d6af-4b83-9964-7d50b57be64f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c0f941-4b0b-460a-9b71-99cbc31f88ab",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a32053-15e3-4fa8-859b-832a02bac4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2da89c78-827d-4630-941b-686b3b738c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee532eb-ca38-44c8-a192-6d50f9b0c82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "323c990d-d693-4369-803c-2ef1c49ea895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2086e9ae-6394-4296-bd9d-aa5c20e45156",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c8e9e0-bde8-4f3b-91d9-ebf73177b43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7956c365-5790-4bae-8406-ce172d3a0de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155a6292-1cb0-40ec-a5ff-3b54f03de160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9800228-54ae-47ee-8085-407dd8577101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe606928-2800-49eb-a2cc-1c39cb049a2c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d86cc1f-1fea-4cc5-a05e-34020ff19cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abba955e-0f17-44fa-b5f9-18bad02395e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4b4c6a-163f-41eb-a614-e3fccbc4c26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7faf8054-1e37-4ea1-a0dd-96889e6f6cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58445e04-63b0-4020-a07e-fd5ad6a110da",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "474c339c-4e92-4426-8810-f16380d0758d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "903c8262-9c23-4f71-89ed-227622957d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c7360e-a5d8-43d2-9564-7bb6c990c9c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "20160b80-b9b7-4030-9147-090e8d8d90ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e737149-51d2-4d8d-b925-fd3bdcb89219",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4f9e02-39bb-4d11-8507-7b238604b3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1de3256-bfb5-4ed6-9e17-e5b62c520c61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7303f724-30cf-484d-b654-8319ffeb279e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5847188d-67a5-4da9-942f-28e441df53eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6766ad8a-6dc7-4230-bd7e-bb51494954a1",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3dd15a2-a80a-45b8-ad62-907774d25ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42893d58-71bb-48fb-b754-79394ebc973c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e41e51e-f917-4963-8a34-2815f2f4c1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc57fa1-e991-455f-9b24-ed40e52d17c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b4e5a7-87aa-4d9c-95d4-044f67fd1738",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a0fee3-e6aa-40b2-ae10-9a3d69d078ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a8c5eb2-3521-4b38-a190-50752a890eb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0946ed5e-1dae-4378-b2fd-ada01d25d5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "df695e23-02d1-4f3d-ba0b-40d09c877d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3a717e-5527-43a3-8730-e7eeffa55d54",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf53b09-a9ad-4a12-be8f-14d2a8e02ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c0e61da-d7b6-4e41-b46f-186cfa95d0bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27bda0cb-5953-485a-9633-492c051b596c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "27a025d8-714a-49ae-bcef-3c545c467718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c94754a-6957-437c-b722-5fc62a01af5c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95c6676-388d-439a-94ab-9aeda976a7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b278507-9f8d-48d4-b244-2b59fb3f1bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9fc3e7-5cbc-4565-84d0-ebb95ca64897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "172b6b56-4065-4900-ae71-b2c9199696aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "167b0728-0600-49b0-8c2f-baaf8fd91b2d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ccad779-1732-4804-b16c-229346b0818d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7be893c-5157-4ce4-88dd-59265cf255bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61de3389-0fba-43b8-9540-a2b9acb83e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e08f5d2-52c0-4bfd-a4b6-9a93e0dd83f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b850fe4d-8984-4abd-8938-e711ac0f75c9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "869bfa1e-c119-4ca4-b711-e1a733d44049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "791249f0-6448-4145-8a30-1a7b3697044f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e29e3b-24ee-49e9-9eac-7be64136334e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "54f5721b-52c7-450e-b473-974fdb3c143f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3f49f9-f3a7-456c-87b7-1fa51f39c426",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a6117c-4a54-4412-9863-e3d9c8533d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "808e474d-4069-4de8-b6fb-78db7fb9fde4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d9464d-c635-4b77-b519-fa84df7fa713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c76124d6-a746-43e0-9bb8-d5cdad495b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a638815-cf0b-4019-91aa-fb2848263751",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b069158-36fb-40f8-ad58-fb1eedc3af62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "931acf39-a9d4-4a8a-9f83-ef736d5b3206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac575b5-ff7a-4d06-9e35-feac8c4b4089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c5ef75d-c60e-47c5-bfdd-01d5bb4119f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e415de3b-f199-41d5-b9b0-582406c0cc74",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "023351c4-678a-4494-8fe0-f2391e73339c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e615f7a5-67d1-47ce-b296-82b73b0d4719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe7acdd-0714-48a5-8b83-857a50bb48d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5e5a7a7-f8d7-4cff-9a85-d3d8732134e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79250b5a-4e82-4965-b856-45e6cbd53ddd",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029a5080-284d-4e88-a1a1-250ec827c945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "110f11b1-a2eb-486c-bf3d-47374aab3f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53b0a29-6d31-4c6a-bbf8-6a9ceaaeccd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "740dae1c-dcd0-411b-a409-7b263ede2834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1606c2c-6ff1-4b18-bf98-a1827f174436",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d39538-82c2-4157-8b84-02b3cbae0d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29f16fc5-2936-40b4-8ce2-c73a5aa688b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e964f71-8f3e-43c4-9d2b-3669ca0511ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc021713-3f5c-4ac7-b854-48888c72ca2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046dc58d-2405-4579-916e-cf6e96f22dee",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c627f2-d159-4225-bf5d-61f84c57c77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f124d82d-9780-4088-942a-6cf386f4f2b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ac0460-7e7a-4778-9ec7-4fefb3305818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "525186b3-c07a-4d3c-a61c-591a0b2d9872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "777e7d10-71c6-45be-ab86-b90751f56ad5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8cce90-735e-44b5-b8d6-50fa8a5760ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa9929c9-9877-46ad-aeba-4a03c811f536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7cbc3d7-1f6d-4d73-a862-7ae5ee0d3db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "09eac702-d313-4522-873f-4ef193840dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f046dca-084e-4117-9bc6-d4da89cfc877",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb715366-fd6c-4d0b-86d8-5347f3b5258b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "777acff6-7686-4950-b867-74299776ac2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b7cc4a-570a-40e3-ac0e-d4b1c3d198da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c6359f12-ea65-4e25-a262-e0e4f5a48248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86665dab-24b4-49ff-a047-4b7a8c5b4743",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ac0d2a-96c9-4cc0-9d62-591086404e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83dba82a-a4a8-4e5f-b0fc-52b0fc0411c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107bcbe5-05bd-4089-93df-0741a910d509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c72ed84-2983-49d3-b650-e87dbf4d38bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d2db9b-e36e-4408-a8f4-d54d9f555fc4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3396a6-93c8-4c56-b6d5-cba4c7b30073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "062dbc80-d964-4d6e-a1c4-1a119e081272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614513b5-a906-4d4a-8896-129164dbdc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfca3e35-600e-4f2f-b818-9a7d94f8c0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfca5ac-3211-4d17-ac3f-033644267542",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49491728-3429-4d63-b4bc-342e2c25edd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94ffd9fa-d22f-48ef-b7d2-eac8ac76ab00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2d2ad4-a41e-49ee-981a-b8106611ea65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ece5fd84-d37a-437d-b35c-05b4e87db434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c66319-c65e-48c7-8d56-cf14e3ea08c1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1355b8d5-de5e-4bc0-a943-6dfff372f466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3185be59-40c6-4dbb-8189-e425a2a166ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56bf8e8-9614-47f7-8f75-fa21cb33aa05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "344c365d-164f-429e-b46f-6db5fb994b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0b4190-d2c2-44ae-8ebf-66a1531daa0e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9b2956-6ee9-4d8d-9f30-a019740f66bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fcb0328-71a0-47ae-a3ac-88762f5ffdb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2d8779-1f80-4c53-bd2f-c4778e441c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "20deade8-6f27-4f28-9fa0-ecf38f081226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8fd17f1-80f0-431e-9871-48ab4a090831",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1e144d-81ad-4959-a9e9-17d6caa6cccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e32c68b2-32e1-4902-8de3-58baf37d35a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf74b46-1998-4a7e-8d03-6c0dbea13637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "805d6ad3-c01c-4df8-b5fa-bfc869a5e8f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26dd1bac-a134-4567-b27c-fae7e8286799",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682d2fa7-66b8-47c9-b90d-509cfbeb8e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6080903-3451-4a75-994f-cf30821deb92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4a7cf9-54c4-4c4e-8a2a-86d7ac4a0ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e5c8847-72e9-4772-a42a-f4a3c2fcde7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4694b5a8-404f-45ae-aeb6-0113ac776b8e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1612d5d-7d55-4b94-948a-fad5a61dd42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3258c0-8ffe-46c0-ab9a-636daa3b40c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49673c14-1484-4098-b2fc-62453dce4bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b9fffdc-e87b-4656-b618-0e8e6127f2fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff5a79a-5ae6-42dd-88ca-02811254c574",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4ceea1-5191-421c-9b81-320c1ee31c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f37a5cc-40b4-442a-97c2-a8936744466b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4665ff26-cf41-4e40-9c90-71eeb8ce3c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e448583a-d379-4d1a-87ca-bc10bdf60060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac443c16-62f4-45cc-85e9-6beb5702427a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981027d3-32af-488a-96c0-6ead10efad4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68cfa347-d18c-45e3-967c-c08f50c07296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328564ce-010c-4e78-b7dc-f4712eeac5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2565fec0-b8a6-45ae-ba2b-ef1147f71047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ace0083-69a0-46b5-8492-e8cd02dc738e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "793178f9-bbfd-416d-bd28-fe1411caa6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50ee97eb-f6bf-43b5-a720-1c1bc1e6d46f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0154847f-4941-4e80-939b-7298ec891449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "61e67c9f-ca55-4dd9-a136-1c4fc80b6305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf1745e-e2d2-45d1-913f-9491b78392b4",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3130772d-e7ec-4cee-baeb-0e1bb813759c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baeeac83-6bd1-4949-b848-ff301b552926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8312a1d5-0e0d-4c2e-a031-a48f21c8ae59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bf91891-40cf-41c2-a7d8-552f905d5835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1d916c-71e9-4093-8e7d-3bdad89f200c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db24520f-47d6-47c1-9575-f10a198b4f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd3b35f-39b8-41c0-99b6-e3c307ea6a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d940a1-3fc9-4dc8-81a5-8231a77aa3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b22e47f8-4906-492e-aea1-0dae53fdbeff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84855876-191c-45a4-9b96-732bf823382f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90806c84-9329-4014-a708-fbc9e5d4d02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f319fa3-5aed-42c1-a995-bc280ea7e3fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75a95ca-0667-4552-96c1-6cbc0672de7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d85cccd-94c8-4386-8560-5e46aabb6324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5221fac-2775-4c50-9451-3acf79cb60b4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "112e9816-c3e9-4a26-a983-bc0cde3b98d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a87d6cfe-b576-49f9-b5a3-82f7fee61042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6cc88dd-c369-466c-af9a-ae636b9a5f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc82d284-064c-4faf-8c0b-23ec04c73820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5ea781-6fd8-4ae0-9503-165a20e40cd9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf743121-7a36-4471-9b8e-f93fef6308e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a99b74-495a-49a6-a0f2-03617707e371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5f682a-8ebb-4876-861d-be282fe3a222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6a3e7d0-bc02-4b5d-88f7-f4355db28187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f76e550-54bc-43bb-be83-02bd94943b86",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd22ad38-c61a-48d3-9f37-053567d0fd32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11d30aac-b14c-4985-8168-f38de1e078b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5619ca-2bde-49fa-8bbc-294e97d9f09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "afe6165d-2bc7-4873-9ed4-634c2f51a312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55173640-f48b-4e2d-b58d-c03975b85dad",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a721d2c-e289-4602-994e-e174aedc6645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd5c057-af29-416b-aa31-9e40694c96c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec31fa5-cd01-434f-ab7e-cd9169f07d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0067516c-37af-4c03-ac96-53e0d9b01925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4483c4eb-76da-4c41-a98b-45987ac0d1f3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5ff169-0976-4f99-a8d8-075da358eb5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a0c9654-8e36-47ca-9f03-ed5dd9fee09b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a3fb28-077a-4915-b2a6-0b42cac2b91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c0229b0-5553-444f-9933-8ec18fe3b302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58a14f4-a3ae-4b46-bbcc-2f0202d43f3a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de26b0e4-4bc6-4a16-a67e-a03901658fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d3c914f-ed26-4bb9-8de4-b8cdf85d5ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48636bef-89b7-4830-9155-e3b7d0b94758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a74c4429-121a-4848-9aea-c1cacb371de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d390820-9257-46de-8d8c-83e0731baa33",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ec93fe-231f-48b9-bb1b-75ed303f53ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38f4c8f0-be97-4147-bba0-6efae4aa155b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55339ade-8a50-4a5f-be0b-b582f3ce3e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ca257ed-171b-40d5-b462-41cfcc1f3ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b035c393-20c5-4d7f-9b58-3d82d6872727",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e492fe-02b6-43d0-bf3c-4c5fa24671b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a39db89-6212-4ea2-9489-6a0b7156b232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123a1f22-64df-4f98-8949-5e3aad5d3bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65129172-067b-4a9f-bbfb-f13a9c0db1e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f91faa7-d70f-4a57-a2f5-8e7fc0147ce2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faefc13c-29f2-4d0e-9347-6d44611bf0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1fd9853-86b6-4460-bbda-c0feddb4f6ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3bf2957-e0ad-4463-85bc-d13e7329a603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ce903a3-1ad2-4e54-8b1e-caa8e42395ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad68157-9c1a-4e6f-a4d7-d263d419c8ee",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c628a27-44c6-4e9d-8875-b0004b4ac989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "171f4d09-8c87-4cec-bb1d-6e4af9a22c5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e06d00-2774-43ca-ba64-b0291099661d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "947d0f1c-2fb8-4b21-ad75-3daa38d2d227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726707ca-2a23-4820-b537-afc14a1ee204",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001054c3-e6ad-4622-be0e-7ed911e9d32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca5aa8bf-135c-48ed-be04-6247a2373937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c5d60d-2ff1-406a-a91a-b9dfbdea76f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1857a473-935e-4252-b79a-7ce1ccdd640e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7d269d-ed4a-4af7-b062-fc7e37cb68a5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52da5ee1-45e3-4627-9bf1-cc4091fbd1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a48bf4d2-14b3-4f7f-bcaa-9ae6d4f71cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b922c46-792d-4ae3-8162-4173b6c0cf0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "addde0a0-a548-4dd2-a8e6-2174aa9288ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2b90b8-e751-4a5f-9bee-4e98cf8ca7d4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a76f629-34df-4152-b5a2-eda1a129e91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e5bc692-1664-443c-b081-6eabc75d0419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df239d3f-c310-4cad-bd91-c0db0b7dd345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4f8b5c-23ee-4836-8498-f3b68ba27fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78741c8b-e659-441e-b281-832db3276025",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c9fc0f-e99b-4091-9515-6d63dec1175d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "695aaf79-85da-45b9-8075-c8bef2997854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9c5d47-7a7a-40b2-b142-4a8e3df946f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb3ecbf-b629-4909-9b1a-6101fd630645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d697151-986a-4fe5-866c-4830a70a1ad7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffb01a1-66fe-4b0e-b3fa-017c59cb5b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab2b72cb-e7e6-4242-8801-5c99fb4fd65d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd9b7b1-e68f-4b56-b695-0b5445254f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca3293aa-de6f-4426-bedc-621b92173d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a826b8-cbfd-40f4-9b79-9696ee691f6e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffb3388-d754-4df1-b923-7af6249ad1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48efe9bf-9fe8-43b5-a345-9ccdde07af46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f5e351-81d4-4350-aa06-989e75c12d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0b2c37ae-743f-4de7-a9d5-abca710d4a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7f2e3c-36a1-4ef4-a16e-3a29952b26b2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2b3834-2e91-4f4a-97c7-ff0b2df37d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a56049fd-acdb-41de-87ea-4c154e23097c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb145495-92d2-4627-bf23-61e943058ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "52d5aeb3-98c0-4f98-b993-50176ffc0666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8b9ac6-389e-4567-bca6-bec62c4e2293",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "181bfee5-1eb9-436c-8686-004eb867ddf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ab0af1-d4d9-43cc-a41b-138f750af6a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc5609e-4f15-4fae-8aeb-2d8febc763ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "41911701-dd56-4b58-8d0a-257d080e132d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732de1a4-6ae4-4b73-a94d-20afccefe226",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f65720d-60d5-4b7f-8ba2-731d973f3aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a69c977-73ac-4189-8cf9-0497888ad824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f756c2-cb76-4d6f-be9f-997e9391994f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04dd5a8a-4a42-4387-9468-2718a2a3a875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0daa13a6-a419-4d89-9b1d-a24ff65f7188",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9290ac3-dd0d-4475-94dd-3a9f7bc57328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "919e3aa5-1956-4b6b-b42e-d31d4446d16d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3361c946-66c8-4500-80c8-afb7afc5bedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cdbefc0-dbb3-4f1d-936e-0765881f9501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f3fcd9-8dde-429e-93fe-f7d0c7174074",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b047248-6457-4d34-bc7a-6ca42bf2c9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8138538-8f81-44e0-8aa0-115765b7fa58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e017a8-5b01-427d-931d-679b9317136b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "370298ad-a612-4e43-a48f-a2e13d2a8b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e26d18-77b3-4831-881c-210a6e77dbc3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "006910e4-1040-4ac4-9a32-9cb841689607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dbef3e2-91c5-471f-af61-ee56be893a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe76549-ae93-4dc9-99c9-d8728299d3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a03cc7f-1519-47c7-8d57-f1f60c990f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d60aec3-c29a-48b3-baf0-d8a5d9d1c51c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dffa20d2-eb1b-481a-8f50-64dc5d5ea85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae5e207b-13d5-4e0b-826d-d5c24391c9e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450b3686-82cf-47c1-8fef-30dbad128f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f209a4-c398-4953-beca-f4f2fcbf3843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1655cca2-efbe-4090-939b-16475bd9fe21",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "532890ce-651d-4d03-9539-7537ad84c8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d48583-b3bb-4915-a0fd-25e5cbae517a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534db99c-edc0-4fe6-9517-42369aef00fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "48ee4e4b-b9cd-42ee-a2f1-26ef7e2406fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7482e76-c667-49f5-827f-8357c7aa26dd",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5883baba-213c-44ba-b32f-cb272b0e2662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d138aa6c-ec35-4852-ad5f-c60e20a42896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e67921-e1af-4893-99f0-73b24f68895e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc5d666c-57fa-46d3-ab0c-d6fa900fb970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213c5e39-8836-464e-8d34-7ae53be80b0f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "300dc278-f102-4681-a0a1-5f701528f9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c0a45e-a04d-451b-9681-d535f0d59e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d2e0d7-14bf-4ecf-a5cc-24f5b9b272b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c52cf81-d76d-49ed-8a43-f671f222f831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffaa9ca-d180-4e7b-85e3-b5ac118c0907",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a481031-33f6-481b-b899-5b141fb1c4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e8edb36-b069-4e23-91d6-d7d05139b8fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d987da-569d-462c-b463-e9bda222d06e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e41459-1a81-48ad-903d-8e3f9b0dc87b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56537694-f3d3-4d97-a8c9-012fdb0caeff",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ec492d-3184-4944-886c-424723bc86f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "86e28ba1-e460-4315-9b3e-54d336cb148c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d32998-6b96-4efa-89c1-62a133538a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "854e300b-e41e-4d8d-94dd-995afac2be68"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5c994a82-9834-40b5-9887-636363c08b8e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bfc6fa7b-fcaa-4135-8b90-30369c043428",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb21b69-4491-450c-8a77-4515439cf062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5fbb4602-ffce-401d-8553-c3d9725e4c6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7123ee8a-120b-40e8-80bd-e00aeb847d72",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "222ddac1-f75a-4beb-8620-a7222aa6bdcc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98cfc190-899c-475b-911f-fb66ba2a8b06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ba86663-48e6-4cab-9403-13e05f1e32cf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "733d733c-dcf0-49db-b6c4-7e55d62f4a9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d545294-214e-46cc-af36-b81633fdc334"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f3a48c5f-b28c-45ee-96e1-91e208012a6f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5378e9ec-537a-4121-b755-422fc433a290"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a439523d-a43f-4dac-aaad-23f21bc7e65e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3e754f77-2bc0-4b24-8e2c-97ea6f82f613"
                }
              }
            ]
          },
          {
            "id": "95ef4e1b-773c-4421-b1e4-c340527ffcf2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a77353dc-4e76-469a-b601-d264aae3a89a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5480d64-686a-436b-af62-bc6bdbf9c74d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "67fb23ca-1afb-4095-be79-16304778c31c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "754a5326-d9da-45e2-bd26-df34b35981de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3d7da9e2-27a7-4933-8516-6ffb101281dc"
                    }
                  }
                ]
              },
              {
                "id": "7d06e394-8978-44e2-9e1a-8da408c60283",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "445bd9ea-b840-4583-acf5-b945ff36bd2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "67e9f7a1-5979-44f3-b9ce-d5c44b04dd31"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ccc02478-4ee4-42ec-8baf-60b974015b8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f13815b5-6230-442d-8df2-8a8661293638"
                    }
                  }
                ]
              },
              {
                "id": "43b8c4b5-5221-4323-af97-5e9b93130483",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29a9b14d-4e8a-41df-b2b2-ded8bd8ee78e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "44ef1e12-6eab-4415-9022-8eaf6c8de9a7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e585406-adc6-43fe-bbd2-daded9799498",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9e82ca8e-b10b-4e72-b20f-6b833967cbe9"
                    }
                  }
                ]
              },
              {
                "id": "d3f0cc9e-7dd6-436e-bfe1-2f2c6ff5720f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf3d8f32-1b90-4576-bda8-7858057c58dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5555633f-5f3e-465b-9a3c-ad094929f14d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f9abaad-25b0-4dae-ba68-c0c7739f54b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e63f27d2-0b40-4395-a1d3-ec5e4e43b251"
                    }
                  }
                ]
              },
              {
                "id": "a3e1121a-ae11-4366-bf09-9b1d69c963d4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cddba5eb-c469-4a05-aa72-590731917b7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6fd7f6b-af0f-43de-babe-aeafbdcc3bde"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0223046a-783f-42a9-ae97-5866d905ec20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "06690c8d-cfc5-477c-82c9-d1c3abcd8fea"
                    }
                  }
                ]
              },
              {
                "id": "9f01dadc-345c-4253-9e5b-1d3046b30d0a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8330abb6-d5cf-48ff-9957-20804fb99018",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ceead0b1-9b7b-496e-8dd9-5f92df514af8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc7425b8-bf5c-49c8-9516-18cf9d6ab58d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "16c41bb3-a2fb-406d-969b-f6058943419b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2d267b98-fd10-48a3-b95a-dddc56ab0e75",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "82fd0a53-c271-46e6-8dce-9496d4ca65a5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "edad8099-3b10-4d5e-b9e2-d6aee3637f6e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b17876cd-d9d3-40bc-9ec2-c49c0a070772"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a9fa863a-c332-412a-8f90-494f8ad72958",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "6e85752e-37d0-4506-8b82-1b6534aae76c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e707204-2bcb-4e51-a7e4-db809fad3bd2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7e5383b-da38-43d2-952e-4de74e9c15be"
            }
          }
        ]
      },
      {
        "id": "2f70b18c-3fa7-46de-aa83-67c5f7e7d4f8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c80047dc-a532-474f-8ce4-28193533ffb1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f3b98512-75ca-4524-8ded-0f60b6fe91eb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "de71b6d6-fff0-4eeb-98f6-f652b2aa12c1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f23ddd5-a9b7-4810-962d-0990447910bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204adfd5-9672-435e-961e-4aec105bd10b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7041b465-21b5-43d3-89e2-672f9812106f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bf93181-edac-4ee1-a871-c92b94af0ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d567f2b-67e6-445c-86b5-96e91cad7ea6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f482822-207f-4a5d-a43f-2a54a1528cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80633b19-1093-4714-90a2-f0a5ec9d683f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66fd9338-1205-43a4-a40b-c17975bda76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3745e275-84b7-4bcb-867e-2a6c36e746bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f2ef9e-58b4-4ad1-9586-477c756b3068",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e849ae02-b23c-4bd3-b3db-569c4a2617ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2acf2f6d-f9d2-4ac6-b8c2-13334915faa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a86227a-f880-4259-a74f-c18ed88b0d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "787c6173-a5f2-4581-912d-4a6c0e3c6393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d2fe38-009b-4eb7-8e22-ed6f2f582626",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b9b1d4-8470-4ba5-a94d-64547f986cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db8fd4e0-c53f-4ede-b051-11d857f4e646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea99b35-71e6-46aa-94b8-37e265d26cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "44c00400-42b6-4c63-9bd5-e91acfdd6452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f207cc-d9be-481d-90a3-c23261359a23",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9fe8ff-ab5d-45d8-99d7-96017a92f724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e33a1c7-0877-49af-8501-1593a23c9760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea1f095-cfdb-4d21-b879-22e076249457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d38bdcaf-a25b-41d8-8a80-9c314062798d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133ad490-28f3-421d-89d2-cb4ed1ddea98",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7630ae9-1f9c-4440-9e01-36774c47b1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69cd4996-5d2d-4946-a0e0-23f52a4d5739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ebc5f6-bb07-49b6-8829-d5606c0ecd46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b959aaed-569a-48d0-abdd-f276b626bd30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffcb693f-8bb8-465e-9dcc-6a3d3437d525",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c10977d-59d8-4146-b187-31206ac07e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67a35bbd-7032-422a-94a4-1cd09708cbe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29083a5e-9360-4b8d-8dc9-b0f3ce34a14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "69a184a4-ba6f-41fa-8ec6-e7c809337fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1fba4a2-0abc-4017-ac98-64564447138f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1947f812-ab1b-461b-9429-c6f9c82287e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df4e8635-609f-402d-810e-0a4d47bc8433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6f47e1-8ce5-4a16-a2a9-f772384d1939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8769abf-3dea-4e60-9b9c-4cf31dafd26e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a626771-fe49-4cba-8fbb-c8834df98ca6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9347ad2e-356b-48d0-a589-eeee3d00dcf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12bcc14a-4f5e-418a-ba04-8e8707bb1985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e317ac7f-6527-4572-8f5b-2c6e3452e46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "32a77cef-b4d2-4a06-b1d2-a41515cf2019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e3027fa-8fd4-47e5-b4eb-c0744ccaee36",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f20e6c-d527-477a-bc42-fe902dd69bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c02049a-f0a4-4def-9cfd-4111a176978e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df47f7a1-98e1-4eca-9b6e-d8cc16db1140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6243e5b9-c3e1-4ddb-b034-9682bc8478b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1072f05-3593-4cbe-9fd3-5be60fa919bf",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4732a0c-c251-494e-89ec-261294250881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65757103-f0ec-4a5e-8b73-4d930d48877f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd445b13-6b29-4968-b32c-fd8c80c2ef66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7c18b850-4faf-4d6d-b354-35b5791da2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d661c34-d8be-42bd-a504-7dd735585bad",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf4f843-532e-4e23-b84f-72e32e8a07de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93fa6c95-6ce4-41d0-a8b8-f6f70ebbbc4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02179a7e-420f-4e6a-970b-a17c2ca1fe07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fa8d27ed-0d01-4941-a490-93bbc071586a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88bd31f-b62b-4a92-b971-ab6874d3a5bc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62e451b-a03b-4464-812f-cf38660d980e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e8412c-6c81-40d5-98f2-7ff31d03f6f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac44ca6-912e-4764-b19e-0107b1624960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d95e269-c823-47c7-a702-3b720f210a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ae7d12-47c4-48ad-b50f-cad10bfade1a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7099e6f-6d85-44dc-a9e7-a0374d73d098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ec49b0-379e-49b4-b639-3a99fa94351d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d4ec64-a02c-407d-a672-217b43258f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b10cac0-8a0f-4fd9-8522-f6f51ca94197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b70024a-4e69-4fb2-bf24-d42790185a4d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04dfe24c-ea0d-4276-b508-b0a7af3422bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a4d969-30ec-4993-a8da-a2da9318475b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481be7c0-cd2c-430f-9b76-349636015088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e627489a-e729-4e23-82f9-621f5a38e1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895ed265-869e-4db5-9990-b6695cd80584",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71fc1ea7-b428-49af-aa93-88287d4874dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74121df7-2025-4f79-90f4-d13fddbfcf77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2466f2a0-1934-4d05-8b43-9e2b7a929fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "de110da4-f376-4894-a715-4d93e0bd14ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67b9e9d-a02e-45f6-bc8e-ea161450b7e9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50acdb6a-ef86-4ded-9d4e-4af93e1bf2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dedcd4b-8f82-42d3-9f3f-1d7c441ca48e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775f50e1-17d2-4a49-bb80-86ab037ebe93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc9e271a-3320-4be5-9395-294547be56b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd98224-281f-42b7-955e-d2fdb134791a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84aba772-9944-4047-8a05-5c1bf62568d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd6d570-fc2b-40e4-ae6b-d19f2d0f5810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546840b5-07cf-42b1-9697-fb2eeeaf499d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d3d86f6-a62f-4758-bfdf-ccb497789221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec849f55-7d7b-404b-8f09-ea21f3f9ba2e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e4a000-8fd2-4d5f-9d39-f23eda8ac3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a21e24-2375-46d9-a0de-1ecca4b52713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085ad77b-2b7c-482e-8cda-3d78ced88fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c6bf019-63aa-40ad-a5ab-8ba4aa47a414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62734362-f46c-4823-b95e-130ca39d6399",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf5aa21-5481-43f8-b558-9b7c04a16f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6397b7ef-683b-4e9a-aa3a-0a8d5a290fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9806b63-9af5-4c4a-ae06-d95a54530233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43c37f16-8db0-4179-9400-54d4360629d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4524fbc3-d73a-4745-a371-367bd940b88d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "770bcd39-e398-4f1a-bbca-768da5f305ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e31536c2-1b64-4f32-84e9-33c0c32c7407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0628fb24-03ff-4fe6-9a03-c1a19307d59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9b93724-c232-40d1-aaf2-86f309830ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d134518b-07e5-4df5-b880-9ba0672f4928",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05cc6165-c219-4c19-b08b-7d39d33bc702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f71e031a-c8ea-4aec-ba1d-e68cf2f46d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af19f062-760b-4ab7-a700-1e72dfead897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6df42bf-3acb-4929-b0c6-c2357e850d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e103b8eb-407a-4685-a30f-1b179e2701c1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7c9d4d-cbd8-4d6e-a782-5c2ff2132e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4e5132d-3b5b-4b74-bfd7-b70fd68d7b59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e8c575-7e74-4bf1-9289-0618e35d4e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50bd69c1-4f93-4de1-870d-c324d36848e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c740410-02ed-4fe6-ac7f-0ff51b5386e0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda0f99e-2119-4c5d-ad70-05e2ffaf89eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cbd2588-4f45-4005-b043-083d8bef208d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a72e6c-39bc-4309-a104-619da9c13d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f9fa760-6487-4555-9f10-657624267b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1aca4b-e693-40a1-9893-50b4e2d68d29",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84dd23be-ae19-4969-bd64-1d099eb0c338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03388a9a-e305-47c1-b5b9-66c33a4f7f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c900fc1a-17a1-49b0-8e4e-c68e682a50cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a3d5cbd-ca2e-4ad8-8163-04f626e6731d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9a3934-19ec-4703-b0fc-5f11beeb24e1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea52a828-7bee-4a2e-adef-9ebdaa9b6e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24499106-9449-44dc-86e5-bc7027d6cbf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced89b85-4fcd-4784-8290-1f119dfad629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90cf754e-9c6e-4779-9362-bf8fa94d9914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc0b1b2-e2ad-410b-b9c3-c0150796619b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a452d5b2-434b-482f-9388-545c1a689ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0417bbb7-a5c4-4fb7-901b-9bd0a75b4254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f415775e-81cf-4040-8cb7-70c0fed4a7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7dece82-570b-49b8-ade5-60b504526c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af23108-e794-453f-adbd-60ef2d04a5c2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8547e80-023c-4248-aa7e-b07757ef097a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64691476-8fff-4644-8687-47e9cef54e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c8a8e9-8126-42d8-a771-47051af643b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0e24840-0bb0-417f-b7f3-828f39aacd67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7daa94-ed9b-49c6-a641-b4acafa1f89d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "098adddd-88a8-4e0a-b96b-34463ce0b131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d70b82-de1c-4a84-b702-ce64c6111fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958d8cc0-e739-48fd-afdd-673d359185bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4efbe034-470f-4f9a-a1d5-d351aa3662bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed745c2b-b68c-4123-a5a5-d00d461a4845",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afc0f52-6e9d-4735-a26a-0973a1593c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc7fb73-6acc-4d25-a408-407ed86b692e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776354dd-f7d0-470b-8eeb-c3a6646b589d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91341068-bcaf-4ce5-a5d9-c716228d9385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f35b011-f0c5-47da-91b6-05ea4fdfa315",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47508c3-cf4b-4971-a613-5c40a2d9eaa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac514f8-51cd-459b-9bde-b91000066531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82eb53dd-2b61-4a5a-8eb6-193f26e6dc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b1f8840-ed57-48bd-86b1-0eb723514372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546c7106-b741-4d99-97c3-845641a942a9",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "853d968e-e438-4f45-a0c2-90cd7099e654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42946a35-621e-4cbb-9987-b212eba66df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf5d874-7d9a-4db5-b6b7-2b8957fb082a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cca2e95-971f-4f00-8827-9da3936560d7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6aba2502-8ad8-4f89-be63-ed1d3ed1caed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e619b18a-b0e7-4375-9708-baa5b02c4421",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca77ba47-790f-45f3-90d9-a022cf8253fd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3cef821d-b0c7-443d-acf6-e2159422878e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac8f395-c4d9-4f5a-835a-d2c2352aa4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b477aecd-c3c9-4bc9-8c20-908521eaa2bc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9501cd69-7902-4b61-b048-61e56c0dbdee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57fd6609-e099-4608-9d06-5a504a0cde0f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "51e1e1af-1f12-4f59-aaca-e23553114003",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "422e8634-5d34-47d4-8e27-9894058e2c31"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31347f59-29dd-487b-b6fa-9c9ef61f4da2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1d90c3d9-77a7-470e-9906-ad3ad68a7975"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb55d42e-2d28-40b6-9d82-8d1136e1cadf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e90801cf-a093-42a0-bf96-582f00f2b8a4"
            }
          }
        ]
      },
      {
        "id": "374c5142-23b1-42cd-ae67-194dbc051714",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "4de21027-ef28-4e59-aa80-cf5a89082de9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "13128085-4a5f-4381-9b14-633bb9e486d3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d840d3bd-6f71-4232-9e42-c7431d0275bd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc909fd4-e894-41fa-a932-7e21f84f6b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca71e5db-f9eb-42dc-8fdd-88afbff76184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2da8740-3e76-4134-93ff-719734c87ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "17ce152f-66bb-4d73-a6a8-efc711c92627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e899abd-4f57-4b17-ac03-6f00eff8fa4b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5529ebea-0953-4169-825e-0fbc1e2fffc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de527b48-6931-4949-b9f0-0dd5c601e06f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b13060-dc15-446f-906d-00345093b20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "315debde-7588-4573-9968-2f11b04a30d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2228839b-5c3a-4c10-bd97-d2b21ee9b88b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee90f4f-2558-4a90-a2e0-46dbee67169b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ef5efc-a0c7-40a8-9b90-8db67347e9ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac72064-8e5c-43c5-a8c4-04887a674fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a90623-564d-458f-991c-36cf2c3d5575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10736260-a80e-4326-8953-e453aacda74c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ea6888-ca87-4a8c-99ee-ccc937ef76f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ab5ccd-73fd-4e81-8731-2063d55c5c59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f84290-f06a-47e0-a9b3-821e0536e526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "00e8ebf8-ebdd-400c-b8f7-d9fcf547b090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b228fffd-791d-4da2-89eb-633d7e81bbdd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e00e6e-8c5d-4427-ab10-f5f66ed14d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e65a1ed-f84f-4ed2-9d61-66ae66a48f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2a0b38-164f-48e3-a826-dcc9c800a799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f367c715-69dd-4e6f-b591-5891ad6a2abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75530df9-a74f-4c2c-a15c-8004e40ad446",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada15bed-eb28-4fae-9c10-5d55782ec80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72c53336-85f4-4f47-bd0a-76c65c457edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04f4dea-0d21-4590-b87f-290a3778a588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9824d3d4-533e-40db-b7fc-489abb164065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87fa18fc-5bb1-462b-81a6-1e2881cb3d94",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab71ea5-f3ae-4fe7-8889-3335458adc93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f09f6179-1928-4ba3-b7f7-abe696bca568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a038270f-92ab-4a20-8522-da271df6f2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9d57be8-7ee6-4ccf-825f-0ffebc5a47a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97234594-1e89-4acc-9636-fc5220cfbec3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8876a60-a5f4-4cec-b3c4-7bff767fdd71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4e3e4cc-cfaf-453d-a6f0-7708c6e52251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b8b87b-a340-4cd0-b8cf-f3ed73cab8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc2e700-fad0-488c-a03f-54ca870c88c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851f206d-7693-48ef-a026-99320584d9f4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b76c70c-9621-4939-bc30-a75a5e2bbc14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ea2f1e-ad45-4625-b63e-069a4d2007bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051276d3-c866-46f8-955f-6ffbb9cd07e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecf62183-dcda-4001-98b7-893587bbf9cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090605b6-c19e-4fd4-8f5d-256416a6883e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0323a1-d6ce-4be6-8d7a-5baa7031a55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06542264-a797-43fb-8aa7-489195345732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47fb6f59-fc1c-4d00-968c-aba0b964f1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf9ecee-39b1-4439-afb8-f3606d580f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2914fb5a-6432-4f6d-99f5-caf0d75dd17e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b5bce4-741a-435e-bffb-582b6cf7ea9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c22f6325-de12-46e2-a93e-1798a86f90f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1972a24a-c6f5-4c91-a70e-1a7693257382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "04878dcf-0c44-42df-84c8-5d26b4d01ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fb4a99-7d49-4c37-96a6-8071aae24cbb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a50f02-5113-4920-84be-e1ad6ef9fb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "264dead8-af98-4aae-961b-8465a29f2d56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6634ea2b-62d6-475e-8c0c-10bba1ca0211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ee78767-3abb-4683-a623-0798ecfd4a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58718718-c1f7-495f-b435-50974fca68ab",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "861a7570-23e0-4e2e-951e-222ccf5ef93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc26d313-101c-489c-b873-2bb5d244da27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb1f814-9ffc-4ee5-87e1-6300e8614c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec228509-b96a-44b0-81cc-b1c5a2baddc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223736b9-a8ef-4ddc-8fcd-dc446f8f4832",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c971515b-4a42-4b1b-bf19-e5f9991b8882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f9c2815-b256-49b3-ab03-cba9346cd1ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b1628c-882c-4acc-848f-9017468d1575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0903b58b-b7f7-490a-a05f-cc556fce4f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2127ddec-e640-444f-8aae-67db40328a3a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e296f007-dd08-4fa3-bffe-311e1a409dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5950a073-db1d-48d0-ba6e-0da31617d497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef29f450-6817-4888-8c16-f465adce879e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "73153a40-6fd3-4262-b3bf-aa321bc97f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e864575c-2c3f-4223-bc0e-b71124c01b56",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "076436d2-5e6f-4a1c-af66-3d90e8d78343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b71ced63-8496-46e5-a68f-55b657186b95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3846eee3-ba1c-4b53-b8e1-99ee7eb164ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "746e163f-cce5-439b-9d0f-aad26866fa3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc0bbb3-6714-4dbc-b7e1-7fdc696a113e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0c365c-d656-48a8-9690-8786b2464f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53f16f3d-26e2-49e1-8bda-e17cea49cb09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1abe36-bb04-4f2a-aadb-7e747a4cd47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0f5268c-d694-4069-9e03-2a5055e9f2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07cf2989-1e80-4c64-9299-694e053eb835",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da3d529-a42f-426a-8013-4e7e576471b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f09e758-4777-4364-8a7b-d70499764e2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f943d86-25dd-4da3-b95e-b3c9f59d456b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac4cd5f-1756-4cd4-a8cf-8ec02a04ecdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0869dcd8-a64a-476a-9a8a-e7aedb93cc30",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48973ce-3a43-46e2-9176-0b6398089f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "972998af-355e-4262-ba17-5c66c1dbe82e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588795ee-3618-4409-9726-173ff6adc8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e67720d5-dbec-45fc-a1dd-72c168fdb884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ef8079-2a17-4f09-be4a-537b433409b4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09553f0-971f-4d28-986f-63524e7879f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c48ac77-676c-47ff-81a5-6914d51c9ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eeb4a4f-0618-4680-aebd-ee4aaf6fc8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77eb3676-c294-4ec9-9a73-eed5ee2e45b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bbe89af-4228-402a-8416-28d63867e0a9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee9032c-eb74-46e4-81ee-03f9fa582851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d57632e-cc64-416b-ab9d-aeba5b2283b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04971cf2-a68c-4de5-83c3-9975a1346dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4016e0b8-4ab5-4f51-97c2-2bac79922af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498f6fb5-3f9d-46b7-9921-b92e453b5432",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8421888b-ed56-4934-9fc8-831f025e5094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d809edc8-052a-4a10-9a5d-961342b79dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc339d3a-3d81-42df-90c8-8b566ac27cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce83c316-6332-4053-9b01-41c30b5c28e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f86b8c9-f019-4793-bd79-142c45e93e08",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9c9ffe-a14d-41ed-9eb9-466390aaf544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "106fe61a-a819-4274-b118-ab60e7d95a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384ee452-acca-4525-a359-c54a3e51c569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1618aa5-6b98-490c-aec9-d08bffe01eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bebc6e9-b614-4b3e-a21c-5d770cab8fec",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25300243-593f-4e51-8122-d44e04b20b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ecf6854-2f66-4068-ac87-8eae31336929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59211063-0704-4ac7-b2f9-9ab8b538747e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c5f7b99-5cae-438e-84c1-2a3f1dd3ad86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d25942-75a7-41a4-bfb8-e4f343c31135",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398ac214-a992-4c5f-8ffb-6c5875fd1cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0b688ed-ad9e-48e9-9557-80c318f691cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0e4a07-d629-4ee8-96ff-040848c3a1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06d87e3f-5691-43bc-8fc8-2786dea07c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597e1601-c821-492a-b6c8-522dd7ecea8b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b24a93f-f841-4e37-98cb-679ef3e07d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f2ccc11-148c-4a9b-90b6-a72d1b34ee99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62251a7d-364f-4469-9333-5b5904a6d10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48afd2e5-784e-46b2-bdc0-c87a3499bfdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb379cf-d651-4a44-a3c8-edd61539bf49",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64dacfc-780f-4c97-b363-11a070fb0764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "100f1723-ee04-42c5-b5e6-d0ffe2228f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3063ac0e-3477-4f17-9607-a99e231a50d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09ecf2dc-2b9c-44a2-8332-2e3a37f0418a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592203ae-5e72-4bcf-9ac4-c2370a192c62",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6577b00-11ab-4c3b-945b-26b0f18575af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8121e908-3693-4c56-9748-ba04e4923151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8e4b4c-1614-41fa-8291-5efe3c44c39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb3b40b0-5fb5-4326-8077-7582e1aaa447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f8e1f1-bb59-4d03-a7ef-a16043986295",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e519a0-9739-4e78-9ca7-be84542dde1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a957487-48ab-4270-8568-0c340b724bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce4b787-f7b6-44b9-a731-e9027cf557f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1010beb-97ca-410c-9389-6cd33638b829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f428c20-f23c-43b6-a553-f9791c872bba",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38f62e8-332f-46ac-acb0-96f3735be12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d487a07-f938-4191-9095-9de25317d3f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9638dad1-d5d2-4bf1-bdb8-8552a7466077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3ef6f9b-09d4-47fe-81ff-3411626a8d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89591ac-4893-4fab-954b-a0c32ccf5c76",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fab93c5-0b74-4158-8919-2e68379271f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd81b81a-5059-4c2d-b444-1077181cb435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027a7ba0-15ad-4f56-9bea-5ad77e37f4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb3c7236-7e51-4c61-890a-d37d83dd29d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940ffbd1-3558-45fd-965c-ab18bbedcab0",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4cdfc9-456c-4225-adc1-e055237227b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "839c3e2a-77a7-4547-9167-3e50056aa45b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8fa267-2829-4c80-b58c-456b08de48ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55ea5dc2-b40b-4bce-954e-3585979baa82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8139f6-ee99-43a9-8276-9928a5e5f515",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c58a0ae-5eb3-4994-8faa-dafd9d669966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e9f9c74-7768-4cc5-8ff3-9ee919cf1409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "665b8e3d-bbd4-4914-8b59-685dfbe4b337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c805ad49-ef2b-4b8e-bcdb-33752385efc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dfa1a20-cc0e-4df3-9397-10718527aba6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18295531-a842-4533-8dd0-970c732bf344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00062abc-6275-4553-b98b-3d91b05d3a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d513769-7e6e-45e8-b005-99c0d14996ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2570261c-6f8e-49d0-bf05-bab3af38bae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878d2255-973a-46bf-8cd0-a573d77d28ec",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba09a89-f930-4f7d-92b6-2cbf98fb18ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f601b7-7af2-480e-93e3-dbe260a920a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae96497-5314-49e5-a15f-52421413a4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afc8754d-4718-43eb-ba89-4cc67d392eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7fb744-73ed-45dd-baf7-e046fd4779fd",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef42e4d-5345-47bd-84a9-90dc2d2021f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0654b7a2-be1e-4c86-a15a-f530b2f95756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c5114a-6a2f-4177-8611-7037cac98ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c97c935c-b863-4baa-9785-1184f344f575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5644506f-5feb-485b-8fe9-4d63e2ae3a2b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a32485b-34df-4c5a-848a-4eb71b265496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d2f0bdf-61fa-4817-b6dc-88d6ad0b74aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89bf10c-ab37-497a-be0c-3e0a8d681b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51311702-97ea-4b98-bdc5-984f835ebf11"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5c9b5f78-bcb8-4b6a-b482-e641fc406801",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c81e09e3-085e-49eb-a985-ed882b4f62ea",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9ebef8-dd65-4c42-be3e-5fb447f7a0a0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "69e7c095-dc9d-42a8-aeb5-dfc3b2d27b93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3111cf8-74ce-44fa-9719-80e570fd7b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5fbc199e-16af-492f-aa31-7d9f5d774b52"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4777e2ae-82c6-4598-bd50-5bc7631a4127",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6813aa51-6fef-4726-a86c-9996c7f5b6fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bb718ea-f65e-4f0f-b8f2-3dd3c3f1729d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2c880be-ddb8-4f64-9185-ad3c0960837e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16d5e91c-52d8-4c84-be94-428ded66dcf0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eb8b4dda-0341-40b4-a163-ac2f888ea9f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "100b96af-79a1-4b6b-963b-c263a40bc53b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "245cc513-badc-447b-a43b-9203985fd70c"
            }
          }
        ]
      },
      {
        "id": "15bc59c4-40c2-413a-a43d-f7b15cf40a97",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9bed832e-47e4-41d7-8529-a3f03b4d32f2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e7bc926-24c4-4243-b546-3020a104f9cf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "28ab8ae0-e174-45b5-a4cf-15bd448af97f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddcc6514-a25d-4f5e-9451-550cd4691239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea2a8614-6cf4-40f2-abb6-f7efef14c49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090e8ac3-93dd-4b35-91fc-3bc0665f42b9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02fca06e-5b82-4581-9ce2-d201cb178789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf1addfb-c067-4720-a855-4e02068bce3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05dcf12-b62b-429f-9ef0-2fc112c22ab2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c3b63a-e9e6-4131-ac1c-349266f9d203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "869ab2f7-829f-4062-a0fd-c1f9e3897419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a755f00-a995-4527-9267-485a5a8c3830",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d812717-8f44-43ad-9fc6-56e79abd006f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9fc9879-6a9e-4239-a8ec-f79f49b0a80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb721af-c392-47ff-9a53-5a86db996b02",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d132eca-8123-4d9e-89cc-a7caf5c2ac2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d3c631c-42be-40ae-843d-e910fa0afccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a356d9-1d1c-4774-8101-b39649d0277f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8225322b-6eb7-4a9c-861f-a5e280cd58c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0862451d-963a-46b0-8ced-a030dd91e866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabc707f-3447-4a62-a652-96af4b34537a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d9c18a-d57c-48c6-8456-0c98e379a1b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b0648c1-71f0-432a-a3c8-394b3facbb9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea66336-5623-4e14-aa20-edd77542be07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a2a7237-a0d2-4771-9ebe-42c731773171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3418b2-66c3-4b97-9149-44f8e56be2df",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b121c29-088b-47d2-bcf2-503ad4852abc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aaa2c0b-2cb8-4481-a38e-032754dea8a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ab0d93-c1d1-451d-be9f-89b0a31181cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c97a00a-43aa-473d-9f33-3c535a81b36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b354847d-168f-4f52-971c-bc02f0e7a230",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed20f43-f0d1-42ab-a398-7ae2cae03a6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "707a5dec-479e-4687-badb-7bd7fd1ce601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26352220-3e88-46c6-aedf-e3bbd9fe340a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fbd8cf6-dbb2-4463-bc2c-5bc009d4d253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9885492a-1000-48db-80be-bb87247bbc55",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058bdcc5-49cd-4637-b4d6-77014bc2e203",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c87c24b-959f-4c93-810b-7ddf77dfbe42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de7b499-f554-4e1d-af0a-3bd7909886c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f8b520-3c20-40df-b5e5-31c217f46512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23318e4-5a26-4f5e-8b1a-1a8d3b9dd8cd",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8da540-c7a8-47b8-bf5a-e826850275f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce8d352-ebc8-4125-96ee-20f9a9d1e031"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f7a76c-096d-4c61-ac6c-0179028da447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70e4cf2d-4edb-43f3-9cf9-b36dbf2b265a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5227ee32-75e1-4eb6-9865-43237e857a8c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed89de2-d19f-4f1d-a447-d718094f0039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65193581-61be-42d0-a058-2088e3482f86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2029672b-bc26-4d8b-b80a-ee99b48e5061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee6a688b-3e18-4cab-b244-b69b9d6be335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119b21b1-3c88-41f8-bd5f-a29192f78406",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719dc012-2905-4ef3-88a4-8440346ab80a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a14a2975-6b19-45a8-8417-9e4f5209e21d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85acffbc-aa7a-4b59-bf36-3d6358909f74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "053711e0-3b90-4b2a-8b12-69aabecc0f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd57ffc-5124-44fb-8ce4-0fe32c4f96be",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e52fd7-c345-4f21-85e8-f0994a055cdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ab48bab-a8a3-46cf-b7ab-b99fa766f372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a3b34e-07c2-4b0a-ad80-9acdabb735e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58632d59-2ab4-4fb9-a14b-d6296991f857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfa8577-fec0-457c-8637-14aff57aa7bf",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7816be54-bacb-4c88-858a-0661ab1c8707",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2eb8bf0-a6ca-426e-9c76-d7ee3e99a6c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ae4285-83e1-444d-9f02-ddbc6eaf371f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f9f8a32-8730-4e37-9b68-44269c23b198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a712727-9d30-4b12-bbf5-e5fe21c57ce3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beba9457-2688-4c9a-960a-8499e9deb09b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f366e23-e40c-44a6-a51f-486acd455454"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4b022c-c95a-4cc9-b062-1a1a8c0e71af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4671cf0e-e489-49dc-99dd-1791d36d66ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ae3b64-e6d0-470f-9f1f-3efcd3073fc5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8e030f-11a5-4149-8e5b-5d633bd98810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54b762c-3ee2-4777-a9b8-298fdb789d04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51543319-34a0-4379-b4a9-13cd875242ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "823ecd58-6fee-42db-b0d9-b13afe919a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d80e39-5856-4e7c-9dbc-139f3fd27fe6",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7362eccf-2469-48fc-9a64-7fdc65617edf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0adc5d0f-8531-4c74-8447-6f01460240eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee623f3a-948f-4e16-abd8-f8f6bf6820a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c30a0d8f-cd06-4879-b9b0-9ccb0eccafb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d01858-5f4d-4f1a-81a5-da7a9afe7da4",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5b8582-e143-435e-a9d9-8afe3cbc87d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c141f145-1b6a-41f1-b6b8-d8746630258a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b8e505-6354-4800-b1ef-2231a62d23fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91f91760-48c9-4ff5-8838-096deeb80993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45427ec0-89b3-4a2b-b081-ecf289806dd6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4823dcf-3700-447d-b22f-81b00776512c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f971d2ee-0bc9-4d5c-a2c3-c20e5f0bdb46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd3760c-cd75-4c21-8214-4e7c4c4a8556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "420b00cd-f44f-4636-8022-8d00c68bf74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d76bcf5-7c65-4f7a-9761-b96848bc4046",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69f99dd-ea1a-43f1-9852-bf2293c3ce6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "280bb6f5-bdee-4754-8bc2-570ce638861b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2221812-42ab-4902-9873-2869fb8b155b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a9d44a0-6086-46df-8bb5-a1ff9f2e1538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a10b7c-878f-4fe8-b16d-9098e2c9629d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b516dbd-e2bd-40ae-b100-e8f440c0312a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee7b923-7a5d-47af-a793-15e02848a009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a63a95-01af-4183-8801-42129685f932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c83e4c94-2895-491c-afce-5efb18a4f450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0056e2-fabe-4920-b359-fbb0a26461e9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7753330-9b46-4526-8def-e7e734e849b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa17d3c0-a568-4f06-ab16-0b71e191f8d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88cc166d-f6bf-4116-a1d7-7ea41e61dd59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "715b5524-e9f4-43be-bf6b-86ffbfc157f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53fc31a3-d66b-4d63-8612-6b0e958c0a08",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782df609-c2c8-483c-831e-09ae3dab2e37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b66e67a-c730-472f-b0d3-c987b5e47844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9338368-5526-45c8-bf39-fa40ba07c230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6570b09c-f307-4a5f-824f-1f8e4cb9dc2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417c1dd5-61c6-44a8-bc18-f6372c3fbe02",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217f5d44-e9ae-4f7d-aab4-c6de83c938ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b51bd124-149b-4e88-b665-e19a7fe08dde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f786d6-1753-4c6e-8050-b4b3496b616b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c4622dc-cc19-4ad9-bff7-b87b8e6a3239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45afe1e4-e505-49b6-915e-171bf1eda0f0",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290a3c91-eeca-4a7d-a6ec-f029e5f531bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1e9778d-d23f-4d4d-942a-82bbe2dd38e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31bf777-631c-4663-81ba-1480c3b86ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2d7804a-5729-4c08-af99-fdc1ca3d06ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d740759-35f2-47bf-a9e6-17c621016340",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5d8c2c-c2ed-468c-8f61-cfa7e6bcd50d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50cbfc4b-0cfc-416f-8b57-2f2b1cad32c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "942e0b9d-fa5f-4cf9-a33c-a8895532b71a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb7619a-8294-4590-9519-3a461ce58dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1bfeca1-cf64-47aa-99c2-67cda7247980",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a70c58-695c-47c5-a269-71018da0ef40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac8c01d-4232-4a92-8ff4-af13ab28e6fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56ac688-2669-4f35-aeda-b21fd096fb52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ad3f225-e9d0-4ce0-919b-f01a584c3964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8668f9-d771-4bd3-b87a-c77b555dca6d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e04872d-c941-4827-bc02-f58dac8245ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2754204d-5109-4b1f-bafb-a605db30854f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dee0a9d-9564-4c65-bae2-f4ac9cf505c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b07981bf-cb2c-44f5-8a91-98c2322b73f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68fb026-9ce8-4361-b924-b87b5585cdb2",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d807bb-6cc9-41a8-bab7-1a3170188ea6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09ff6d43-324a-4c77-8140-1b5cd1c0579a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ec926a-b0a4-42f2-be4e-1f8fac3389cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82386398-69af-449e-8b25-7b260b2b1cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d1ee7a-3b7d-4c27-880d-6d4275f6ead9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356d779c-b5a9-4b9e-b284-ff8be5b9b352",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70d7de70-5972-4c38-921e-41b1ef84fabb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d65e16-a8c9-4f8a-be93-df3c590f943d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d56b6283-1895-4d1d-9221-5f7dce5cfbbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0642d6-fd4a-469e-8056-1f50d985e688",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da27db9-7773-43c0-b8a6-fa0d0d24c56f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a06f1eaf-3e39-419e-9e7b-a6051b3c1609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5afc6c-04ab-4bdb-bdb0-870afd047964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42d2a3dc-4692-423e-9f21-a611853fc4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7528dafd-b716-4118-adcd-26e42327ea8a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed041e07-4089-4b08-8c46-248eec2ef2e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07e772b2-f0b0-4f91-84d4-9c92522e1dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "487c7bb4-4416-4ebe-b307-4059268cdf77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e2b8e2-4b67-404d-93c8-be7be86dd845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e608c1-d919-4018-b47d-627957459009",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0d6d4f-007b-48a7-b28b-0fdece5bbebf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75927f75-74d2-464d-9b8f-2d6c7021b34e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2718d6-b53e-46fa-87c2-7ee63056b1ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1afeb99-325d-4a38-9646-c4b1e34ab4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb81f03-2389-48ff-b109-50522a157d9e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa327c4-a97e-4011-a938-f22f6b551232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24b75262-5124-4153-95d5-ca91bd007409"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c28011-f15d-4122-b45c-54ec54cc8d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a6bc68-75b4-44ca-9e63-569ccddc04f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a699315-d785-469c-946d-b846d44e8a27",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824ea13f-7401-47fa-9f92-753657869052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a223eb41-12f6-4bd3-9024-2c68155670d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c716ad-2567-41e2-8db0-23488ce3814c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef73abf7-b9f8-45a0-a9ff-3504905dd671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b03d465-2c6b-4191-9b32-0a66a3fca050",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791f50f4-025e-4864-84ab-0cf84a69d750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3631efa-4af0-4536-8e35-8d8df78f376f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da429ba6-63fe-4752-8b84-3e726adc66ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c09832-ff71-4603-b4f4-2440fc971da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f624c060-0c91-43e7-a3c0-7747633279da",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7424fd49-67ef-4658-9fe2-54338c1df338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "886f87ef-9f94-41b9-836d-1ba10f18f172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b2f21e-629e-4c8f-9e6d-4a3f88391a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c54b60a9-c1f0-47d3-a21b-2ea4c7fe1006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250f8c14-5be3-4f3f-b475-1f2b75825eb4",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ccbbd7-0f95-4b52-be4d-c0554478e847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a2745c-129e-4d0f-887d-cb96cfe09f67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5073f490-41e7-4114-bbbd-c98f134ad7f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee0b8a21-f109-4d0f-85d2-c27e7ab72136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4a7d91-4043-4e78-984b-20e68b58f68a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d3ab3d-64f5-44bc-9c33-a12de53c0216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0456444-0e80-4b06-a32a-f42b902e55a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd13c29-fc54-44e7-9813-a731e134f41c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c66e220d-3627-4700-badf-f87108306cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51dca6d1-468a-4c3c-a7c2-e0c5402cd25b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5cdca4-1818-4e3f-ab16-a2b9ae03d387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90aeb001-81ea-4785-871a-829eb1fb1dd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bfecade-e098-4123-aec3-62c8b01c3750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68364c60-0c8d-44cc-9559-e934f7c3d371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d52d301-ce43-4538-927d-e42134c47a7a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ead1904-6867-4796-8d09-2171bd310001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c3ed025-2cd4-4ae0-8bf0-e83d73222097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8efdb163-5aee-4ba7-859b-ac5794ecb7c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fc19e02-830c-4255-bf26-316291f5a2d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "819ac2f4-7bf7-4a47-9963-0b78b88d6f1c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d03407-d4a8-4d06-a84c-03b53f4837a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "629edd2e-bd38-4c86-b178-d87b9196e20f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74be6d33-54b8-4920-b1d5-81e6f7f64684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6868f6e9-dc3a-4d34-8cf1-ac5885666b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ded0ef-8861-4161-b6af-218a20aa777b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0289de-fd88-4f81-aa2f-d7675f469753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7063ae4d-01ab-4f16-9981-efb0884c2a0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "150e6ed0-4ff1-45ab-a02f-8cee55b6812b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc8a2b75-b78e-4feb-b4fa-5253a33a9e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823dc804-21ae-4ac6-b250-2cee47a90ad9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2bbac9-4313-418f-889c-e07b1692a2f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4047a10f-1731-4cf8-bcb5-177de7f1dd13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13625ade-18e5-4ce6-aaf9-156716567c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ecde9df-e711-4970-be65-496f28fe026a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc37e1a-c74d-4706-ba09-6b9f07b15bf4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f653291d-670f-412e-a27f-233924ce71b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf74884d-f04b-4e24-8374-97122299b67c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5098eb18-5150-46ba-8b7a-1c5eb6d9679e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "377c4d9c-469a-4e8e-a9e7-7d6b5a9fea3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64567cd2-5372-463e-8a85-f1b8947664f7",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370f99a0-d3bc-439a-946b-4f522cb3dbfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b45019-b382-465c-8cb6-1825e40fd405"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3fb7a6-420e-47fd-ae22-e90db351a4fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc8bd2cd-8f9d-4445-99f7-1deccd5035fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad2e37c-be1d-43f5-80ca-6e7ade1f6a0d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7064df0f-dbac-4402-9438-8d80a924b5ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d148acd9-2650-4cfc-9dbc-77f0cd4a2df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60bd7825-ae33-4394-b5bf-ca12c24ec66c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a054487-51a0-4b6b-a5d6-e5c4f1759785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2252031-2b16-4a9a-a659-da9a4344e076",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f656fdf-6075-4855-8951-d0a2784d9fd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c618cfa-149d-4785-a019-ae9b65762391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f69d49-d7cc-4527-8027-fb44d5a3a048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95dcdf26-8b43-4e12-80aa-bc0ab44a144c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b94c3b-22f9-4e32-ae5c-19a4f372cb35",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab3d73b-9fdd-4e60-bd30-195859d7459d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e14fcd26-216e-4a5f-b4c4-10adc5447f43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb3bb66-f3a3-4d65-93e4-41ed8bdce707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f9e9c4d-cc10-4b19-bb1d-9f51edda46dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca672c59-056f-46ff-a2bb-604c4aa9683c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6fddab-7982-4f07-a01e-98b6d32de013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a26214-9589-40ce-827f-60e7dbfbdc89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d3bffc-6d39-4e4a-bc68-8658bd92170c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "783bc235-e35f-43e2-8af5-607cce9bcd1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4c8bcf-214b-4e81-bdc7-1da507cfe9fc",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0785a14-0651-41b6-be66-9000b9bea6a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "820b34eb-66fe-4387-a4cb-a965dd3b3cc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5a369a-5ff2-4441-953f-8e25c65a7439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff526c9-fd20-4f12-a23e-981e6e4f9405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c9ddb9-252a-4deb-8ab7-f99822308035",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278d3e5d-ce2e-4356-b729-eaffb6c82773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65fdb5c1-2aa8-4b9f-813c-f4da3bd3b908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8c9668-2342-4aa3-99ba-19c78a32733c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9facf0ae-5deb-443e-8186-6e9f2b2f98ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0af3c3-1de1-48c7-8b5f-acddca208571",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec82b343-9604-4b65-b7df-baeaf4b3b387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30549e3a-3162-4d0f-b2ec-51e356e32006"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9ad8e6-851a-48da-a4d8-c3afc1f662ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32967a09-3b00-4c19-a993-5a3217ad539f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c368f860-93e9-4507-bf65-1e2ad4e3b720",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a5ca94-f850-4a26-aa36-fa39b8fe5244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac8a8ad1-0b06-4b93-8cc8-ad27896c3379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d39533-babf-4ac6-b86f-81c0bb2c0fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c298ebfb-306f-4694-956f-86cb06e6e5d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486bc664-66dc-4e8e-8729-031896be6b63",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96f2bca-ff5d-458b-b569-d88eddb712a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86bdbbb5-097d-48b7-be2f-1a30ac42c240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39595f7-c923-421a-978c-5d18d7fff6f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37fc105a-896b-4bac-a0d8-73c243e3283a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a885547c-a5c0-4ec4-9abe-0a8dfc59273b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8826b737-3558-43f9-a2ce-b0e921eb0851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e092777-d782-4724-bd7e-a9dda8d14cae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc873dd4-89b0-4246-a87b-75c2e67d4790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d505e125-26bb-43f1-835b-2604db145bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4330da47-62c0-4ca1-9536-a40cea129a83",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48b5972-0823-434e-8831-029122edd721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04a769d5-f271-4f71-bd79-bf44b2e98fc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf61dd62-fba3-446b-ba6e-7c2569b4de1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53a1debd-bb20-435c-98f6-c6a40f7e417e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa0a23a-3713-4b0e-b41e-19c8ff9c810f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8fb8549-48d1-465e-bb55-3af664967289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c758e8e3-1ed1-48ad-b41c-2d2b6739f294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9b672e-cc77-4e9c-849f-34d133e27e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd95b26-84a4-4ced-bdf8-de61db9f0644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c843c4b-09af-4459-b679-bc71337c4436",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147a8d77-077a-453c-aee6-9c37b7d1c713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a4f11a-3415-42bd-a555-f199d2151b23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a64d2a6-96e2-4f21-8ccf-f1bdbaa1a899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b135458b-72c1-4b58-907b-82498fbf9cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba6bf67-a45b-43f7-bc89-18566115ec11",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdcdb9d6-b9a1-4c05-ba5e-bae9a7c3d4ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffd5d427-6b13-4e79-8b4e-00fc2c052e02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b89d7e-eb4b-4a45-8fea-2d5bf0a4ad2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed097864-b531-4a08-b305-281e28948c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aceaf94a-72f2-400a-b732-2d992be53e5b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a737663-5c26-4be7-84ba-a0eed05bd7a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c21e007e-db56-4d45-8a07-b5a4b5e86112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5423f13c-647f-4be6-bd4e-3efe851a0201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd6e0c3b-c81d-4d5d-8a6a-8fdd526475fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b2bc6b-fc05-4178-8931-718da1853ed9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c6ae55-debf-4926-9654-9a0b8696be29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a21b9732-1ec6-4925-95d7-32f98572197e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9cadf3-329f-4895-8bd9-39d482a53cba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1734cb4-d13b-488a-8e51-0520675cb2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ca81a5-5031-4959-85fb-9ea52e3f8c50",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a43f836-dbd3-441b-87dd-c4bdd6134f5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acb54a3f-9dac-487f-9078-d2096ff50939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a746ba7-d328-4fac-a460-83160285eab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a659ee-e11d-479c-be3a-061be771f61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a7b6d5-7d58-4e21-a283-e1ad51e5a94c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f1b55b-7d3b-4236-939f-84bc8a005a94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89887029-7515-48f8-a295-b3933cd58c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d459f54-a0dd-41d5-ad5d-a17ed29a7947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d220ee1f-7d02-4e95-b41c-7373330540ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5202ce2-0c85-45e8-b93a-563812f469f1",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556c228f-63cd-4c2c-ae60-7ff644df2998",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "752afd96-00f3-4d9a-89be-7197f2316c49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3d618a-a317-470f-84ff-4b56f5862bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c31c44f-740c-4498-879d-4d9c5c33bf3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37c652c-c8a9-430c-a7da-1dab2b8bc0a5",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c51055-4e89-4bc4-b3e0-253c361b6735",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "023accdd-8086-478d-97e3-53fa81526e6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e179f9b2-cccd-4391-87e3-7573aa8544ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a05a0cb2-869c-44e1-a3ea-36a6656723a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9aff94-b03c-4d01-8c1e-9603b1cc1242",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f316d29f-4fe2-4a99-9b1d-43d2b7637888",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40a36ebc-f595-4411-80ae-ee0bee57622a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f851457-3d52-4821-8fe7-ae6e20a2a0e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de107759-059d-4d4f-bc05-9f0573a78c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0f2ffc-680e-44f9-8d1a-2205f409d3cb",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d6c076-0100-4428-97bc-e75743ec6d6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57fc5e7c-4833-4db9-8556-ba53087f3289"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "551ff516-b772-4612-ae21-14a37df013ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08f042ee-fbc1-49a0-813f-0f3448e895ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f0a338-1db9-48e3-8a3c-9c8a1b82c078",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa5440f-c2d2-4821-823c-94ef1e00fe23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d6fe489-a813-43ab-bb15-f7ac8be31473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3b8e8c-c5ac-4907-8981-71706211fa9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "426375cf-f652-443a-8e8e-afa12dddf59a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d916804-c9a5-4c57-b0c3-61f0df53024c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb838c9-6954-4320-b3d6-ea76e84e90ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66b74968-6a2c-4edf-a2a7-54423a65361c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6aeb6a1-3783-46a8-9c1f-095fe6de68d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6588978c-bba7-424e-a754-2c8370da62bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cda5c6a-7131-46d9-97df-b7612ed0d203",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56fed9e-fd64-48e5-b89d-f18ccd040c10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "052ce1db-8cc4-4408-93c4-4e2263b86990"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aabe5a80-1cda-4f23-b228-893eafeb2c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b335a4b8-b089-4f01-ab04-6d94cf4c1cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72956ddf-2e31-4336-992f-1e8b290859d3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec29f11d-fa30-4a0b-91ac-4f977840ad5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "215cdeca-e695-486f-93fb-423b176ed576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd80496-7468-4c0d-a09f-652aa81605bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a629fa-63b1-4a95-b32c-7559264132e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2159a7d-cb66-49e5-9479-8cfd02e2cac1",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d92e3a-d7e5-4876-8887-8393f83a6958",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6881492-a810-42a3-8cd4-735b5b031d69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "406a7130-e13b-4e58-8966-cf86be9204bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9840a02-3e37-4292-abd5-ade72dadcd36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb94a2f-cd88-4a06-8fb9-6a3f75d878d6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683e8a46-caeb-47ec-9d71-028fbdef574e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e03cbf49-f30c-4efd-9632-a4d14d6feedb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b263cdb6-ea5c-40ff-b4a3-3bc7c5269f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d035a321-2eea-40a5-be50-63613305f990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52474443-5701-4701-8635-72ff1db6e7d4",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da1d7113-3f03-496f-bd45-75f3fbde10fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0150d04b-6274-435d-bf9b-912e51dad297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfea3f6e-9893-48eb-b2ac-8e867ac5995f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dcd00d0-88cb-484f-a993-ba61d0532efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a286a2b-36eb-4e2a-9cf1-af9dc69bf877",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b254e9-47f9-404b-86dd-63aa109ef725",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdf401a4-6966-467f-8591-e715833b6506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f66ca5-9e4d-48e0-8f35-b41a692cce14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8758db-cc45-4650-8319-c5a31caf8bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159e730d-1f9d-4476-a4f1-f78c441df790",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c22852-8a05-47aa-ac03-55e96e3f2479",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7f8e1bf-0bef-419c-80d2-7d84786f2a2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1f15e0-46a1-44b5-9025-b609502876ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13bafae4-2d62-4452-92ea-c606c51199ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ae7dc7-5c09-460a-8717-b3aef1d5f1db",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3c9f0c-28ab-48c2-892f-bbe5640e0dc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ca85cd9-6676-46c6-9e00-7d23cf945b52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5b9018-ddd4-4156-8522-2056460d1047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc43135-af09-420e-8e14-e8615bd8692b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8aa278-5f68-492e-89f2-cca3cdc2753b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39ca6e0-ec84-47fb-9e57-16e6fde9c8f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "506609fe-19a5-4237-b897-b87f5d612402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56617eb2-9a61-47de-afb4-2372e811ea61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccaa0f7e-b0bb-4b7c-9083-1aabd8ce2735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9415eb5-51c5-4d16-877a-2b8f47a37e95",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62328c7a-4a4f-44c8-bfce-83afab5446ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c8ca288-aa9a-4ced-998f-96f95d0b64d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf02b852-c4da-4286-9612-74737f9ad839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ef722b-7d29-4156-a6a5-b06b785c8705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acfe4f31-8196-4c7e-b834-ee7a8e7e13b8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84019487-1624-40ff-aa90-54cf32290ea7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bad2081-2cb0-46b8-aefa-480121ad25c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a9725f-84e6-4374-afc2-e4d6a6a571c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e838536-9b6a-47ac-8334-7b2c4a623f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad214e4-b60c-4edd-9e52-33d6e602d06c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25433d6a-2b13-41da-bd82-d287afa9d9e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d08ae16d-62c6-4c95-a243-4373b52fc2fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75143a7-642e-4586-a54b-709650293cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "032524a4-6f18-4cd3-892d-720ad9b4f048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d67de3-80ee-4a7d-8fd8-431fd403fc1c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dfb42b1-67d2-4380-8143-5e98192f98fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46429a7e-bc55-4288-be5b-044ea397790e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a37547-d873-4c54-8180-9d66461bd2a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e998c4a8-542b-447c-97d1-729235232b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4537c84-f3b5-4442-a8cb-49dce81a2623",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1474d0cd-c2c7-4dae-ba02-e7d42578fa3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "391cb953-d622-4079-818c-1319641a3f62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "761c165d-0ce6-410c-a962-ec8e8f134a9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b0f7b0-dfee-481b-b901-04d96a8d9ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617bd3fb-aa34-4431-a7f0-d84d1b121fdc",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6206ec9-7bc9-4c4e-8ed9-ee84bff77570",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f96f9870-eb0f-4b5d-bd52-211c7a861a83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a543920-eb9a-4f9e-b9ea-fbce4c6afe61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed8ab4f1-3d4c-47c9-a72a-3b38175b6619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a3a01c-12fa-4ebd-845e-29952653a1ea",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63b1b43-b297-4fa8-b051-6e250f7bcf3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33f706a8-26f2-4693-9e0d-5c6fb741957e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99dad7f-e3d1-4baa-89f6-a05e77e3d1e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23889b7d-a72d-4f2e-a771-6459ca9a2c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571ca501-6098-4bf2-996b-92fa79aa2be0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39c3d27-afc8-4399-a0d3-e4078c54d2fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4e20d8c-221c-41a5-8f77-bd3f24fa9aa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded8349a-2ae5-4568-8b44-cd2445ea3715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c77948d-960f-4937-8d92-1f9d2fa0e375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8a12f5-55ea-46b6-abd5-6eff6f2b2a15",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07cf15bb-cae5-48f0-a224-b6b7d27df519",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "152d3b2a-8cae-4218-a3b1-a424bb95a1bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb3fee2-82c1-4c73-b467-55175edffa5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa702bf-025e-4a8c-8f9d-e2762ea6575e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3dcee31-684c-41ba-8ed3-44769ed16274",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ddf54b-8a9f-43b0-8da7-75fcb5096ba1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d21bd430-ec12-42cb-94c0-4b1209ce54d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a94e48-4fbc-419c-b241-8ab8a27b31f2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c763dde2-d6da-4083-be6f-8fcbee610518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56fd5c9-db81-4e01-9e7b-0dcbfe0bcb89",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48acf3f1-b152-47cf-9b5f-1e5997e0c8fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99f93022-2c3a-4a88-a1d3-04a1a1919b59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd47958-6183-4747-af6a-b3b186f3c773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d85152-3fc0-4641-98c6-ba1b944c3bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d95ba5-036b-4c88-ad87-7310847cb7f7",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04eedcc8-2366-4e98-b2b4-f704c63b9cb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25abc6f2-bb82-42ea-b78c-116b92477a28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac43ed12-ce77-43bf-9c1d-8bbf230c1707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4a19d11-6d16-41bb-b2f1-3fa51b1e5b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85497d14-7345-496a-86d5-8e201922f8df",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1fc645-2193-4fe6-afe9-2ae857456b5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae441992-4900-41f2-ae0f-9d2821cd3a3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0254d936-8e73-4364-bb36-b8105bac7d3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d507a881-60af-49a4-8a44-bfed82e5e8b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6a4809-8d9b-449b-945a-cec995c9bc87",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccdad30f-e3d3-43c0-8acf-3f4360812fc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf7b5aa4-e308-41ee-bba8-b43b4bdc6ea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d85cda9-13fb-47b8-9483-4b4f25af5260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d3e67cf-537d-4403-b9fe-bf33628fe44a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a31796-12e8-4042-882c-cd37b26b70e4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94202e3-ddcf-4bb6-9604-ea6cef1b70eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b62dcce-8fae-42a0-be85-a83bcb489543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32041291-8b9b-4936-8ea1-c835c81e7716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2bdb0df-ab5e-4288-b1e4-42907e7f2f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d866e3d-0ce1-46dd-ab13-f9e61bb7dd0f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c360bd60-76e1-41ff-8ce6-416b3da606b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "751824fb-3369-4f9d-be76-dd0df68380a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fedba13-bcb7-4675-8fd4-43fa4e045fbc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd4f48a4-f387-4981-87fb-6ac9c74d1ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c01757-9c77-4215-85f2-01b48ebf773b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc58d04a-3aef-4920-89e7-1dd41de48ccc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4b196ef-687e-4d33-bf88-548302e27a2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8f4701-118a-4f9a-9a97-a715f13a494f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7693a49a-976b-4f85-8580-397480f4f15f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5bf58415-7b31-46c7-b6ec-482f8b435a57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02449f9b-5b02-439a-8803-26ffd5d701f2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebc4d532-3bab-49f3-aeff-796399652fbc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6500c1e8-8734-4967-8fab-f8302a68fec8"
                    }
                  }
                ]
              },
              {
                "id": "37611578-9726-4ce9-9e87-329a65ae9cf7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5049fce1-a7e2-424e-aeac-786620490069",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30a1d18-bb50-447f-9bed-c742672808ea",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "de2a6704-44f7-4b6d-a11e-44f9f3e79d5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9bb12b4-b3da-4f8b-9e92-b1ca42e6943d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b3fb541-f1cf-4da0-8135-c7475f0eafa7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a52fae8d-789a-4c21-a882-981cf3ec972d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "233ecb9a-c3fb-486e-9bbe-17bf5d9fcdfe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be16ed29-e459-43ef-9b8f-f55a747e537e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e885c77-4a46-4da0-85d8-4e8bc73def4a"
                    }
                  }
                ]
              },
              {
                "id": "8de6d472-9251-493f-bc33-f1968251d212",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "bce8062e-1aa8-4e53-b07d-eef5e057b6b3",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68811ab0-f1cc-4976-add0-6992036f7f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f16d202b-8c8c-4008-994a-078ed1d39702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddad5af0-d5d6-4530-8b2b-2727bed77796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5530aa49-ec3b-42be-a31e-3d7f8ed5c943"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9c0dfa00-1eb0-47cf-9d7d-e85a80eafbfa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cfb8db9a-8e80-4ad0-981d-e18395c765fd",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea581926-edba-4ad0-99ae-7f06841f5f0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "91d5f0f5-b9c3-47b0-b4e0-dabe8a1633b8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b278d9e7-cd7c-4933-96da-c156c5c8b1bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43d8bfcf-79b1-456f-88d0-866e3ba7c0a7"
                    }
                  }
                ]
              },
              {
                "id": "3e9634ca-6eca-4902-8715-93a731ecc0db",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4bc028db-f8b8-4ad7-96ff-940e8b3d25fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8d826837-ac41-434b-8cc1-e9576e3bb4be"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3aafe8ed-74fb-4db2-aeb2-7f835ec81307",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57ecc64f-6b55-4be7-9153-cf669ffc9f12"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "590b2491-88f8-494b-aa3c-d0ad775328ff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "102badaa-78ad-4f1c-be85-a5c2f7816f8a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed1b5b72-10db-4ebb-a9a9-60fcff06450f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b75cc2d-aa55-4065-80f0-70e806d0b20a"
            }
          }
        ]
      },
      {
        "id": "b79463ba-de26-45d4-afa2-4694f369ef86",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "865b73f0-38eb-46af-9e35-802ebb93388d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a2a850af-ad4e-4f9f-9b07-629ed1ec9108",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "068cb465-fe9e-4d36-befb-0d20494eebdf",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211cafc0-c8d0-42ed-80b2-e88d4737e2be",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e1a18f03-ef51-496d-b59f-e7cd466ba6ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f255438-def6-4b9b-bbe6-2f3d04cc4582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf02cd4a-cdbd-43e4-ac46-f5bb1dc4f2fd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "460b5d4f-8edb-45d3-b165-40d633c3c787",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a897acd0-ec1e-4b12-bfc2-461eb2d3b7d4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e4e7381-fe91-4329-83ca-a628fffb6ecf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b538fc8-841c-4e1f-8c38-c03c44aeee61"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ecfff6b8-c701-45a4-8bc4-139ce3b2e0e6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d2b61eb1-2a0a-4840-9cbf-a6ca44a1a26b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c31e81a9-aca6-4e90-a3e6-e4364f608546",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f18782b2-b51a-4ef7-ab24-e37995b2be9b"
            }
          }
        ]
      },
      {
        "id": "6a7a5d50-18cb-433d-ad0a-1d839a680665",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "aaf45882-9df6-401f-a0d9-913a2c76d446",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e1cc8a54-772d-405a-bc78-1693affbe2df",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "19b11b4e-068f-476d-b390-e5495a58c734",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5996ed4e-054a-4e52-8094-eff23f3f8cf2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab90a0d6-1942-4d1e-aa3b-c35290fef9ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf34b46-a865-4a10-b07b-57893cb54697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae833a5e-ffa5-4270-b61b-c62e9db7bcd3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3023300c-e577-46dc-b302-9570cd989b91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e48f70d6-820f-4483-89bd-8c7c2b8ed304"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7924cc4-cadf-44bf-89bd-198b80a9fa40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf86ea0a-afd5-43cb-a279-3938fc28cdb8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a5aa9e4-c9ea-4bcc-a578-5949c744af95",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "acf7703b-9f72-41c2-bfc3-7380d248ae6b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b6a2493-c6bc-4b75-9127-2eea0828725c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5dc6e180-ee50-45a2-a19f-108f90d6efc4"
            }
          }
        ]
      },
      {
        "id": "d58d588b-37bd-48a5-8b48-b5e0933a285b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a400177f-7f07-499b-8c86-1e7c9ab7a998",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6e1e979f-6a1b-42ef-b9ea-c356cbbd43b5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "278ad9bb-444e-4ec3-ad4c-7c948b2b464a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e1d5e7-3f3a-46b4-8f8d-91e684bcba63",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a0fad87-571f-4566-bc33-de406e7ac79d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee81b557-34e0-486a-9c03-00fcf7990510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "504c7710-e33a-4a9e-af20-2d24392bba38"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d14f36b3-0b8a-410c-925a-b7f08d82148a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48d2b2fa-2593-46a6-9e39-45516fc0f0b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a10a20db-e828-4e83-9781-4824f65a7cd9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb25972a-6739-4a96-9c4f-dc855533bbf3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f5519f2-05a9-4fa6-8690-a269c74f356b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "313f8244-8651-404b-b2f3-ad36cb154f5a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b0739ee3-d687-4b2f-94b0-181e3f63957a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "322399a5-dd6d-4750-ab65-f794d7060161"
            }
          }
        ]
      },
      {
        "id": "296ad069-6360-4a4a-b9d2-a53efd0110d5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "71521143-db73-4f72-baa6-aa3ff4078cf6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e1f79b7-3b8e-4b72-81b2-3a22f6516abd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "10ea7a50-6306-4c66-8554-cba9e8afdded",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96149dc2-da59-40f8-aadd-6e522cb149fb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe0fc6bc-9461-44a9-91f7-8735d74d8d0a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 35.54929577464787,
      "responseMin": 13,
      "responseMax": 262,
      "responseSd": 21.813414100395526,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1688085873118,
      "completed": 1688085897455
    },
    "executions": [
      {
        "id": "79497b94-e08c-4497-8ecf-283fffb9fcc0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ee77ecb5-e7ec-4a07-acca-3c9bbf58857b",
          "httpRequestId": "876e53bf-eccb-4269-ba34-9adeea2c3fef"
        },
        "item": {
          "id": "79497b94-e08c-4497-8ecf-283fffb9fcc0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3ec9fcac-1288-4f0c-974b-5cd67d08f562",
          "status": "OK",
          "code": 200,
          "responseTime": 96,
          "responseSize": 0
        }
      },
      {
        "id": "7655e269-e41b-4ad6-8568-531b68f75bcd",
        "cursor": {
          "ref": "1c176978-9905-4871-9b99-4d9edfd105c0",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "07c40652-02ea-4a35-bcf2-f9f07a005bcd"
        },
        "item": {
          "id": "7655e269-e41b-4ad6-8568-531b68f75bcd",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "95a26d55-b60d-4a3d-930d-0533013d8a1f",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "6dda80b1-d283-4a68-9bb2-8f9b0a0919be",
        "cursor": {
          "ref": "98f2e28c-ca76-406c-a017-5daf0705a086",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ce2bd300-7f53-4a9c-8822-5a6dd94870c5"
        },
        "item": {
          "id": "6dda80b1-d283-4a68-9bb2-8f9b0a0919be",
          "name": "did_json"
        },
        "response": {
          "id": "2ab0f4a2-96b6-45c3-8ecf-36d4e4a723b3",
          "status": "OK",
          "code": 200,
          "responseTime": 225,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81bb7ed8-cc25-41ac-931c-3c0079cad4d4",
        "cursor": {
          "ref": "6ee2d86a-25b6-49db-9f1e-319d041fad3b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c4aee478-7fba-4117-843a-c848976f101e"
        },
        "item": {
          "id": "81bb7ed8-cc25-41ac-931c-3c0079cad4d4",
          "name": "did:invalid"
        },
        "response": {
          "id": "d421df3e-245c-4c95-93aa-2a39b07d7247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81bb7ed8-cc25-41ac-931c-3c0079cad4d4",
        "cursor": {
          "ref": "6ee2d86a-25b6-49db-9f1e-319d041fad3b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c4aee478-7fba-4117-843a-c848976f101e"
        },
        "item": {
          "id": "81bb7ed8-cc25-41ac-931c-3c0079cad4d4",
          "name": "did:invalid"
        },
        "response": {
          "id": "d421df3e-245c-4c95-93aa-2a39b07d7247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a24450d-e7d7-4038-9856-9edcf253dc09",
        "cursor": {
          "ref": "a526b58c-dae6-4646-bb15-5b3386ab533d",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e907fcdc-b9e4-483f-8e68-9f9ff45b1748"
        },
        "item": {
          "id": "2a24450d-e7d7-4038-9856-9edcf253dc09",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "63202a1c-f9da-4e9a-a6fa-440184f14e70",
          "status": "Not Found",
          "code": 404,
          "responseTime": 80,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db8572c-7bae-4be0-8fa2-c06d35cd9dd3",
        "cursor": {
          "ref": "9445796f-85fa-4f1a-8e30-ec5adb58844c",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fc2c5f66-6761-4865-a24a-193210cfd07c"
        },
        "item": {
          "id": "5db8572c-7bae-4be0-8fa2-c06d35cd9dd3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "db0c43c0-b5a5-459d-8a83-e141d73ce38f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ec0950-b72a-4bfb-bc68-296647d9bc57",
        "cursor": {
          "ref": "41e984da-25a6-4c05-818b-99a64f9d5e5b",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "45bbbef6-2385-4a77-8f1a-9c0ff53c832e"
        },
        "item": {
          "id": "62ec0950-b72a-4bfb-bc68-296647d9bc57",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "61310228-69aa-4ce1-92b1-dca3bad9674e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05b8d42-4368-4b31-80dc-b7ba1ece5d1a",
        "cursor": {
          "ref": "fe3a4a1e-4d3c-4729-acd5-47dfd1139b31",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "52cc49f0-7ccb-4f3c-af8e-6980be9af2da"
        },
        "item": {
          "id": "a05b8d42-4368-4b31-80dc-b7ba1ece5d1a",
          "name": "identifiers"
        },
        "response": {
          "id": "3167b19f-f6a2-48a1-ae00-df7218c1ef8f",
          "status": "OK",
          "code": 200,
          "responseTime": 96,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd912730-1fa9-4e17-9739-e393a537ec0b",
        "cursor": {
          "ref": "acdb4e2b-b0d0-4dc1-8867-7f50bebe7870",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "29b3af27-5bcd-4729-ab95-93284e4b29a9"
        },
        "item": {
          "id": "dd912730-1fa9-4e17-9739-e393a537ec0b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "832b72fb-be52-4f7e-9693-f4597dd84549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca56e8b1-45b8-40ee-ab7e-dad4e6016d1c",
        "cursor": {
          "ref": "fe617129-dd3e-4b4c-9d24-db9e2673c0e7",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "58ebb39d-e82e-4aca-9cb2-d00c3a1a481d"
        },
        "item": {
          "id": "ca56e8b1-45b8-40ee-ab7e-dad4e6016d1c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a74cf8e6-4aa9-4795-9a28-df5751ab42cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a32756-6dea-436c-a379-5c6f1f74f333",
        "cursor": {
          "ref": "22c63642-6913-42b2-8e21-662d3d8bc3f0",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8c8a1745-64c6-438a-a6f8-e7899345d51c"
        },
        "item": {
          "id": "b4a32756-6dea-436c-a379-5c6f1f74f333",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "195ec0f8-9bbe-43e6-9b49-862ce089dbe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77aec10-5a65-4982-82af-445ddc52a9a5",
        "cursor": {
          "ref": "8e7984b4-522e-4c63-ba30-770556d19e99",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ccea8899-cd88-428c-9f68-ac8d855c6346"
        },
        "item": {
          "id": "c77aec10-5a65-4982-82af-445ddc52a9a5",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f2369fa6-f15c-4388-bf8f-571218a55a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0d8cb7-8496-4c8e-bed3-37dcfd74c202",
        "cursor": {
          "ref": "e2a13a78-a34e-4980-8232-84306b69ee80",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "cb57569d-ad62-4b17-9d2f-3cd13c506d72"
        },
        "item": {
          "id": "2e0d8cb7-8496-4c8e-bed3-37dcfd74c202",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "fc9a7f55-d672-4de5-b4af-7901f02b900d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d808b922-f092-435b-a6ef-4482e429456b",
        "cursor": {
          "ref": "6cce4910-27dc-4c22-9475-fdb5833e23a1",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bb3e03ea-eabd-4849-9174-457d76802c25"
        },
        "item": {
          "id": "d808b922-f092-435b-a6ef-4482e429456b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3494712e-dba4-4362-87a3-a8a517ce8ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b516f2-5449-44f0-a3a8-66bfff1dfe57",
        "cursor": {
          "ref": "d43cb37a-a642-44f0-9d55-c22e22ff0cf7",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ace67582-cd42-4c5e-9d47-e4672fe5b284"
        },
        "item": {
          "id": "01b516f2-5449-44f0-a3a8-66bfff1dfe57",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c0aea03c-81e1-48b3-8027-7373ddffc671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa17cbd3-8f15-4053-8ba3-942f0b8125d1",
        "cursor": {
          "ref": "be74b028-4974-45ec-8cb0-4c7ca4799807",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8aacb3bd-6282-473a-a2c5-c88f79c92a4f"
        },
        "item": {
          "id": "fa17cbd3-8f15-4053-8ba3-942f0b8125d1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "55d1ded0-471c-4912-95cc-71a45a22684f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe31058-ecbe-4078-8d45-c3d9e4a66117",
        "cursor": {
          "ref": "06b279f0-5570-4218-8647-6aa4a7c887c6",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "91e8a476-81ba-43ff-805e-a7443ec0442d"
        },
        "item": {
          "id": "bfe31058-ecbe-4078-8d45-c3d9e4a66117",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "70cfdb8a-ea12-4ce0-b9a7-2e4d83a13312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081429fa-0297-40d4-923a-dc5b545c5e91",
        "cursor": {
          "ref": "4e7cd4c0-2062-459b-9f43-dc046186fbab",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "98c54d58-4644-464f-80c2-fa5ca26fbf25"
        },
        "item": {
          "id": "081429fa-0297-40d4-923a-dc5b545c5e91",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "beabf4d7-37ff-4576-966a-8ddafe131829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0534291-2d03-49d5-a8c1-0ee27fc13d77",
        "cursor": {
          "ref": "8ba1c67b-e7b8-4ac5-a479-412f3b6a7874",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5ed5354e-3222-4bfa-927e-fca7e2857bd4"
        },
        "item": {
          "id": "d0534291-2d03-49d5-a8c1-0ee27fc13d77",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4d00a64e-19ed-4f57-8354-fe56303a5dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21f0565-8bf8-411b-9e99-238cd335c458",
        "cursor": {
          "ref": "13477348-09b5-4aff-afec-f770d62472ab",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ff440dcf-81b8-404a-952b-aef84ed16e46"
        },
        "item": {
          "id": "c21f0565-8bf8-411b-9e99-238cd335c458",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7738a73e-62ce-4288-b65f-f2c7db9d366f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989e6b68-5eb1-422a-96bc-e7709e80ff32",
        "cursor": {
          "ref": "db813a37-570a-4073-8a42-b72e5f1e047e",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4e6407b5-c757-41dc-89c0-dc3ef17bf816"
        },
        "item": {
          "id": "989e6b68-5eb1-422a-96bc-e7709e80ff32",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "df0071f5-9d1b-44c4-a76d-e98b770c7196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858faad8-f26b-4dcb-a566-679dd7adac94",
        "cursor": {
          "ref": "72f1b192-66ef-4ab2-a85f-dadb141df247",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e60827d3-661c-4080-997d-7e14aeec0e11"
        },
        "item": {
          "id": "858faad8-f26b-4dcb-a566-679dd7adac94",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4c07f9a2-49ef-47ce-a092-f918af0c3ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbf6a9e-5db6-4bdb-81d1-d028e51e34c8",
        "cursor": {
          "ref": "2ae2dead-5aca-4d4a-9629-44d75a212394",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1de4acb3-6591-48bd-8c6b-6e96b2823a35"
        },
        "item": {
          "id": "5cbf6a9e-5db6-4bdb-81d1-d028e51e34c8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4126bb21-c8df-4b6f-84a4-a7777a2ae1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02aecb57-e7ba-40d0-8efd-fb87fe23ec40",
        "cursor": {
          "ref": "3a8374ee-c656-4f89-bc91-c8472231d40f",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "60c5086a-dd28-4981-aae8-12f88a106b9e"
        },
        "item": {
          "id": "02aecb57-e7ba-40d0-8efd-fb87fe23ec40",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "07532464-4340-416c-8661-a29edcc6d92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d109ff3-1ebf-4efa-9675-b011b3a9d8da",
        "cursor": {
          "ref": "2e7cf3eb-cbbc-47b2-95cc-17d2e1eb0887",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "73219206-bc3f-41e3-ae8d-ebfbf7c2aab9"
        },
        "item": {
          "id": "4d109ff3-1ebf-4efa-9675-b011b3a9d8da",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f43181f8-adb7-4e6c-9eae-953ea45bad03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413da136-0b2f-44ef-be88-0e99065d472d",
        "cursor": {
          "ref": "1642d4fc-78df-4522-a62e-9c7586a95f8c",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f8a47c33-1948-4582-a995-b3e19f97a6c1"
        },
        "item": {
          "id": "413da136-0b2f-44ef-be88-0e99065d472d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "78ee2b76-73dd-4c70-8652-6b88406c052a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9b07eb-fa30-4fab-a0f6-7f602733dd81",
        "cursor": {
          "ref": "23698f9d-4012-45dc-90b7-ef48dd791b9c",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0e4bfd08-1204-41c0-96a8-e3dda12a9dd8"
        },
        "item": {
          "id": "0e9b07eb-fa30-4fab-a0f6-7f602733dd81",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1965aa79-3d09-4f7b-841e-98495385ea96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf29885-2e37-49f5-8905-0fb8d2da52b9",
        "cursor": {
          "ref": "5456107d-6056-44e8-ac23-083d63415717",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a7dbf6ab-5ba3-4884-8ae6-133d6addd180"
        },
        "item": {
          "id": "5bf29885-2e37-49f5-8905-0fb8d2da52b9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ca22d546-0f5f-4066-a366-9d1800d47d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea65182-593c-4450-a856-4d2277458dcb",
        "cursor": {
          "ref": "54e48216-b7b5-4df7-9c03-46e70180d5f6",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "88696d3c-2cf5-48a3-9687-783be7b75785"
        },
        "item": {
          "id": "1ea65182-593c-4450-a856-4d2277458dcb",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c07a248c-1fec-421d-97c1-5d5d8c9af8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc34d3b-fca7-4d57-8974-6afec59f0159",
        "cursor": {
          "ref": "841e9ef8-bbc6-4878-8f1f-b0eb52e5fc75",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "dfd68069-c533-44bd-bd3b-0022315115d1"
        },
        "item": {
          "id": "0cc34d3b-fca7-4d57-8974-6afec59f0159",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e53a2f6a-b5eb-4153-8cf2-719e79c5ef19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ddae1d-8d9e-44ca-8fc1-55f1510f64ce",
        "cursor": {
          "ref": "c4537b3b-b2e4-462e-8c7e-e3738993dfc1",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9397636e-4319-47bb-ad5a-4ac4430f1ff0"
        },
        "item": {
          "id": "10ddae1d-8d9e-44ca-8fc1-55f1510f64ce",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "344b9750-efa8-4c43-b9d4-f52242710799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4977bac6-9255-4524-8951-9e397693df5c",
        "cursor": {
          "ref": "6806f3c1-32fc-4aed-8540-792e030a75a0",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a9037fd9-da02-45f4-9868-4d1cb18376a5"
        },
        "item": {
          "id": "4977bac6-9255-4524-8951-9e397693df5c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "175e9af0-dffb-4b55-b281-20e1fb5fc0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7070d8d4-b328-4048-9ab0-cf32d7ee6b14",
        "cursor": {
          "ref": "d06c77e5-fb31-4064-a544-07b29819716a",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4eb47f33-35d7-4ea7-9a29-7ba568f8136a"
        },
        "item": {
          "id": "7070d8d4-b328-4048-9ab0-cf32d7ee6b14",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6adc5304-c1eb-49f7-950f-4047d5793fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d665a9c-a693-4883-9a81-4ed3f31d2621",
        "cursor": {
          "ref": "98885859-b061-41e3-b46a-eb42895a311b",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "26f49457-3b0c-4140-877d-eeddd6ce7caf"
        },
        "item": {
          "id": "2d665a9c-a693-4883-9a81-4ed3f31d2621",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "25e95fa1-a1d0-4456-b60a-465e04836c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc47324-ac54-4c00-a9a7-8bbca8ea5109",
        "cursor": {
          "ref": "77a190a2-d2cb-4647-a4e2-94c1a29f0f71",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "53ccb80b-5141-4684-88c7-c848f5cb352c"
        },
        "item": {
          "id": "2fc47324-ac54-4c00-a9a7-8bbca8ea5109",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "bb613a73-e474-412f-b0f0-d88e038e253f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7df928-7558-4b23-8ed3-064cd4898b73",
        "cursor": {
          "ref": "85739e4b-22f4-438a-9399-f55064ab28d0",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6a4c0ffc-1d93-47b3-8870-5d2f757b85be"
        },
        "item": {
          "id": "1a7df928-7558-4b23-8ed3-064cd4898b73",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "29e48c99-7717-4ab3-aebd-d7b66b00820d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed08389-4958-40b5-9957-8ddfd93a3003",
        "cursor": {
          "ref": "1f7d7890-b190-4716-bfec-e4df6999cd18",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c3c8fa6d-ec38-4af2-9c2c-a539a869a4ba"
        },
        "item": {
          "id": "8ed08389-4958-40b5-9957-8ddfd93a3003",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "031fb08a-69cb-48b8-a4c2-bfee0cb509cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b32b82-489c-4c1f-b4ac-d626ca18020f",
        "cursor": {
          "ref": "731fd7c1-5e0b-4f10-a444-87abed69af13",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a0b5083b-289b-4863-9082-e05791865c49"
        },
        "item": {
          "id": "33b32b82-489c-4c1f-b4ac-d626ca18020f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e8ed19ba-e020-4b2b-8a7c-4fff66d917a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12724cb1-4928-4dd3-8820-af03e43190e1",
        "cursor": {
          "ref": "ebb73975-31ff-400e-84f6-ca1071257466",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "eb531838-5de0-4b48-a04f-654c012b76bb"
        },
        "item": {
          "id": "12724cb1-4928-4dd3-8820-af03e43190e1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "40a5a9da-f2f6-44eb-993d-4f56fcfd3ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c0f941-4b0b-460a-9b71-99cbc31f88ab",
        "cursor": {
          "ref": "d07a7686-a4ca-4f9a-854e-ec6abd4dcef8",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e42901b0-4608-41c9-b30b-ec039394249a"
        },
        "item": {
          "id": "e3c0f941-4b0b-460a-9b71-99cbc31f88ab",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "9021ad1a-cd80-4fb2-97bd-3d41b3e6de1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2086e9ae-6394-4296-bd9d-aa5c20e45156",
        "cursor": {
          "ref": "0aafff0d-921a-4681-bfac-675497703ac9",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e3d2fc2e-ec34-484e-b30f-8fa0f99e0314"
        },
        "item": {
          "id": "2086e9ae-6394-4296-bd9d-aa5c20e45156",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2f95dab1-ffda-42f3-93e9-a9347133f155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe606928-2800-49eb-a2cc-1c39cb049a2c",
        "cursor": {
          "ref": "5a1ddb74-d49f-4283-af6d-99beef477ef5",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "cc77bfd1-7993-4f42-ae9d-8646f8ec39ff"
        },
        "item": {
          "id": "fe606928-2800-49eb-a2cc-1c39cb049a2c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fb97f71f-7337-4d8a-9f36-b04ecb865f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58445e04-63b0-4020-a07e-fd5ad6a110da",
        "cursor": {
          "ref": "eb9b3b96-276f-4d27-92f8-b628bec1badd",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fb87f820-c0dd-4586-9e65-c1c89858f76c"
        },
        "item": {
          "id": "58445e04-63b0-4020-a07e-fd5ad6a110da",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "74aaf364-f395-45f3-9380-0b58627a9571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e737149-51d2-4d8d-b925-fd3bdcb89219",
        "cursor": {
          "ref": "fa23a59a-2eb0-41e5-9af2-32a105e3e156",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2cb96399-2a19-409c-a7ce-521d24a5b89e"
        },
        "item": {
          "id": "1e737149-51d2-4d8d-b925-fd3bdcb89219",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "66b35a83-3144-491e-9239-691ba683f5e8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6766ad8a-6dc7-4230-bd7e-bb51494954a1",
        "cursor": {
          "ref": "8e449bc1-13f4-4a60-9af1-6671820f7447",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "35bbba2b-009a-4a26-9589-9c22664f0e58"
        },
        "item": {
          "id": "6766ad8a-6dc7-4230-bd7e-bb51494954a1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f47958fc-4c07-4a2e-8825-07a6f17cbdca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b4e5a7-87aa-4d9c-95d4-044f67fd1738",
        "cursor": {
          "ref": "604bcb66-565d-49db-8bc4-883c6e2f47f4",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ec408a13-37e8-4b07-9c86-791a59750776"
        },
        "item": {
          "id": "48b4e5a7-87aa-4d9c-95d4-044f67fd1738",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3c9b4074-a072-412f-8a13-964c340811c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3a717e-5527-43a3-8730-e7eeffa55d54",
        "cursor": {
          "ref": "85f137b1-3f98-4611-bb56-a09d190770f0",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fbf573db-a373-4480-b89e-13a5d6a7b123"
        },
        "item": {
          "id": "6d3a717e-5527-43a3-8730-e7eeffa55d54",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6c7b6ce9-dfb8-4a32-8929-7ba0d6e20216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c94754a-6957-437c-b722-5fc62a01af5c",
        "cursor": {
          "ref": "5b1ceacd-7684-4469-afa3-ad179c365303",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "87f5b9c4-5ed8-4cb4-bd50-e35687d37917"
        },
        "item": {
          "id": "1c94754a-6957-437c-b722-5fc62a01af5c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ae73b7ba-0bd8-4f2b-9744-fd80b4114115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "167b0728-0600-49b0-8c2f-baaf8fd91b2d",
        "cursor": {
          "ref": "4f8861d6-caf8-4dba-bffa-120d6df335b6",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "24ce2274-e5c4-4e1b-8457-0923ca16db0b"
        },
        "item": {
          "id": "167b0728-0600-49b0-8c2f-baaf8fd91b2d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7b5234e3-281f-4118-80c9-d23cfc8861a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b850fe4d-8984-4abd-8938-e711ac0f75c9",
        "cursor": {
          "ref": "5cab7d4b-8f66-47e5-bc27-365ec00cb6da",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "de6c9360-ab14-4bcd-923d-4b5c49d16242"
        },
        "item": {
          "id": "b850fe4d-8984-4abd-8938-e711ac0f75c9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "362d6bed-2879-41eb-92eb-e24686e9827c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3f49f9-f3a7-456c-87b7-1fa51f39c426",
        "cursor": {
          "ref": "0f85085d-4e6a-4fac-9a16-21f3f84abe99",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1550f040-1d44-45d0-95a3-a11e9b083390"
        },
        "item": {
          "id": "4d3f49f9-f3a7-456c-87b7-1fa51f39c426",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "fe2115af-e47a-4ecf-9ca2-014ce487620a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 40,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a638815-cf0b-4019-91aa-fb2848263751",
        "cursor": {
          "ref": "18d03794-5af3-4c8f-8e91-c8e8c1c2048f",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8e039a6d-f5ac-4d50-9296-fb105ba0708d"
        },
        "item": {
          "id": "0a638815-cf0b-4019-91aa-fb2848263751",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c89c0bd6-a333-444b-8ca5-56b6d87ce357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e415de3b-f199-41d5-b9b0-582406c0cc74",
        "cursor": {
          "ref": "93d807da-1732-4ab0-84c3-27184d53617f",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "02c07860-50be-484b-8f0e-7801a0f04613"
        },
        "item": {
          "id": "e415de3b-f199-41d5-b9b0-582406c0cc74",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "efed22ee-c683-41d7-b7a2-ba1251619763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79250b5a-4e82-4965-b856-45e6cbd53ddd",
        "cursor": {
          "ref": "74e59c12-1541-4dbc-b059-0d9bf3b98ca2",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6a829a79-1ed3-4481-8a2b-b3cc2071269b"
        },
        "item": {
          "id": "79250b5a-4e82-4965-b856-45e6cbd53ddd",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0b53778d-c0c8-4843-9159-b005c99a722a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1606c2c-6ff1-4b18-bf98-a1827f174436",
        "cursor": {
          "ref": "5c05d7a8-a9ab-4f39-b781-3f9df638c592",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c07226ff-d21c-4a65-a7a3-f2cd9453fb28"
        },
        "item": {
          "id": "c1606c2c-6ff1-4b18-bf98-a1827f174436",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "145c27ba-2fbe-470f-81a7-116a9b0db63b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046dc58d-2405-4579-916e-cf6e96f22dee",
        "cursor": {
          "ref": "2e2bd844-0951-4d74-a879-71a0447a9666",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "fd609ce0-81e7-49da-847d-0693d9171a1a"
        },
        "item": {
          "id": "046dc58d-2405-4579-916e-cf6e96f22dee",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0aaf583d-53e7-4585-9a76-a07622412884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "777e7d10-71c6-45be-ab86-b90751f56ad5",
        "cursor": {
          "ref": "343aec46-1eae-42b3-b2ef-fc9df6af2c21",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2c2d199d-cf92-43a2-81b4-68e8906fb06e"
        },
        "item": {
          "id": "777e7d10-71c6-45be-ab86-b90751f56ad5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6cd578fd-5aab-4703-a4f5-aa1ab618b47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f046dca-084e-4117-9bc6-d4da89cfc877",
        "cursor": {
          "ref": "315c6732-3640-48c2-802e-4ba82dc7b4cd",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c71b4c00-829d-48c5-9947-0b077eaa17e1"
        },
        "item": {
          "id": "2f046dca-084e-4117-9bc6-d4da89cfc877",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8921b6c1-d90e-4aff-aed6-48fab873bfde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86665dab-24b4-49ff-a047-4b7a8c5b4743",
        "cursor": {
          "ref": "c963a202-73da-4295-91a9-1b60eafb0efe",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7be4af49-8414-403c-9cdb-a9ba5e9e8c3a"
        },
        "item": {
          "id": "86665dab-24b4-49ff-a047-4b7a8c5b4743",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "554b62c5-f63b-4d1b-b45e-f0e18e17149c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d2db9b-e36e-4408-a8f4-d54d9f555fc4",
        "cursor": {
          "ref": "13e11276-5ddd-4d6c-bfc0-4dc98e746fa3",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b7415dc0-0786-4746-97d3-084fff12332f"
        },
        "item": {
          "id": "23d2db9b-e36e-4408-a8f4-d54d9f555fc4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d55c0188-3f4b-4342-938c-93142f8437a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfca5ac-3211-4d17-ac3f-033644267542",
        "cursor": {
          "ref": "e76995c4-6b0e-4bab-be78-89ab93cb83b1",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "26059e1a-8b9c-4a85-be09-353a937de8b3"
        },
        "item": {
          "id": "bbfca5ac-3211-4d17-ac3f-033644267542",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e8d53f51-651b-45d2-ae53-fb0ccd322745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c66319-c65e-48c7-8d56-cf14e3ea08c1",
        "cursor": {
          "ref": "52dd0923-7e6b-425e-a3fb-0e72c0f00704",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f42f21a5-bacd-4bee-9bb8-808727d95e53"
        },
        "item": {
          "id": "35c66319-c65e-48c7-8d56-cf14e3ea08c1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "525a87d8-1521-432c-ad98-224030c365d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0b4190-d2c2-44ae-8ebf-66a1531daa0e",
        "cursor": {
          "ref": "5e7a28c8-9eb8-42de-b071-1ed401f906cd",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c8909d0b-1d1f-4217-9eda-3f54b98e8bcf"
        },
        "item": {
          "id": "2c0b4190-d2c2-44ae-8ebf-66a1531daa0e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "329f9b10-e5e0-438a-8016-d72daead5a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8fd17f1-80f0-431e-9871-48ab4a090831",
        "cursor": {
          "ref": "c9791041-5b15-413a-923b-fec35e72fa8b",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "05adda8a-c379-4615-9242-9a7bdeeb1b3f"
        },
        "item": {
          "id": "e8fd17f1-80f0-431e-9871-48ab4a090831",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e5f25a0c-4901-4650-b2c2-e4ab12e75842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26dd1bac-a134-4567-b27c-fae7e8286799",
        "cursor": {
          "ref": "48583067-146b-4176-b339-04f18e2ad03f",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "658fadf4-409f-41f2-aca6-99271cf6ef58"
        },
        "item": {
          "id": "26dd1bac-a134-4567-b27c-fae7e8286799",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "31595438-3dec-4305-ae2d-529a6e74e96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4694b5a8-404f-45ae-aeb6-0113ac776b8e",
        "cursor": {
          "ref": "1fd26552-2bd3-421d-a144-2af7e4158231",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1e47238d-3fec-4c61-8fef-1a4063707b51"
        },
        "item": {
          "id": "4694b5a8-404f-45ae-aeb6-0113ac776b8e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8f84cec7-b057-442f-becb-f6bb5e74f716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff5a79a-5ae6-42dd-88ca-02811254c574",
        "cursor": {
          "ref": "1a1337c4-42d3-4beb-a8b8-2645cd542ab8",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4c88a802-afe3-480c-b4a5-1316a7f39d31"
        },
        "item": {
          "id": "6ff5a79a-5ae6-42dd-88ca-02811254c574",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b84c5930-8d70-46cb-adef-4997df102a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac443c16-62f4-45cc-85e9-6beb5702427a",
        "cursor": {
          "ref": "78f1682b-10ef-4d74-ac4b-4baad5ae732e",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3aa63bc6-8261-4207-8470-f71e1d6be8e8"
        },
        "item": {
          "id": "ac443c16-62f4-45cc-85e9-6beb5702427a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d96e7754-eae5-472e-9880-cc7fd465cfe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ace0083-69a0-46b5-8492-e8cd02dc738e",
        "cursor": {
          "ref": "1079df44-bdc2-4465-93d2-c7e9c7e9936b",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "fcc3e2f1-c04e-4655-ba8d-0a79c2a64098"
        },
        "item": {
          "id": "1ace0083-69a0-46b5-8492-e8cd02dc738e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6eb3a023-f5dd-48a9-9d2a-6e99d9464253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf1745e-e2d2-45d1-913f-9491b78392b4",
        "cursor": {
          "ref": "4d5dbe8b-f617-4c0e-bdc5-7191a180c351",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1e8e5f1a-31b1-44dd-8d0f-d83b4cca7cbb"
        },
        "item": {
          "id": "edf1745e-e2d2-45d1-913f-9491b78392b4",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "416dd3f7-8539-494f-a73e-be9ae46b3491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1d916c-71e9-4093-8e7d-3bdad89f200c",
        "cursor": {
          "ref": "6cfa1fd1-8a5a-45e0-8264-26ce70a518be",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a42dc53f-e7f4-4b5a-97a7-791195572d0d"
        },
        "item": {
          "id": "0d1d916c-71e9-4093-8e7d-3bdad89f200c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "dc5f05d8-e862-472c-8591-bdfd92a4e675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84855876-191c-45a4-9b96-732bf823382f",
        "cursor": {
          "ref": "9a0ec1ab-1da9-483e-b516-92958575fc9b",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "96a09b32-cf52-43d8-bc84-fc96aebb8f3e"
        },
        "item": {
          "id": "84855876-191c-45a4-9b96-732bf823382f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1879416c-aa52-4ed1-a595-07be490c1293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5221fac-2775-4c50-9451-3acf79cb60b4",
        "cursor": {
          "ref": "72d0933c-c35e-4f1e-bade-4ebbd25909fa",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ff91c3e3-e921-4fc2-83d0-a555d779e228"
        },
        "item": {
          "id": "e5221fac-2775-4c50-9451-3acf79cb60b4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "989314ca-f174-459c-8cab-cd5f00d22a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5ea781-6fd8-4ae0-9503-165a20e40cd9",
        "cursor": {
          "ref": "123a7f2b-0a3f-4f4b-a81e-38c62601fcbf",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f47e520c-16b2-4c45-bcee-6098d0dc3d16"
        },
        "item": {
          "id": "0a5ea781-6fd8-4ae0-9503-165a20e40cd9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8064d89a-2ed6-428b-9fe0-614c99995b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f76e550-54bc-43bb-be83-02bd94943b86",
        "cursor": {
          "ref": "9671df9f-0fbd-416b-a490-c4afb23e28fd",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c6a4ec97-e827-4233-b4c4-60f247392571"
        },
        "item": {
          "id": "3f76e550-54bc-43bb-be83-02bd94943b86",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b7e22f2f-6704-4670-9365-fc266c41132c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55173640-f48b-4e2d-b58d-c03975b85dad",
        "cursor": {
          "ref": "4c0126b3-144f-4cd1-9f97-dc48a3acb708",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "898f8caa-ddc5-4688-8a1a-06a0dcf2be46"
        },
        "item": {
          "id": "55173640-f48b-4e2d-b58d-c03975b85dad",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a6d26409-f58c-47d5-b3a7-bc0bb440ec1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4483c4eb-76da-4c41-a98b-45987ac0d1f3",
        "cursor": {
          "ref": "70469b9a-c21a-4ccc-b102-3868cc8913c9",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "41729d43-36b9-4634-b06e-82ea0c0ed054"
        },
        "item": {
          "id": "4483c4eb-76da-4c41-a98b-45987ac0d1f3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "011ec6d8-72fa-4c09-bdc7-f01c754e1c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58a14f4-a3ae-4b46-bbcc-2f0202d43f3a",
        "cursor": {
          "ref": "b12f1b9b-d72c-4002-9864-6b1b867a4b1f",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ada6db9f-2ce4-4dde-a42e-3e53eca9bec0"
        },
        "item": {
          "id": "d58a14f4-a3ae-4b46-bbcc-2f0202d43f3a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3e92492c-d27c-4ad7-94b7-c2740c417610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d390820-9257-46de-8d8c-83e0731baa33",
        "cursor": {
          "ref": "d71d6f97-d12b-4a09-b2bf-9ae2cac138e7",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6a8bcf89-e5ab-4304-ab66-9a696da6843a"
        },
        "item": {
          "id": "1d390820-9257-46de-8d8c-83e0731baa33",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "178ce475-3529-474b-bfb0-37780464892a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b035c393-20c5-4d7f-9b58-3d82d6872727",
        "cursor": {
          "ref": "1401daa6-0668-4e51-aee5-30993f17a313",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "57274e8f-fc9c-4a74-ba89-975ccc60f096"
        },
        "item": {
          "id": "b035c393-20c5-4d7f-9b58-3d82d6872727",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "4e1f77e8-ea30-424f-be55-601f015f94d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f91faa7-d70f-4a57-a2f5-8e7fc0147ce2",
        "cursor": {
          "ref": "e139fed8-3dde-4631-848d-baea546c6137",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "18c596f8-0160-4803-af00-1d6cb1a9269a"
        },
        "item": {
          "id": "4f91faa7-d70f-4a57-a2f5-8e7fc0147ce2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9fcf6663-a46f-4275-af0a-1ee5aa03ebf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad68157-9c1a-4e6f-a4d7-d263d419c8ee",
        "cursor": {
          "ref": "4dcd1b46-0da9-4809-8aa7-4628fcb27bdd",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "77951d9f-eb70-49e5-a5ea-4f9465ba5b65"
        },
        "item": {
          "id": "1ad68157-9c1a-4e6f-a4d7-d263d419c8ee",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "60b1d344-ff15-478a-ad01-a31c10c140f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726707ca-2a23-4820-b537-afc14a1ee204",
        "cursor": {
          "ref": "3d50fed4-8983-4dd9-b128-a3cce7d6f24a",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6e1631a8-c160-4c46-931a-f2e9a937538d"
        },
        "item": {
          "id": "726707ca-2a23-4820-b537-afc14a1ee204",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "44badce1-d4c4-477c-a2e3-e24a5e753c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7d269d-ed4a-4af7-b062-fc7e37cb68a5",
        "cursor": {
          "ref": "f67e31b6-b1fb-4e5d-924c-e7a17e365051",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "fb88d9a1-7311-4122-ac26-bfb474f8f3e3"
        },
        "item": {
          "id": "4e7d269d-ed4a-4af7-b062-fc7e37cb68a5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a372cf8f-4953-4914-a86f-08a351d633bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2b90b8-e751-4a5f-9bee-4e98cf8ca7d4",
        "cursor": {
          "ref": "d6cd31a7-859e-42a3-9225-8ffc78fd076c",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b4585f5f-e6fc-4f11-bbc3-1c08eddc3c19"
        },
        "item": {
          "id": "4d2b90b8-e751-4a5f-9bee-4e98cf8ca7d4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b1e4841a-a8f1-457f-ab7c-f4bcddf34840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78741c8b-e659-441e-b281-832db3276025",
        "cursor": {
          "ref": "9726e310-440c-489e-934c-ba2ac0b5f3cc",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "546dab84-8557-4ad1-8031-e23c8da24b48"
        },
        "item": {
          "id": "78741c8b-e659-441e-b281-832db3276025",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a2c88904-b736-4440-b680-c8104dce965f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d697151-986a-4fe5-866c-4830a70a1ad7",
        "cursor": {
          "ref": "8a1e1131-9975-40dc-9f77-b75358d605b7",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f9a45094-8bbf-4ae9-8f0f-601e2859a4f0"
        },
        "item": {
          "id": "3d697151-986a-4fe5-866c-4830a70a1ad7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e6c6799c-3c3a-4761-afd0-5d3bf14b3ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a826b8-cbfd-40f4-9b79-9696ee691f6e",
        "cursor": {
          "ref": "3172ee50-6dc4-43b2-bc9f-fdd2fa81d682",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5b060d08-a50c-4241-8a22-db0ed9199319"
        },
        "item": {
          "id": "50a826b8-cbfd-40f4-9b79-9696ee691f6e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "24c82e56-b8f3-43d4-acb3-e2cdd9699dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7f2e3c-36a1-4ef4-a16e-3a29952b26b2",
        "cursor": {
          "ref": "6584b1b3-84c1-4c95-b626-5c007b47458b",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "278e435f-c953-4f96-8818-3561e2778854"
        },
        "item": {
          "id": "9b7f2e3c-36a1-4ef4-a16e-3a29952b26b2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b710d7dd-c725-4ef6-8724-31bc05267fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8b9ac6-389e-4567-bca6-bec62c4e2293",
        "cursor": {
          "ref": "1da6d03c-4bba-43c3-853c-7d0aab077a9f",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7e63cd41-4114-4ec0-9535-bc6fd3821265"
        },
        "item": {
          "id": "fb8b9ac6-389e-4567-bca6-bec62c4e2293",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2ac6b3ab-4740-4dcc-a34c-e0668d35b2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732de1a4-6ae4-4b73-a94d-20afccefe226",
        "cursor": {
          "ref": "92a4ee42-0047-4e8c-b6b3-97f8525bfd04",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d22d3c2b-d4aa-4d84-a106-26f87a5a424e"
        },
        "item": {
          "id": "732de1a4-6ae4-4b73-a94d-20afccefe226",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "05eda7f2-0480-4c28-9f7b-fe92c9e65253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0daa13a6-a419-4d89-9b1d-a24ff65f7188",
        "cursor": {
          "ref": "7bf04a45-a3e0-4bbe-99f8-070fff39844e",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0cb8d34f-7419-432b-a84a-13d552c6e784"
        },
        "item": {
          "id": "0daa13a6-a419-4d89-9b1d-a24ff65f7188",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ef97b480-5e9f-4c25-a2d7-88cfdc28e2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f3fcd9-8dde-429e-93fe-f7d0c7174074",
        "cursor": {
          "ref": "368603e5-738c-42b4-a605-e8f01d613bcf",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e5d820a4-4834-45f1-b2fd-ff527a901a36"
        },
        "item": {
          "id": "f7f3fcd9-8dde-429e-93fe-f7d0c7174074",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1a8fbafb-0dec-4549-a8a7-2f2d0ff1dd7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e26d18-77b3-4831-881c-210a6e77dbc3",
        "cursor": {
          "ref": "29f24c74-c4c0-4673-a471-cb5710c76333",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0bcc1a6a-6502-4461-b926-999793f805b6"
        },
        "item": {
          "id": "d8e26d18-77b3-4831-881c-210a6e77dbc3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5bf0add5-7add-4e11-a462-c63d08581ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d60aec3-c29a-48b3-baf0-d8a5d9d1c51c",
        "cursor": {
          "ref": "593b1095-b433-44fc-beca-3b1336ddd407",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1165817d-d036-4d2d-95b2-a8f7124531b2"
        },
        "item": {
          "id": "0d60aec3-c29a-48b3-baf0-d8a5d9d1c51c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a66eacbb-defe-43b2-b456-c573383eaa3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1655cca2-efbe-4090-939b-16475bd9fe21",
        "cursor": {
          "ref": "1850bc6c-d57f-435e-8113-2ab959a4e32a",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "dfb11807-676f-4f44-b949-a8bd22b7f308"
        },
        "item": {
          "id": "1655cca2-efbe-4090-939b-16475bd9fe21",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b597a40f-2f9e-40e8-8d61-3df06b3bff29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7482e76-c667-49f5-827f-8357c7aa26dd",
        "cursor": {
          "ref": "74b10e09-9a7f-4717-a9ba-9a815b8ea97d",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a4aa3b4a-a31c-418a-9749-0a7cf94f2d46"
        },
        "item": {
          "id": "a7482e76-c667-49f5-827f-8357c7aa26dd",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "dd5bbb86-2bd0-4087-9b99-c46747fff64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213c5e39-8836-464e-8d34-7ae53be80b0f",
        "cursor": {
          "ref": "8190014a-dc48-4afd-930b-69e78f245941",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0214a8bb-584b-4578-b828-b7498e620f3d"
        },
        "item": {
          "id": "213c5e39-8836-464e-8d34-7ae53be80b0f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "49460051-50ea-4cd1-b93b-b171ae301559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffaa9ca-d180-4e7b-85e3-b5ac118c0907",
        "cursor": {
          "ref": "66900558-1fb5-4461-90a3-6593446899be",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "50c423be-ce52-49e2-bf78-e22c4907b391"
        },
        "item": {
          "id": "6ffaa9ca-d180-4e7b-85e3-b5ac118c0907",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2b3b8bfb-d187-48d5-8c39-2c67e1ee64ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56537694-f3d3-4d97-a8c9-012fdb0caeff",
        "cursor": {
          "ref": "62210f3b-8592-4ab1-bc45-399f48e4c45d",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6032d6ba-2751-4411-97ba-0f8709386d39"
        },
        "item": {
          "id": "56537694-f3d3-4d97-a8c9-012fdb0caeff",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0750b20b-2f18-415b-82a6-964b1b88e3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc6fa7b-fcaa-4135-8b90-30369c043428",
        "cursor": {
          "ref": "92bd3325-d60d-474d-bf25-17e03398ea69",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c8a3516e-60b7-4439-89b9-055b72c53d07"
        },
        "item": {
          "id": "bfc6fa7b-fcaa-4135-8b90-30369c043428",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "84e6ca93-afcb-4ac3-8877-814f7709c423",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77353dc-4e76-469a-b601-d264aae3a89a",
        "cursor": {
          "ref": "ad35daf9-6d7f-478d-9591-e8e5adaeb908",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6adc53c0-f9cf-41ab-b5cb-5aa7035e4d40"
        },
        "item": {
          "id": "a77353dc-4e76-469a-b601-d264aae3a89a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "80337ef5-e820-4baf-86bc-cff4de221c6b",
          "status": "Created",
          "code": 201,
          "responseTime": 66,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d06e394-8978-44e2-9e1a-8da408c60283",
        "cursor": {
          "ref": "463c4023-2f92-4b39-89bd-5c25993f18a2",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8575995e-50f1-458f-9356-5066fd95b3d6"
        },
        "item": {
          "id": "7d06e394-8978-44e2-9e1a-8da408c60283",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c9bab762-2999-4056-b6bc-e9af9005925b",
          "status": "Created",
          "code": 201,
          "responseTime": 164,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b8c4b5-5221-4323-af97-5e9b93130483",
        "cursor": {
          "ref": "13509d38-d35e-4228-8f04-9734e1968c46",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4c57af11-330b-40e6-bcae-7fdf7d75ea7f"
        },
        "item": {
          "id": "43b8c4b5-5221-4323-af97-5e9b93130483",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d2b6e79a-942a-4015-8981-6d9ded55a263",
          "status": "Created",
          "code": 201,
          "responseTime": 72,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f0cc9e-7dd6-436e-bfe1-2f2c6ff5720f",
        "cursor": {
          "ref": "80077bf4-487e-40dd-93fb-d6add9268691",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "00061d5f-a83a-4f5d-8894-1be5e0fea2d7"
        },
        "item": {
          "id": "d3f0cc9e-7dd6-436e-bfe1-2f2c6ff5720f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5835f1e1-1df0-45c6-bfee-2f69f0fe58f2",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e1121a-ae11-4366-bf09-9b1d69c963d4",
        "cursor": {
          "ref": "e20bc15e-8d24-4e0d-965c-e2e543f22585",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ce4fcfac-0f22-411b-accc-f670b13fb0f2"
        },
        "item": {
          "id": "a3e1121a-ae11-4366-bf09-9b1d69c963d4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "612ab0e6-8d10-400c-ae61-21f5c8428f9f",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f01dadc-345c-4253-9e5b-1d3046b30d0a",
        "cursor": {
          "ref": "29a37ab8-3043-40ef-972e-8c63bc87a650",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "08133b7e-4a2c-421b-bf00-43ef3e330787"
        },
        "item": {
          "id": "9f01dadc-345c-4253-9e5b-1d3046b30d0a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ff106fce-8a6a-4193-a0e5-f040b91bc9cc",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de71b6d6-fff0-4eeb-98f6-f652b2aa12c1",
        "cursor": {
          "ref": "ab048f1e-6b6f-4923-9f8d-e5bd61aa0bf7",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c7501c01-fb2b-45f1-bdda-37b36a8ec6db"
        },
        "item": {
          "id": "de71b6d6-fff0-4eeb-98f6-f652b2aa12c1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c47ec3c4-e375-4afa-a84e-8b238da1e935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d567f2b-67e6-445c-86b5-96e91cad7ea6",
        "cursor": {
          "ref": "6010ea0d-f80a-4089-8190-6228a4c9e1bf",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1343cc8c-3f35-4d11-aa6a-c4a7b6a3ad12"
        },
        "item": {
          "id": "1d567f2b-67e6-445c-86b5-96e91cad7ea6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "37f6c4b3-abcd-4c39-ab68-7262f6f51257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f2ef9e-58b4-4ad1-9586-477c756b3068",
        "cursor": {
          "ref": "96bfa0f1-dce5-4e24-85fe-745691cab9a3",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "68e11845-804e-40a0-9c09-ed40b557a5b6"
        },
        "item": {
          "id": "63f2ef9e-58b4-4ad1-9586-477c756b3068",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "712577a7-6265-4737-ab9c-f961703ed7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d2fe38-009b-4eb7-8e22-ed6f2f582626",
        "cursor": {
          "ref": "2cab6496-87f0-4c9c-bee6-da7ba0378a1a",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "875ccda3-c7fa-4d9e-ac56-f1535d20723a"
        },
        "item": {
          "id": "33d2fe38-009b-4eb7-8e22-ed6f2f582626",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ad98e063-acec-481f-879d-0162d12a8da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f207cc-d9be-481d-90a3-c23261359a23",
        "cursor": {
          "ref": "5b598391-8171-4b29-b912-c7300d8fc701",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f57a8053-d9ec-4b6f-bd70-df9aecca7634"
        },
        "item": {
          "id": "97f207cc-d9be-481d-90a3-c23261359a23",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "82abd6e3-e582-4343-b2e5-1dbeda5c59c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133ad490-28f3-421d-89d2-cb4ed1ddea98",
        "cursor": {
          "ref": "3c37854a-517f-40a6-a172-73da560032d7",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "fa28057f-02d4-46f2-80b4-093f1cf341e2"
        },
        "item": {
          "id": "133ad490-28f3-421d-89d2-cb4ed1ddea98",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0f1e7adc-fd90-4bbe-b480-7ea76854062c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffcb693f-8bb8-465e-9dcc-6a3d3437d525",
        "cursor": {
          "ref": "caaf7b79-4c7a-48b3-8ea4-ff7b7b386bd4",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "08f5acf7-19c4-4bb6-b345-c76c9f827278"
        },
        "item": {
          "id": "ffcb693f-8bb8-465e-9dcc-6a3d3437d525",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fa651f8e-7a59-4db8-bb57-21a58493302a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1fba4a2-0abc-4017-ac98-64564447138f",
        "cursor": {
          "ref": "b758fe66-5c54-4654-8696-d734f89a58b6",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "38582c57-9050-40ab-8365-ffaae43696e5"
        },
        "item": {
          "id": "c1fba4a2-0abc-4017-ac98-64564447138f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "987a8490-3047-43fa-a8b3-e7f20a7e2218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a626771-fe49-4cba-8fbb-c8834df98ca6",
        "cursor": {
          "ref": "93ef0c50-737e-4fe8-bd80-e440bc815cbe",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "275eb4e4-2e48-45c0-8915-09d5c89a6ef9"
        },
        "item": {
          "id": "8a626771-fe49-4cba-8fbb-c8834df98ca6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6db63240-cdad-4ed7-a950-4ac3396a1eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3027fa-8fd4-47e5-b4eb-c0744ccaee36",
        "cursor": {
          "ref": "a0250178-02c2-4d36-8d23-92a0a7ad1173",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "231e50ba-ebd5-4747-aeca-f63b5973d9ec"
        },
        "item": {
          "id": "2e3027fa-8fd4-47e5-b4eb-c0744ccaee36",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b190316a-4bc3-4684-b903-3dc99cdf6fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1072f05-3593-4cbe-9fd3-5be60fa919bf",
        "cursor": {
          "ref": "37a3c890-5be7-43a6-8ab8-527524ae99af",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a65bee6e-2f45-45f0-a9a2-4f1d752daafe"
        },
        "item": {
          "id": "d1072f05-3593-4cbe-9fd3-5be60fa919bf",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5ec4e057-b6b0-4d18-a2c8-42bb99715da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d661c34-d8be-42bd-a504-7dd735585bad",
        "cursor": {
          "ref": "e5cf867a-b3fc-498e-a805-2c2d6bba2106",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "28dea098-ad8e-475e-9564-c63559faa7a5"
        },
        "item": {
          "id": "1d661c34-d8be-42bd-a504-7dd735585bad",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "acc07fbf-9024-4e76-896f-849e81e7651f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88bd31f-b62b-4a92-b971-ab6874d3a5bc",
        "cursor": {
          "ref": "bc459118-c584-485a-bd95-67bce878c7cb",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d5b44283-e321-4954-b898-7e8e3ebe3794"
        },
        "item": {
          "id": "c88bd31f-b62b-4a92-b971-ab6874d3a5bc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "579437f5-6737-41fb-ae80-d9bc6b7a597a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ae7d12-47c4-48ad-b50f-cad10bfade1a",
        "cursor": {
          "ref": "8bdd8da2-ef08-4bcb-8f7a-cad69a3b5019",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c58dc927-2866-4b1d-888a-7ad89ac1ed56"
        },
        "item": {
          "id": "f0ae7d12-47c4-48ad-b50f-cad10bfade1a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8a88a6f1-5458-4956-aded-8b3bc8c2e8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b70024a-4e69-4fb2-bf24-d42790185a4d",
        "cursor": {
          "ref": "cc904e62-8e4d-4d70-88a1-44c4afb6bef6",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9b8e0df4-e155-4525-8007-ff70b11be780"
        },
        "item": {
          "id": "1b70024a-4e69-4fb2-bf24-d42790185a4d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d5a312df-d3f0-402c-80ea-3d6163ab4029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895ed265-869e-4db5-9990-b6695cd80584",
        "cursor": {
          "ref": "b6ed774a-b6de-43ee-90a1-4b38641ef34a",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5e1b20bc-4f31-44ef-a58d-17860a2718c4"
        },
        "item": {
          "id": "895ed265-869e-4db5-9990-b6695cd80584",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0de3f13c-6cd0-4ddb-962f-1334ab6bc81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67b9e9d-a02e-45f6-bc8e-ea161450b7e9",
        "cursor": {
          "ref": "79e011b2-90a6-44cf-8d09-15306dda4df7",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e34d5467-09c1-4b1d-aab7-c4ef5b429174"
        },
        "item": {
          "id": "c67b9e9d-a02e-45f6-bc8e-ea161450b7e9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "56753416-818e-4ee6-9654-fa5214b9cb8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd98224-281f-42b7-955e-d2fdb134791a",
        "cursor": {
          "ref": "2eca90e4-4648-4de9-9708-a3004db45e5c",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a28bc5f0-d7b7-4792-b25f-0aa8d55ef6cf"
        },
        "item": {
          "id": "2dd98224-281f-42b7-955e-d2fdb134791a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "19804a44-b4e6-4bd7-b966-a6a6502e210f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec849f55-7d7b-404b-8f09-ea21f3f9ba2e",
        "cursor": {
          "ref": "f6e0f77c-b65a-450a-a461-b34065e16ac9",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3f465997-677f-4dae-8235-5f8051f0d25b"
        },
        "item": {
          "id": "ec849f55-7d7b-404b-8f09-ea21f3f9ba2e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3e459d58-738e-47b3-8036-bba591136df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62734362-f46c-4823-b95e-130ca39d6399",
        "cursor": {
          "ref": "92a9b29a-c016-4e27-9058-a966c858c4c3",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a747425a-8473-4ae1-bf53-1734743f0fd1"
        },
        "item": {
          "id": "62734362-f46c-4823-b95e-130ca39d6399",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fd60ab01-7287-4068-8926-45e0c4c9ea1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4524fbc3-d73a-4745-a371-367bd940b88d",
        "cursor": {
          "ref": "3ca09321-8479-4c27-92aa-cb10cb950558",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f4d3ad3c-b687-4720-9a56-0ac56504658e"
        },
        "item": {
          "id": "4524fbc3-d73a-4745-a371-367bd940b88d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "733ce394-18d7-4c69-a8cd-fba5aa417b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d134518b-07e5-4df5-b880-9ba0672f4928",
        "cursor": {
          "ref": "132c9cf3-a9a6-4fab-9fb3-14cc010658ec",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b0f2dea1-21fe-4789-9039-75f94a96461b"
        },
        "item": {
          "id": "d134518b-07e5-4df5-b880-9ba0672f4928",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c34391c7-b645-4c68-accc-2bf2c8ab7973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e103b8eb-407a-4685-a30f-1b179e2701c1",
        "cursor": {
          "ref": "37357cb7-ae22-4787-8f51-c266d123987d",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8529460f-fc0f-49c9-a98d-81a4ac7282d9"
        },
        "item": {
          "id": "e103b8eb-407a-4685-a30f-1b179e2701c1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e87e13ea-55d1-4d4b-ba4d-e20b9bb318de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c740410-02ed-4fe6-ac7f-0ff51b5386e0",
        "cursor": {
          "ref": "eff870b2-eac2-458b-8d3d-446c75f75e06",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "cd5f8d4c-3410-4dd3-857c-51ebeee1920b"
        },
        "item": {
          "id": "9c740410-02ed-4fe6-ac7f-0ff51b5386e0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a7a4205d-2bbd-4fc8-b20e-355328e1891d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1aca4b-e693-40a1-9893-50b4e2d68d29",
        "cursor": {
          "ref": "62882407-77f7-4532-b763-566db31ab89d",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "03c23272-af64-4cd7-b7b6-adc1285551ff"
        },
        "item": {
          "id": "0c1aca4b-e693-40a1-9893-50b4e2d68d29",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b7c69efa-a1f1-4df8-a2c2-4b1189d83db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9a3934-19ec-4703-b0fc-5f11beeb24e1",
        "cursor": {
          "ref": "a27ef378-20ae-47f7-a94a-45860562c445",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e49d908c-cf1c-4000-992a-ca5b050327b0"
        },
        "item": {
          "id": "cc9a3934-19ec-4703-b0fc-5f11beeb24e1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "48a49984-374c-4a49-8742-2477d2d33fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc0b1b2-e2ad-410b-b9c3-c0150796619b",
        "cursor": {
          "ref": "4b79807b-ff43-4ad9-8265-bebb4f693945",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "dc3b3cbe-d8f3-47fe-84d3-4aeaca10348e"
        },
        "item": {
          "id": "4dc0b1b2-e2ad-410b-b9c3-c0150796619b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "da122a42-5bc1-49e6-a035-ecf03c50faf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af23108-e794-453f-adbd-60ef2d04a5c2",
        "cursor": {
          "ref": "e882d802-86d8-4449-8f19-45aa92d10d9e",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "90033bcb-cdc2-486b-89e6-bda1077b0370"
        },
        "item": {
          "id": "0af23108-e794-453f-adbd-60ef2d04a5c2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "65d011e0-df47-4b07-baf0-ffc9ca8c1971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7daa94-ed9b-49c6-a641-b4acafa1f89d",
        "cursor": {
          "ref": "adcd7cb0-dfbd-40c5-a7ed-2a04f184bcf9",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "99090ccf-1b9c-484b-9a47-ccf0e9b08b9b"
        },
        "item": {
          "id": "ed7daa94-ed9b-49c6-a641-b4acafa1f89d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "18a0073e-c011-42fb-b720-c2977b875b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed745c2b-b68c-4123-a5a5-d00d461a4845",
        "cursor": {
          "ref": "fe02f835-81d5-4a2f-aa79-780764c5683d",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9553ee66-45fb-491a-8f16-48b16ed0cf44"
        },
        "item": {
          "id": "ed745c2b-b68c-4123-a5a5-d00d461a4845",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a270cdfb-32e1-4823-b0b0-5c28e44db3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f35b011-f0c5-47da-91b6-05ea4fdfa315",
        "cursor": {
          "ref": "882eeaaf-5b40-4a94-9113-b57a2d736bed",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c5e1be2c-518b-47f6-8cff-9a6028611f45"
        },
        "item": {
          "id": "2f35b011-f0c5-47da-91b6-05ea4fdfa315",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5f15545b-24ba-4308-ab41-909ae7aa6031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546c7106-b741-4d99-97c3-845641a942a9",
        "cursor": {
          "ref": "88b74fbc-34bf-4973-b1ec-6124aa56e1b4",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "18cdf39b-dfaa-4aba-9433-16954c1d398e"
        },
        "item": {
          "id": "546c7106-b741-4d99-97c3-845641a942a9",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "fb49c6d7-a439-4120-8ff2-d2b40e1fc724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e619b18a-b0e7-4375-9708-baa5b02c4421",
        "cursor": {
          "ref": "ec5b4771-3262-4247-9d4b-6e0e5929de8e",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d38b7e56-be24-4f41-aab6-575bd8db38df"
        },
        "item": {
          "id": "e619b18a-b0e7-4375-9708-baa5b02c4421",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "349c8475-59a8-4538-9c53-b969c3838551",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d840d3bd-6f71-4232-9e42-c7431d0275bd",
        "cursor": {
          "ref": "fc9459cb-dd75-470d-baef-6155c523301c",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a31ae043-1c48-4c35-97e5-19930bc092b2"
        },
        "item": {
          "id": "d840d3bd-6f71-4232-9e42-c7431d0275bd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "699718f4-8d5e-447c-8c67-c3e99f2837b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e899abd-4f57-4b17-ac03-6f00eff8fa4b",
        "cursor": {
          "ref": "34521408-40cf-4111-a3d5-60996f71f12d",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "21d3dea1-e05f-482b-bc3e-bf1191d404fa"
        },
        "item": {
          "id": "4e899abd-4f57-4b17-ac03-6f00eff8fa4b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5306e9a4-3820-4706-927d-6f70bec6ac46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2228839b-5c3a-4c10-bd97-d2b21ee9b88b",
        "cursor": {
          "ref": "99c47453-2d07-4648-9daf-13f17971c46a",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "63315df6-8216-4a33-bdbc-d858173f2574"
        },
        "item": {
          "id": "2228839b-5c3a-4c10-bd97-d2b21ee9b88b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7588f1b6-5c64-4ae2-a7be-3595a463a6dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10736260-a80e-4326-8953-e453aacda74c",
        "cursor": {
          "ref": "2f593971-1ccb-4f8e-9991-fa0cd25ae456",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b99546be-b818-40ef-912b-3cac22840def"
        },
        "item": {
          "id": "10736260-a80e-4326-8953-e453aacda74c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "47554ce9-164a-4e84-b010-5852b45e929d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b228fffd-791d-4da2-89eb-633d7e81bbdd",
        "cursor": {
          "ref": "c7a76367-e9b1-4c76-944a-91de82a11a75",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "deeaa84c-9951-4320-8b72-0c4904a7bb58"
        },
        "item": {
          "id": "b228fffd-791d-4da2-89eb-633d7e81bbdd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a705a6a0-c201-4613-9dba-9bdb6caf5751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75530df9-a74f-4c2c-a15c-8004e40ad446",
        "cursor": {
          "ref": "a51b35c7-aaaf-4183-86f6-1850123a6c51",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9a5764ac-4912-44c8-af25-231a1ae398d7"
        },
        "item": {
          "id": "75530df9-a74f-4c2c-a15c-8004e40ad446",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "97df9ede-9a45-472c-9fee-87db59698883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87fa18fc-5bb1-462b-81a6-1e2881cb3d94",
        "cursor": {
          "ref": "6503a358-9508-4e24-90fd-f658e4c42336",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6104d65c-eca6-4287-9777-4b28cdc638a9"
        },
        "item": {
          "id": "87fa18fc-5bb1-462b-81a6-1e2881cb3d94",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b33df29e-8ff1-4c09-9a97-20671b346064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97234594-1e89-4acc-9636-fc5220cfbec3",
        "cursor": {
          "ref": "8f705c9a-938d-4d52-bd13-ef3437177859",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8b6bc54e-b72c-4795-9b09-900c723a4b10"
        },
        "item": {
          "id": "97234594-1e89-4acc-9636-fc5220cfbec3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "979e8330-f902-4308-a05b-bc2ec23f0d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851f206d-7693-48ef-a026-99320584d9f4",
        "cursor": {
          "ref": "713687f4-6354-455f-a047-3854b52c1794",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "14a36c4d-2453-4e38-91c8-0ed0996b7fbb"
        },
        "item": {
          "id": "851f206d-7693-48ef-a026-99320584d9f4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "61f33326-4891-45df-a05a-24bca88c9d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090605b6-c19e-4fd4-8f5d-256416a6883e",
        "cursor": {
          "ref": "a5ed8399-e90d-4dbe-9ce1-1846db2017ca",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8976b26d-4236-4e46-a464-98bc90eac784"
        },
        "item": {
          "id": "090605b6-c19e-4fd4-8f5d-256416a6883e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "80408c69-165d-4abe-a309-9124fb3ad642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2914fb5a-6432-4f6d-99f5-caf0d75dd17e",
        "cursor": {
          "ref": "59c44313-dde7-48b1-92eb-25d3d72d6051",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f282d8e6-db1b-4bcb-bb1f-fdaa450bc990"
        },
        "item": {
          "id": "2914fb5a-6432-4f6d-99f5-caf0d75dd17e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2e78af40-4231-43ff-b676-78568cd39688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fb4a99-7d49-4c37-96a6-8071aae24cbb",
        "cursor": {
          "ref": "dd1bf23d-ed9f-4bc9-baa2-b0032d78b30b",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1ffcbe7d-d845-4b8a-864d-df52a7a94298"
        },
        "item": {
          "id": "51fb4a99-7d49-4c37-96a6-8071aae24cbb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9ce0d456-a631-4f54-aa94-5d6039fbcffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58718718-c1f7-495f-b435-50974fca68ab",
        "cursor": {
          "ref": "f4b248f1-4999-4dbf-8eea-eadd49d4680e",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "85c95679-3eb2-48f0-8db1-e876a9520381"
        },
        "item": {
          "id": "58718718-c1f7-495f-b435-50974fca68ab",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "671bf3cf-ee44-4c13-956a-84c908b82c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223736b9-a8ef-4ddc-8fcd-dc446f8f4832",
        "cursor": {
          "ref": "b1fc2279-e5bb-4f0e-8ed6-8f27182bf352",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7b10821c-167d-4f3f-90b4-4c996a908b56"
        },
        "item": {
          "id": "223736b9-a8ef-4ddc-8fcd-dc446f8f4832",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "51ba02a7-d70e-4a27-bc60-992f45cc7590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2127ddec-e640-444f-8aae-67db40328a3a",
        "cursor": {
          "ref": "241cb9e3-8bfa-4a31-8993-a3e754390e5d",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "dbe8a321-3996-49ec-80f5-e6bc8c54a925"
        },
        "item": {
          "id": "2127ddec-e640-444f-8aae-67db40328a3a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "dfbb4c4e-f1b1-409e-b639-f56d32e79422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e864575c-2c3f-4223-bc0e-b71124c01b56",
        "cursor": {
          "ref": "1fa1d78d-c065-4c34-9d7f-afbaa48d18ab",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1a859b1c-21b2-4854-9a96-ac4606cbbb1a"
        },
        "item": {
          "id": "e864575c-2c3f-4223-bc0e-b71124c01b56",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "82ef5126-4f9b-4e40-965d-ffc46bfc1e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc0bbb3-6714-4dbc-b7e1-7fdc696a113e",
        "cursor": {
          "ref": "b7d32b7c-46de-4285-af08-688c5b821c14",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "95ab2f3e-f7a1-4c14-94ca-32e9567b1fa0"
        },
        "item": {
          "id": "4dc0bbb3-6714-4dbc-b7e1-7fdc696a113e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5f662d83-c94e-489f-8c31-1fd184c4e7c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07cf2989-1e80-4c64-9299-694e053eb835",
        "cursor": {
          "ref": "4e673e1b-3c25-4c14-814a-bc2191e0af7f",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d6106493-a173-4f98-ba0c-22718d9565f2"
        },
        "item": {
          "id": "07cf2989-1e80-4c64-9299-694e053eb835",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ad82b596-5fd9-417e-a97d-ed2fee066711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0869dcd8-a64a-476a-9a8a-e7aedb93cc30",
        "cursor": {
          "ref": "3bb203f0-a3d7-41c0-97d5-e4f024572890",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5be26dd9-0b69-42c5-a8e5-4dac903571c8"
        },
        "item": {
          "id": "0869dcd8-a64a-476a-9a8a-e7aedb93cc30",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "570ed72a-deb9-429b-acfb-dc8addaeb50d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ef8079-2a17-4f09-be4a-537b433409b4",
        "cursor": {
          "ref": "bf89206c-3b5a-414c-9c32-0a228700b382",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "adcfb067-f641-492d-b7ce-c00c80294ce7"
        },
        "item": {
          "id": "c2ef8079-2a17-4f09-be4a-537b433409b4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "23c2a9ed-0ba6-4363-b437-9c9a20c5c554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbe89af-4228-402a-8416-28d63867e0a9",
        "cursor": {
          "ref": "95ef65d7-a4a4-4849-b3a3-7c24449833ac",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "418b414e-9424-47ac-9cdf-a15511121c88"
        },
        "item": {
          "id": "3bbe89af-4228-402a-8416-28d63867e0a9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "072a3863-62aa-4cf9-ba49-31d04b970a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498f6fb5-3f9d-46b7-9921-b92e453b5432",
        "cursor": {
          "ref": "5c2962e6-c2cf-445a-b10d-d4aff2b811ec",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "94a34311-019c-4d9d-b62c-1f863e332cf5"
        },
        "item": {
          "id": "498f6fb5-3f9d-46b7-9921-b92e453b5432",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cf3c7562-ab67-401e-b650-829b7d701016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f86b8c9-f019-4793-bd79-142c45e93e08",
        "cursor": {
          "ref": "93012ac4-1f7b-422f-b537-91d9e05b73c5",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b117bacd-cb48-4c16-bdc4-dfd91573e0c0"
        },
        "item": {
          "id": "1f86b8c9-f019-4793-bd79-142c45e93e08",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "82ac9dee-83ac-46b7-a1bc-3fc283c287e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bebc6e9-b614-4b3e-a21c-5d770cab8fec",
        "cursor": {
          "ref": "132be104-bbee-479d-8120-8db0bb6c5bfa",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2e257a44-ffd2-480c-aabd-19e87ebb1243"
        },
        "item": {
          "id": "8bebc6e9-b614-4b3e-a21c-5d770cab8fec",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "328e7a01-a9c3-4b24-a1de-f71bdf1ed1f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d25942-75a7-41a4-bfb8-e4f343c31135",
        "cursor": {
          "ref": "dd6d71e9-0a58-4c07-860e-28d656e211e2",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f98f57d9-0d9b-47b5-8260-ad3cfa15fd99"
        },
        "item": {
          "id": "45d25942-75a7-41a4-bfb8-e4f343c31135",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7367f4e7-3391-47eb-9564-ae5101aa64f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597e1601-c821-492a-b6c8-522dd7ecea8b",
        "cursor": {
          "ref": "a2fb340a-6461-443d-8fe6-523bb46be9b7",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7bef4100-8ca4-41c1-af89-3e21f77a31d6"
        },
        "item": {
          "id": "597e1601-c821-492a-b6c8-522dd7ecea8b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cdba1d2a-3dce-4927-b8ef-5b303015940d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb379cf-d651-4a44-a3c8-edd61539bf49",
        "cursor": {
          "ref": "53d5a3ec-44c9-47e1-9ee8-814985b9badc",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5c3a44f2-1642-4c14-ac59-c25777bf2192"
        },
        "item": {
          "id": "4fb379cf-d651-4a44-a3c8-edd61539bf49",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ef7d3a08-2f41-4cf0-9595-607b842c78eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592203ae-5e72-4bcf-9ac4-c2370a192c62",
        "cursor": {
          "ref": "097b40e2-87e1-424b-9a9d-1d92d3b20bc0",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1fb57c14-ca80-45b1-974a-52e714cff8aa"
        },
        "item": {
          "id": "592203ae-5e72-4bcf-9ac4-c2370a192c62",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1349b7c4-f539-4f96-bc7f-27caa798f2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f8e1f1-bb59-4d03-a7ef-a16043986295",
        "cursor": {
          "ref": "532c8f89-1890-4442-994d-c1b6d1fdd243",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7d097693-fc7d-4d35-8339-ed2b44b4528b"
        },
        "item": {
          "id": "d7f8e1f1-bb59-4d03-a7ef-a16043986295",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "36f6c3c7-e9e2-40f1-bae4-29d068484282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f428c20-f23c-43b6-a553-f9791c872bba",
        "cursor": {
          "ref": "c3e0de2a-1bde-4c04-b556-642ba24a1de2",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0ea1a5bf-d87c-4f41-95ab-3a8f29602ea5"
        },
        "item": {
          "id": "8f428c20-f23c-43b6-a553-f9791c872bba",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e68daf5c-54d4-47e1-a09a-e96c66897a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89591ac-4893-4fab-954b-a0c32ccf5c76",
        "cursor": {
          "ref": "39853389-f67d-4150-a922-81f6cbd10e0e",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6b07c493-4126-4b8a-8eb3-6d3dc645ef80"
        },
        "item": {
          "id": "c89591ac-4893-4fab-954b-a0c32ccf5c76",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5ff13b10-0ca7-4079-8ac4-4befdb49e355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940ffbd1-3558-45fd-965c-ab18bbedcab0",
        "cursor": {
          "ref": "b1596974-5f62-4ccf-8a22-e91de49adb8f",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d60c394e-1217-40d0-acc1-690b272f975f"
        },
        "item": {
          "id": "940ffbd1-3558-45fd-965c-ab18bbedcab0",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "1290ed4d-62bd-4531-9184-47a51b4ab687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8139f6-ee99-43a9-8276-9928a5e5f515",
        "cursor": {
          "ref": "197084b0-d3e4-4b1a-b3ea-b141bed4fd8a",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5607bca0-fbef-40e4-a009-377838e9a844"
        },
        "item": {
          "id": "fa8139f6-ee99-43a9-8276-9928a5e5f515",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1bbe1fd3-578b-4b54-b9fd-85b31a715433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dfa1a20-cc0e-4df3-9397-10718527aba6",
        "cursor": {
          "ref": "ace7814b-27e3-4a8c-b4ff-3fa0ec21e39e",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "94bd04b8-481a-4b13-9afc-c018563b09d5"
        },
        "item": {
          "id": "6dfa1a20-cc0e-4df3-9397-10718527aba6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f30eb81e-6a84-410d-901b-b8d4e4486340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878d2255-973a-46bf-8cd0-a573d77d28ec",
        "cursor": {
          "ref": "a2a2f64f-32d3-4192-a743-2f41731972ba",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b36006ee-8287-44b8-b6dc-c72fef2b9a60"
        },
        "item": {
          "id": "878d2255-973a-46bf-8cd0-a573d77d28ec",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f4948998-c6b4-47ba-8380-5c69827ac59e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7fb744-73ed-45dd-baf7-e046fd4779fd",
        "cursor": {
          "ref": "929cc507-47ba-459d-a1a3-d7456f23c15f",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "38513c21-29ba-4e67-b745-eb861873dc53"
        },
        "item": {
          "id": "bb7fb744-73ed-45dd-baf7-e046fd4779fd",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4f79790a-0705-4dcd-b574-5af0a8532c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5644506f-5feb-485b-8fe9-4d63e2ae3a2b",
        "cursor": {
          "ref": "552e8171-0863-4279-ac5b-e82d83ba30c5",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3e8dbad0-9e21-4388-9c98-2a5c01c63ae7"
        },
        "item": {
          "id": "5644506f-5feb-485b-8fe9-4d63e2ae3a2b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "02d14f37-a22a-473b-976f-fd79d0b915f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81e09e3-085e-49eb-a985-ed882b4f62ea",
        "cursor": {
          "ref": "12cc10d0-1b19-4432-89a4-c46659c927ea",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "05658198-f477-4fcd-a72f-2c4a6145a860"
        },
        "item": {
          "id": "c81e09e3-085e-49eb-a985-ed882b4f62ea",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "27f951a0-f962-40e4-aad5-239126b87797",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ab8ae0-e174-45b5-a4cf-15bd448af97f",
        "cursor": {
          "ref": "1eebdef8-7e39-4e15-8e69-98c29870c9dd",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "555459e8-48e1-4f6b-91fb-33a3134ba46b"
        },
        "item": {
          "id": "28ab8ae0-e174-45b5-a4cf-15bd448af97f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4b9df032-ba00-4998-bf4f-7703507b15b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090e8ac3-93dd-4b35-91fc-3bc0665f42b9",
        "cursor": {
          "ref": "8ed8ac68-b9e5-46b6-b8b6-4cba853a571c",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2bba073b-f0f3-42d6-959a-2eb195b8294d"
        },
        "item": {
          "id": "090e8ac3-93dd-4b35-91fc-3bc0665f42b9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8c695442-a6d4-4c1b-bf0c-4107656460c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05dcf12-b62b-429f-9ef0-2fc112c22ab2",
        "cursor": {
          "ref": "614c9403-8d3e-47aa-874f-0f5306f88791",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "bc672524-a730-4c59-9557-a09375826469"
        },
        "item": {
          "id": "c05dcf12-b62b-429f-9ef0-2fc112c22ab2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "928a9d54-f142-40b6-b00d-bad584b82eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a755f00-a995-4527-9267-485a5a8c3830",
        "cursor": {
          "ref": "2be03896-9224-45b2-a25f-a80aab83031e",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "95833ba0-f56b-4316-aa7c-1c6157b340ed"
        },
        "item": {
          "id": "3a755f00-a995-4527-9267-485a5a8c3830",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8c15b997-c4c0-42f9-8009-49982f2053a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb721af-c392-47ff-9a53-5a86db996b02",
        "cursor": {
          "ref": "db84feef-718e-4bcc-8ecf-16ff6d3355a2",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "682e7c71-1dcb-46f5-8e7b-35c4c425ceac"
        },
        "item": {
          "id": "dbb721af-c392-47ff-9a53-5a86db996b02",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "acdf4491-222e-4080-90ca-51f864e3da19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a356d9-1d1c-4774-8101-b39649d0277f",
        "cursor": {
          "ref": "7c7fbff3-05cd-4c68-aa3a-0efd8b844807",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "567dda0a-cb99-497e-adbc-3fb6cd28b96c"
        },
        "item": {
          "id": "17a356d9-1d1c-4774-8101-b39649d0277f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "084ac021-9a5f-416d-abb4-e88963a870fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabc707f-3447-4a62-a652-96af4b34537a",
        "cursor": {
          "ref": "d48fe455-08af-4ed2-a5c1-211ef71e2bbb",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "473a2e2a-8e30-4647-8f39-fbed824b2cec"
        },
        "item": {
          "id": "aabc707f-3447-4a62-a652-96af4b34537a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f94db49e-9bf5-4242-a401-2698e1cfef0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3418b2-66c3-4b97-9149-44f8e56be2df",
        "cursor": {
          "ref": "1e9729d5-4f28-4e82-a46f-cae9682b2739",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "260b07aa-ce19-417e-9946-d640ed950670"
        },
        "item": {
          "id": "7a3418b2-66c3-4b97-9149-44f8e56be2df",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "117b98a2-32a3-445e-945c-df98c6683d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b354847d-168f-4f52-971c-bc02f0e7a230",
        "cursor": {
          "ref": "9eca70a2-5cb2-4f0e-ad03-be33fb74ab50",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f14bf7b4-be2c-427a-a2ae-3f957d8ae092"
        },
        "item": {
          "id": "b354847d-168f-4f52-971c-bc02f0e7a230",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8e543796-38fe-47df-868a-f40bf223fc8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9885492a-1000-48db-80be-bb87247bbc55",
        "cursor": {
          "ref": "aa39f52b-9d6d-4ee7-b207-5aef218ab0d2",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5cd402e0-9574-49a7-9636-e19db2963fde"
        },
        "item": {
          "id": "9885492a-1000-48db-80be-bb87247bbc55",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "348dfbf6-dcfe-46f1-abb8-36c4c96739c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23318e4-5a26-4f5e-8b1a-1a8d3b9dd8cd",
        "cursor": {
          "ref": "7d107f57-9877-460e-97a7-2a397cd2908e",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d141fe8d-e2b6-45cf-b4cb-9e3581735108"
        },
        "item": {
          "id": "b23318e4-5a26-4f5e-8b1a-1a8d3b9dd8cd",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "df4ef9f1-1cd3-4de3-999f-c65755de5532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5227ee32-75e1-4eb6-9865-43237e857a8c",
        "cursor": {
          "ref": "0136bfdd-5775-4c3a-8f28-b1c4b1de8cc3",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0d89eb63-c165-484f-9938-39e2720f1e0c"
        },
        "item": {
          "id": "5227ee32-75e1-4eb6-9865-43237e857a8c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e2f4b900-ac30-4fa3-878d-eb62ef11d549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119b21b1-3c88-41f8-bd5f-a29192f78406",
        "cursor": {
          "ref": "6bc0b0c0-010d-4d09-99df-3158fa1a2cd3",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8393d6bc-b2e0-4993-85eb-1bffbd6bbe74"
        },
        "item": {
          "id": "119b21b1-3c88-41f8-bd5f-a29192f78406",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e88a5dcb-ea87-4eb5-a653-de7365d92e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd57ffc-5124-44fb-8ce4-0fe32c4f96be",
        "cursor": {
          "ref": "b0167f55-151f-4bac-9500-139acb0df30a",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "24ab4e2f-95ed-4fba-a368-1ef5afc1efa9"
        },
        "item": {
          "id": "ffd57ffc-5124-44fb-8ce4-0fe32c4f96be",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "503904e1-d549-4a1a-b031-a75bb6298e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfa8577-fec0-457c-8637-14aff57aa7bf",
        "cursor": {
          "ref": "161fde59-3d3e-4d16-bc1e-dc3810db01f3",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d471a022-2b96-4f9f-917d-62cc187404bf"
        },
        "item": {
          "id": "9dfa8577-fec0-457c-8637-14aff57aa7bf",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "83145850-bf25-4297-b25d-5ec84146952f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a712727-9d30-4b12-bbf5-e5fe21c57ce3",
        "cursor": {
          "ref": "fcadc61f-0c89-45fa-9631-64450645c0a6",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fd3535ae-c641-4818-b4b9-83010d9bd94d"
        },
        "item": {
          "id": "7a712727-9d30-4b12-bbf5-e5fe21c57ce3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "58e24f1f-2d62-40fe-8b8a-733e1ee03bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ae3b64-e6d0-470f-9f1f-3efcd3073fc5",
        "cursor": {
          "ref": "848bbe2a-9971-46ce-b165-2b2599a1f5fd",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "250781e5-6de8-4362-910b-8bc2cf707709"
        },
        "item": {
          "id": "63ae3b64-e6d0-470f-9f1f-3efcd3073fc5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c1e0756b-1f21-4c23-a012-bc24bc2062ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d80e39-5856-4e7c-9dbc-139f3fd27fe6",
        "cursor": {
          "ref": "5e704475-5fb9-4594-83a7-b41cdaaa6e63",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3886b42f-eab6-4eec-ad05-d50eee6e0a2c"
        },
        "item": {
          "id": "d3d80e39-5856-4e7c-9dbc-139f3fd27fe6",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "de6b225b-e257-4b57-8b7f-cf50b565e0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d01858-5f4d-4f1a-81a5-da7a9afe7da4",
        "cursor": {
          "ref": "744f595e-d200-4776-9dfc-f592ad5ec477",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "663ede5e-b0f6-487b-bb1c-3073959aac36"
        },
        "item": {
          "id": "32d01858-5f4d-4f1a-81a5-da7a9afe7da4",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "99563ca2-e67f-4ddd-962a-2f2b81c58dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45427ec0-89b3-4a2b-b081-ecf289806dd6",
        "cursor": {
          "ref": "490f5b82-6ae9-424e-9078-e4b0f721f947",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f2f61628-cf0f-46b5-b773-7c154cb2278a"
        },
        "item": {
          "id": "45427ec0-89b3-4a2b-b081-ecf289806dd6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "eb285abf-77f7-4bff-bc48-07bdb031aa74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d76bcf5-7c65-4f7a-9761-b96848bc4046",
        "cursor": {
          "ref": "8410021f-c512-4c30-a7da-9971073f1ad4",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "cdaccaac-d273-4d3d-ac0f-b4fe6cc25d0e"
        },
        "item": {
          "id": "4d76bcf5-7c65-4f7a-9761-b96848bc4046",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "cb14a7d6-222c-4910-9744-392204142a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a10b7c-878f-4fe8-b16d-9098e2c9629d",
        "cursor": {
          "ref": "000bb26c-8241-41e1-852a-8af72d0b3c25",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b38fe141-1f65-4d26-ad3d-7b9984941912"
        },
        "item": {
          "id": "91a10b7c-878f-4fe8-b16d-9098e2c9629d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3e151c38-347b-493a-92cc-27a11952e15e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0056e2-fabe-4920-b359-fbb0a26461e9",
        "cursor": {
          "ref": "f1f086f6-3ef5-4a56-af42-c4db5e379db7",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9ce2f69f-e1de-42b2-ac32-def1afe63619"
        },
        "item": {
          "id": "fc0056e2-fabe-4920-b359-fbb0a26461e9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "eaf55c8e-9266-4882-908f-52ffb2fc231d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53fc31a3-d66b-4d63-8612-6b0e958c0a08",
        "cursor": {
          "ref": "e125c6d5-c1be-4852-84b8-43bb1444011c",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2f62c797-b255-4be7-beb4-420075db690a"
        },
        "item": {
          "id": "53fc31a3-d66b-4d63-8612-6b0e958c0a08",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "41616e98-43cd-4d93-89fa-1f57dc2d3a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417c1dd5-61c6-44a8-bc18-f6372c3fbe02",
        "cursor": {
          "ref": "2e87ab1b-369b-43f2-b208-eb4ef705fa61",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "24b63e57-0552-4c45-8333-20df6811faf7"
        },
        "item": {
          "id": "417c1dd5-61c6-44a8-bc18-f6372c3fbe02",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "639cf0e6-ba49-4379-b167-515b42f7dccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 151,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45afe1e4-e505-49b6-915e-171bf1eda0f0",
        "cursor": {
          "ref": "51de1ad5-939a-42ad-98d8-ea346d414bc9",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6e994d02-f9c5-48d1-87a5-01d42eea98df"
        },
        "item": {
          "id": "45afe1e4-e505-49b6-915e-171bf1eda0f0",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ec26cd55-4bc5-4a42-a158-46683d27e0d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d740759-35f2-47bf-a9e6-17c621016340",
        "cursor": {
          "ref": "eb6b5565-2ebc-4dd9-b5b6-6d3ca821d9dd",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9a135f8a-82c6-4e63-b045-4970087504a8"
        },
        "item": {
          "id": "8d740759-35f2-47bf-a9e6-17c621016340",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f020ff6a-eacf-4e49-b291-25c74556f4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1bfeca1-cf64-47aa-99c2-67cda7247980",
        "cursor": {
          "ref": "b2c35490-b037-456f-89f0-10b417e6c044",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f84552ec-5e59-4a95-970c-10df98208fac"
        },
        "item": {
          "id": "a1bfeca1-cf64-47aa-99c2-67cda7247980",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "20ce481f-56c8-41d8-b47a-7c892d3e068a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8668f9-d771-4bd3-b87a-c77b555dca6d",
        "cursor": {
          "ref": "6dbad53c-ceed-4d6e-be7a-9a12b744fd18",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8077f2be-3aa7-40c0-851e-abd1e1e970fb"
        },
        "item": {
          "id": "3d8668f9-d771-4bd3-b87a-c77b555dca6d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "99657dc1-4d51-4603-b243-8b05f46f18bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68fb026-9ce8-4361-b924-b87b5585cdb2",
        "cursor": {
          "ref": "650e5484-c4fd-4460-a326-a62d869a0551",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6b412227-2e22-4523-9151-388eeabfc6c0"
        },
        "item": {
          "id": "a68fb026-9ce8-4361-b924-b87b5585cdb2",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9fc76b8f-eb90-4f91-9a53-a5ddeb1c136d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d1ee7a-3b7d-4c27-880d-6d4275f6ead9",
        "cursor": {
          "ref": "789809d7-60ee-4a4d-9e55-80768dec11e8",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "dfb7152b-0feb-49c1-bfd6-6d21cd4fc717"
        },
        "item": {
          "id": "11d1ee7a-3b7d-4c27-880d-6d4275f6ead9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c1c75fb2-def8-4363-a323-6a11794f44c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0642d6-fd4a-469e-8056-1f50d985e688",
        "cursor": {
          "ref": "c4849d7e-5ebd-4354-b98b-38d3388fec2e",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "35435f05-af13-4190-9400-75a4ea37fc8b"
        },
        "item": {
          "id": "be0642d6-fd4a-469e-8056-1f50d985e688",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e873239d-356c-4176-9bf8-1e6a7f79ab0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7528dafd-b716-4118-adcd-26e42327ea8a",
        "cursor": {
          "ref": "2f4746e9-3194-4dc6-8de9-fde681352cf0",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "dbbccaaf-594d-4a0c-bc29-3ae5127610bd"
        },
        "item": {
          "id": "7528dafd-b716-4118-adcd-26e42327ea8a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b3c1c013-fc70-4946-8b95-ca79e4c69c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e608c1-d919-4018-b47d-627957459009",
        "cursor": {
          "ref": "f7ed0c82-2c8d-4c15-82d0-c7e3acb9a48a",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "114b0146-fd9f-4fb0-8e54-9b0a081dcf5a"
        },
        "item": {
          "id": "c3e608c1-d919-4018-b47d-627957459009",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d4d65076-b20a-4a29-a430-89542e35d294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb81f03-2389-48ff-b109-50522a157d9e",
        "cursor": {
          "ref": "23a3a1bc-df0a-47ad-aea0-35d7458b30dd",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9b18b044-a8fd-4c16-94da-1c02850fe3e9"
        },
        "item": {
          "id": "0eb81f03-2389-48ff-b109-50522a157d9e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "060b6e09-1266-4ea9-b739-b1b0c1dfd38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a699315-d785-469c-946d-b846d44e8a27",
        "cursor": {
          "ref": "79be8997-cab8-4994-982f-c16ebe655cbf",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "332e820a-b686-45a3-9a3f-fc5e5d99c2a0"
        },
        "item": {
          "id": "8a699315-d785-469c-946d-b846d44e8a27",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4e24201b-5880-4f73-841e-904f35e540f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b03d465-2c6b-4191-9b32-0a66a3fca050",
        "cursor": {
          "ref": "5ab85272-9d7b-4769-a201-52d6c3e1bdf8",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9f181014-3d3e-4c15-aaa2-e5977e7fcff1"
        },
        "item": {
          "id": "9b03d465-2c6b-4191-9b32-0a66a3fca050",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d9e5ecbc-2ca2-4c40-be1a-c46722ea158e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f624c060-0c91-43e7-a3c0-7747633279da",
        "cursor": {
          "ref": "c51ed8d8-5a94-4871-b2d3-cf8285adcc58",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b2a80f7d-6f80-4209-9668-453a4db8de11"
        },
        "item": {
          "id": "f624c060-0c91-43e7-a3c0-7747633279da",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0458d970-8341-443b-a1de-4380d8ab97dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250f8c14-5be3-4f3f-b475-1f2b75825eb4",
        "cursor": {
          "ref": "d21527e0-4287-4dc9-a899-ef3b2979200a",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "fb6709fd-12ad-4331-8c2b-7529cf563902"
        },
        "item": {
          "id": "250f8c14-5be3-4f3f-b475-1f2b75825eb4",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6c2ea5fa-2f6c-4f67-8170-83c423c3418c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4a7d91-4043-4e78-984b-20e68b58f68a",
        "cursor": {
          "ref": "de5f0234-1c92-4ffe-a77e-539ab59eb26d",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "aeb6b82f-5e80-4153-a2b2-b3219cf7fabb"
        },
        "item": {
          "id": "dc4a7d91-4043-4e78-984b-20e68b58f68a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "077587fa-3c50-4296-9345-4174c11be5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51dca6d1-468a-4c3c-a7c2-e0c5402cd25b",
        "cursor": {
          "ref": "b9db6d9b-9001-40ad-9c7a-430b67d18ee3",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ba581f10-40dc-40b2-bf51-3e22bf99493e"
        },
        "item": {
          "id": "51dca6d1-468a-4c3c-a7c2-e0c5402cd25b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "80b5affc-2d93-46c8-9936-970473308730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d52d301-ce43-4538-927d-e42134c47a7a",
        "cursor": {
          "ref": "fba1d825-a07c-4d28-aa17-632a325e5e4e",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "229d69cf-611f-43df-b975-99293fc46e06"
        },
        "item": {
          "id": "5d52d301-ce43-4538-927d-e42134c47a7a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c9d54a0a-4dd1-418d-ae65-0ca038897edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819ac2f4-7bf7-4a47-9963-0b78b88d6f1c",
        "cursor": {
          "ref": "a07bab0d-ea87-442f-8df0-54bef1f89837",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "357f8f5f-887c-489b-8e34-02130666744a"
        },
        "item": {
          "id": "819ac2f4-7bf7-4a47-9963-0b78b88d6f1c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4a111dfd-5958-4c9e-8de1-93c591e7475d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ded0ef-8861-4161-b6af-218a20aa777b",
        "cursor": {
          "ref": "1eb62db6-df5a-4793-9e75-402db49428b4",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "28817762-bd5d-4d28-9692-e7197ab800b0"
        },
        "item": {
          "id": "93ded0ef-8861-4161-b6af-218a20aa777b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3bde72cb-65a2-4156-8db5-7d837eddd237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823dc804-21ae-4ac6-b250-2cee47a90ad9",
        "cursor": {
          "ref": "9989d715-3e6d-4166-b5b4-ad867e26de5f",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d58c065e-bc74-42fc-9091-80b29ec2e4ff"
        },
        "item": {
          "id": "823dc804-21ae-4ac6-b250-2cee47a90ad9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "04501f57-eef1-4846-b0e2-c80f2e9d2d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc37e1a-c74d-4706-ba09-6b9f07b15bf4",
        "cursor": {
          "ref": "edc89b05-9f01-4806-bfd3-d9ee6c1df51d",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ba0f9e17-8684-492b-a4f3-8cd0b39405b8"
        },
        "item": {
          "id": "1bc37e1a-c74d-4706-ba09-6b9f07b15bf4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c7f01455-e75a-4734-965d-21c03e00ca2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64567cd2-5372-463e-8a85-f1b8947664f7",
        "cursor": {
          "ref": "25e859ae-dd3f-45f9-b1a4-eb8ec0e2eaa7",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "de4d643c-94fd-40f2-be54-1eff2433b666"
        },
        "item": {
          "id": "64567cd2-5372-463e-8a85-f1b8947664f7",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "69c0f533-4918-46a4-a624-91a0547b2ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad2e37c-be1d-43f5-80ca-6e7ade1f6a0d",
        "cursor": {
          "ref": "1c0f727b-48ff-4285-be9c-650d6cce6677",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4169ea64-699a-4ee7-8e99-a9bddb57a4dc"
        },
        "item": {
          "id": "7ad2e37c-be1d-43f5-80ca-6e7ade1f6a0d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2f8f2fe9-b188-4919-9c38-e18570c4bb7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2252031-2b16-4a9a-a659-da9a4344e076",
        "cursor": {
          "ref": "efb0d332-eea8-41bb-8ff6-b941dbd88984",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "cde134fc-f03c-4d8a-ab1a-c8216b1c09f2"
        },
        "item": {
          "id": "b2252031-2b16-4a9a-a659-da9a4344e076",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6964a4e6-3e80-4d8a-ad60-a755ff33fbeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b94c3b-22f9-4e32-ae5c-19a4f372cb35",
        "cursor": {
          "ref": "fc41e244-17b0-46ae-a9fa-daf589cfc5b4",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "43570d26-802f-41b0-b15c-e118ab0ad995"
        },
        "item": {
          "id": "e4b94c3b-22f9-4e32-ae5c-19a4f372cb35",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f387cb5d-f666-43da-a5eb-e38ddfb1fbb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca672c59-056f-46ff-a2bb-604c4aa9683c",
        "cursor": {
          "ref": "3a068aeb-7621-42f7-a564-cead7526310d",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4dfed265-fd74-4ac1-a248-822f9be08ed3"
        },
        "item": {
          "id": "ca672c59-056f-46ff-a2bb-604c4aa9683c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "34d5606e-ea05-4f5c-be27-d6afbe834d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4c8bcf-214b-4e81-bdc7-1da507cfe9fc",
        "cursor": {
          "ref": "e22d87a1-c137-4b9c-92e5-8291d783a2ac",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b210181d-eff1-4a2a-bd34-4b19a84cf3b2"
        },
        "item": {
          "id": "7b4c8bcf-214b-4e81-bdc7-1da507cfe9fc",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "81ff9049-6931-4ede-ab91-f2e842a104b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c9ddb9-252a-4deb-8ab7-f99822308035",
        "cursor": {
          "ref": "e4222a8d-60e8-4181-9f4c-1d3db3474a81",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9434985c-3fb7-433e-add1-2a7830b4fd32"
        },
        "item": {
          "id": "c4c9ddb9-252a-4deb-8ab7-f99822308035",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6f19530a-48f2-4b31-aefb-b553fafa69b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0af3c3-1de1-48c7-8b5f-acddca208571",
        "cursor": {
          "ref": "03429c5d-4743-4aa6-b4ab-85324665715f",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "07481a5d-91d3-4062-b3e4-6724c0140960"
        },
        "item": {
          "id": "8c0af3c3-1de1-48c7-8b5f-acddca208571",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5f535bae-a06c-4e16-a345-eca3b2b7b981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c368f860-93e9-4507-bf65-1e2ad4e3b720",
        "cursor": {
          "ref": "7f2beae3-97d8-4297-87be-61d1764e7390",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "96981572-3072-4a7e-be28-e24d8dae177b"
        },
        "item": {
          "id": "c368f860-93e9-4507-bf65-1e2ad4e3b720",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d0eebae6-2d54-4a1c-a660-897eb18f0b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486bc664-66dc-4e8e-8729-031896be6b63",
        "cursor": {
          "ref": "2c5b0597-f180-4d1c-b9d3-c9046d620e9d",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a0bfc521-c641-492a-bbe5-e18b57d33b06"
        },
        "item": {
          "id": "486bc664-66dc-4e8e-8729-031896be6b63",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8af578c2-1f05-4646-953d-5538a0e235cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a885547c-a5c0-4ec4-9abe-0a8dfc59273b",
        "cursor": {
          "ref": "4a8f689a-7eca-45d1-9e23-1bb78e6652b7",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "58401c44-1fcc-42b6-a99f-24c1e597eb9f"
        },
        "item": {
          "id": "a885547c-a5c0-4ec4-9abe-0a8dfc59273b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a5101764-de64-45d7-ba39-e3260ee14bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4330da47-62c0-4ca1-9536-a40cea129a83",
        "cursor": {
          "ref": "0279855f-0079-4970-8e25-82108241bcb3",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4f41b1d2-9360-4686-babc-c89ff62cfcd4"
        },
        "item": {
          "id": "4330da47-62c0-4ca1-9536-a40cea129a83",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "32a718e7-74ea-46f7-a584-e888289298cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa0a23a-3713-4b0e-b41e-19c8ff9c810f",
        "cursor": {
          "ref": "7c62f47d-de02-46b7-9170-06aa7ea891c2",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a9827c5b-7c5f-4af0-8e5e-1f78b3cbc401"
        },
        "item": {
          "id": "8fa0a23a-3713-4b0e-b41e-19c8ff9c810f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d8841159-4b99-469e-ad15-ac8029d66ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c843c4b-09af-4459-b679-bc71337c4436",
        "cursor": {
          "ref": "d11c12ca-6806-4c68-a09a-c93589675160",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "11fcaa5a-9338-4b21-9a61-c8dfe136ff21"
        },
        "item": {
          "id": "7c843c4b-09af-4459-b679-bc71337c4436",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1b8ea9b6-1575-4424-92df-273af9035d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba6bf67-a45b-43f7-bc89-18566115ec11",
        "cursor": {
          "ref": "07c14483-12fb-478c-932e-f0f6702c3c39",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c7ba15e3-4256-4435-a6a6-6a512bb64dd4"
        },
        "item": {
          "id": "bba6bf67-a45b-43f7-bc89-18566115ec11",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d875097f-62f0-4863-8d0c-ee25ba0b0ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aceaf94a-72f2-400a-b732-2d992be53e5b",
        "cursor": {
          "ref": "d3de9404-1889-41b1-9330-84ed6b26b43b",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7872a0af-2e3d-4921-b7b8-ad25857f974b"
        },
        "item": {
          "id": "aceaf94a-72f2-400a-b732-2d992be53e5b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0feb6686-f81a-41ba-a0e7-687593f9df81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b2bc6b-fc05-4178-8931-718da1853ed9",
        "cursor": {
          "ref": "313effd4-d574-4f9c-89ba-ac927293bcf9",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8f914f24-885b-44ef-9235-8356dadc04ea"
        },
        "item": {
          "id": "c5b2bc6b-fc05-4178-8931-718da1853ed9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a504a8cf-e967-4657-aa2b-1977d7bc67ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ca81a5-5031-4959-85fb-9ea52e3f8c50",
        "cursor": {
          "ref": "9c28fd8d-8f7a-49a3-8a68-dee4f3e8ba9b",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "707b9774-ac76-4ea5-bee6-68034c6642a3"
        },
        "item": {
          "id": "87ca81a5-5031-4959-85fb-9ea52e3f8c50",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d9c996c5-5e96-415f-a28e-d2dbee83d5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a7b6d5-7d58-4e21-a283-e1ad51e5a94c",
        "cursor": {
          "ref": "437b8121-99da-4931-a457-9297b9d10bcf",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8f7da7ba-dbba-4475-9821-c637da8016f5"
        },
        "item": {
          "id": "17a7b6d5-7d58-4e21-a283-e1ad51e5a94c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "098f3cf6-6aaa-424c-84e5-a61b043f2c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5202ce2-0c85-45e8-b93a-563812f469f1",
        "cursor": {
          "ref": "58b250c1-a564-4cc0-aaf2-b228ce6bcc59",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6b5cf4f6-6cf7-4a74-9cd9-2105bb947c65"
        },
        "item": {
          "id": "f5202ce2-0c85-45e8-b93a-563812f469f1",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "51728521-4161-4c04-8ccb-835e2400f1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37c652c-c8a9-430c-a7da-1dab2b8bc0a5",
        "cursor": {
          "ref": "68071d78-dd01-439d-863a-e41c531d8673",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5554127d-71db-499b-99f7-588766015bf2"
        },
        "item": {
          "id": "b37c652c-c8a9-430c-a7da-1dab2b8bc0a5",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c4fd4442-5a14-4f9e-a5f8-1d6730aee745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9aff94-b03c-4d01-8c1e-9603b1cc1242",
        "cursor": {
          "ref": "d5f5ac15-3ab9-4db8-a4f4-6f6397115646",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "41657c02-3690-41b6-abae-2ef3f1779a61"
        },
        "item": {
          "id": "1d9aff94-b03c-4d01-8c1e-9603b1cc1242",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c127f316-b9ed-44ac-bcdc-98f42dfde3ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0f2ffc-680e-44f9-8d1a-2205f409d3cb",
        "cursor": {
          "ref": "13aa02cb-7414-4e5e-9524-b023c15b157f",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "eee855ea-eb68-48a3-a2ae-02885f6d7119"
        },
        "item": {
          "id": "6e0f2ffc-680e-44f9-8d1a-2205f409d3cb",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "09ccb485-09b0-4977-8a5e-a138096074b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f0a338-1db9-48e3-8a3c-9c8a1b82c078",
        "cursor": {
          "ref": "170b5661-7aef-47ef-a21c-c46b3d8e4604",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "07a09394-b127-462f-acc5-4e0615ffad1c"
        },
        "item": {
          "id": "f8f0a338-1db9-48e3-8a3c-9c8a1b82c078",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9c90ef48-ed8a-4e9c-8cec-4322ad065ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d916804-c9a5-4c57-b0c3-61f0df53024c",
        "cursor": {
          "ref": "2bef02a9-499d-4928-a03c-556bf96cbb70",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "410608fd-816e-4cb0-ac17-057eea78702b"
        },
        "item": {
          "id": "7d916804-c9a5-4c57-b0c3-61f0df53024c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c99761d0-175d-4c41-ae82-29cfe1621c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cda5c6a-7131-46d9-97df-b7612ed0d203",
        "cursor": {
          "ref": "c443dbf8-4f93-45f5-a03e-1801cac4fd40",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cee5078b-bf99-4494-8892-4ed15930cd9f"
        },
        "item": {
          "id": "1cda5c6a-7131-46d9-97df-b7612ed0d203",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1af088ff-8c95-4a3d-b8e4-a6d10bd681d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72956ddf-2e31-4336-992f-1e8b290859d3",
        "cursor": {
          "ref": "62397896-e000-4840-99fb-98d63cac17d6",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "9c0d34a3-50fd-4960-bbf9-2a5504f464d5"
        },
        "item": {
          "id": "72956ddf-2e31-4336-992f-1e8b290859d3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0bbea9da-cff8-44e9-87a6-75577db84f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2159a7d-cb66-49e5-9479-8cfd02e2cac1",
        "cursor": {
          "ref": "95676e42-990e-4617-ba66-a217c75ae60e",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c65d1eaf-ba0a-4bec-9676-287357691c6b"
        },
        "item": {
          "id": "f2159a7d-cb66-49e5-9479-8cfd02e2cac1",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "920d3750-70a7-4ec1-ad89-3bd6a448adbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb94a2f-cd88-4a06-8fb9-6a3f75d878d6",
        "cursor": {
          "ref": "e4a5bcc9-c84a-4816-90f0-9337b88c1915",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "0ee20f55-f0f7-4932-839e-5e26ddc8af65"
        },
        "item": {
          "id": "afb94a2f-cd88-4a06-8fb9-6a3f75d878d6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0cc01607-415e-4c3e-b9c0-c10a52112ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52474443-5701-4701-8635-72ff1db6e7d4",
        "cursor": {
          "ref": "fbd97aad-11e4-4498-bbd7-19af47a21523",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b7a25d89-7847-4c5b-b6ee-801f4dcd27c1"
        },
        "item": {
          "id": "52474443-5701-4701-8635-72ff1db6e7d4",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c1f9486c-e8cc-4b33-a2a0-f50e52a1b776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a286a2b-36eb-4e2a-9cf1-af9dc69bf877",
        "cursor": {
          "ref": "aed80698-d225-4d05-921e-d3338c07e0f0",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "982fd83c-defb-4a6a-9572-050b73fa9a29"
        },
        "item": {
          "id": "3a286a2b-36eb-4e2a-9cf1-af9dc69bf877",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "90bf3b17-3656-4cae-ad2a-bb6347513bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159e730d-1f9d-4476-a4f1-f78c441df790",
        "cursor": {
          "ref": "2a34b80d-1abf-471a-a0af-19d31f5bd158",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "c1450aef-2d48-4596-8bb9-cd8b9ada7613"
        },
        "item": {
          "id": "159e730d-1f9d-4476-a4f1-f78c441df790",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "59e456ad-1aa1-44f7-ac0e-e2d6e5b47dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ae7dc7-5c09-460a-8717-b3aef1d5f1db",
        "cursor": {
          "ref": "6be51306-2751-4fc6-afdc-7f4f9b35ae00",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "020df776-fb64-4687-ab94-060209d702d4"
        },
        "item": {
          "id": "86ae7dc7-5c09-460a-8717-b3aef1d5f1db",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4a446282-c4ea-47f7-9604-495c858698f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8aa278-5f68-492e-89f2-cca3cdc2753b",
        "cursor": {
          "ref": "b522f950-de55-4c1f-86ed-57579001b4a0",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "69e965e1-bf93-466a-9261-bd4697382f66"
        },
        "item": {
          "id": "8e8aa278-5f68-492e-89f2-cca3cdc2753b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "63992cdb-8818-493a-aaac-c11cb2626408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9415eb5-51c5-4d16-877a-2b8f47a37e95",
        "cursor": {
          "ref": "ed4e9ffa-15c0-48ed-a678-247aa424bd3a",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "8c2e412c-f5d1-4c37-b3bd-1b69a57ffe16"
        },
        "item": {
          "id": "a9415eb5-51c5-4d16-877a-2b8f47a37e95",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b8d6d172-7e8c-47e5-8756-5d1d8f2ffc24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acfe4f31-8196-4c7e-b834-ee7a8e7e13b8",
        "cursor": {
          "ref": "857110b6-7a43-4d26-83e2-1baecb9d2cee",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "abbf69ff-93c2-4618-a189-c466b540fbd6"
        },
        "item": {
          "id": "acfe4f31-8196-4c7e-b834-ee7a8e7e13b8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7f88d034-8d81-4362-9914-060bd7309b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad214e4-b60c-4edd-9e52-33d6e602d06c",
        "cursor": {
          "ref": "debc76ac-37c6-400f-947a-3fb8b6def6db",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "6ba001cd-fa3a-4272-bc98-2f950b5dd111"
        },
        "item": {
          "id": "bad214e4-b60c-4edd-9e52-33d6e602d06c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "31459980-2aeb-4a2c-b7ed-fe62c5d7fa93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d67de3-80ee-4a7d-8fd8-431fd403fc1c",
        "cursor": {
          "ref": "7dbb41d9-2a90-402f-9d4b-124cfd5ac64d",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "6b1ae744-b136-42c4-a985-aef811dea0fd"
        },
        "item": {
          "id": "59d67de3-80ee-4a7d-8fd8-431fd403fc1c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f98e7af6-1346-44ad-8804-7fb1f5e0401a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4537c84-f3b5-4442-a8cb-49dce81a2623",
        "cursor": {
          "ref": "a5024b84-6059-41a5-a539-8cd7dd0dfd01",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "aa18281d-db9a-4624-ae4c-997d666d64a3"
        },
        "item": {
          "id": "d4537c84-f3b5-4442-a8cb-49dce81a2623",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "48e557bc-7c4d-45e1-bfdf-544ec6729261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617bd3fb-aa34-4431-a7f0-d84d1b121fdc",
        "cursor": {
          "ref": "621176fe-e47e-4ac7-936f-b5cb9048e3ce",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "db312ec7-93c9-44b7-a1b0-302a15802d59"
        },
        "item": {
          "id": "617bd3fb-aa34-4431-a7f0-d84d1b121fdc",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "35da68e0-a02f-42c5-8007-58d624a42479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a3a01c-12fa-4ebd-845e-29952653a1ea",
        "cursor": {
          "ref": "63078f91-1e7e-417e-b35c-a294789ea138",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "7f868c82-462f-4fc1-b9e9-16039f5dcad1"
        },
        "item": {
          "id": "88a3a01c-12fa-4ebd-845e-29952653a1ea",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "df01b782-10be-4358-aa0d-90d5f1ba95d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571ca501-6098-4bf2-996b-92fa79aa2be0",
        "cursor": {
          "ref": "d15d79d4-c4e3-4b1c-92fe-da2d16d718cd",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "c9cdf629-63f5-475b-961d-18577e42979a"
        },
        "item": {
          "id": "571ca501-6098-4bf2-996b-92fa79aa2be0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "017a45a2-2986-4c6b-b8c0-869b49ee9386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8a12f5-55ea-46b6-abd5-6eff6f2b2a15",
        "cursor": {
          "ref": "b146b8f4-efdc-4e43-8994-a7fb51d66f2f",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "2a0bbcb6-b5fd-4bf7-bc7f-0b8f4aec3ae6"
        },
        "item": {
          "id": "3c8a12f5-55ea-46b6-abd5-6eff6f2b2a15",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "607f96ba-f568-462e-a939-9dc773b11e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3dcee31-684c-41ba-8ed3-44769ed16274",
        "cursor": {
          "ref": "e02302c7-badf-498a-9c92-d62c721b090a",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "dad8fefd-98bb-4617-98b1-39a9d15be78f"
        },
        "item": {
          "id": "e3dcee31-684c-41ba-8ed3-44769ed16274",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a8859ff7-7a5a-4abb-9354-69cb77cbe055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56fd5c9-db81-4e01-9e7b-0dcbfe0bcb89",
        "cursor": {
          "ref": "cca59802-beed-44e9-8151-48917019d658",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "32ec4bc8-a213-4119-b81f-41fcebd21bfb"
        },
        "item": {
          "id": "d56fd5c9-db81-4e01-9e7b-0dcbfe0bcb89",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f68e773c-a484-48d1-b52e-77da003f8b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d95ba5-036b-4c88-ad87-7310847cb7f7",
        "cursor": {
          "ref": "ee07a968-d3d7-49ac-a23c-1c479c09e9e0",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "4c3b952e-0015-40bc-9059-12b7f6e25671"
        },
        "item": {
          "id": "55d95ba5-036b-4c88-ad87-7310847cb7f7",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1e05506c-2b14-4ae1-a6d6-18e847f01485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85497d14-7345-496a-86d5-8e201922f8df",
        "cursor": {
          "ref": "98958dc7-99a9-487c-9411-5a47b3174fad",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "5faeb86d-ebd1-4a51-ab5b-2d6bcc840da2"
        },
        "item": {
          "id": "85497d14-7345-496a-86d5-8e201922f8df",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8928ad68-8de9-4bf1-a87e-3cd76781e0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6a4809-8d9b-449b-945a-cec995c9bc87",
        "cursor": {
          "ref": "ddd8c8c6-bb58-486c-92c8-72822a41ea36",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "26e5928a-4ecf-4d51-b7dd-ace7c6bd252a"
        },
        "item": {
          "id": "2d6a4809-8d9b-449b-945a-cec995c9bc87",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2481d4ac-b2a4-4a9b-b4cc-355d3dcab0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a31796-12e8-4042-882c-cd37b26b70e4",
        "cursor": {
          "ref": "2a52ec0d-5098-4d9f-a977-e3046b43804d",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c0f6052b-edc1-4568-bd74-e99a354d8ae7"
        },
        "item": {
          "id": "71a31796-12e8-4042-882c-cd37b26b70e4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6a73c4eb-00a5-4979-aac5-6442d540d5b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d866e3d-0ce1-46dd-ab13-f9e61bb7dd0f",
        "cursor": {
          "ref": "3833ddea-c9b9-4ae6-be41-e73cc02a5b83",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "4afbeff8-51dd-401f-8821-29cb8dfa67cc"
        },
        "item": {
          "id": "1d866e3d-0ce1-46dd-ab13-f9e61bb7dd0f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ad04634f-e1f0-4bcb-a36d-ccee67607e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c01757-9c77-4215-85f2-01b48ebf773b",
        "cursor": {
          "ref": "41572a6c-1b76-4811-95f1-6daafbb7f4e2",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "609f9783-1bb0-42cb-908f-c6f4a5ae9270"
        },
        "item": {
          "id": "f9c01757-9c77-4215-85f2-01b48ebf773b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b0eb35f6-665d-4039-9f45-bf5ad0083e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5049fce1-a7e2-424e-aeac-786620490069",
        "cursor": {
          "ref": "926316da-5da7-489c-9e9c-914b34774ffb",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "16002c3b-fe84-4b7f-9e08-c37e7946589b"
        },
        "item": {
          "id": "5049fce1-a7e2-424e-aeac-786620490069",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fdc61b72-ab65-490b-b41f-74bdd063ef6e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce8062e-1aa8-4e53-b07d-eef5e057b6b3",
        "cursor": {
          "ref": "81749f69-a888-4c34-91e4-fde4145cf13a",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "d1de5dbf-2f97-4187-a0c4-c6c7cc0816ee"
        },
        "item": {
          "id": "bce8062e-1aa8-4e53-b07d-eef5e057b6b3",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c5da11d8-9616-4248-9601-da9f82c33e9e",
          "status": "OK",
          "code": 200,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb8db9a-8e80-4ad0-981d-e18395c765fd",
        "cursor": {
          "ref": "fbea7403-0a58-4f18-aae0-1ee4a4d96b59",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "a126fea7-d61c-4e19-bcfe-f7967b2ca6f3"
        },
        "item": {
          "id": "cfb8db9a-8e80-4ad0-981d-e18395c765fd",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2e468b89-cd97-40d8-8a79-b71c630cb539",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9634ca-6eca-4902-8715-93a731ecc0db",
        "cursor": {
          "ref": "37cf9713-e0bf-41fa-ac02-c1a896318478",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "88a9b28b-9b20-4d2c-bdb5-3f37294ab3c0"
        },
        "item": {
          "id": "3e9634ca-6eca-4902-8715-93a731ecc0db",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "534740ec-64bf-4076-a499-55be521c8151",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "068cb465-fe9e-4d36-befb-0d20494eebdf",
        "cursor": {
          "ref": "d176250a-88f2-4aae-9d0a-618fa6d45458",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1b557701-a63b-41c2-be29-a4051515b421"
        },
        "item": {
          "id": "068cb465-fe9e-4d36-befb-0d20494eebdf",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c6c3a66b-82de-4986-adf1-add0f9627a26",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068cb465-fe9e-4d36-befb-0d20494eebdf",
        "cursor": {
          "ref": "d176250a-88f2-4aae-9d0a-618fa6d45458",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1b557701-a63b-41c2-be29-a4051515b421"
        },
        "item": {
          "id": "068cb465-fe9e-4d36-befb-0d20494eebdf",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c6c3a66b-82de-4986-adf1-add0f9627a26",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b11b4e-068f-476d-b390-e5495a58c734",
        "cursor": {
          "ref": "da95252b-c73f-4b79-a3bf-4425900032bb",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c8e4a9ac-1117-4668-b6f2-6cc362baeff1"
        },
        "item": {
          "id": "19b11b4e-068f-476d-b390-e5495a58c734",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "35335d95-bf76-4bd0-8d1c-fb51998f074e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "278ad9bb-444e-4ec3-ad4c-7c948b2b464a",
        "cursor": {
          "ref": "af63e9be-85ea-48d9-8b55-fe6f4bc25429",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "2eed67ff-3382-4ed4-a03c-ef862b0d332c"
        },
        "item": {
          "id": "278ad9bb-444e-4ec3-ad4c-7c948b2b464a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "db5bc370-4f93-49aa-893f-46159c1b6692",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}