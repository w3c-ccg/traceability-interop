{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "dd1b5305-596e-46fe-a2c1-d56b9bbb4fc3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "be14cd74-247a-48f3-9ac2-0d20a223dda0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0cadfca3-e187-403d-a991-23ab382afb17",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8a613a40-4005-4c8d-9a75-2557e2a06b66"
                }
              }
            ]
          },
          {
            "id": "1c3c9da3-50a9-4d04-ae5e-15d7e8d35234",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9c4cb328-7d19-4ab4-9b13-1bf54f74423b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "72c8c92b-d63e-4862-81c1-13b5ec281e3a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d0b5d249-54c8-4979-bc2a-f7ff7be9f7c4",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f937b47c-e0d7-4c02-9adb-10e695fd0fd1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3535d349-5cf1-4ed2-a072-6d145e1541fe",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "70cd173c-270c-4dd6-854b-404dd9768a5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a2e06ecb-fd21-4e6a-b106-28620ebde8af"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d1835508-8b15-42d1-a81f-32ac64b4c13f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "46612b90-1767-49f6-9e22-ff086f2c2e7c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bdcf01c7-468d-4db2-9dd5-78b7a94ede39",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "23b881a9-51f2-47f3-adcb-44de4687f97b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cec066d7-c9df-4dc9-be60-826d75b52a63",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f5c627cb-8d65-448b-94d6-102c2db2953b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc6b28b8-3701-48f0-b0ac-afcf83b1326d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "90dedc03-8a23-4beb-94cb-65ea78b82454"
            }
          }
        ]
      },
      {
        "id": "195a5428-7032-4309-8185-39beb25d8ee1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "82f23f9b-f893-443b-a2e0-7dd398bf23a7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "468b1daa-f781-436d-8d0e-73861fdf1380",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ec992de4-46c3-4dba-b820-c5e36bda220f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbfc6edf-2f2e-44c9-ae4b-9aa20850aedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a273399-0e03-45d5-ba23-bf89fa8946e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f16d4d-410f-4760-b6fb-809ebf74beb9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0023ec1d-08b3-4a51-ac00-304175c3b397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb6cac43-f007-4150-9f00-32d45f175206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01a1092-66b7-47d4-95ec-5addfb78b788",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc70a11-ea84-421c-83ee-6eb9aa132d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a9ee396-6ed4-4316-ba82-b4f34673945d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a92a9b6c-aba1-4865-951b-b7a26de5aa71",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "af2895d4-be68-480f-b8b5-a967291fae3d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20edbb2-cc5e-47f4-802a-2cc3715cd7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90d11c15-e3d1-47a6-a164-f5f12d612ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a23185-6cde-44f1-a619-d567c37e7c28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19e22d87-aee7-4e64-be9a-66b3a8bae345"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d0087f6e-9975-473b-81b5-56853c83a417",
            "name": "Positive Testing",
            "item": [
              {
                "id": "426d7e2d-5923-42f4-95c4-dbf3e3f8c4e3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de307215-7d7e-4a17-88d2-e3708ce1dc8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0b65ecac-56c5-42a1-a46a-f41a7eefbd30"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a73a26eb-25aa-4433-8625-0e91f3f41000",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "237b66bd-f312-4ec7-b4d9-c17af419d00d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0324c914-0120-4fe0-9406-65a51f55e28c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f441338c-6dc9-45cf-b540-58c32dc378db"
            }
          }
        ]
      },
      {
        "id": "9056bdee-9cde-4a50-b9b2-b0564b3e4544",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5455256e-34df-431f-ad89-abf308b46a52",
            "name": "Negative Testing",
            "item": [
              {
                "id": "97beb047-5d78-4f63-9b2f-5f35160c7ed6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8b2f5b30-bd0d-426e-93d9-bf9473d40863",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "295b6119-9430-4f02-80ff-21941a3fc405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "590444b1-e384-41dd-8c84-985f8df49d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59bd8584-3bde-498d-b617-9d0bb274042a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "acc85554-1db5-459c-a3da-3a98ac8a8a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449e05dc-8a76-41f9-a351-1f825b7f1e76",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a71fe7-258f-4eb9-b655-b31d18054b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "464fedaf-6bf0-4517-ae14-51a6b1677985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05c5ddb-21d3-43b0-8dd2-221bae748e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85e1913d-9ff1-46d5-a8a2-09711c88ed1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dddd89d7-2bf4-4c0b-b3c9-30dea28d3b15",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f144e529-c145-4834-b329-40d53931358c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77979902-8211-4881-9722-63780e33455a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc05a97-572f-4d0f-ab03-0bf537d22d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8252fec4-ea37-4a5b-9106-a63c77a801c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c613d9-0250-4fae-9371-8c99fe6831c5",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbe1282-2d84-48ef-a625-52194d81f2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0388068c-b695-4c58-99fa-2894e752d141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12049a21-4f0d-47ea-a556-67db28a20595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ec78b2e-89e7-42c9-add0-3884c51d4970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164cf3c6-004e-43fb-82e4-fa8fc1d53023",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ce7ed7-3e6d-423f-b366-9f0c688125f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5534561b-f5a0-4883-9ed1-9609601c73f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b76e4c0-2b95-43d4-b04b-44db48011cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5f29415-45ab-4cb0-b3f0-1d8b369a52aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6450813e-771c-4582-99f2-e751e4eda4d7",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "892188da-6559-4186-b5ae-b8b82985b1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f5fb341-f065-4c47-9f23-ff282da7346a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373b4031-c607-4c33-acfe-0f201d89e0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abf30fe9-e4c3-4c07-9f2f-c5cb37f0b211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8752ec03-0b79-433e-98e0-fe4514b1ead1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0201e62-7180-4c3f-b046-999465904bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49579eb9-0a33-4d8c-98e5-44c00a104121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4714c5f7-365e-4ded-80b3-6735d489a441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84f30991-55ac-4f2a-844f-35a60c71c7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd53a33-beee-4f9f-bc95-9ee12bb93dc7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dbd513a-85e9-4cb0-ab4c-e521b5d45166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a17701-b141-423d-89d6-10b82acb756d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97a9554-ac8a-4cf0-8710-3411e6218864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "296127a2-c0e1-446c-8451-e643f9b3aae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d041524c-55ef-496b-965b-8aa6ef1be667",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f8f3af-11e8-4a8b-bcea-31b4503dc36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a45e5a3e-edee-4bac-adf4-fe0dd740303f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31599056-a94d-4762-9f22-cc14e5573680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eaa07517-52b2-4fe6-8248-6c492b98b654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0019563e-ae8b-4534-8bf6-6d336c2c67d9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d5e745-3b84-4421-9c9a-92d0d30463e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b47914d5-95fb-4020-8742-c2dd9f632c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f25fbe4-782f-477d-aa84-54a925b6244d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddee91d9-d715-4a28-90ae-d288561b58f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dbd5b33-3362-4e1d-b387-26f9271b500e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1b2664-db02-4e5b-870f-1e9d98b8f193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "955acd4c-69ce-4b1b-92f8-ca8cbcce8204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b81e4a-02fd-4119-b21f-633930b6e40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6af401bd-ab99-45bf-a10f-b5005313da0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f51a32-0402-4a4d-ad70-f6c4d1c086ed",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "444d4cf0-65cb-4588-bdca-4ea7231dc001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6e81749-3115-480a-b959-097dce239825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936ee9f5-f82a-4e71-966f-cc61adcd9945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69f26280-a5f0-4826-85e8-2ab5274ba4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20c6fac-d056-420e-bf47-6855c3c39b09",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1f18b5-2e5c-4ef1-b49c-cdc2d1bba57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3eb4037-6610-4562-ba5d-4fc820d8ba8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c5ecc6-724f-491d-933e-423f6543f324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3486d60f-132d-4aea-b558-9f57d22d4663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1b2177-a5d5-4046-9926-b8639d72b9b1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd1c876-41d4-4cd3-bd7d-05fc393dd1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d6dbec7-aebc-4657-a66d-c298c2da3aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774f09fd-b3f5-4562-aff7-82e30f7a174f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45cdefb8-473d-4ff8-a41c-76e2baa23641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c93accd-f746-4881-8330-8bc73d5e4dcf",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a680cd5-b0ab-4c3d-8f22-915727171cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08dd0014-f1c9-42c5-885f-df6aac81ad95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02837eb6-c757-43e2-879c-43dbfa27b3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1206d4e0-e103-461c-b9c2-f49e51fd0734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91533659-d933-476d-9333-70bf68ef98f7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74a5a36-c24d-4823-9194-80e86d53a1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "177c80f0-2f06-4ad0-9421-7adba80c4ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041c3010-0a13-497d-ad35-7f7a0d963ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec464343-b334-4c4b-86dd-3f97bf09458a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e1c191-0be2-4d98-a7df-55c22930b9d7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2cbb55-f720-4ab2-a122-d171346111be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfd74693-f5e8-4437-91cd-89d715c64dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316479e0-ccb4-49a9-88a3-cebae054af61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a53aec1-e1e6-4a6e-a6ac-e96b5dc7a618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5284f9f0-d448-431f-bb31-2bfdcbf2ab43",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d68ac95-88a5-4b7a-96d7-f4e90033374b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2483e71-02a3-4ea0-87e9-225e0b56390d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ea0e94-5bc9-41ca-9ca6-59723664b079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5af922e6-3c1e-4d2e-989c-3dc1e99f8eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28dadb9-5011-4bef-9d66-eebf7d5673c9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17bc03e7-dc17-41ef-90b9-791eac53f57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f57dd2-0b7b-4fed-bc1e-a2caff6b01df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10167d43-88b8-4010-adb4-e3e0ce3c4ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f57e88ab-c2a2-48d3-a75d-09573726e20b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72392a5f-65dc-4505-b608-f4c15e16781e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40551ea2-f4e2-4dc2-9551-339a1d433714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14d125b9-91ef-4482-978e-e9a97b758f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816893fb-428e-4a77-bb74-4767fa7c5746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d1115b8-7b74-4d82-a84e-6376f9356a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b15cd5c-4fe3-4ac6-bf22-30a06277efa8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d7f188-c948-42f2-a67b-901dd647994a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d133a80c-c153-4cbd-9bb6-8f1a151c79d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97eedf7-e6b1-4591-8851-9d1d8a0a9e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "757a29d8-1745-4eb5-9b54-11895082c536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65bf5d1-b41b-400e-9b87-2c7c81059f69",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07bc96a-fc93-41c7-b568-2a247910477b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f4b2a0-9fa5-42bd-a8ce-a7a36361bae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04fd4be-01a4-4f53-9442-8dfa601d9ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8628c966-fb8e-440f-9ee9-de17657340d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79247bc5-3bc5-43ac-8f9f-d6a2834593b9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee80e29e-9cd0-4e03-ab70-e644a998528a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06a3dc9e-689c-436f-a9cb-d293718937fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68695ecd-2588-4d56-947b-9c6b1d76a0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7a4e5f10-9e3d-4934-a25b-b0565df84d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46e35af-e558-4b3b-aec3-b99024da10a9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f24a8eb-6f70-4c5b-9792-d16e50c32729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f92f8f5f-4b42-407e-954c-149d540b5ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45eb1c93-5a40-4805-a66d-d0c108323ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "632bf6b5-c4d3-4e00-a08b-1ae58ee666a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109044da-2c28-4352-b243-ff69e375eb56",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b239d0-c574-4888-8fb5-53ba2424d707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af1f27bc-4fea-41ff-a3a8-7c3c6e834330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56b599b-6e36-4427-a24f-b99519fdb91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a20caedb-5000-4587-b860-e2341220bd7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22975a81-d4bc-4540-9f4e-4b972009dd7f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17559a84-ded2-4ae0-8cec-bbb643f970f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b825a23-63ee-45a5-ae94-d0af4e926b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b50319-d672-4140-9cd4-5a32fbab0bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8da92bf6-02f7-4d63-9e02-13d753f7b7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ee5fd2-1579-4b01-ad6a-3220bcaa09b3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ac644f-41f1-4ea5-8f12-8ff04e70ca3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c214f73-a278-4391-894e-4c64150875eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f88adea8-fa70-4221-8ac6-5de4eea03ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e2aed9b-b99b-4251-953b-dd10a5440779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c34f60-40fe-493d-ab15-57e852913d65",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc44d90b-992e-4dcd-b20e-ab435cad6402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c81c901a-611f-4707-8631-44a4b41e461d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d5e2e5-4fc4-4bf4-9cad-7a7b86a9e6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "18dc3675-e61c-4238-94bb-6bafc7bd1bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b15a52-0a50-45f7-9bcf-1a1ade3427ea",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7c486b-168d-4da2-9150-9175eac7563f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f975e5c9-b7cd-4b50-a6d9-ce6038a5dd00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3e3862-2c20-4e05-a52b-c401e70d8c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e905310a-3e04-4240-aeb2-b0aee8c27488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749b032b-9d37-4ba0-88e9-ffc1a37af075",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d345c77-e40b-4ec1-8108-d6eeb55a54b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f8b443b-1d33-4441-8fff-6225f3597048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ddca28e-cc23-44aa-a1bb-dc13226dd0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebcbeaa8-cb08-4537-8944-7696a09645ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3ce37b-c04b-423c-9aa5-cb5762c3885c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4277c769-c8b0-403c-a835-19acca1c6530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b06322c0-ea5b-4f56-84c2-c006b7cb5da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61569047-f492-44a7-a280-01568492c1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "847275ed-ae32-4339-a120-6259c2c732c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456375a5-f03d-4fcd-aec5-d8da7e9166e0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61535181-7aa5-4b54-aacf-ed73770a6312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b950639-a14e-414b-a996-d77f07038050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b49fd8a-f9dd-42a2-866c-79d3215ba9b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b191e2a-447d-4a82-b4f1-5e583ec6e05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ec2838-7b07-46e2-825a-62a47b737e77",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c162a0b-f58d-42a3-bcb4-e3b0bd7428f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc181be-e03c-41f7-b40b-6738245e3b44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99641f65-febe-47e5-88bc-ff160bd377c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "50963bb9-a5ef-498e-8b99-bd71de026c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5daf1e-743b-4489-a63b-3bbd981a642f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4b80a9-7e0f-4c2f-b7fb-12241ca55bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf89afa1-6fa2-4f00-b38b-e55cc3dbc06f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc57c245-d8fb-4b80-b8e3-1b87e6f3f50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0172acf4-32fe-4544-887b-fd7c0209ab8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7997fee1-390c-4bef-8515-549b43ad9061",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4a037a-6679-4d27-85a6-5a75ead938c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04dde1c2-8536-4275-9822-54edeb2ee2ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b90238-10ae-49a8-90f6-446c8c2f0f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7ed7d575-937b-4ad6-a629-6a9d9272612e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28a4e09-8e6a-4325-ba9f-4fa0785891f9",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e15f40-f38f-448e-bf36-7590b4e09026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03b057d9-f5a5-4605-ac12-739d54a8cfc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0e05f3-feb4-420c-81c2-8139aa4a3492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5f64b26a-655e-4879-a169-b01372b9b4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4366fd-e220-4c61-85ac-cbee7adbdf47",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "859b2f50-a584-4177-85ec-10d7263faddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d208884-b9ba-4405-8e52-d7170befc160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a574cf3b-be30-4b31-b7e4-a27d58f61181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "06737225-494c-4d96-8b32-3520a75e5b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c4e122-a829-4b1c-867c-04fe93720a89",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb83d96-1495-435d-9488-b52e3350d7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa4a37f-029a-414c-8680-caf075be1723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06aaf32d-85ca-4315-afa6-a985ca99b477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d07732f-3b8b-4da4-b205-5560b11becbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52ee35c-19a3-4960-bd7d-3f620c28a861",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57a0a0c-a300-4728-af11-8415d33ae60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66f963b6-fabf-4cbd-b264-2933665fa5f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3dbaa4-e113-4149-a363-d84fdc5861b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "114bc395-a35b-4852-a2db-d3ffd530f63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe78d2f-b660-4e07-9357-fe3ee146e2bf",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e23a9e-1946-4e59-9078-851977c383e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3de68956-b495-4f11-85fd-19aa56ca8951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd3566f-1d2b-4e9c-ad0c-50f6b8b052e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd0883da-4bbb-4781-ad5f-87575f3265bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351b906c-bcdf-4c94-8a5e-233423a80880",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d1aed9-f907-476a-a513-0bc978701f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "096775b8-3e7e-4fbb-afff-bc4eb8e33475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38974443-3191-4c13-8a48-93e0a2d65942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d70f163f-5fd8-4934-beb9-9252b801768e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7884d3-3381-4002-b43c-0c4ce87ba1a3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85359d94-1bfc-4464-b04f-e3fa550ef84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6965177-1c8f-4e8e-a08f-27eeb8feb7fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c3f5f6-c6b8-46ad-b662-48ce6e00f58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6c867fa0-9b3a-4841-8fef-449216522dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e6c974-c6db-41ab-a61c-c920ec52b8e5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff959754-f13c-4bd6-a477-af52f6a322d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b89c62-2ed8-43af-84ef-2b251c2bbffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e83e7c0-b746-44d3-8d78-815f6276fec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "de94b1fe-d54d-490e-9862-6e847fbf62ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30882fa-6de5-486a-9462-bff86052cc14",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb3e1d5-ec2a-4e13-ace0-5657d7503140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d37778a9-e362-4dae-9c1a-5b0dbda2d251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b099bc9-2b3a-4f7c-8a51-5cb88bd06017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2af4af71-1e2e-4cde-90c6-bd205d935f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b00186-d662-44c2-8a17-7a9f0ba11a49",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83992e6-d5b0-4196-a0ac-f7156f683ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d9d4944-817c-4c22-aec9-8bf06bf099d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12931900-19a2-4fc5-bee5-2f1040661b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0106accd-4bb0-46de-a31c-b4edd4b3320e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f724783-9f7e-4ab2-8192-8eb2f5f2d67b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "373b115a-5ea9-4d46-a608-f25c00996590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "213c3488-4d09-4ede-acd2-0ea56bb5be8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36eb2e7b-a34e-4e79-8b14-fe68f0f64d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea478f64-fb32-494a-8175-589f9f8443d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2505ee-39c3-4245-9676-c1ac17325d95",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73862a00-22cc-4549-b316-bbda21460490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcad32e5-f3ea-4221-bb96-1228b0eece51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe13a26-b068-4884-af34-3f92629c0475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "722511b1-300b-4996-b2bc-298cd6c9787c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f1c43a-1bca-48e8-bdf7-30b5b95d0d75",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de5deec-371c-49a1-948b-843256060957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7acd203d-5fe9-49ae-9211-186b82ebab94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283ef045-943e-4b40-9c0b-8d90b05c07b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "45c68408-bddb-4ef6-a547-8f756e3f5839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8b002f-3f19-4681-92ca-91c0a95339df",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87c00d6-f931-4c13-bcdf-3b80361c71ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "937a40cd-b09e-4563-b68d-fc279f85c97a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee1e5a0-33ca-433b-acd9-ed95c996aa49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1473a81-8a86-4f73-85f6-0228154079e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832958ce-3778-4fd0-8e1f-9e1a6f224c96",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a43e170-93d3-49d4-bc51-cbe54ecb0931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "962dbc08-76b6-4d45-a3a6-fe94bc659235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576d272d-1021-499d-ae2b-daaa90dd30c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37f34037-daec-45fd-bc01-24a2f1103cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a59db0c-0c5a-47b8-a052-32213536771f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d372a4c3-73e7-414c-b0a9-d39a3f6362be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e502b4be-3cd7-4baf-a233-5d40e9f433bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a1e58c-ca10-4c5c-9adb-32b1c1d8754b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "47b7fb57-2c91-44c0-a1fc-45dd9c680c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3eeb53-1bbc-4a8c-ad06-bf367d5efb41",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16ae1bb-bbbb-4376-9af7-13972d846a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf85a24-d5e5-489c-9952-e5bbbce0c4ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d653248-2c0d-40b8-9711-ee0d78c1d9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "507bf9c7-9253-4c31-9f5c-ddc5b860f337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3bcc41-3706-4f6e-893f-d4b982ddf922",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7634cdc8-f877-493e-84c1-9611807c2ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a942729-de4a-46b8-86fc-45857f2129f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56837ade-f2d2-40c0-b7f3-903c87a6b91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c0885a7-3add-4e32-b959-5892bcc3d0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1fbd9b-83d3-44f1-a420-9b2690e87cd5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2522dc7b-390c-4838-9f80-3a80b54a90c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b63f24f-622c-491d-bef3-1916bef7bf38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e41faf0-f7ff-4bdf-b415-dba2720890ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "442e71ad-07cd-407e-8f4f-aa3045536936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34854e4-5882-4039-a57a-56753a4d6318",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f3c32c-8070-4df4-a990-e0157ef3d40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "819c99f7-e6f9-483c-8ded-ab9a2843b570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a320a36-acc3-4390-b324-8678d1f9313c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dfd96ac-0b71-40bb-aa29-56dbc0ddf652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3181057f-cfa5-4ab0-9922-6dcdcf23f3d6",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48fb5593-ae92-465f-9665-b60e9e4d7459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c02342-3766-4407-8c68-f7dd01c04ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57ef8b2-efad-4eac-b52a-d938022d526d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f1d510ff-6248-48e0-857b-068a6c959d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee43376-3b5d-4dca-aa32-2d0ede8fe764",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18db620-6be0-45a6-aa17-c4154b58a5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fb61759-ac58-486c-bed9-474b6e81dbeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b443a2-38bf-4450-842d-498fbd27721c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "efce4d82-e945-431f-9fa3-e08ceb589dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591d3b6d-b021-402d-8a36-109610ff3494",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a33820d-6130-416e-9d2d-e6150cf0a57c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4807fc6f-758b-44b6-942b-595bf9cc7e62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf1e2e4-135f-48ac-ada5-0973c2f2bd55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7244181-5ac5-43cd-9307-8919f0aa4937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43565b20-9416-418c-9e61-4a9bdf33ef42",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b593096-daf1-4a72-910e-d1109c8f811a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "157be383-4ab9-4b3f-ad89-ff05dce063f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d49421-392b-4898-991c-17db2838a91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f1663dc-c8f5-45f6-9703-c3b507d096b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f5d0f8-9b91-4561-998c-ce7511165e23",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6d2831-ad00-4467-a1ec-a8b0bc2f3721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd90e43-74a0-4e1e-8e10-6429ae0c2f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ec70cf-289f-485d-b610-13cf15b76b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5976c92b-1320-4de3-aa9a-6970eb4365a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55621144-f4b9-4d7b-aa26-463dee5044db",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa78a9d1-5fd5-4798-920e-1de5ea06c7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd5aa86-92dd-4ae3-adb2-5be880782263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f4325c-6385-4aff-8d7c-675556f2dd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "be6d9ea5-9d3a-4856-b5dd-0a3fde3288d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8057096-0113-4b23-8c90-c1ced3ac1dcb",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf581f5-17cd-4036-a2ae-8aa97d223cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d1a508-6ac4-45de-9c89-9dac77b9afbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b4957b-f3cb-472f-b2e4-2cff3fe712da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b79d4c68-07ea-4c10-9a0e-0b9931cd4526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06acb10b-3835-4aeb-a7fa-f3bf3faf10f1",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9db84a-fdc6-4a2d-8af9-810cb56a1c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed98abcc-90bb-4e11-b7eb-308efe452677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82ed2a5-6ada-4252-8e60-13ea4eeb6da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ffe9aa1-f979-4f19-9bb8-89e7fe94b7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc582fed-2cdb-41ce-bb5b-808df443a631",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "380f3b07-a177-4bb7-b79a-bec3b1181e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53ae1389-3bf9-46a7-b724-5b1d4cfaccd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a58c5f0-9c00-4b1c-a942-b2999e733fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "afa30d71-9ab3-4c41-8f97-e20cae42db84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b82859-c914-4d90-822a-400bb3a49baa",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f15ce1-b52f-4fa8-aae4-bfa4b9594069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e68fded-0735-4ae4-a9d4-c0b0a8535130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba492f6-5054-4836-b2e4-f17bd8e76af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a498b584-8b72-45d1-afec-e23e6d3a69b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d4f11e-4766-40c4-92af-a50a7ef99e62",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1483103e-4b01-4c39-b7c6-4cbcb38a3938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ff39096-be8f-44dc-be9b-aa70df02977c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b608249e-5915-4ab3-91ef-95e8d6426393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b77caf3d-dc98-4f15-ab4f-94abe2dcb631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2adf5a84-68ed-4119-98fe-b8680658f014",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85c84fe-3704-4437-897a-24550dcd7e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9ac4268-15a5-4014-b115-639d829e3edf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bace751c-0b90-4570-951a-4e5533346d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "197d7f79-7d1a-4825-8aa7-2350a6143647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab88d97-769b-4650-a59e-076a7ab910e5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8bb105-d058-4720-bce7-68597cc5928b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee5fa8dd-af72-47a2-badf-d5c55d83a932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471073e9-bcc4-4876-8b39-50f11901dc5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8112d90d-2e80-4c7b-8ee4-7fcbf6691e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c809aa5-015f-4c93-bcf3-d28bd5fa0e52",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db39f17-5c37-42fa-9b9e-53afd397adf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "500f2d19-d89d-4e47-bc2a-45307620eaf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3812aa45-ee7e-4685-b982-509e2e87975c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "42272e3e-9e05-462b-93bb-00f53d5b56c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9a10ae-981c-47f6-8929-c82b3be5ca05",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d0feb2-58f6-4b10-935e-3aee72380f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e48b6733-b65f-48b5-a791-688d3481272a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7028b6f-f6e7-4ec4-ace9-cd1a67494a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e7a48ac-771e-48b6-b33f-6296c2968eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4525ebd-7b09-4bf3-9223-c47ab219c256",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee62188-cc24-4dad-b73d-c9e8e4df90c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "553dd9fb-9f14-498d-b6cf-08b537ba0a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f7ab3a-6a3a-4c2e-b73e-d551bba38f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3946afda-c5b3-4251-b29c-2ab24cc08abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2e1eee-475f-4fe3-aff1-a99bfdade7d8",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28e6068-8878-47cc-ba6d-dd708f70c3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac6ce99-c31c-411b-85b1-cecccd00c285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a4abbf-40ed-43bb-bcd1-6ff1e4bf64e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b5776f-5d05-42a4-9efb-6c181172e063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076f9f34-94d6-45e1-831c-44c402d57889",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7476a667-d32a-4056-9201-9eb0c271c8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece9da78-9b04-45db-9bb9-4a06db110a4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8e6bc8-20b7-4363-9756-cc5d253cac1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "40f56645-4e34-4787-b6cd-be81ec1cc0ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb7a597-38f1-4535-9bfc-38282f4e69e0",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "801fa67d-3f13-4362-adfe-d2662f3fad6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43ac3776-a953-4024-8f44-1b584ade4520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52fc7202-f0df-4669-ad00-2b843cdee809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75bbb931-45de-4768-be5b-b20ecbe0dd3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3f989a-31e9-48f2-b282-ad11589f4ebb",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3caf74e-6133-4c97-9631-fe913b8f4533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0a46239-8cf7-4a31-98bd-c6c98f467c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1d3ed1-7c92-46c8-a009-9fda74e27360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3935fd3f-501d-4126-8ca7-27277576d23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c5f509-3fa0-488d-afb2-914b8960b444",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4cc657-d313-4a87-901d-3591ffa3137b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8f99ca6-a590-44c6-ae73-2bfe364a02f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0df9a0a-0986-4eef-be1b-b9c58727f2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bbe318c-5030-487d-8087-b9629b3c4e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77aed4d9-4d2a-480f-9400-1798f3b08873",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a974d89f-5830-4a9e-bc65-9fadeacf202c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66c18bf0-a1bd-441c-9d50-fa5bd2ebb77a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3b6057-d88f-4aaa-90be-3f7855e2572c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3ca717b-010d-4dac-8f3a-c3d5e1364d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92cb79a4-a1c8-438d-a107-b2050afb6594",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eedbc608-3aee-44bc-822f-c4485d677095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8b6d318-f16a-4168-9bf3-a260141dabf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b18ffc-b42f-45ee-bb44-fe918754bb08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bebf093-f32c-4f2b-be0c-5797dfd0a09b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7441ed7-388a-4eb9-b277-b556f60e5137",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7048086a-3754-4961-a22d-6a0d3c5ecf6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff39f8f-fc8e-4654-a93e-a0cc95d5759b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7a2d59-bff8-488c-a199-524efdcb1cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "988a0b30-a685-459b-9803-678a709c565f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3271d8c-339a-4e17-a988-5f69c5b4cdb3",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64023193-0c9d-4ed0-bce5-851a3960fed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f32f7d6-82df-4fe8-8f53-bf65d9c4f3ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c463ec3-1087-48bb-9fae-1e45223982a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "13dceb9a-8253-4038-a675-491622ce9599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f266a9-3b08-462e-a48d-39c925b2e5cc",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5407f507-730e-4b40-86f6-f6831a6234cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0004ba9-1e57-44fc-8321-9a907330fd7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd45b99-1424-4061-98e3-6056aef2daf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d57834cf-3932-4cb4-8c22-e4835bf1ca1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2520f84-01d7-4c07-ad7f-325f1784657f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9409ca7b-02fc-42e6-961c-1a63618b402b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b81a33e2-a9d1-4fcb-9871-6c28378338bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0a4654-d160-4888-a655-606d3e990639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cabe7a36-7fca-4709-b019-cd5212c1166f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd142198-d5c5-4e53-886e-695131031636",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf62c75-c478-4d34-a8d6-d81a65ba4da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26db2825-0bec-44c3-93ad-9e3621b1b42b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114a96ea-7af2-4e32-afce-4435344d055c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "98f4692e-50c7-4216-af4e-198555614037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5370e2b5-3e44-48f3-bff2-714106a88b18",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bc9949-9c99-4b3b-81ae-a02229ad654e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7f72847-8a48-4de9-b383-176e90e544cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aeecf1b-175e-4f68-9080-409acd49be5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74656fb1-e4b8-4285-b0af-88d4810701ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4e44f9-4642-48f9-990e-8938e50f3694",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0481d07-a93a-43db-b6e7-ffdc0653d958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0365658c-926c-4822-b839-7ea540563477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a37620a-571f-49db-bdd0-ce4092a88685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd717e6-34ef-462e-b7ee-f7b6df26b38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2867f0-de40-4497-b5be-91cd45734b12",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e03d6b-e267-4b44-b764-182134beaa53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31cc9bd1-d7cf-4215-a907-44b763a27ce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc7f7b5-ab50-4519-a9d7-f5bed13cd97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "06ea4c16-cc62-4a1c-8622-50b615c27a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65755c81-a3ed-40d2-bc70-778d7ec79012",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "577f139f-387a-4acd-ad63-ca2a6ecbd359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e4dd1d-de34-43f2-9a62-26b9043e9439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71361e3-6890-43e8-8619-1a1404d55abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "40054a4a-c2d6-49d0-897d-17ddbb6a63ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3013fc86-9223-4cee-bf63-59f7f49a91b3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeabd3bb-4c30-452b-95df-ffbb95e2eb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eca9e3b4-4ab2-4edf-8c33-1f72eb06b3f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129669ce-a11d-4150-915a-4ace1da05b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0238dd5-5005-4ff3-9d09-bbbfac1b4f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d929c508-f206-4be1-b08d-532f2d341ad0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6bc360-d27e-4d93-a4f5-9102d898510f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b55b8f5f-7ec1-450e-8a04-3404b45d3d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c79e20-fdc3-4688-945c-300e44e03eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f766c1f2-d07a-4009-96fc-26f62def6b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f26b42-fd5b-4318-8b6f-4c597c661b45",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "196aa829-ec0a-4e7f-b31f-3fd3c5c591cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "394125d7-780a-4a9d-a72a-34aec07afe04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03cd6a6b-956d-4f5a-9541-70fb69f61181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "beffca1e-36ea-47d4-bfbd-f52dd6652953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d07d8a1-7e33-4b58-a2b7-0caa6045e250",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2c4eb7-995f-4a66-9fda-298f2d967960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84bbebe6-7b65-4b53-96ab-afe97ed6b5f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f5a4c7-802b-4531-8ac6-10dff7646018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "598f811f-82dc-42c4-bd4a-1570bb343342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab79a16-025e-439f-9a3b-8b12db7e8e82",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64e3568-7e0a-48df-9ef2-b80fb6f67288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "15a15a88-8321-43fc-83ec-62f82c17303e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff340e9-f7af-4592-86af-6b0ffbe0ae47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "221db073-ae1a-4824-87ee-12a3a9728efb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "45df81fd-390d-4a76-9fdf-5a6853818c03",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bd33f017-5125-4970-b8d4-3af73dc205ca",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e439786b-a21e-4017-a47d-b4c447fd84b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8679dd3e-d198-4a09-a750-765fd0890c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd7a85f-f42d-4be9-bdb3-44a23438bad1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "435b4ffe-8f09-416d-9337-2481db03cb2d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d6bff45-edac-4566-998a-8802ebf28eaf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1bfd3716-ae1c-401c-bd97-69b920e69e44"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2cceee8f-3685-4c7d-9d88-5971de009108",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "415ead99-da6e-49fc-bed0-f289277d57c9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "64284248-9b5f-42b8-a0cc-e7e5528193bb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e8273220-4854-487f-8897-15fe491f3af9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a9d5d17c-2228-4077-abc0-4a4e166fca4a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fae26a57-9f27-41cb-ad15-bcd72af06226"
                }
              }
            ]
          },
          {
            "id": "bd464dc7-714b-4fcf-a1fd-8b3af9d09667",
            "name": "Positive Testing",
            "item": [
              {
                "id": "66ed4b6f-6972-43d2-961e-a86d9542e518",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "810b2340-716b-452a-815d-883a40354f77",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebfe580b-1fb0-4432-944b-fc5b90981cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a1fe2996-57d2-4346-bb04-f37e2e0a75d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859c9066-af0c-4807-a3c5-87516ce43cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a064e053-26ca-47c7-a8fe-2481f9594ec6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "de4c3e98-f933-4422-b338-16740b1755a6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e3fa0e7-7884-44dc-983d-98f9ffa5114e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff0b6e37-e325-44f7-9894-64ccdf40de19"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5ee28be-3fba-4221-a7f8-a15f8da61641",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e46947e0-62dd-49d8-a2a6-4dd3f81ad4c1"
                    }
                  }
                ]
              },
              {
                "id": "e88b436a-b3a2-47fc-9161-03bc869f8713",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "283f3297-7d79-452a-a072-8e9ba81d0a40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4800aea2-9ffe-4663-a76b-bfc9f6246e12"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cdd84979-2526-4950-9cb2-b0b78aecc3da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "16f00e53-6493-424d-9047-f401cc047e4a"
                    }
                  }
                ]
              },
              {
                "id": "f19f0a74-a06f-41a4-b864-fb7c322e1e5b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a6f8bfd-f287-4bb1-80e0-4ce67de92cc8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "63200df2-b429-4ca1-8ce4-2424c8871ef3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3acb9e9d-ae96-4d10-80ca-83e7d95c5235",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a19de12f-0a93-4e96-8723-15a9d7a3d698"
                    }
                  }
                ]
              },
              {
                "id": "7a5c4aed-77fe-44e7-9624-4d8070bb25ea",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8ca35e8-8492-4ccf-854f-8b13a45b26fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "015a735f-af42-4fc5-8b8b-8973d4bb6650"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef7b8a7b-e599-4014-bb2c-ee24769c315d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "306647fa-3ce1-4cc3-be35-0f6bb761723d"
                    }
                  }
                ]
              },
              {
                "id": "4f983b77-8e3e-4b26-8e80-328867c3c043",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "30f1730d-e44d-420c-92da-370d8c6d9c6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "04bfb057-bace-4e9f-80b0-e680d90f0067"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0dce0325-1af6-4d96-9b3e-db879c56460e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "12533e66-ee37-40ee-bffe-364eca9a4e25"
                    }
                  }
                ]
              },
              {
                "id": "04d280fe-d40c-4396-b59c-a4f4e9463636",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "24a5f2f1-87ca-4eb5-bd5a-ffccefe3c484",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eaeb85e1-d0af-4a2f-9c65-50f6ee05b298"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5aaa8bd2-f064-40ef-962b-d03df8b0fba3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c8c2ff35-ff8a-42bf-a078-b054acb5c865"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c17e1604-4965-4863-b1f6-7ab0f70f3439",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "68070e04-ab4a-4000-a8b3-96556e1fc742"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2376f272-2936-4fdb-a8bc-80950cfacaff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "63356e51-0653-4ac2-9058-78dfab9c8a3e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78513410-a4d4-4566-917f-0af4d8551bd9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7f0e46b4-325b-481f-9379-820478ee5fc8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c336d13-b164-4bc3-98bc-382c83850aca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e27f7e7-2849-49e4-b594-b0d5d2e28953"
            }
          }
        ]
      },
      {
        "id": "fa00657a-3013-4538-8f72-20bdf8a3685f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a88f3d42-d07b-4704-a1db-ffb9464ff156",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a8bf777e-4293-408f-8dc9-817987481ea9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4bccf85f-ca49-4b49-8651-68c4dbbcb423",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ad47f7-fac6-45e2-a03f-7b818b0b2420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a93edc92-87bf-4e93-975b-449266b961ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0c80cc-35af-454f-8fbb-2f9a8d14bda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e15621e-a46e-4000-ba57-cd89283336c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62841d0-39e1-4ad2-b8d0-8613a927e758",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14804e42-4d65-4b9f-8bc2-fb82c17d8851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c910b770-f422-4d59-b0f3-f85df0bbfb34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6c98bc-b0b2-4514-a460-5241ee2a15ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "109bccf7-8b5e-4f41-b28f-2988f80b4ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0d41a1-41f5-4323-b867-843787d54ddc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7a188a-4737-4778-a931-7e57ef76da7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0bb0738-6094-4d20-b2a5-cea2f2b43c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6f96c8-290d-4ebf-921e-aa6c8d006e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f705c491-80f0-4936-9a7d-da0680aec34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aeed03f-01f5-4e61-98fd-7aae2e87f054",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868a1895-e215-4947-bc61-8ab321b8a5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e96fe77c-a587-493f-9719-8fdb1e5b4925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2783b2bf-12ba-481b-8e84-50463d8bbbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72fb1b06-35a9-4576-9a02-afaa8a0c95ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43c547e-6bf3-42f1-b345-bdc03446f891",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b0c57e-f803-4bdc-9891-f9e9db47761b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "376e4e4d-7d88-40bd-a429-ec6d04b3a3fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8387d05d-0bbd-493e-937a-13aaf044f73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9738375-86e0-4418-8a1b-eed0f8ce33ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a491ef5-d486-40d3-bb24-9ee1dd14e6c5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35df598-8ef5-475a-8cea-e2c45ed0fc5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b3c77d4-518d-4a5e-9430-f9512f9750ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fe0ba8-e040-4aff-8d36-797485797b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6641edf8-4cce-4e86-965d-04c09e1e454d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd8f215-67b1-4525-80e9-14360cdaf30c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5630ca-485b-4778-aa27-d57884764e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2e186e1-2398-46d8-9ec8-bdf2a88c3583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81c9623-aae3-4a63-8401-77efcc7a6483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "240d8f4f-d9fb-4661-9976-1f5a78120d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba4b491-a78b-4bb8-a092-fd4af784d480",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63afca7a-dfa9-49ab-8d76-9cdf6324c692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54022247-1ac0-4cad-b4b6-999a7a26572d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2eaa6c3-a4f9-49b5-abef-1defb661047b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "489ebccd-4e98-476f-a367-55acba7eec62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc7ed46-8134-48e1-94d4-233dda5f5312",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd7b810-6c06-4548-8627-d2259c926a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b04719e8-9bf2-4632-a5a9-35d3d02f4259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6154c0-abd1-4e96-a64a-eef4a673b9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d8391ab-cf0a-4584-886b-dede5c4e5f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcab35c5-a11f-495a-b356-3796e58ee90a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c14f64-6bed-4493-8f71-ba783c6957e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74af9d35-6960-4772-a98f-d9cb7c63acff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2554f5-d98a-4e7d-bc6d-ba89ed143bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6f26862-9e7c-418c-97ee-7bea5f26106b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647644e8-b966-43a0-99bd-16b703dfda13",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd340ed1-284f-4f41-9bd3-fb7d1e65853f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bef4ec0-7358-4fb8-b457-efb2164d3bd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c311ee6-a8de-490a-9b7a-423c1f9b1c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f9bf2a6a-31c0-4dd1-907c-8a7acc7ec0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803ee8d9-af1d-43ff-bb5a-720bbc31f3b9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c4865c-5705-4d19-b54b-fa80071f66fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66163daa-0d89-41d7-86b0-958b3bde6290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f7cef0-4449-44df-b93c-57299112b200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a71fe884-1e6e-4684-8560-8b5ce2a4cfc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa153fd-61f2-4f0a-9ac9-9e7c6b70297d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa7c881-bd90-4968-990a-fb5c38c57c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "292fdd93-3b5a-40ec-8914-d0110b31741d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fe6e1f-95ff-466b-84fc-895242b7283f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c04f9f2-43d6-4574-93bf-68e6eef7eb03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179f7cb0-1011-4ff3-a66e-fd16eaf4eccf",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eda6ee8-d74e-40bc-a309-b4cd6390f23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03adbe70-1986-4404-bde2-0bb74283d797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b80d9d8-0ae6-4b8e-8adb-def45a76ae0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ad40492-6bfd-4e75-8950-e1d09412d792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d877d3d0-cb1a-4248-b2a8-3bd30c78eb22",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88fb74e-fc9f-47ea-ae59-d9507faff8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aed77302-b00e-4d86-8125-f4f74c15eeb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89445390-25f9-4dfe-ac5a-5979cad028ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "944e7ec9-1d10-4973-8030-99f199dcd072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74a3691-5df1-49bc-be07-2cf48988f70b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c533f5c9-03e9-4d2b-a75f-d6d1c6c75875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21712c93-ab14-4ea0-8063-55ced9b2ca9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d914c57d-8de9-4dcb-b0d7-4abb313a1396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2cf70b4-b943-4e8b-bf02-7a7aaa558df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef849931-0f78-4ba5-8e8c-93c4641cefbf",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1792b8-2a6e-4a15-865f-e52de1df7557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e200e108-e712-4813-a5e3-d3a04e008031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0267601-49e2-4da7-a70d-76461c288a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6f5da95-bda2-4390-a7ab-da543657e17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4a516a-4397-4d43-b4a7-e05158c85f49",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f574362d-98ff-4987-95ba-45fb0ee1609a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23c287b0-ee47-4568-95d5-38222dec0710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed8910d-95ad-4150-8689-64f9a14089dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "75eee554-6917-4716-9254-24b2d0a8eec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54de3f30-778a-4109-9ed2-08e9eaa322ae",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4765dfac-a4b5-4c97-ba5f-eb18041ab315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7ac2636-7fb7-4962-9d55-c3ba9d0f1d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319e22b5-e3b0-462b-9731-146b346396ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e95a12d-83f1-475d-b78c-3533226d0554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2196f9-4897-4b04-bca1-b9c6199eff89",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f77d66-4c4a-46d5-9351-2aa524e75b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7596e106-3f96-4c99-9a02-f46ea16cc9b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d164c2-446e-4e71-98ad-f34ab1af2e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a79d36f6-bc9b-47fe-9309-c51532f00517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0311a89-b9ce-4a8e-93c1-b6f07edb2bef",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f777f2ce-7570-412f-949f-611d7f1dc852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d66d6b7e-31c6-4231-ae84-912ae6b02ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19b9198-0006-4c3d-af97-40c65912b14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36ffb887-56ad-4065-9b92-670814d7ff71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2370752d-ece2-4c1e-99ba-f209591f9b1f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6d4777-4cc6-400c-8dd1-d4ad594cf50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a114899-2bc7-4e03-92ec-3cce5e470e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6990679-2b78-4191-bdb3-60c7d709c0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "464fd681-a7c5-48c7-ab62-f67ba05c90d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502be954-0b02-4d9b-88c4-6d5ac5dba60c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a1b67e-daf0-49a4-a0c4-cf443649e85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee010504-8b78-47e9-b959-c44f0312694b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ac3d18-a944-4e42-a0cd-d36d62f24bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd0ea5d7-a35b-47ae-b2fc-802fd3b519ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ebfb76-4324-43ba-96d3-a4136cf19107",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b8a658-44e6-4838-ba20-f2499df3ed9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca156edf-de27-469f-b7e0-5d1c2372c86c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d005cd3-2bb7-4505-a691-701bf0c73f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9e3e0c1-262e-4d01-af0f-ea379aac400c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f3762b-5a70-4519-a62e-44d57401cb26",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58db4ed6-a084-49fe-8a66-427c2a55f3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e677aad-d578-415e-a0fc-5a7bc2ca75e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f4eb2f-80b9-4a74-8260-e854a84e4269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4980d68e-29ae-448c-8994-3021f3c596d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8599bcae-c0ca-48b5-ba90-823d8a4b6723",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "022de361-d1d4-4a47-a7c9-a391a0da1aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b9710f-b3fe-4cb2-8270-0e3e334cb43f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d482a92-6448-46c3-b909-6aea8281a525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e122cb47-fe75-4daf-b32b-ad10570a586c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3e4820-8e68-4a4b-912b-b23f9e9c3f45",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a587e1-5375-4b34-90d0-7070c0cb887c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "558d1101-f5c0-4b11-95ed-d7f4427a32f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d69563a-776f-4835-9e06-10e345c004b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02d4cd10-2d7e-45b6-b25b-6ef62c7b3d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4647c34e-1ded-4e93-af40-4441d0ff1cce",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b395efb-7b08-4ec2-8d22-eddb5c63498a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a70f48e1-8480-41f3-92ca-acdb4756c1c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09123893-acd1-4d54-a6d9-c6c0a66fdd97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d0e77bb-442b-4230-a2da-9a1695fe6fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c8ec1b-71c0-4e37-8a02-62e98ff4fc6d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae648cfc-e3bc-4542-821e-6b43b051b42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e94f4053-1bce-43d6-9e87-0aa285029467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67bf106-44e1-450e-8531-cb7f9818d4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d9dcb42-a9a9-4dd1-accd-124a28c8f0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78869f7f-5f8d-420b-9b5d-11ea95e2ff46",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29c3099-3f3d-45c8-8d2a-14cba62e7d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c347a3ba-c864-4a4b-b1f3-2a175457b813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92645f89-c928-4c22-9c34-a8a8b5163836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0ed46ac-cd78-425b-ab07-b308340d7946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b2a8a9-27e4-4afe-beac-7cf5dd39fb42",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a285c92-87a8-407f-aef8-71556d8878ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cff0c903-9da8-41a6-8f53-6fa9f82ce6ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01cab79f-875e-48ee-9f6b-7b9414a5d0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1efc18e4-d9c8-41e7-9945-a123e52d1c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db1798f-69f5-4ba6-a5be-1442825da1ac",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8522e387-8614-459b-95db-1868f72aff06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8948e6da-c46b-4e25-a22f-b7dab7a2f3ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1258ec5-0964-4c55-9703-e1d93d210c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc201a08-f9d5-4147-93c5-9160e71fc563"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "adbd562c-0c81-4f62-a242-9a807efc951e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae7fcd04-8339-41ec-a534-a9e5c0eb3513",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6790395c-c92e-4585-9b12-ab76a14e331b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "93bde7bb-76f7-41ae-b372-dd008d054f2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e26fb68-bfe9-4584-bd38-1ff678b798e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "010d9dc7-59bd-4724-b031-b4470ad2790a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b90b7db3-9a8d-4205-94ec-297a8e5fcbad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9909122d-a3f8-4a04-ad00-060d6792bf09"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3642a9e-f233-470d-8892-d67c400b6a7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a235594-3e2a-43a9-8f21-479290344e60"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4351a1cd-c090-4bbc-8ad0-2252e35790e0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7deff3bb-9c47-4cc8-b29b-50037fa004e3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "165fa503-dd79-4b27-8a85-316b04566f93",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95a567dd-1026-464f-be6d-bbe51c651ef4"
            }
          }
        ]
      },
      {
        "id": "77ba62cf-91d7-4e1d-982e-613c2aeb3502",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "a6e72ce1-0f0f-47da-9c83-90c9290db14b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e6ef44a7-a7fa-4ffe-989c-2e27fe3d6997",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "985363b7-9b9f-4133-ac54-52da35b219d6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff85cba-b1e0-4ef0-a4f4-71257dd7eb5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07d55669-8b7e-4a17-97b3-92bf69df058f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40f3161-16b7-41d0-896d-79e5484e102c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "610d2a13-9669-4c68-9677-e76c589e4802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848eb7e2-55d8-43e3-9367-3e92d4fbf87d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b9c3c2-9605-45fc-a337-ddbc7d1c431a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "796c472a-fa43-45be-aa58-1a9c76c75803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a004e265-2437-459c-9aa7-e83cbfff8bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3da3ff3-c0fd-421e-b0ca-8a247fb5b2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab3b10b-eb0d-4814-b068-6c17e33fa5f0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8bd5797-cd86-4922-8fca-937b6ddbb5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84696877-7c8e-4342-a5da-4ff515880f52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa003b30-c565-417c-9d41-8f0c58cf806b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "405b3ca3-5de8-45fa-be11-4733b94cb12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf981ff-ba8e-47e2-a8ba-e2f66f158814",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c3ba2f-2180-4b46-ab3b-e0163967e9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf34ed8-10ed-4548-830f-80d792254486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6c6056-3a04-4317-8d94-47080018bb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "946a7ae1-fd26-41a8-9027-c391b34a16ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7bd7f28-3717-4140-a80b-c72b78d4be78",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4368f31e-dc50-4e08-a608-3e3e004258e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5124906-c472-4d73-bb83-2eb1a3a81f48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27763cc-b105-455a-a752-78529984bdde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e69bb1a-3c6e-4845-a3c4-d555b56359af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d74ea738-c465-42b5-9ffb-40cec69fdc64",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27dc16fa-fd98-482e-bf7c-07b01825bdbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cb50d4b-e1a2-4f1e-99fd-da5dac3d952d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c63fed-f208-48ba-be03-c5b459fb4490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c351ae94-560f-437d-b9e1-a7cb42e4a44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33cccb0c-f77e-487f-867a-4a43a7f27875",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54abcae3-9d60-47ad-98bb-bdc4583aca06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96bfd976-ec2b-4d18-abe0-9fa490e94c8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90eec0d8-20a2-424e-a6e7-5ebd35c73a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fe203d3-63f4-48e6-804e-027843b9bfc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24460800-085d-4540-af55-a23479aaaeb4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "344a22da-046f-40e1-a2f1-cd157d4a58bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5354bdb-3511-4dca-ac40-96d8b896d55f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54cafff0-5f65-4848-a112-14803081bdc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6a56eb6-176c-412d-a68c-b681234d18f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3fab7a-465f-4710-9035-bebc6530d6d7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c9afb7-a933-4eca-ac3a-8c478152e6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8134d674-25bc-40a4-a130-6bd174132f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5dec1c-0bdb-4abb-8cfb-1cd381c47cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c68bcf2-04db-434e-ab91-2956d6df3371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ffc160-6bab-4742-aed1-02123e3170e0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fe726b-73b2-490c-9748-349aab4fb114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28596e6f-ab26-4230-9b15-bc2821ff1b67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aed00c0-2c4b-47b2-82b8-58bc889766f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3cce8a7-7853-47d2-955d-6648438fe5d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e509d6-e080-426a-bbf1-c15be37524ef",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ae42da-8be3-4020-bb24-503b9083a34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38f8ca06-0338-4e2a-b615-070f372d43d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02218f26-28cd-46ad-b01f-69285b37e08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "04b5a645-c970-46e7-a298-a27c5e3f7490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9699fef-d161-485c-b917-9ac016f882f9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6217c0-1f13-4c0d-9c04-9dd9c8bb8708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b84dddfa-350b-4676-907d-f07882bddc4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74648e0-50bc-4217-88d7-7d57eda89c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "90c6c258-1d88-4f2c-a708-439dc685b6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66a9459-3af3-4b21-a72d-382ef3b2a021",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74108e65-d232-4a96-a00d-2eb34aeb1053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76c72f9-02e1-442a-82d3-f4ae5344ac3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed358692-5439-46ba-96bd-a6a2568b1e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e81945f-a53f-46cf-b769-a2b5e9264c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb0dd8f-5bab-4fe2-8b34-c26bdbce3176",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2648fbcd-07d6-4b12-a4c2-56994f5fc98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d26f909f-6e4b-4f96-8af6-a2add71a7cd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01840191-7da3-4d04-90a0-c7b463df58b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "94d0db7f-1e41-46c5-b2a6-04d662e71c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7671940e-6a88-4552-8c16-03b4ada85d03",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2929b20d-6fec-4954-878f-420e001a7df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a3093db-9c8e-401d-b50b-baebf72bf2a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34999d2-ef41-4bde-9b3f-001dd6cebc1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eeb1a02-cbdf-4b41-9fba-b2fff570dd3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3ba461-a540-4818-95b8-cd9304eefb85",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6723e6a-eb59-4c98-80b8-d976ee638ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab9a3212-88f6-4f46-9007-83a87dd1ae92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9221f3-8560-48e9-85ca-02b7d74a9483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fade964-a5c0-43df-ab1a-20a392c8ff48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47ca8b3-9269-4aaa-b695-00230d0ea91a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f77f32-145a-47a8-a79b-24065f7c27c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "203a5497-aa07-40fe-b2de-e131163ae7df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03cd1ba-5e1a-4ee4-99fb-c5139f521450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca004057-f389-4f3c-af87-79a6aab7012b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0249938a-34d9-4d88-8235-f2121eb59de1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad4411c-28f4-411d-a81e-4d388d12920f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3cd8167-04b1-47ee-9ad4-3cdd102d6456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95fdf6e2-f35a-40c2-a746-9dc8c0dcc263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "82c17d22-51ce-46dc-8a77-5ef39dfed159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643ffc5f-2824-4667-90da-66c5ce616dfd",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3902db5b-bff8-464c-b9ce-704e9cb1bfe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bca968af-ef1e-455d-836c-3720c61c3763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb6cfad-8211-4b54-ba5a-6ede5761c831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b286708c-87fc-4bc9-a2f7-ea91a1c782e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad14c834-a9cf-48a1-9b30-df99768ab3a5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86dca2ff-fe4c-4762-a1ff-c6a49d5bb525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c57bcc-4f64-4215-b1c2-9f8d43b78afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a9adad-1ba5-452b-a42f-021557075b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c5c7a7f-a354-4075-a6a5-568f16b48a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d365e1-7cf6-45d0-8071-7a87d989e26b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2cf35a-3088-4e45-9d08-ba15788ac147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca02f557-d098-41e8-a31a-f942cf2bb48f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d9917f-7aea-40ab-a451-260ed58c9d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05611b8b-10e8-4414-97a7-99ca54e8b53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be545ec6-0564-4c41-8677-86046e3a348c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4a6d01-81ef-4192-8f49-10239a8af59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73158538-330e-419d-b251-c3e8c1a0bbb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52708c8a-18bf-4855-ba3d-93eff5fce754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4fbedbd-6eb0-4263-ab85-688d3a09b218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d459bd-26e0-475a-8043-8dd5fa65fb55",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "336f043c-001e-4e7d-99fe-6926824bbcb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e91470-f5c2-4b21-89d8-a244c90d29ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081b0cc3-8672-4204-9c11-c04fc6c3cf89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08201a51-7510-45c0-a671-9d75b778a2be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebea4363-a12c-4011-8625-69bcc1bc5467",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7984935a-07c9-495b-8ed2-bd1162dc979e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054fd383-e505-4234-ad62-aff22ed88dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1990facc-9e75-471c-9264-d08e868867d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb4dcc37-4100-488a-a9f2-9acee4cab820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70bab9c6-243a-4cc8-9ab1-ea790d1dda5a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dadc3e0-0330-4bed-bb94-2ae9c4cda3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555ff77a-b8d5-46dc-b7a7-92bf3239213b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b8ac74-c31b-41d4-823a-4c4093cda4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c9c4c2-2203-43f2-8571-3e6892074679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c48fcf0-f39c-480d-91fd-372592785790",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0a041b-a55c-496b-83df-39006e930d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60ca1f7-261a-4d89-b426-7f0ca1447c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b46b4af-c43a-467a-93e3-ca71c43d4214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fa63479-28cb-4d06-9e78-681af3c2a226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f713553-98a8-44f4-875e-b05b97bf2bd7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea493b7-ffd7-40c2-8ab9-f37fd8d8aa8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5ac8b01-6795-4a23-aea4-0cd2aca9739c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5a59cb-010e-405e-a23a-841944e4b666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "398ce0c8-c978-4777-8da5-7fe4f53617f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b704d408-e438-439a-bf4d-eac08fc652cb",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "906224d4-6d23-49e5-a48d-ee684fa52692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1419e0-d959-4fe2-877e-1a172b960fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fad671d-2ff9-4f71-b678-f3dfe3ab8253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef90ceba-74ee-4658-90da-56b3fe616ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998fd5ef-b42e-47e5-b955-5f58d2adab0e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99d5b4e-65ce-4dba-b02e-a7073b75bf1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c171e7a1-ab26-4cf5-bffb-666f68260150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5348ef0e-851d-4321-8dc5-5f5bdabd2df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20a84fc7-deff-4dd2-9767-ce440d8f11fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c9d578-b944-4624-b9e6-22e1f0d54832",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac297ff-6a3b-4c9e-8253-8fdb3851fefd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb5e8e6d-279f-4bc6-b8d0-6ce18c6fe95d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc8749d-feab-4d1f-8149-f65f313d461e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "600dbdef-7036-4194-a204-63eadd6de9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e48039b-0050-4899-bd2a-83d52974752c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66b5789-3baf-4a4c-a727-a2b21a38948c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7edce4f3-364b-4176-b0fc-3995c9794d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eccebb6f-8ce9-436a-a4ad-f01a050ceffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "648dd6c4-f6ee-49aa-af3a-127274fa7dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab2451a-5032-4bae-8525-334d64fc95cb",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbda27b-e15b-45e6-aee9-c52ec5801241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77928ec1-f19c-4c17-be99-952bf51d2482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c68bb7-489e-450c-b872-7fd7518e37b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d94e36be-06de-49dd-82ba-5630a94c743e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b946f1-3fcc-4e30-abde-ea9017a7e3f3",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a068c8ed-2e04-42ef-b807-27e72c801f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e81f05a4-22d1-4c22-8386-5e6e36cbb3c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3c49dc-6201-459d-9e6b-9025fc32f0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a3afe19-710f-41f9-9e50-ccf6a18b0633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f9dcd8-4ccc-4c15-b334-9b2729ffd24f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "370967d3-8f91-48c8-afd1-3c07e30f7021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f6b01e-1a3a-442a-8e1d-97348450e14a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d986036-dfa6-4fe4-8856-075b086094b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "124a96db-7011-4c32-adfc-23ba45321921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36406ad-1836-40a5-b43b-9b493ff25273",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ff29af-c219-4128-925c-488d6d1cd147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af0987f-5288-4fea-99b0-c84de2799225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3bc3065-23f1-4510-bf30-d56c811e39be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "876e1270-9b47-4ee8-8c3a-8d2f2daff64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e64000-40a5-4262-9e39-f6e7cb2475b1",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b754061-55af-490d-a96e-876433a4b41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c89eb6-5702-4ed6-a1d7-4f9453bb924c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120d2e73-6e83-46dc-9459-574e312b9eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85221a9e-6870-4651-9f41-76d6a729bb32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d07bd7c-7a2a-4789-ad48-433ed460eff5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "750f7094-ce0a-4f6e-a0e0-e4c06ca48f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ec536f-0abb-4e6f-9afd-3fc11c099872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc00246-d418-4a04-bad4-1da1bdee6cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "103464e8-e98f-40fe-a5be-db6700bd0b7a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e8d3ebb0-b3fe-4d59-a0f4-8fbef779c685",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bbe31e8d-69fc-4334-8670-f67c3c585c9a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78625637-8fef-4dd2-8a1a-3759c72516e3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6d4b90b9-9174-4bf5-b97c-a85930c44f7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ef87af-c900-4c63-82e8-7ac94cba9dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4bf9f1b-ee0c-4f2b-8cc8-4f818fc41341"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c082932-1279-4b11-a26a-4a5322bdc22a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9dd9fbeb-2ad2-49e8-b39f-19cc37b60c4c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7046c32-8b5e-4178-8bb9-a06d01bfbb14",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19f67242-2b49-43b7-be82-72a03e2f8a78"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96458bf2-5d47-432b-acc2-c14ec9d448c5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0b55f489-a472-4191-81cd-e10bc97a9154"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e355e46-83e3-4f32-9259-eba16d187b1c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c4a75d89-4471-45dd-ac2e-6b9c00a54d1e"
            }
          }
        ]
      },
      {
        "id": "0dea18a6-b645-455c-9db7-ad89ed026de7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "810acd4d-9d2a-4cd4-804b-455d000629a0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "319217c3-4851-42b8-843c-70d7001839fe",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7345d122-831c-42a3-80da-d804fb4352f4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4dab9e3-8f91-448a-834b-24aa2f62c6ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c2c898-be78-4678-8671-97362393074e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0be35e3-578b-4776-bcf9-beb12fd55613",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f72f688-b1a1-475a-9200-a842463f9d5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed899e0c-fbed-4bfe-adb5-08286015c890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd51863b-7d9c-4889-b19a-a639bfdba33b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b9bf78-9169-4466-9a7d-6cfc85dffbcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbbb2ab4-f821-44bd-82af-bcda4b1472b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1f49ea-5798-4756-abec-6907169ae9cf",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1849a8-2f13-435d-8846-19bfcd152fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a3891c-d7bb-424d-9f5c-324600b1c941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cbfda3c-ffa3-4543-9b2a-5089b686ee75",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38fba54-153f-453e-97a0-d211afc7ea67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6060280e-40fa-451a-8815-b3aa22876e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8789968a-076d-474a-bf61-a9f5500664aa",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ccd2acd-79fc-4162-a8be-4a1f337c5019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdec1ae2-09b4-43e8-840b-39e7c6d68923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d899e1-e0ca-48f7-9351-9cc372f00667",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e007a0-b33a-4cdd-808c-c4a195cbf0f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ab33a7d-2268-4c54-be05-b177ed3df557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3cba351-b818-4de2-add7-2674024a82e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "951da68d-8ef3-4176-8320-bf952f926f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ac3c9e-5a88-4542-bc1d-590ecff75a6c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b4c1a7-6718-4f95-98a1-d631b2d301c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d3b8484-4d21-4dd0-8620-3c7d4dbece61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6dc332-5842-4a01-9d49-e533fe3f4110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c81a0e13-1697-4058-9878-130df7012924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f9dc05-d744-4982-bd57-dd93518c4c9f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb80cb57-5917-4801-b51d-9f9424cb4fe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebf2ff48-9029-4c41-8982-96defbdbb32e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b26bd9-8ef7-4278-9183-50c84c789b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd279b7-97b5-4031-a914-37198bcc6950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18d58c6-80c8-42b0-9527-bde4be25d8a4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba25847-037d-4a19-bc90-b82e2909738d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc8fc1f7-3625-4364-a414-b1aab1d235e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4f6ad6-a522-45e0-b0ad-b79de5f0875f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3177de37-8c2e-4b6f-ab29-d6e3d9a31203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a29cd2-5275-4578-adb1-8933cfa454ac",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734d181d-1736-4793-8325-a006e94fb48a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dcc0a82-39a9-416e-909e-9c2b6440d134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4cad6a-17cf-4cc9-956e-ac33908fb8fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a0e2de-e42c-46e5-b91a-ae85b2f997c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa3c94a-2e5e-48e5-9dfd-79161fbc4a06",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f6cee8-0411-4214-ad3d-e91bf1e4baea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5bfd76-afb6-46e5-af06-353c4c85bc1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b843243-e981-4c7e-815b-284b178ddb88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8461a121-81fa-4ea9-b1b8-b19ea361c363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6eac8f-cf1e-475d-97ac-9bfa131680bc",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ca31a1-5b28-4b40-9ed3-2d52f55ab4fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83150663-ca0c-491f-93b5-51eaec28eecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88acb0ab-0bd2-4de4-8d16-db021ddd8ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55d3824a-c0a2-47f5-a6cd-aafa6d39bdc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55126dad-ddcc-43a6-84f8-9a7c0cf347d8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bce5679-9f97-4569-b691-cac57fcc12f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b69719ca-a3df-423c-af53-3e531982e249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89082af7-ce03-4f49-808f-f13fdea56501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cfa1231-4760-4c21-9195-fe91ccdeb9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8688aff2-b51c-4008-b305-ace93c591a5c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d474c94-4948-411c-bb00-519d6b7f2a7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "346e208e-9ecd-472b-b901-d8a0169339d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c30d765-3e6c-474a-bb19-944a84f177de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9fb516-acc9-4982-87f0-70db5ce8168e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e066d9-4ef5-47d1-8848-8002cdf3d70e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "876c8d4f-8d47-49fb-b6fe-bfd9b18b60f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26ec3962-f449-421d-95c5-a71df77073c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1968ea26-9bd8-433c-80fb-5c051f098f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da1d7183-fa0a-4f2c-99b5-af24a0b7bcc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1afd9f6b-0a1e-4257-86b0-9d5be3207eea",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a36b312-270f-4c6d-adc0-b71bcca446e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1669cf5c-a33d-4162-be26-a94b299f6351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73f28f8-c0c5-4109-8de6-ed635d2b7f7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6fd058b-3d20-4d6c-8710-735c03a23c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b542bd-453e-4726-aeca-a5df0da672ab",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e2e3f1-7447-4254-a05e-e40c6c67dae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b7dd8af-bbf0-469f-ad51-2408fbbfe23b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19fa66b3-67f1-48df-a96a-074138715e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "480f592b-d976-45ee-92fa-adf4eb9f454d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd3d6b6-fc6d-49f0-9b88-a53d1c083990",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b839e99d-313a-4324-9b79-5474f2e3223f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1617bae-32b6-4403-9209-5401aebc883d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a3932e-89c3-4ebd-84dd-23a591512c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08716926-fc95-4f98-babf-d621a883afb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6790929f-8367-4f60-9793-6e0eb38c951f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3af2c4c-bd10-46a5-a0ae-2704ece6edbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5db0159-e577-419c-9487-616456a0c105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82beb5c-d181-44bc-a808-fab61ceb5ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3480a704-daf1-49c5-8447-08fe64c844cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa57e78-4fa3-4e2b-8dde-a97ffae78796",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af39fdf-b4c4-493b-ae63-bc3b9aee32e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24053c9-1bbd-4f14-8a70-1f1982b3050d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67024796-0abd-4ecc-9b8d-ce381e02b5b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e644cb-85ea-48b8-bc98-c0565a78b224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914aad56-347f-4424-be11-837a0612ec75",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a785cc68-4c8f-4798-bea9-aeb76bf48e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b851e7-5e73-4bed-b946-471e723be858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9510d371-e9ab-4e71-94e5-e0f92f7d481a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b48c36-6833-4bac-88ca-cb884005c3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0e6f1b-b353-48e5-8920-5214d960fae1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5e30a2-590a-476d-93e6-4ec38b7b629f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b20e3a-9201-4056-b02c-d632aa6626b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "487ae476-a62c-46df-8429-c1b4e017e1e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf002ef-3bd2-4cea-8929-b963ffcd03f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ebbf3e6-c618-4fee-af03-b54beb95067e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990a0530-426a-49e3-bb94-2152263ca54c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b0f8401-37b8-4918-b500-f0ab4f886563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55cd292-a086-49b6-b1df-be67fca9a05f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d298aac3-413c-4799-b642-98b471eeddf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68effbca-1031-415e-8b4c-35cc06571199",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37168ea1-3b00-479b-8a12-62d74d53b716",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f8e82ad-6f11-404c-b65e-528566c7a657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa23732-dcf5-4393-906b-75b0aadf8224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "603fc9bd-eb3e-49ca-be54-e91c0261fa68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ccd802-be26-4cc5-9f8d-cef621b7e37a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ffc930-f862-4d53-8268-657ba095b62a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e905b4e0-5c25-43b7-85a3-9ecda8102169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4066aad-64e2-48a1-9896-e2cfa53a0340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfcffaaa-8b21-48bb-932c-f443fd274dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95db5848-8108-4f1d-86b5-23aa879e22b6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e6b45e-e891-4f20-8ec4-25346b713d27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab5bed32-de90-4895-b56e-a3abba68579f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e46e546-0054-4f2c-8d3c-c17744aff6c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "678f0845-6bb1-40e4-8c46-a73412fa8f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0a6a0c-4c14-40c0-985b-21281f0dcb5a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf658a3d-b2db-407b-a414-95d1046cc9b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebbfdde0-5284-4089-9fc2-34d0f37a7810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f430e4f1-2865-4f6b-99dd-378f9dc90763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9815f06a-b8b9-4066-9096-1c106321866e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7357738-0e0d-4936-a70e-85eea79b9664",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294996db-2cce-413f-911e-47e5d4e919a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d084fe9e-50cd-490e-a3e4-07dad5181b2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af49838f-f5b2-4147-a725-0dd6f26fb2cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c2fe412-8dce-41af-ab78-eafce1edc7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014c7cb5-0a3b-4151-8e25-9b85ebcf987f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ac0569-aac3-48fc-82b0-ac4cce2568d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dcfd7a3-d5e0-497e-a106-53191b9aa8bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f80e987-b3ea-442a-a856-ec4ebabc29b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a69ffe-bd14-4ddc-a4e6-3d366f7fb396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0965816a-171c-4fbe-bc46-5a68dd0ba6cb",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf68f7e4-6d65-4967-89d0-86d796d750e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ba82381-1583-43ae-a40f-ee439becc282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84ddefc-e9cb-4e1a-8d31-a9702b31ccca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f88d95-745b-442e-ae43-895efbf5d8a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133ba61f-074d-4292-8f8c-66168196283c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42abd37e-ff34-42f1-a7ac-714a784e7f8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daa7acab-0a1a-419e-82f2-199738cdda44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d868709-302f-4412-b493-58d085deab16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b79b7301-9d1a-4daa-b714-7fdb774afffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7060d4-0ad2-44cb-a9d7-896a63a0ea26",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e19a3f-1359-46ef-b075-115e6a694abb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f580759-435c-4059-b7b5-329322bae589"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d6f652-731c-47a1-bea1-2546ce8524f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8de271c-6a96-451f-97e4-fbacc923c0b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108117fd-5247-4f32-82c1-fb5e8f266202",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81dcd7e1-27f6-4e4b-9381-c4797b6c031a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d4ffc99-9476-4b5b-968f-c78ee2fd88ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43f8b56-d842-48ab-99d0-23f4d9549787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "404bf789-ebdb-4121-8d4b-0d22efc2aead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891f0ed9-1275-44ad-8d85-8001dd0ef06e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d02c81-6be3-4137-87e0-bfcd52acf384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53dac558-c8d2-473f-83c3-32e327b4981d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc964f6-6be5-4bd0-8b96-e3e5badca2c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2032912-bdbd-49e0-b473-d07339451928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4985aa70-8f31-4aad-b3ff-ebec31201302",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8d304a-e518-4c1f-91f9-3de5568682e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf50c32f-14e6-4a1f-90a5-4ea18e7ef740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66905d5b-e390-43a4-b733-de8fb4248074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e5102d-d3bc-40a6-abd3-acf99176533c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8803d28-1da4-4c8c-a7b6-622946e59075",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd52933-cc67-459f-a264-6d826eb78f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24377642-e867-414c-825f-ca55dc666bf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4c25c4-85a0-4206-98dd-0410f2f425d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23221f89-516b-42d2-94c1-6e60574f9070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94b9fd7-a453-4492-abd8-0dda5f701602",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5463d4-77bd-4949-b506-cea0092dad44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "892a8ea1-7149-4b45-a7c2-78ee70041d9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70eb63e2-c72a-4bc7-94a0-5ad60690d13a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "868eafde-ec68-42ab-890f-7cc4fbbf5bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498b772e-499a-4345-9589-5e12aed4aeb7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1d8f73-45dd-403a-901e-72eab7c877a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50092db2-1fb3-4604-9548-dd902a45c1a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a8e08e-b4b9-4350-8981-9a0db4bf18d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c77a10-900c-439f-b1ef-806d9f806ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5835b3-418f-49fe-8962-c5abded652ae",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b71c77b-d669-41c7-9e62-878391cb472a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14393889-d26a-4efb-a8bc-1d6c82472cac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9cb407b-4d94-4809-88b6-63ca13014921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "579f9033-8a86-423e-bcd8-46d222ba6419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f7fc51-e5ca-4fcb-97b8-42a0bfae62b7",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389d2b8f-20ee-4cb3-984f-2b450353e3ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d51d5200-57d1-4ffe-bc11-e101d91f60e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e03134d-b688-450c-92bb-f19cac509048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b396597-fbef-4876-bd41-92ccf5541508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d0c6db-d70e-476a-b9c9-b5adff50f990",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a410db-3550-4a33-a259-808bc3bb0270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d08ad62-a7be-4694-98e2-854bfc311aa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3b9cfc-238f-4c47-8f4e-fa515c905a47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af19de8e-e003-4fa3-b04a-5b9f832a9623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd8b2aa-14dc-44d1-852f-c6c41e284111",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c90778b-a1cd-48e6-b8d4-f312c14718de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32467234-d188-44c1-9371-45990c8c9067"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45db5e12-6915-4609-a1ba-083213c7222c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0cc5ae3-9cb3-48f8-b09c-6f4604a80193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503aacce-5a7d-4f57-a07d-cb86c3cfeae3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef5719f-0257-4f1a-801d-44ca8f60f458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e22d401-7910-425d-aedf-97a191ad6b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "374add78-6e6f-4ce9-bf2c-002e156bbfd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44eb0b8f-2384-44fb-8f71-1af826378e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b73a7ef-2246-40de-9485-287b0c2550cd",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0945b90b-a92a-4525-9d9e-dec6ca2d6910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1473f36-7f79-4bea-986a-0585fddceb7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4b7690-f898-4423-ac78-28cfc1f6ecbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cd34f73-b283-4012-bac3-01deb334a631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378a07c8-ec5d-4a00-b59b-24eb8236049c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a2e45e-340c-48ce-ae2b-0a7f12cded00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae635f7-e1b2-414c-978b-31812ff673ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ee2e22-48c5-4dd5-8f4e-52e99506a064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0035849-4c75-43ff-b2e9-3fd6dab8216f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155a853a-81db-493d-953d-0de4796beff3",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1576a727-ab8c-4e5d-b789-2eb7369cb65f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a102f7f-7a7a-45c4-b2d9-b1d34e615c58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "483eff23-ffff-4f73-a9fc-cfd1bb89f10d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b99e7fff-cf50-464a-acd4-71cf6e27c6a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e8a906-e7a2-40ae-bae9-6b798ac305a8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847eab6d-ff16-40f7-9f71-7b2ca66732d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a4d0ae3-78e8-4550-aeb0-2afe07b27298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b2d6de-b1e2-4071-9ab1-027f9fb90c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54641e12-b5c1-4eef-8d2d-4f95561ee325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a692133-6100-43ba-a616-d39413ed5b0d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28cc448f-2197-44a3-be82-510692d3bd39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d75db41c-0292-4fa7-885e-17f33f448b26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcbdcc9d-eb63-4be5-aeb6-9374c479f80f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f909e220-122d-4a40-82f4-74c9ecedd836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b34f5e0-d41f-4121-b5d8-91c4557fc225",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e94ab48-d017-4d8f-9b9a-6c53d1956acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20873a74-5361-4574-9a0f-00ceb7051811"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f05ca49-94fe-4547-9fc5-9a3f04f0a77f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41438494-9892-427f-a005-b9b79092a732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6336ba1-74fb-443e-bfee-a449b7dcdce5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013e9584-e2e6-44fd-929b-0762568769d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "007f06b9-eb09-43cb-9ae4-ecf867d8cb6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a83b372-1646-4ac5-8611-d96c2bf618bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "131c67f9-387d-4c1f-9a5d-88b6ecf140b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692c7b14-53d3-4681-b439-274bb9c63c39",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ef7f4b-a13a-4972-a792-315c96e7716f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eea65cb-6beb-43dd-b344-395906f8ecd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f1897b-af95-4abe-8649-30302951fbde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12e9b30d-e461-4a45-a1c8-a390c9648c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c29427-1206-4532-9698-2d07372f685f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae88d9e-5d03-481a-baa6-6b3fa3d071c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7f06a8b-1127-44ec-a6de-738404f95111"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec5aeff-8f57-454e-ac19-dd280bf19fbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec28880-90ca-4d61-a6e9-646bcd7ed651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471f283c-12f0-46f5-b711-1d974fad03ea",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3662da4-3136-467a-a27b-580933d75388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52a2906f-90a4-4634-a42d-645b75cd2c3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05a7976-52b4-4a45-8388-fb274bd356dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de91f416-7de6-4aec-b17a-535eb40d588e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49969be0-f542-4955-a729-fe3940721349",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7e920c-f51f-4a08-b97f-c364b3b2127a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5c255c6-5942-4669-8e3e-60ad66962e78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e30cd4-82fd-45d1-a952-127b52c077aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a268889-eb3f-4810-87d8-b6d234048e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb592a5-abe3-4a7b-a5ed-fc5610b693a9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a017b3ce-b154-421e-a5fa-88089e4d10b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d274a33-025d-4901-9478-2d07f3a3899b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b69edec-5fd7-4b62-a1c0-46eaf5ae9888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfcb52ab-4a32-40d3-843e-b6adab597af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b475c241-267c-4695-9e6f-58e78c5c6930",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa987bf0-b265-400f-883a-7f0274f4869c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afda67b9-3cf0-4e65-9618-ca9fca457172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "820d215a-5701-4262-815e-4867ba58655d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54ed0dfa-eb93-4b55-bc47-437baa145624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6753b71e-d7d9-40eb-8474-297704e984d6",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b0feaa-b7f3-49dc-938a-68d168463413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d84e981-d48e-46a1-84c0-56e844ca7576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1500c5d-fbbf-403b-a6be-f2b0efff3055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69fe1bdc-e8ee-4f86-a271-120b005d6c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b36e9eb-fd74-4c19-8e1a-b68e03e7ecf0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb4b8cd-22ba-486d-89a7-dae433d615bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24b90451-af95-4108-b199-4689ac14a5a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2c3aa8-8827-4715-b1c7-325233ea3952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c1aa641-b064-4f88-8531-937b8e2c1f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca97b997-c2cd-4b72-91f4-83356536de7b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6bb23a-d21b-4473-b478-fead036a8a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d6a0b7d-942e-424b-8687-43726b814b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0bece1-f128-4260-9c7f-7c082a2e3ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4459e28f-9725-4a3b-9d19-d5c9a6f1eba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e77c496-be4c-4260-9c77-2e79ddc0c8e4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c30f8e-07e3-450d-9915-51b724a04fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf666ab-035e-4ca1-a217-5a9420dff1b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e93e5e3-c3e3-4870-b187-76be4c3d37f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a848cd3-b373-4080-845e-00999630c983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af72e22-4c5d-4b55-9106-0b05e4632047",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f01181-3db5-474b-ae00-245a7b3cd914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d88144a-57dc-40a9-b32e-6d077a9b6e8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57646123-0022-4ffc-a834-d37d818e1f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "314a6eb4-49a3-485e-ad32-1e89fb69dbe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c22c4d-5ee2-4ad8-adab-b4126291fb4b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a823234-1fed-42ef-b041-31d04cd62917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2d12ef3-55f2-4fff-b51c-ea5febc4cd3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e182c8a-1a55-4621-9cea-e364b1954acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02f68512-9438-4b6b-8f78-ae5beb4d17de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4ff3c3-502a-4081-9e07-c10f61661342",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d2608b-b7a4-4427-b6ac-39578aa8f314",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94e37c34-a30c-4098-a676-3f55e708a4a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef987c5c-de55-41df-b645-1b6f7e682f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a3bad7-8246-4d24-9d9e-3f4a20fbad64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be015c3c-b62c-4dc5-bdbe-39816e1173ec",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d62cc92-a2c0-4ca8-9136-0d22a4bb7ac0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efc4c5c4-3755-41ec-b2bf-62b6d40f8dbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50a9c2a-6ba3-46d3-9796-95af58d2ced6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d826461b-261d-40aa-a5df-2650eacfe34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febd58e7-cccb-4143-8572-bd141a7db00e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b19611f-29f1-47d3-9e92-312b15000d0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6270d16e-0d03-47cc-b947-69e305c17ca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da28ab3-9230-4c61-91e7-aefd8da9119f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf310d3-7024-4a9f-a6e0-8a2687f0327e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb19eeb-cd81-4698-a82e-eba736b25774",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9dd19d-ae83-41f0-b381-86edac3fe01c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9553311-31ae-471a-a27b-76f9fa640c96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b6ac7a-193f-41b1-8e73-cb5a29f0ef85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "323680e9-9902-468b-8c88-d034d79cf406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5092abb0-15ec-482f-a9c1-12b6730dcfb8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fcbba8-f3b4-4cfd-a61a-344d718561d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e221416-2328-48b2-b1c4-2198361efe62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58fd60f5-c636-404c-9f2d-b9e6c87fffb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "386300ec-8be9-42f8-a02c-a69b8184eb63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ceb7ec7-ffc2-4349-87ec-f2eb84f76d80",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80870f9b-41cb-404b-9285-2f7b4794e618",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24a0c451-b074-4773-86eb-5ffcdb25e6eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "974e10b8-fded-460f-9a61-f4c200d5bb75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb24d9a-a455-4bde-9792-4c0e4f7e8fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade50228-e0da-4eca-a7d7-8163473148a5",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3468228-8ef1-426f-b365-e0c8f194a151",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a33e3f7f-d269-40de-a28c-b29720c5404e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeff1ade-fa4a-47e8-bda5-9c0b5d6dc40c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4416512b-592f-4818-a620-090eeff4fbb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f0f680-8c86-4373-b720-39bb7077defd",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77510ab-3601-4a26-87bb-4b74bb41fdf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85b06560-7c18-479e-bbad-5b63865b6577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8fdca51-9d7f-47ef-8f8f-cd561b050233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eccb317-6746-4dd4-8bbc-513e65db4875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a6a528a-1d59-4ae2-986f-9d152e2fd85b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e62b80e-3ba7-4a5f-89dd-1581ccb3f106",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb50aeb1-1808-4292-9a1a-c8899a1601d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21089ce2-b739-4619-b300-70b94880256a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d57d58e-b1d4-4039-9f7b-4c5924d095b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5892b6-8ba7-4a40-81e9-63daf23a815e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceeb295e-4801-4f80-adcf-08a670d6dca2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54432757-e7b3-4c2a-8d62-06e41d9199ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0189051e-0412-4b0d-9f09-3491bb5b9878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2221d5ae-e667-4d33-a3ed-2a179f5f760f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929de868-b198-46a4-9ea4-7c432d03228a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b706ce7-f2b4-4ae8-8708-e5fccfa69020",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4eebca4-7563-43bc-a674-e5cf86525572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d299ce53-2282-4344-9681-908a2c249f7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f54a4f61-cf5e-4096-9aee-e24ccd6238e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad0bf1c-6740-4a8e-96b7-912c537e0ca3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a528588-c5fc-46b6-9e98-960b64d67da3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cffc9d7-452c-4ede-9f17-8d4e6ab5bde8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d440507c-533f-4a4d-b09c-652fdac0514c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5101c7c8-5ace-4a83-a5ac-20b778d648a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22654a23-2ba3-4ee3-8da0-175de9a5bf27",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db33582-bb5a-41f1-a646-6d7daeb5e54b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da159d60-e1cf-4c5f-a49e-b1eb97930578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7653bedd-549b-4596-a32a-d976f7c847d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "149061bb-bb80-41dd-a4b4-99d4f4bcf0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44fc4bf8-60b9-43f8-b59c-dbe18bbedfd8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92cfe2c-d75d-43bc-aec1-2126540b49cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ea5c89a-dd81-4d05-867c-f14faabb31a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07112504-18da-4428-9287-1c7ce93c33da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d4628d8-f1eb-4a3b-8916-015ed25dda62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0821b782-eb00-404e-b121-cc67fab0ac15",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac8fb00-b85f-41a2-986d-679c222d0b76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "883107db-8035-4260-b90c-785525e61490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39420cb-ce5d-415c-a553-6609c492fcfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb6d8ded-0a54-4922-a2cc-09f7cf9542e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e491b19f-5809-4f80-8a57-bc519ac7e898",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663dd005-db7b-4baf-9ff4-7561eb4bbf9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50699ff6-2a34-4851-9487-f34b5b961a24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9218f7-4a2f-49f1-8c1b-5b5da29e0f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "844a9a89-5a82-4d22-8947-d001f7d8184f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b40ee11-fd6b-4ecd-8245-d0583229024e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9102f2-d0d2-46f9-b681-bc3e25f4ee28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2aa04fd8-b437-4e89-ba89-3e7fec5f8e89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35fdf0b-e0a3-495c-a628-ff3687eab53b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a36af6e-0e20-46a3-9240-5317b033b653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52f14e3-2792-440a-8d3f-890916bde82a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ebf6975-0ecf-4310-8e03-e9723ad272f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "759ff1da-3060-4f48-a633-545ea77b612b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e385036-98f1-483c-ab9a-562595ca8331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cbd40b6-5895-4662-af97-070b21c29348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfba0314-37c4-4e1a-9bf0-1e51767b6b23",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777b2bc5-c752-4c49-aea5-09cd777da70f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03d96a5c-3df6-4669-adc7-796133752f79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a837e90-92f5-4593-bbf8-45b036967083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e6ec1e-7e54-4717-8cb1-8651f41900e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a455acc-a3e1-40c3-95b9-e07db29e65fc",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01144da-28a7-4c1c-b688-3f50f640303d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f9fc08a-1d24-41d1-bc19-426e2b1f05ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1125a8b9-ffd1-483f-8553-30072e1d45e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa7b2409-0c02-439b-ba4c-8e1f0be0d73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e392726-44d5-41e6-a6c9-13b72c57c253",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8897b484-0ebc-4e0a-b6db-e0928ed2699f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d13e4dd2-ee7e-4b9d-85ca-778c9f399837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb234fd-1e54-4b26-bd8c-c0eaf20f02b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b0428d5-1845-4c70-9397-dc339d12f772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4445dd1-f77d-43ca-890c-7cdc52c76c05",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a564f0-1312-401a-9a2c-91bb8f53da7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78396c69-2eca-412d-a4ae-b4114f56d6c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda0f9a1-4b31-4747-a2be-b328bfec9941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "660ef032-9bd0-49b5-949b-9fd6598fca49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9faa71f7-8fc3-420f-b3cd-1137f4ea9251",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0bdeb66-c6a8-4789-88e6-2bc65b13d2cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "542ffb0c-1a48-41f5-af59-c28df4dd40b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9114a877-0982-4468-a25c-9aeb0c7d7d3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e68d7ad-9791-4df1-b02e-7419359ccfc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3053dc56-2f78-4825-b551-8e78d5cb874a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac68557-0e3e-4086-8e62-567109712294",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a14229fb-3de6-46fb-b3d8-ff1af88a6870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "781bb0f9-284f-4d06-a975-d920673277f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e96bb5d-6194-445c-8dee-88f24be4bf7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44df23c9-15be-4805-9ad0-a6b6401c5d95",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93df18f2-7d47-4696-b489-4c91fa58f126",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "080ba13f-eb1b-41e6-9d79-916697433b0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87dca634-5205-43ef-b612-add5adf04879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f81f5a2-6fcf-484d-a3b1-cec720aae065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f621c7e-8396-4031-9de8-33c06338feeb",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00256da1-f306-4b2e-8191-d2963dc9de5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3933cc0b-4bf3-4995-b051-606cc2b6b1b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20bf9c73-089d-4861-9644-df7eed3d50f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8cb069a-ee19-43a0-8ca2-04cb32e359ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5130b433-5add-48ad-bd4b-bf571582f20d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b4c781-f127-4c5a-911f-10403e6df560",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ffc4bfd-0206-4b62-a784-f5564eed9806"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80c6457-4159-47be-9e08-7b321008f1c0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "019f5d4a-39ca-4751-82d2-1aee8996d2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c906c1-0649-4cb4-b5bd-ac3573eea00c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f597f81-9fe8-4671-aedc-53986679eadb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b405cc9a-5587-4f47-8192-5040a90f8b94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfefdcd4-cf6f-4677-ab4b-c4794a996505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8d0ca28-af12-4061-8e69-a4f8bec7d901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa35e78-a85e-466a-a780-c8f7ce9a1c7c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e551a54b-aceb-4efd-b1b7-e2d763fa3790",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bee13b09-3c1f-48f7-8282-58db937f1778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05e8d51-1639-4e09-b771-e40fb41eaa2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cb61e87-8d20-47ab-8db4-ff1126972228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5694db32-4cff-467f-baa7-d63ada188ef0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d504bd0-a14e-4a1d-a94e-6f75e557f962",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "101d8b36-ebf9-495a-b392-817b06be183c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85334800-c500-48cd-bff7-8dda671d0170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5853c2-e416-4ecd-be85-7cad8f1cc6f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ebd370-336a-424e-894f-b38016fc683a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df57d48-a3f5-4ae8-8237-590dbe3a74c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d4b738c-2cba-4620-b3c6-b8c3a1a7bf0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb4f127-0762-4d6c-bc76-d9d261a10d40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66bbd51d-3081-4c34-ac6c-82c8908b1e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ae0b00-a488-496a-9826-ede91b7961fb",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af3292d-9175-4c76-a395-f26143827200",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ca74ab4-d792-439e-a423-ca5c2d8f9a77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13e6c43-e14a-4d33-940f-7e54d0c5798f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a34e1bb-9adb-4b68-a5e8-fae2475945f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6865465-f27f-4a00-8b47-0608e4423793",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531ea194-3f47-45b8-9305-b83afba9ee15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "095c813a-1192-4aed-83d0-747f1398315e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0d412f-bcf4-4597-92e3-f7247fb22aec",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "296461e8-ae80-40fc-a521-9431cc1d5311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee4d87f-9521-4a43-9e96-1675ef715b1c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18389a5c-ce6a-4619-92b6-1abc868b23a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9f40ffa-071d-4d9d-b828-11772fc92172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "432e937c-a9ad-4f60-a220-184be0f45f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8297d88e-c99e-4371-aeed-e724f2cf89e4"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22d3ae3a-7f67-4b28-b0ae-5cbde20f542e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0aef42d0-baa8-46a4-b0f5-03759969f16e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8aab778e-7e1b-4ffe-bffa-84fb89f0b063",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "06095fb1-8c2e-487e-98e9-d6295bb4b588"
                    }
                  }
                ]
              },
              {
                "id": "81ad649e-6e31-46d6-b7b2-ad5a67c1ac19",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "652c5875-0fbb-46ca-961d-cbc85f2e4960",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9c3f1b-6d2a-4684-b780-c04320fa06c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2de263ee-bb01-4400-b749-226ae0494a9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab97896f-a7b2-4d07-82b4-ee0c9dd5470f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd32cdbd-cbd5-4897-b704-e0360913a145"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7aea17c-57b2-443d-bf82-64bb63bbbf19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c644923-db9e-468d-a285-e4e39649ca69"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1c84f36-1cc1-46fc-a5b5-e6a5eb02f4dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6d85174-6885-4f66-b87f-360847b82ce4"
                    }
                  }
                ]
              },
              {
                "id": "f1ac2553-8dd5-44b4-b213-6f5599320e09",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "846cc70b-6ace-45c4-9dc6-bf3d521cb738",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "520a6279-d322-479b-9558-7b59bee82363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ff668359-e107-47d4-8927-5488fd46bd58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5ac4f3-dcc5-4ec4-838b-3647c1623cc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "378db551-33d8-406a-adeb-f3caf5dc1468"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "49ea773b-1441-4b9a-872c-f9dc0336913d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bbb1a734-5f6c-42fa-8123-05f34afc22c4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d40a3825-bd66-45d7-a8c0-54ed76c7fb30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "47bfa96e-6ff1-40dd-9fb0-60208f5c9243"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a705c57d-b0a6-4b10-b4de-d67b008400e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e450f5c7-8a09-4035-a5ba-f029a0ae1bf1"
                    }
                  }
                ]
              },
              {
                "id": "7500319e-0668-4e41-b556-abd3304bd229",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3edacee-a002-4f54-92bb-bfcccfa19a9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c8d73bf2-56fc-42db-94b4-f06232578aa0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "621a040c-79c2-448c-a363-daffc907060d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4176888-ca3e-4883-8f84-eb09cf4847a9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "36d0d21e-b9fe-479b-8a0f-295025fa7cf9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3b174110-c784-4b2b-b598-3422029f18d3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5cc71e20-045e-4516-b0ca-fcb27aa19010",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cb4ddb29-aaad-4df6-8201-4c428a867832"
            }
          }
        ]
      },
      {
        "id": "aa99e476-ff31-4966-a78d-fb28fd9d645d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "dab860dd-5cd3-47c5-b974-b5e96d70bcca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e521acf3-868a-47ba-bbd3-cd5c84b9242f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "49d95f89-bbb4-46a4-9d60-6c5371c65bf5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43900a2-f805-457d-b236-951428f0c2ac",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9d7998d5-d93f-48c6-8b2b-39d8e83ac495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "678158f3-06ee-4f2e-a6a1-74a0474bfc16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "672bf415-099d-4b9d-ad1a-393da0f68e62"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48f8c4a8-8ad2-42bf-b711-712e130c59cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e335abd6-c7c7-4cf4-8cf5-4d5e2b968676"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d02b8f92-e0e1-4eb8-a047-2bbbfb29cf4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16bf0d31-2995-4ed1-8611-1176d635de04"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49c35a7d-73fa-440c-a5e3-11ae796afc7a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "13ef864c-c50a-4d4c-8dbf-58dfe53565a3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f1fff99-5814-45bf-bea7-1b9254400337",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b62296ae-28e2-40ff-bc74-a12a0d870af2"
            }
          }
        ]
      },
      {
        "id": "891c4601-5ca3-444d-b0da-dba189119545",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ca6b81f9-7ea9-4e60-bf4d-d959320996b8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bfd135dc-9478-467c-ae83-a785094a2d59",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca74337a-d6a9-404f-81e6-4fa0209f940d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90402d7-a2fb-46c4-af38-f08e33cff6e4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01af0ecc-50e0-4b17-8340-e217ee895580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9f421a-8aa9-481a-a092-c7455bb7ad2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff0491ac-7166-49e7-8982-5f556ce0e714"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e4f794a-8b3d-48bb-8c7b-ab06bcda544a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ff2aa63-216c-4214-94f8-791074e6c747"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa135dc1-0c08-4bee-9256-6add160956c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be7d8e5c-7305-4fdb-9d6f-74fc484d2d7c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0abb2121-ad83-4b05-a7b6-69d6bab9b3a6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e2526691-e22e-48a0-9f9a-7e215a9b1675"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12afa70e-3a72-4ece-8a1c-1e80e0143b85",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df5ca2c3-382b-4df4-8b3e-0fe5f546b9d5"
            }
          }
        ]
      },
      {
        "id": "3f6b1991-8c4c-4f28-bfdc-14ffe7368a85",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a7c9cfa0-e14c-4959-9716-096d53f16fe1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d28ffa0f-4004-4167-a004-6d42f7ff4234",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "253abdbc-8b48-49cb-b429-5a3e231a050a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53fbbb7-5737-4588-99d6-3de534b2afbc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5263693d-f2d8-4c5c-a1c8-98d6b1f38959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9213e5dc-783d-46c5-9523-a206e49c161b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a1be725-1502-4418-a015-d58d8e787249"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e56daba-84a0-46b1-956f-b8e86423a9be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "523649de-9d17-4c55-b805-cb47f50f50ad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "55c28710-249d-494e-94db-9b361e9ec922",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6818b557-3791-492a-b9a1-4ac7b1dbaa82"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "987b9670-9c85-4c57-aaa6-747476eee30b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ca1e35d7-6ab7-4455-ba11-6f6f47068f18"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1364682-1c89-46b4-a268-b4d8632f4e6f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5a6f6a87-13e7-4f19-b8ea-5da580b9078f"
            }
          }
        ]
      },
      {
        "id": "8d812654-e934-4510-aab7-361603fc17eb",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20e68052-86ff-4225-8079-1a7a31737487",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2092510e-ec2e-4a0c-be2e-b1d223f4f334",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3ba16720-48d6-4b83-9ba3-23636f26fbe8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e92d39fe-b7e5-4390-90ac-9fc1231de67f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de9c351a-3784-4244-8ffb-fa43e7f2c41c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 27.845614035087717,
      "responseMin": 6,
      "responseMax": 235,
      "responseSd": 19.036917690353068,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703723660416,
      "completed": 1703723677167
    },
    "executions": [
      {
        "id": "be14cd74-247a-48f3-9ac2-0d20a223dda0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "053a603f-c85a-4053-878e-7e93405c0e8c",
          "httpRequestId": "c666551c-b822-4393-a048-4078ecbe5f60"
        },
        "item": {
          "id": "be14cd74-247a-48f3-9ac2-0d20a223dda0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b00d80d7-e41e-4b1b-affe-aed989235729",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "1c3c9da3-50a9-4d04-ae5e-15d7e8d35234",
        "cursor": {
          "ref": "093c0985-7f00-4d38-8f30-0966662e26ef",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d6d66a6c-619e-4b71-8fa9-26b08339fafe"
        },
        "item": {
          "id": "1c3c9da3-50a9-4d04-ae5e-15d7e8d35234",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0aeabbec-95c2-4e59-8a23-f2c27cfd1d15",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "3535d349-5cf1-4ed2-a072-6d145e1541fe",
        "cursor": {
          "ref": "cb82d5f4-2c17-44e0-97ec-2b29a4d529fe",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d3d9117e-8bed-401e-add8-45fe04aa3a6e"
        },
        "item": {
          "id": "3535d349-5cf1-4ed2-a072-6d145e1541fe",
          "name": "did_json"
        },
        "response": {
          "id": "3b2d19d4-a358-4da4-ade6-edc0e9313e02",
          "status": "OK",
          "code": 200,
          "responseTime": 214,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec992de4-46c3-4dba-b820-c5e36bda220f",
        "cursor": {
          "ref": "9f6d82f6-7e51-4a43-8594-720cff97bb76",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bcdefc46-9097-413f-81c0-450700832944"
        },
        "item": {
          "id": "ec992de4-46c3-4dba-b820-c5e36bda220f",
          "name": "did:invalid"
        },
        "response": {
          "id": "afc15baa-dc40-4964-9022-6553949b2325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec992de4-46c3-4dba-b820-c5e36bda220f",
        "cursor": {
          "ref": "9f6d82f6-7e51-4a43-8594-720cff97bb76",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bcdefc46-9097-413f-81c0-450700832944"
        },
        "item": {
          "id": "ec992de4-46c3-4dba-b820-c5e36bda220f",
          "name": "did:invalid"
        },
        "response": {
          "id": "afc15baa-dc40-4964-9022-6553949b2325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f16d4d-410f-4760-b6fb-809ebf74beb9",
        "cursor": {
          "ref": "a8b273ba-10a2-4237-ab6c-ca0b599b917d",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "68d5c1ee-f98e-47bc-825b-82205b94486c"
        },
        "item": {
          "id": "27f16d4d-410f-4760-b6fb-809ebf74beb9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9b9e324f-b53d-4d08-b458-a04274b2afa4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01a1092-66b7-47d4-95ec-5addfb78b788",
        "cursor": {
          "ref": "63f5fc50-51a4-4c24-9ea4-e148079abb1e",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "99976062-9463-44d7-bd40-af118e5bfbf2"
        },
        "item": {
          "id": "d01a1092-66b7-47d4-95ec-5addfb78b788",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a34fdc89-c185-43e5-b8c7-3e280b2287f5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 23,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2895d4-be68-480f-b8b5-a967291fae3d",
        "cursor": {
          "ref": "ce626938-d8c0-4196-b1f7-cb9b9fddc380",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0e527b80-47e9-4021-847f-7d19e7943af7"
        },
        "item": {
          "id": "af2895d4-be68-480f-b8b5-a967291fae3d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ecd3b85a-2ec9-480a-afe8-f5b394e9d7da",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426d7e2d-5923-42f4-95c4-dbf3e3f8c4e3",
        "cursor": {
          "ref": "c400808f-64f9-4452-95bb-1ce74b3e4a11",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d090f589-ffaa-4c37-ad8e-3d1a5916a1e0"
        },
        "item": {
          "id": "426d7e2d-5923-42f4-95c4-dbf3e3f8c4e3",
          "name": "identifiers"
        },
        "response": {
          "id": "86e95638-a0c0-4527-8448-f11f0a6c938a",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2f5b30-bd0d-426e-93d9-bf9473d40863",
        "cursor": {
          "ref": "9183baab-3bcb-488d-9a4d-242719881ab1",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4557ac51-6898-42f0-b829-32c3b940afa3"
        },
        "item": {
          "id": "8b2f5b30-bd0d-426e-93d9-bf9473d40863",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "88640474-024b-48dd-9ed8-d4baf2173b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449e05dc-8a76-41f9-a351-1f825b7f1e76",
        "cursor": {
          "ref": "c5c4810a-43d7-4886-8dcb-239b6ae7cb83",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "065812e9-85aa-47a7-9236-7163b12db815"
        },
        "item": {
          "id": "449e05dc-8a76-41f9-a351-1f825b7f1e76",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "71c50980-73fc-4062-bddf-ccd3164a5793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dddd89d7-2bf4-4c0b-b3c9-30dea28d3b15",
        "cursor": {
          "ref": "48762691-c2aa-4960-87e6-8fe0776a4f65",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "36fd9d04-ad65-48bd-b4ab-57620274def5"
        },
        "item": {
          "id": "dddd89d7-2bf4-4c0b-b3c9-30dea28d3b15",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4d36f147-cd79-4a73-aaba-99850d48ea51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c613d9-0250-4fae-9371-8c99fe6831c5",
        "cursor": {
          "ref": "4b76a9e5-af8c-416f-a4c1-faa2b8010bba",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e20cca3c-5af4-45a3-bb6c-94fa9adaeb6a"
        },
        "item": {
          "id": "b8c613d9-0250-4fae-9371-8c99fe6831c5",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "02bc3223-cfb0-4c39-8026-f753c6dcf601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164cf3c6-004e-43fb-82e4-fa8fc1d53023",
        "cursor": {
          "ref": "f005a2c4-acce-4353-a6c0-cc825636d06e",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e3ceb6f6-6bf5-4f23-92c8-9dca75c07ef3"
        },
        "item": {
          "id": "164cf3c6-004e-43fb-82e4-fa8fc1d53023",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a8a032e1-04d6-4b59-958c-99c8ed557328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6450813e-771c-4582-99f2-e751e4eda4d7",
        "cursor": {
          "ref": "a495a49a-07dd-4fa5-b62d-dfc900a2b47e",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "35bdcf1a-2b43-40f7-8c1c-a75accd6d4d3"
        },
        "item": {
          "id": "6450813e-771c-4582-99f2-e751e4eda4d7",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5ec32350-2448-41b1-8e29-ff75d98d02ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8752ec03-0b79-433e-98e0-fe4514b1ead1",
        "cursor": {
          "ref": "864aa7e1-bb9a-474a-a327-a38f8436ecc4",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "47dc7f88-f245-4fe3-897e-51cf2966a98a"
        },
        "item": {
          "id": "8752ec03-0b79-433e-98e0-fe4514b1ead1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "918abe55-a4a3-4891-98c4-54d36b1e828c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd53a33-beee-4f9f-bc95-9ee12bb93dc7",
        "cursor": {
          "ref": "7f62c94e-d0a2-4057-b50f-d3bc8006d605",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b410563a-3e8f-405c-a2d8-33dcfebb1a51"
        },
        "item": {
          "id": "1fd53a33-beee-4f9f-bc95-9ee12bb93dc7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "45208b52-6acd-4d60-8cb1-1ab2a761119a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d041524c-55ef-496b-965b-8aa6ef1be667",
        "cursor": {
          "ref": "58636e84-64d8-48f3-8865-d929c3b18dad",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "54c28135-9ea6-4dbc-9ee4-8b8b6bb8e928"
        },
        "item": {
          "id": "d041524c-55ef-496b-965b-8aa6ef1be667",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7c27276e-166c-4741-9389-bc8efc3c1789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0019563e-ae8b-4534-8bf6-6d336c2c67d9",
        "cursor": {
          "ref": "bb9ab2bf-7989-4db9-819b-f150767432db",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2e77f621-5346-4f4a-a88f-a2a2be033dc6"
        },
        "item": {
          "id": "0019563e-ae8b-4534-8bf6-6d336c2c67d9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e0b12350-34fb-4939-bf55-aba447e40415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dbd5b33-3362-4e1d-b387-26f9271b500e",
        "cursor": {
          "ref": "8e2e7a11-6be4-4bfc-a41c-1d82539cc978",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "bcddbb0a-6fd6-49c7-b61c-a2be073cf2d6"
        },
        "item": {
          "id": "0dbd5b33-3362-4e1d-b387-26f9271b500e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fce56624-559d-4039-8095-04d08839bb82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f51a32-0402-4a4d-ad70-f6c4d1c086ed",
        "cursor": {
          "ref": "68b94fd6-7d8d-4b2b-8ab2-6e3c1a9c225f",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9169c460-7f24-4f0e-81e4-896194f795f6"
        },
        "item": {
          "id": "e3f51a32-0402-4a4d-ad70-f6c4d1c086ed",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d8bd8954-87b1-49c4-a09d-67b24c5fe6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20c6fac-d056-420e-bf47-6855c3c39b09",
        "cursor": {
          "ref": "32ebcc65-6e46-4fd3-9efe-ece810fe87c1",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fe0200b5-7909-42c1-95ab-b960e49ec6db"
        },
        "item": {
          "id": "f20c6fac-d056-420e-bf47-6855c3c39b09",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b8358c1d-2ffe-4249-836a-636ffb2f2735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1b2177-a5d5-4046-9926-b8639d72b9b1",
        "cursor": {
          "ref": "cdd205b8-85ee-451b-b976-f50c859797ef",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "be6d6c88-779c-4b4c-a249-2cffa8e1fb96"
        },
        "item": {
          "id": "da1b2177-a5d5-4046-9926-b8639d72b9b1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c0b839b5-3c91-4d09-932a-f1af91528e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c93accd-f746-4881-8330-8bc73d5e4dcf",
        "cursor": {
          "ref": "0ac4f154-db3a-4648-877d-884364aa53a8",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9c357fb7-ce54-46c4-81e5-57209d31ede2"
        },
        "item": {
          "id": "4c93accd-f746-4881-8330-8bc73d5e4dcf",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5d1919ff-c771-42a3-ae78-77d2df7c0395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91533659-d933-476d-9333-70bf68ef98f7",
        "cursor": {
          "ref": "2d688b5a-020c-4ea2-9caa-bb47058de214",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a08a72fd-7835-4d8b-83ed-21ff023f5e67"
        },
        "item": {
          "id": "91533659-d933-476d-9333-70bf68ef98f7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "930efdf4-11ae-433a-bdd3-6d03d902bf43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e1c191-0be2-4d98-a7df-55c22930b9d7",
        "cursor": {
          "ref": "9789fbcf-2a48-4763-9412-36a2dac878f0",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "18e7f943-7db0-43d6-b226-adfc98bc61ec"
        },
        "item": {
          "id": "19e1c191-0be2-4d98-a7df-55c22930b9d7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "778d5afa-3b61-4444-b4e5-c60187c345f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5284f9f0-d448-431f-bb31-2bfdcbf2ab43",
        "cursor": {
          "ref": "8aa8bfc9-e39e-4e84-8b40-f0a6296723fa",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b5879d63-0d18-40cc-8734-917bec3b9342"
        },
        "item": {
          "id": "5284f9f0-d448-431f-bb31-2bfdcbf2ab43",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "48abbf0e-4912-4036-aee6-0a2271380d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28dadb9-5011-4bef-9d66-eebf7d5673c9",
        "cursor": {
          "ref": "9fa1bbfb-c52d-4635-99f9-885cefb147b6",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "528b4d29-7b14-4237-b23a-3556c7d30b2b"
        },
        "item": {
          "id": "c28dadb9-5011-4bef-9d66-eebf7d5673c9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3bf0eff8-df0f-4083-993b-b78baf5d9114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72392a5f-65dc-4505-b608-f4c15e16781e",
        "cursor": {
          "ref": "4390d679-1362-4330-9cc4-abb3ccc3f921",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "69f968b9-e3bf-4a45-bde4-3a36ab1ecc46"
        },
        "item": {
          "id": "72392a5f-65dc-4505-b608-f4c15e16781e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e60f9bc4-e45b-4024-b538-e3992934c419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b15cd5c-4fe3-4ac6-bf22-30a06277efa8",
        "cursor": {
          "ref": "c8ea9bfe-5c71-4ead-918c-69ffaf50cb9c",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0d0f2446-6f59-41d9-b611-91894ecbd28b"
        },
        "item": {
          "id": "1b15cd5c-4fe3-4ac6-bf22-30a06277efa8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0318243d-1f1c-4d16-baf2-2c4e02504a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65bf5d1-b41b-400e-9b87-2c7c81059f69",
        "cursor": {
          "ref": "7057173e-be89-4cc8-a481-e25abf1bb4a2",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3f620bdd-a4fc-487f-bb93-a7f8176a5af1"
        },
        "item": {
          "id": "c65bf5d1-b41b-400e-9b87-2c7c81059f69",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "18e3bf9b-d84e-4221-bb08-fca428b2de97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79247bc5-3bc5-43ac-8f9f-d6a2834593b9",
        "cursor": {
          "ref": "e17ae650-7b49-40ab-838a-ae5bc7ed2b23",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a0850c86-a175-4401-b708-421463cc3f1f"
        },
        "item": {
          "id": "79247bc5-3bc5-43ac-8f9f-d6a2834593b9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "993390bc-2307-4d56-b209-072bc27ae9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46e35af-e558-4b3b-aec3-b99024da10a9",
        "cursor": {
          "ref": "30c17785-2ba9-478d-ad84-451d17c7cee1",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "52f6cf9e-3ef0-41ee-8253-b10fb24654e3"
        },
        "item": {
          "id": "a46e35af-e558-4b3b-aec3-b99024da10a9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "95554153-fe15-4429-b503-f4ff99bcb42d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109044da-2c28-4352-b243-ff69e375eb56",
        "cursor": {
          "ref": "0867a56d-afd3-4579-94d9-f68e4f9a878f",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1766c53b-c87d-4006-a5d6-37589fb62263"
        },
        "item": {
          "id": "109044da-2c28-4352-b243-ff69e375eb56",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "da103db5-823a-45a3-89e0-023822eec6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22975a81-d4bc-4540-9f4e-4b972009dd7f",
        "cursor": {
          "ref": "15e5caa4-819c-4a04-bfb2-3c827225f7e8",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "08899a80-5013-44af-9ba0-4cd736ba5660"
        },
        "item": {
          "id": "22975a81-d4bc-4540-9f4e-4b972009dd7f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "08e1fedf-65f9-49b6-8888-069836a874f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ee5fd2-1579-4b01-ad6a-3220bcaa09b3",
        "cursor": {
          "ref": "75e9163e-d5d1-4c95-b4fb-fefb9efe9e73",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "69c754fc-e044-42be-8a8e-4e48343ce912"
        },
        "item": {
          "id": "40ee5fd2-1579-4b01-ad6a-3220bcaa09b3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "21de076f-c63a-4703-afa2-f247af0dc36a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c34f60-40fe-493d-ab15-57e852913d65",
        "cursor": {
          "ref": "2e181729-443d-4446-b1bc-b9973ac8d4a2",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "46e491a5-5f6d-486e-acdb-186fb6040ab4"
        },
        "item": {
          "id": "c5c34f60-40fe-493d-ab15-57e852913d65",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "39145498-e584-4f8e-aa7e-112bd6c2e249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b15a52-0a50-45f7-9bcf-1a1ade3427ea",
        "cursor": {
          "ref": "4b8694c0-07f6-4188-afeb-2e05d807d4a0",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d92009bd-1bfa-4ee4-bf6c-c04a5a042db2"
        },
        "item": {
          "id": "d1b15a52-0a50-45f7-9bcf-1a1ade3427ea",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ccbcdb0e-0841-4c3b-9ba7-042608301f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749b032b-9d37-4ba0-88e9-ffc1a37af075",
        "cursor": {
          "ref": "4e426e91-2b6f-4be1-98d8-cd7d74b2879b",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a46def2f-9239-4c37-b3bc-fba650e528dc"
        },
        "item": {
          "id": "749b032b-9d37-4ba0-88e9-ffc1a37af075",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3e8ac4b0-bbf3-4cd0-a59a-ebe1316d3c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3ce37b-c04b-423c-9aa5-cb5762c3885c",
        "cursor": {
          "ref": "d2d27a54-be8e-482f-8465-5db35a6e1d93",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b0f2e5fb-22d2-441f-accc-b717b35f4d76"
        },
        "item": {
          "id": "0c3ce37b-c04b-423c-9aa5-cb5762c3885c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3c2c0973-53d3-4351-9f5a-dccbb29385e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456375a5-f03d-4fcd-aec5-d8da7e9166e0",
        "cursor": {
          "ref": "2dd36932-0e88-48e2-9d7d-fb1ca4189136",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ef7b350f-16ab-4f80-85d9-a3dab9c90702"
        },
        "item": {
          "id": "456375a5-f03d-4fcd-aec5-d8da7e9166e0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "48ac56f2-fd5f-4518-9606-0d33055ad581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ec2838-7b07-46e2-825a-62a47b737e77",
        "cursor": {
          "ref": "e09fb2f0-76c6-432d-9ff5-1eef7c912ce9",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7944f872-24a1-4f53-a99c-4fe762d5aa43"
        },
        "item": {
          "id": "00ec2838-7b07-46e2-825a-62a47b737e77",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5f63c653-2ab5-496c-b9e5-0a0b78001133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5daf1e-743b-4489-a63b-3bbd981a642f",
        "cursor": {
          "ref": "5fa72788-5d73-4828-8003-3d306b65bb62",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7fd8fea2-f9a9-4151-b997-bafed124a330"
        },
        "item": {
          "id": "4a5daf1e-743b-4489-a63b-3bbd981a642f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9541d57f-cc50-4096-9e0e-2c62e6f2ed9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7997fee1-390c-4bef-8515-549b43ad9061",
        "cursor": {
          "ref": "2775e927-d821-44d4-834c-233f3e966e30",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7aa18f49-7f3c-48bb-8bf4-df1b8eacd7bb"
        },
        "item": {
          "id": "7997fee1-390c-4bef-8515-549b43ad9061",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "51d0d6e6-417f-4fec-aae2-76c2c63cb999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28a4e09-8e6a-4325-ba9f-4fa0785891f9",
        "cursor": {
          "ref": "72d7df0d-3087-4bce-bebc-68a31182f8aa",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f98555c8-9ede-4f0a-87a1-46064f17272b"
        },
        "item": {
          "id": "f28a4e09-8e6a-4325-ba9f-4fa0785891f9",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "bc8ca71d-5074-4b7e-b44a-6c1d1a976bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4366fd-e220-4c61-85ac-cbee7adbdf47",
        "cursor": {
          "ref": "9c3e2e72-b969-421c-b2b5-2d18a92b09c7",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fd4bff3e-a5c9-4a8b-9d3b-0b70930b19c3"
        },
        "item": {
          "id": "6d4366fd-e220-4c61-85ac-cbee7adbdf47",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "eba0905b-a357-4972-9918-1c374355c331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c4e122-a829-4b1c-867c-04fe93720a89",
        "cursor": {
          "ref": "056b202c-9287-4bad-82c8-4257ac3c3b7c",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7792402a-136e-4e23-9fef-159cdfc76a41"
        },
        "item": {
          "id": "13c4e122-a829-4b1c-867c-04fe93720a89",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "759f084f-0749-4996-a6e9-074b07a18662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52ee35c-19a3-4960-bd7d-3f620c28a861",
        "cursor": {
          "ref": "8163552f-4384-4d1e-a044-5abc390240ab",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "bfcfb67d-580c-4366-acb5-ab55b456df3d"
        },
        "item": {
          "id": "f52ee35c-19a3-4960-bd7d-3f620c28a861",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b4a448dd-fe54-49c6-b050-f3ebeef29d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe78d2f-b660-4e07-9357-fe3ee146e2bf",
        "cursor": {
          "ref": "c5b55b30-0f50-4641-b3b5-29ed109c441e",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c8797fcc-f5d6-471d-b9d6-4114342daca0"
        },
        "item": {
          "id": "7fe78d2f-b660-4e07-9357-fe3ee146e2bf",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "08691421-f56f-4afd-86ea-dafb719145f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351b906c-bcdf-4c94-8a5e-233423a80880",
        "cursor": {
          "ref": "2ea748d2-49b7-4e00-81e5-fae36ca2e47a",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "da3c2412-9648-4369-8712-bcf2fff84068"
        },
        "item": {
          "id": "351b906c-bcdf-4c94-8a5e-233423a80880",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "527c75e0-7754-4353-9d10-97628aa02fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7884d3-3381-4002-b43c-0c4ce87ba1a3",
        "cursor": {
          "ref": "ab538551-0a8c-40c7-9d03-ddecaf937cc1",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c7d87053-6bf4-41f9-90cf-829f777f44ab"
        },
        "item": {
          "id": "6e7884d3-3381-4002-b43c-0c4ce87ba1a3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "cbadd584-90ec-404a-bf2f-ad88f1c5e9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e6c974-c6db-41ab-a61c-c920ec52b8e5",
        "cursor": {
          "ref": "dd43a37a-2a7c-49c5-a066-84bcd2cd8b96",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b0424799-8bf2-46a2-a71c-a5828420e347"
        },
        "item": {
          "id": "85e6c974-c6db-41ab-a61c-c920ec52b8e5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ad71a1a6-4bb5-4588-be02-6288c8bf47b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30882fa-6de5-486a-9462-bff86052cc14",
        "cursor": {
          "ref": "48b19ea8-3ca5-439b-9611-f394cbadf15d",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "84a9e217-6929-46f1-b280-9dd2ba90cf8f"
        },
        "item": {
          "id": "c30882fa-6de5-486a-9462-bff86052cc14",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ffb77ebd-0caf-40b0-9d0e-4d6efcb44fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b00186-d662-44c2-8a17-7a9f0ba11a49",
        "cursor": {
          "ref": "ed912998-4bef-469a-a300-3df91e6f81d9",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cfba13e6-552f-44d0-ab53-ecc384bcccb9"
        },
        "item": {
          "id": "04b00186-d662-44c2-8a17-7a9f0ba11a49",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f5e5dd88-9062-4f86-9e92-6fe8184f96e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f724783-9f7e-4ab2-8192-8eb2f5f2d67b",
        "cursor": {
          "ref": "b7f8fb95-67c9-4122-840d-e82a8e8eb26f",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8ff3eb12-60dd-4070-966d-8ca42e5b960d"
        },
        "item": {
          "id": "0f724783-9f7e-4ab2-8192-8eb2f5f2d67b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "20f0a150-fe91-40b1-8855-8e0bdc2d697a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2505ee-39c3-4245-9676-c1ac17325d95",
        "cursor": {
          "ref": "4a5adc6c-dc61-4075-876f-4e5ed90598fe",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "13a1bbe6-7f6f-4e25-ab08-3a996b6e4e43"
        },
        "item": {
          "id": "dd2505ee-39c3-4245-9676-c1ac17325d95",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3bbbe059-b3ca-4dab-ab07-fb5ebca735ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f1c43a-1bca-48e8-bdf7-30b5b95d0d75",
        "cursor": {
          "ref": "ab196553-65be-4e79-822a-c92a9f9be44a",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4a6c3ffd-5a76-40ac-bd9c-4ab041f45430"
        },
        "item": {
          "id": "22f1c43a-1bca-48e8-bdf7-30b5b95d0d75",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "87256921-6f7e-4f75-8eae-52af50ca4429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8b002f-3f19-4681-92ca-91c0a95339df",
        "cursor": {
          "ref": "338cf1f0-f054-4ce5-b231-a41316871c61",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9dcfd54d-bd75-4ea5-b25b-663a002d15b1"
        },
        "item": {
          "id": "fe8b002f-3f19-4681-92ca-91c0a95339df",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5a6ebc5f-ea29-4e43-ae0d-4ec444fd92e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832958ce-3778-4fd0-8e1f-9e1a6f224c96",
        "cursor": {
          "ref": "03b008da-866e-4dd3-a4f7-45c4dfdd3c70",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "575ffec8-e731-4630-ae4b-223c498356cb"
        },
        "item": {
          "id": "832958ce-3778-4fd0-8e1f-9e1a6f224c96",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7f2e3e09-0b40-4f1b-a785-fe2223aabd64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a59db0c-0c5a-47b8-a052-32213536771f",
        "cursor": {
          "ref": "971bfab1-40e1-4ddb-8ace-5e1e31e4d928",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e3c4bb5f-58b9-4736-bd4d-769600f3ead6"
        },
        "item": {
          "id": "0a59db0c-0c5a-47b8-a052-32213536771f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "512af6c7-446c-42df-99bc-b600619db03c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3eeb53-1bbc-4a8c-ad06-bf367d5efb41",
        "cursor": {
          "ref": "3ddee7d6-d5fa-4484-931c-aa45c22f864a",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "16a793ce-6de3-4b2b-896d-35dc5f9a5f6a"
        },
        "item": {
          "id": "fb3eeb53-1bbc-4a8c-ad06-bf367d5efb41",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "41c2a496-3fb5-4e9c-971f-3dad84b72e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3bcc41-3706-4f6e-893f-d4b982ddf922",
        "cursor": {
          "ref": "10fb0edf-bcf3-4e05-a7e5-b6ac31253235",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9897a52e-32e4-4536-9454-a9a49b3861a5"
        },
        "item": {
          "id": "4d3bcc41-3706-4f6e-893f-d4b982ddf922",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "624a92d7-528b-46cb-960b-ed118d920915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1fbd9b-83d3-44f1-a420-9b2690e87cd5",
        "cursor": {
          "ref": "77afb652-8709-40d2-82f6-48ff9524fb4b",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d469bcd2-d28c-48ad-b24c-2af54904e6c7"
        },
        "item": {
          "id": "de1fbd9b-83d3-44f1-a420-9b2690e87cd5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b318c289-b6cc-4bfb-add5-b5ab00a09fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34854e4-5882-4039-a57a-56753a4d6318",
        "cursor": {
          "ref": "7cffe5cd-4753-456a-b3f1-485f73056ada",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f3bd768c-578a-4068-aaed-c6f4b07407ba"
        },
        "item": {
          "id": "b34854e4-5882-4039-a57a-56753a4d6318",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "fe8918dc-0ac4-4852-9be4-3e6962dbb5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3181057f-cfa5-4ab0-9922-6dcdcf23f3d6",
        "cursor": {
          "ref": "b2976e11-4d8f-433c-b403-4b7b41d5ab05",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "afb5a13d-aa8d-40a1-8315-0c54fcad9b19"
        },
        "item": {
          "id": "3181057f-cfa5-4ab0-9922-6dcdcf23f3d6",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "06bfa93c-367e-45ed-a6fc-5c9bcd4334c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee43376-3b5d-4dca-aa32-2d0ede8fe764",
        "cursor": {
          "ref": "40ebf776-fb4e-43d4-8312-12a07ec8fcda",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "cd590c67-f846-4ef2-805e-679544fa7e77"
        },
        "item": {
          "id": "eee43376-3b5d-4dca-aa32-2d0ede8fe764",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d645dfe4-2f52-415c-a43f-6621b83f2473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591d3b6d-b021-402d-8a36-109610ff3494",
        "cursor": {
          "ref": "9d297cc7-f849-4d26-a0ee-f33f6b054696",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "517981c8-8a03-4d1d-9d5e-222eb610612b"
        },
        "item": {
          "id": "591d3b6d-b021-402d-8a36-109610ff3494",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "50fed15e-6919-4bfa-9ecf-5267108d329d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43565b20-9416-418c-9e61-4a9bdf33ef42",
        "cursor": {
          "ref": "b0801f0e-d4a1-4b98-9698-9b03a0545d13",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2cd5f0c1-d50e-4d1c-b3fe-b6c70e0a13b1"
        },
        "item": {
          "id": "43565b20-9416-418c-9e61-4a9bdf33ef42",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "aa0cc2cd-b1c9-4a62-808d-214ce001007c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f5d0f8-9b91-4561-998c-ce7511165e23",
        "cursor": {
          "ref": "5dc7b129-9794-4cf7-b937-1bf1c9fb1e32",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c513674a-7f35-4d7b-89d5-79714c4d2fd1"
        },
        "item": {
          "id": "49f5d0f8-9b91-4561-998c-ce7511165e23",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a7ffc9a2-6480-4200-8436-5aa9ed6c0942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55621144-f4b9-4d7b-aa26-463dee5044db",
        "cursor": {
          "ref": "7fa2ff96-d4d6-422f-8e88-c24536c95dd9",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d6fcf071-f4cd-4d89-a4e6-95f7295d357d"
        },
        "item": {
          "id": "55621144-f4b9-4d7b-aa26-463dee5044db",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a5b1bf6a-19a0-4dfe-890a-d1d53f826164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8057096-0113-4b23-8c90-c1ced3ac1dcb",
        "cursor": {
          "ref": "b63f5fd0-10bd-42cd-96a7-7c643b616ba6",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3b7276dc-a77f-47a8-a6f1-d7fbd4dcb90a"
        },
        "item": {
          "id": "c8057096-0113-4b23-8c90-c1ced3ac1dcb",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ae87ccb5-e236-4a88-a76e-e02d2db848f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06acb10b-3835-4aeb-a7fa-f3bf3faf10f1",
        "cursor": {
          "ref": "dfad302c-b18c-4ca8-ade5-707dd7fd9a3d",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "67ec1ee7-a6f5-48f8-902b-ad356bb78916"
        },
        "item": {
          "id": "06acb10b-3835-4aeb-a7fa-f3bf3faf10f1",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5e804198-4772-459b-b68a-f8d4c3af6f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc582fed-2cdb-41ce-bb5b-808df443a631",
        "cursor": {
          "ref": "957b9ad6-3c1e-44dc-bec9-726a87391c3f",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "aad79a3c-6ac1-4ccf-bcaf-cff3588adf5d"
        },
        "item": {
          "id": "bc582fed-2cdb-41ce-bb5b-808df443a631",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "89f3982e-23c2-4284-afe1-971bb5879c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b82859-c914-4d90-822a-400bb3a49baa",
        "cursor": {
          "ref": "2912953f-bc01-4d0e-983e-2ba5c01e7ad4",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "da3f9418-687e-4c81-8a7e-2bb553f8f3ba"
        },
        "item": {
          "id": "97b82859-c914-4d90-822a-400bb3a49baa",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "235591d6-7341-4804-9c92-01cf3ed99c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d4f11e-4766-40c4-92af-a50a7ef99e62",
        "cursor": {
          "ref": "7a87cc61-17c5-4cc8-9ac2-a6d520f85357",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "58d2496b-921f-4f17-b89f-5cc35ea2e315"
        },
        "item": {
          "id": "66d4f11e-4766-40c4-92af-a50a7ef99e62",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2f7bd349-6617-4b52-a3c9-7f0b58cbe849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2adf5a84-68ed-4119-98fe-b8680658f014",
        "cursor": {
          "ref": "aa9d29b9-49c5-4fc7-ad5b-a98089f134ca",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8701b5ed-4bb8-4a76-8440-787e2099342f"
        },
        "item": {
          "id": "2adf5a84-68ed-4119-98fe-b8680658f014",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4b8b71c7-e4bd-4ae0-8dd0-d844fa7cf753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab88d97-769b-4650-a59e-076a7ab910e5",
        "cursor": {
          "ref": "8fb3b0c2-0816-460c-826a-e58c7eb32c8c",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f21307bb-c4f5-4f38-a6c0-d0706412b38e"
        },
        "item": {
          "id": "8ab88d97-769b-4650-a59e-076a7ab910e5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "59f780cb-03e3-4330-9519-f521c9b3fb1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c809aa5-015f-4c93-bcf3-d28bd5fa0e52",
        "cursor": {
          "ref": "bc944fd4-03bb-4e02-b5c2-c16a50eb5e80",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "765f275b-a21e-4bde-bbc2-a2a354edb40b"
        },
        "item": {
          "id": "2c809aa5-015f-4c93-bcf3-d28bd5fa0e52",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0abadc9d-a019-4000-ab7a-42cf8e7f9e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9a10ae-981c-47f6-8929-c82b3be5ca05",
        "cursor": {
          "ref": "f4e38c33-56a0-4643-a7ea-b2b28153d03b",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "687aeb83-f5f1-4e13-95c9-02ac0b807392"
        },
        "item": {
          "id": "2d9a10ae-981c-47f6-8929-c82b3be5ca05",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "bffc6934-ee73-45ce-bf53-56835257d367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4525ebd-7b09-4bf3-9223-c47ab219c256",
        "cursor": {
          "ref": "6d6d9fd3-b45b-4e4c-b4c2-db70ec43d642",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5a3172de-cbc1-4c24-9a2c-de59d6a0182d"
        },
        "item": {
          "id": "e4525ebd-7b09-4bf3-9223-c47ab219c256",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "89132576-5290-4315-bfec-0bbfb145cff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2e1eee-475f-4fe3-aff1-a99bfdade7d8",
        "cursor": {
          "ref": "0e400dbd-3585-4f87-8eb4-3d62147dbc75",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "08262e94-0969-44c7-a68a-1544291fc5bf"
        },
        "item": {
          "id": "ee2e1eee-475f-4fe3-aff1-a99bfdade7d8",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "4026da80-c5c0-417e-9735-2cc4cb356221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076f9f34-94d6-45e1-831c-44c402d57889",
        "cursor": {
          "ref": "e466257d-bcef-4000-8b56-f59ed66406bc",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "71e42466-cd88-476d-91ed-8e21c6639f66"
        },
        "item": {
          "id": "076f9f34-94d6-45e1-831c-44c402d57889",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a64cf1d0-b133-4315-830b-e263acf20b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb7a597-38f1-4535-9bfc-38282f4e69e0",
        "cursor": {
          "ref": "ff515e94-f103-490d-b5d1-a3650df245ca",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5b630ad9-df9e-426c-a2f7-5651ec0e3cee"
        },
        "item": {
          "id": "ceb7a597-38f1-4535-9bfc-38282f4e69e0",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "78c4153c-b873-421b-9158-19cc7a12b44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3f989a-31e9-48f2-b282-ad11589f4ebb",
        "cursor": {
          "ref": "0e107e36-33b7-46fe-8fbb-257f98a4f2a7",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9edc755e-af41-42f5-8347-e79cd17ddb94"
        },
        "item": {
          "id": "cf3f989a-31e9-48f2-b282-ad11589f4ebb",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "dc995488-c57c-4c35-a28d-5a3d30136ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c5f509-3fa0-488d-afb2-914b8960b444",
        "cursor": {
          "ref": "9eafae51-501b-467b-bf13-d7ab480a0985",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "58051756-47e3-4831-b968-b4d719354dcb"
        },
        "item": {
          "id": "d3c5f509-3fa0-488d-afb2-914b8960b444",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "212816ea-59f8-466c-ac21-ca131a2b6a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77aed4d9-4d2a-480f-9400-1798f3b08873",
        "cursor": {
          "ref": "97110f91-9fca-4290-af88-eab47f203ed6",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7bfeaad7-c9e3-4c60-8f1a-8489a2b71a41"
        },
        "item": {
          "id": "77aed4d9-4d2a-480f-9400-1798f3b08873",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "69de8d38-4765-4950-84ce-e8d5819af281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92cb79a4-a1c8-438d-a107-b2050afb6594",
        "cursor": {
          "ref": "a0768112-0aba-4ba9-a61e-6a0390e99f5c",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d74b4238-5085-455b-9769-d6ebcdea41ab"
        },
        "item": {
          "id": "92cb79a4-a1c8-438d-a107-b2050afb6594",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7272da84-66ac-4f76-826d-f277c7b152ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7441ed7-388a-4eb9-b277-b556f60e5137",
        "cursor": {
          "ref": "01fc2381-9821-4405-a405-4f66d43446a0",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "81a94eeb-7050-459b-96dd-955ff2ecc9ea"
        },
        "item": {
          "id": "e7441ed7-388a-4eb9-b277-b556f60e5137",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2f35f7e9-12e3-4a6a-94ca-5aad23b59d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3271d8c-339a-4e17-a988-5f69c5b4cdb3",
        "cursor": {
          "ref": "ca3470ac-ea3a-4ac9-a6a9-31f5f61c053a",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d23ff04e-5d1b-4f93-bcba-28a36d0eef09"
        },
        "item": {
          "id": "f3271d8c-339a-4e17-a988-5f69c5b4cdb3",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e9147f0f-3422-4388-ab19-3afa22feb76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f266a9-3b08-462e-a48d-39c925b2e5cc",
        "cursor": {
          "ref": "1f2a9d00-e384-4b77-b938-bc3d9d5bc7fb",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a3a16ffc-2b92-4d30-8bbd-98b9ab92fa57"
        },
        "item": {
          "id": "61f266a9-3b08-462e-a48d-39c925b2e5cc",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "642d14c5-c6de-498f-abfd-21e2a046089a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2520f84-01d7-4c07-ad7f-325f1784657f",
        "cursor": {
          "ref": "bf6b5830-c0fc-4037-af32-9ced7c8630d3",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "aa5cf74c-9bd0-4500-854c-3001da4257ad"
        },
        "item": {
          "id": "e2520f84-01d7-4c07-ad7f-325f1784657f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f2afb523-6bbd-4e3b-a26f-a173c6ddfc44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd142198-d5c5-4e53-886e-695131031636",
        "cursor": {
          "ref": "0f4ff1e5-1aea-4139-b23c-5517de973fa2",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "37bdc165-a4be-4fbf-9af7-6fe566d72685"
        },
        "item": {
          "id": "bd142198-d5c5-4e53-886e-695131031636",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "425bcc6f-aa59-465d-ad8b-28e9819b0ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5370e2b5-3e44-48f3-bff2-714106a88b18",
        "cursor": {
          "ref": "795f0b6d-83aa-4969-b0ea-a25e3ec69557",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bcccfb11-2d3f-4eae-b2a6-b6b60e08b6be"
        },
        "item": {
          "id": "5370e2b5-3e44-48f3-bff2-714106a88b18",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4140a836-afc3-404f-ba57-4a6178e69cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4e44f9-4642-48f9-990e-8938e50f3694",
        "cursor": {
          "ref": "558f73d0-5688-4c80-ad56-efd05ab9d56e",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "59d1af1f-f38b-40f5-af98-f9ee4a29ed3f"
        },
        "item": {
          "id": "9c4e44f9-4642-48f9-990e-8938e50f3694",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7a7384b1-4a5e-4f7e-b7d6-2532b976833d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2867f0-de40-4497-b5be-91cd45734b12",
        "cursor": {
          "ref": "62136c4c-352c-4947-bb0b-7682d1e62db1",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "494aaf7b-2d6d-4233-a4d1-51fc328b46a2"
        },
        "item": {
          "id": "bb2867f0-de40-4497-b5be-91cd45734b12",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "886ace2b-b5d5-44c4-abf3-0ee186aec900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65755c81-a3ed-40d2-bc70-778d7ec79012",
        "cursor": {
          "ref": "f8ea2b47-4a34-495e-8c15-b044fe1d3d97",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a7ef445b-224a-426a-a809-332bc5498d4a"
        },
        "item": {
          "id": "65755c81-a3ed-40d2-bc70-778d7ec79012",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5789b714-11dc-4442-88d7-792c2e72bcbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3013fc86-9223-4cee-bf63-59f7f49a91b3",
        "cursor": {
          "ref": "77332a77-4dc9-40f9-8f49-94bf6b096559",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a60c3c95-647f-4326-aeab-205c4ea9587b"
        },
        "item": {
          "id": "3013fc86-9223-4cee-bf63-59f7f49a91b3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "97fdc2c1-2940-4243-88b7-10da28563b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d929c508-f206-4be1-b08d-532f2d341ad0",
        "cursor": {
          "ref": "e7ccf081-c69a-4002-890a-4a3c4310c4ce",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d81ad9e9-a7c4-4a86-b5dc-76da5a094ef8"
        },
        "item": {
          "id": "d929c508-f206-4be1-b08d-532f2d341ad0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3fe4b60d-8266-4592-89c9-61e58bd5a8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f26b42-fd5b-4318-8b6f-4c597c661b45",
        "cursor": {
          "ref": "0c0b69bc-aee6-4d00-a22c-5244e6d611ae",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "cb44beb2-2730-4bf2-8349-993446c336bb"
        },
        "item": {
          "id": "51f26b42-fd5b-4318-8b6f-4c597c661b45",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "788bed73-e889-4495-87d0-6d824961c085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d07d8a1-7e33-4b58-a2b7-0caa6045e250",
        "cursor": {
          "ref": "c4dc19c4-b156-4f5f-880a-c644e4af69ba",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b23cb815-8631-4ef6-a57b-3125b6151c89"
        },
        "item": {
          "id": "5d07d8a1-7e33-4b58-a2b7-0caa6045e250",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "bbe49ed5-cfbb-4259-b578-3f2147ded557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab79a16-025e-439f-9a3b-8b12db7e8e82",
        "cursor": {
          "ref": "3b757691-8707-4a21-9a96-d4bfc33438f7",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c14cec82-45a9-437b-abff-718204f2da1f"
        },
        "item": {
          "id": "fab79a16-025e-439f-9a3b-8b12db7e8e82",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0d087841-01d1-4e6d-a544-dade9434975a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd33f017-5125-4970-b8d4-3af73dc205ca",
        "cursor": {
          "ref": "ede32ab3-e862-48a7-8c6a-4e0ef515a68f",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4efeb3e2-3fae-4c86-8dc0-9ce626b2c13b"
        },
        "item": {
          "id": "bd33f017-5125-4970-b8d4-3af73dc205ca",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "070ba18f-7206-48fc-89d7-6d770fa458eb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810b2340-716b-452a-815d-883a40354f77",
        "cursor": {
          "ref": "4f8a40c2-3d18-4ec5-ba63-255f81beb313",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "16872034-17e3-41d6-85a4-ba38fe4be376"
        },
        "item": {
          "id": "810b2340-716b-452a-815d-883a40354f77",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "021a0455-85e8-4004-b001-2548ca5f7d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "de4c3e98-f933-4422-b338-16740b1755a6",
        "cursor": {
          "ref": "149385f1-72a7-4e8c-9800-4216a3917e57",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b94aabf9-3ac5-4d52-90bd-6e800e79b6a1"
        },
        "item": {
          "id": "de4c3e98-f933-4422-b338-16740b1755a6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "dad38fbe-9b3a-4857-805c-5668feef08a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "e88b436a-b3a2-47fc-9161-03bc869f8713",
        "cursor": {
          "ref": "b49469a2-0594-4e1d-b58a-206e56bbde8e",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "94707018-916f-4156-a920-864c1e570736"
        },
        "item": {
          "id": "e88b436a-b3a2-47fc-9161-03bc869f8713",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "fa0b9543-ae0a-445b-b24f-727874f8aca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "f19f0a74-a06f-41a4-b864-fb7c322e1e5b",
        "cursor": {
          "ref": "8514621e-8ff2-4f56-8d51-536575291988",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "76ff65cb-5119-4bba-af33-26c35d29ae12"
        },
        "item": {
          "id": "f19f0a74-a06f-41a4-b864-fb7c322e1e5b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e44f5941-0d60-4d43-934f-bf3e949dee4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "7a5c4aed-77fe-44e7-9624-4d8070bb25ea",
        "cursor": {
          "ref": "ad47098f-65bd-436a-b4b3-52f28c0eb784",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "67d07ef6-1b68-4a63-bd10-2576ddbbc327"
        },
        "item": {
          "id": "7a5c4aed-77fe-44e7-9624-4d8070bb25ea",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "325893dc-bf40-486b-a5bc-9786c3325d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "4f983b77-8e3e-4b26-8e80-328867c3c043",
        "cursor": {
          "ref": "c24ae67d-0f79-4693-974c-bc1f093589d7",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c4a401a5-72f0-4cd6-8485-9f074aea7f12"
        },
        "item": {
          "id": "4f983b77-8e3e-4b26-8e80-328867c3c043",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "868171b4-dcf3-4aa6-9dd8-05acd49683d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "04d280fe-d40c-4396-b59c-a4f4e9463636",
        "cursor": {
          "ref": "8dff01c8-a318-46a5-ade9-d1c4d6c12c93",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "460e3d55-a390-4f9c-b609-1171ce01ea2a"
        },
        "item": {
          "id": "04d280fe-d40c-4396-b59c-a4f4e9463636",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "63f77b15-4df7-4292-91d3-8a5458da02c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "4bccf85f-ca49-4b49-8651-68c4dbbcb423",
        "cursor": {
          "ref": "59f694f1-f0db-43a7-90c0-f2abb80244d7",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f3fee572-72e2-4202-bfaa-aea8c16dba34"
        },
        "item": {
          "id": "4bccf85f-ca49-4b49-8651-68c4dbbcb423",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "609e1d99-3367-44dd-84aa-62fc1254b87a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62841d0-39e1-4ad2-b8d0-8613a927e758",
        "cursor": {
          "ref": "04bc134f-2119-4a61-a714-8c3edb4d1651",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c096e26a-e421-4328-a9ea-d66d4c066b89"
        },
        "item": {
          "id": "f62841d0-39e1-4ad2-b8d0-8613a927e758",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4cd7b184-03d2-4ec9-a9d9-1ab99836d76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0d41a1-41f5-4323-b867-843787d54ddc",
        "cursor": {
          "ref": "e1973f4e-8ca2-4d46-b74f-5c95a5ada310",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ead103d7-d6fc-4b20-bc6e-37473e661770"
        },
        "item": {
          "id": "4d0d41a1-41f5-4323-b867-843787d54ddc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5c3eb30e-2b4c-47d1-9110-97f1b8798345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aeed03f-01f5-4e61-98fd-7aae2e87f054",
        "cursor": {
          "ref": "ec3079bb-1c83-4dbe-8350-8ec7cd817af4",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "66b2414d-0768-464b-8e78-561f01d88b76"
        },
        "item": {
          "id": "4aeed03f-01f5-4e61-98fd-7aae2e87f054",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "baa85900-7699-4de9-ad53-39e5aace2b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43c547e-6bf3-42f1-b345-bdc03446f891",
        "cursor": {
          "ref": "9e3080b4-af40-42a8-b1f3-21841ce7fe8b",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7afccb1a-127e-4772-be02-ef2c9c6e16bd"
        },
        "item": {
          "id": "f43c547e-6bf3-42f1-b345-bdc03446f891",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2971d203-8c56-4308-9d02-43808bab5e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a491ef5-d486-40d3-bb24-9ee1dd14e6c5",
        "cursor": {
          "ref": "28b068bb-0412-41e8-9cac-3182ba4ca068",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0cf10080-dc10-4fca-9417-84777d680f5c"
        },
        "item": {
          "id": "6a491ef5-d486-40d3-bb24-9ee1dd14e6c5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f95d4611-a857-4af4-b7a0-8e215acec03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd8f215-67b1-4525-80e9-14360cdaf30c",
        "cursor": {
          "ref": "24d7a865-be42-4fc0-b23c-58b435a42051",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "529415cb-f0e5-4bc1-825a-6cd4ae0ea614"
        },
        "item": {
          "id": "0cd8f215-67b1-4525-80e9-14360cdaf30c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "beedbf98-7fc8-4acd-8b8a-f7c6c7d6752a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba4b491-a78b-4bb8-a092-fd4af784d480",
        "cursor": {
          "ref": "89d48a49-f14a-4970-80ab-e811a1e1f402",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "56c5b797-52f4-4228-bc00-0d8fbed8fbaf"
        },
        "item": {
          "id": "5ba4b491-a78b-4bb8-a092-fd4af784d480",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6e69797d-6e23-4046-8c6f-b6084f7bd15e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc7ed46-8134-48e1-94d4-233dda5f5312",
        "cursor": {
          "ref": "fb01e4e2-c474-4b80-98aa-2d9a4d76af5a",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ee30d54f-4992-479d-bf80-96b17054d225"
        },
        "item": {
          "id": "0bc7ed46-8134-48e1-94d4-233dda5f5312",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cdf22dd8-1a20-4311-8c48-782ad3bba9a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcab35c5-a11f-495a-b356-3796e58ee90a",
        "cursor": {
          "ref": "69444563-755f-4ec6-9949-e317b2576b95",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5a8148ea-49f4-4e8c-ae74-70c7630d6f41"
        },
        "item": {
          "id": "bcab35c5-a11f-495a-b356-3796e58ee90a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "caed2628-6433-4574-85da-5a99dd7677a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647644e8-b966-43a0-99bd-16b703dfda13",
        "cursor": {
          "ref": "92ee1eb6-5bf2-4f6f-990d-05dd3ebdf9dd",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "cb64144c-6a88-457d-a000-9ecd15f48873"
        },
        "item": {
          "id": "647644e8-b966-43a0-99bd-16b703dfda13",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "04444130-6aa1-4d8d-a20e-975ed0f73a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803ee8d9-af1d-43ff-bb5a-720bbc31f3b9",
        "cursor": {
          "ref": "8ce3589d-d04a-42ac-972b-5b7481be5871",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a95f5ef2-336e-4b9d-8432-08a32f02546f"
        },
        "item": {
          "id": "803ee8d9-af1d-43ff-bb5a-720bbc31f3b9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6d68e6bc-87c2-4b7e-8161-52494b880dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa153fd-61f2-4f0a-9ac9-9e7c6b70297d",
        "cursor": {
          "ref": "c0c41b0d-755e-4b69-9c9f-b788c5bddfa1",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5293f635-7b58-4992-8317-61d22d15fa4a"
        },
        "item": {
          "id": "6aa153fd-61f2-4f0a-9ac9-9e7c6b70297d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "35a223b6-ad31-4969-aac0-e0f90e86f29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179f7cb0-1011-4ff3-a66e-fd16eaf4eccf",
        "cursor": {
          "ref": "d9f48a98-be8d-428c-a2b8-83960d43b9df",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "bff6a04e-3da7-4ea9-b49a-2993e321262a"
        },
        "item": {
          "id": "179f7cb0-1011-4ff3-a66e-fd16eaf4eccf",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "43c12d2f-5740-48ad-addd-b902a8bdf637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d877d3d0-cb1a-4248-b2a8-3bd30c78eb22",
        "cursor": {
          "ref": "9c0a9689-5f0d-4476-889f-1ecdcbe047ba",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9f2e0eb5-820f-4ad2-865f-ee7f2466bf0c"
        },
        "item": {
          "id": "d877d3d0-cb1a-4248-b2a8-3bd30c78eb22",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "87e3b3e8-1d42-4ed1-916c-9d263b669d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74a3691-5df1-49bc-be07-2cf48988f70b",
        "cursor": {
          "ref": "a971702c-1828-44d3-bb5f-dfe3ae7dbd98",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f627b19a-0f5a-423e-a247-75ef2b01bdcd"
        },
        "item": {
          "id": "f74a3691-5df1-49bc-be07-2cf48988f70b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ab4386ce-a2d6-4ff6-b38e-5a48ddecc211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef849931-0f78-4ba5-8e8c-93c4641cefbf",
        "cursor": {
          "ref": "0629ce19-de8f-46b4-ad1b-13786a9287e1",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "97cbd799-3b4d-4f40-9fe0-5ae3c32b513c"
        },
        "item": {
          "id": "ef849931-0f78-4ba5-8e8c-93c4641cefbf",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6a23febd-35c8-46a3-86f6-5b20d69d2d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4a516a-4397-4d43-b4a7-e05158c85f49",
        "cursor": {
          "ref": "c55befb4-e202-4b6c-8aaa-e928c3197c9a",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1f85bc1a-57d6-4607-9161-0648c586fc71"
        },
        "item": {
          "id": "9d4a516a-4397-4d43-b4a7-e05158c85f49",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5d6e01f7-17a2-47e7-a5c2-13e9fd46fe22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54de3f30-778a-4109-9ed2-08e9eaa322ae",
        "cursor": {
          "ref": "b115eedb-852a-43f1-a7af-3b68896972e9",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "09076f92-3e0d-421e-b6eb-2cb0d88674d1"
        },
        "item": {
          "id": "54de3f30-778a-4109-9ed2-08e9eaa322ae",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3400b924-155d-4bb6-b9db-debd20999b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2196f9-4897-4b04-bca1-b9c6199eff89",
        "cursor": {
          "ref": "2d8493e3-0b8c-4e3c-936e-8233012b8498",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ef4484c7-9583-44e6-863d-30a6e502fd17"
        },
        "item": {
          "id": "9f2196f9-4897-4b04-bca1-b9c6199eff89",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c8096c7e-096b-4d6c-9af3-4cd5b264856b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0311a89-b9ce-4a8e-93c1-b6f07edb2bef",
        "cursor": {
          "ref": "5221d5ee-b5c0-415a-b302-386960ea59b4",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a81f7ca7-af1b-47e0-8054-efa7e06e31b5"
        },
        "item": {
          "id": "d0311a89-b9ce-4a8e-93c1-b6f07edb2bef",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "169969ab-2d4b-4f93-b413-63fa576c913d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2370752d-ece2-4c1e-99ba-f209591f9b1f",
        "cursor": {
          "ref": "efbfd67c-e069-4798-9d12-534f4d2d9502",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "dfa3200a-279d-44d0-ac99-f37f9beb3023"
        },
        "item": {
          "id": "2370752d-ece2-4c1e-99ba-f209591f9b1f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0f5ffc52-8137-4b27-bdbe-82adb353dec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502be954-0b02-4d9b-88c4-6d5ac5dba60c",
        "cursor": {
          "ref": "6fa4e32c-6573-4132-aa71-fab52191a8f3",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "aa3be37f-fd82-40c0-8efb-c160eb028d4d"
        },
        "item": {
          "id": "502be954-0b02-4d9b-88c4-6d5ac5dba60c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "59b0427d-0672-4b73-b5a8-1d3fa0fe3d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ebfb76-4324-43ba-96d3-a4136cf19107",
        "cursor": {
          "ref": "bac60c96-bcfc-4f73-a5a1-830237613823",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a087a72f-0c71-4eaa-b39f-f6a128fda9c5"
        },
        "item": {
          "id": "37ebfb76-4324-43ba-96d3-a4136cf19107",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "825333ef-d8dd-4a77-82cc-8e46cae22023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f3762b-5a70-4519-a62e-44d57401cb26",
        "cursor": {
          "ref": "77d44f2c-4d5c-4c26-9a71-641628e1795e",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "10b2c14d-e85e-475e-a711-69cace8a335d"
        },
        "item": {
          "id": "c9f3762b-5a70-4519-a62e-44d57401cb26",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5a9899a8-119a-49eb-9082-3823293edf1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8599bcae-c0ca-48b5-ba90-823d8a4b6723",
        "cursor": {
          "ref": "92e8f54a-710b-4e84-9e6f-8a7a8f046022",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9f4a7655-ae74-47e3-87fb-1137b79f624e"
        },
        "item": {
          "id": "8599bcae-c0ca-48b5-ba90-823d8a4b6723",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bc8febdc-13c5-4bee-9ca8-863acd3e02ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3e4820-8e68-4a4b-912b-b23f9e9c3f45",
        "cursor": {
          "ref": "8e615967-a8ff-4e07-9270-90d4bd8cccfb",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cc788033-a943-42b6-a30e-6a767b04c9d9"
        },
        "item": {
          "id": "fc3e4820-8e68-4a4b-912b-b23f9e9c3f45",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "60d19fe2-df94-4fde-9ac6-32887b704b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4647c34e-1ded-4e93-af40-4441d0ff1cce",
        "cursor": {
          "ref": "1d20218b-75b6-4e34-bbc9-cdce8ab92124",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "76e0d715-2194-4f56-b01d-eacecf1e1198"
        },
        "item": {
          "id": "4647c34e-1ded-4e93-af40-4441d0ff1cce",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "eeba9b48-00c1-4561-a12c-f865e8ba40c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c8ec1b-71c0-4e37-8a02-62e98ff4fc6d",
        "cursor": {
          "ref": "b7cf1a06-7a4f-47b1-9ac4-0e17408e5af5",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0c9ae973-5370-4036-b098-963724a67c70"
        },
        "item": {
          "id": "83c8ec1b-71c0-4e37-8a02-62e98ff4fc6d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5febb8c8-8d4d-470f-9dae-21542c5177a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78869f7f-5f8d-420b-9b5d-11ea95e2ff46",
        "cursor": {
          "ref": "94e946b9-ac45-4c7f-9e43-a2c309fddb89",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "37e31bff-2235-4f53-90fa-572f0bc5f3b3"
        },
        "item": {
          "id": "78869f7f-5f8d-420b-9b5d-11ea95e2ff46",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "606df29c-8f58-4aa4-b270-e70b94ac98ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b2a8a9-27e4-4afe-beac-7cf5dd39fb42",
        "cursor": {
          "ref": "5af1d840-a361-4264-a6bb-0ed1b5ee1cbe",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "566af439-f47c-4ec4-a666-97fb9e25e7c8"
        },
        "item": {
          "id": "c3b2a8a9-27e4-4afe-beac-7cf5dd39fb42",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "de89916a-91bf-46e3-8568-a9f481f8a212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db1798f-69f5-4ba6-a5be-1442825da1ac",
        "cursor": {
          "ref": "66f627e2-9cd1-40b0-bfd7-00821217bb0a",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7f3c6905-ccf1-4a9a-af51-7d86919202fb"
        },
        "item": {
          "id": "9db1798f-69f5-4ba6-a5be-1442825da1ac",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8cc32dee-6499-4bcc-b8e9-c9d462f59128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7fcd04-8339-41ec-a534-a9e5c0eb3513",
        "cursor": {
          "ref": "271c6e63-3435-4f05-a475-d2b1a7143e76",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e94027e8-9cc2-4a3c-830d-4743d8c0b756"
        },
        "item": {
          "id": "ae7fcd04-8339-41ec-a534-a9e5c0eb3513",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d3a32b43-e50c-48f6-bc33-c9b4e8f90801",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "985363b7-9b9f-4133-ac54-52da35b219d6",
        "cursor": {
          "ref": "3b58c317-cb79-408b-b493-07829c539003",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1537ec92-5223-4dc2-b924-a5a7c1afef5e"
        },
        "item": {
          "id": "985363b7-9b9f-4133-ac54-52da35b219d6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "13c91a46-a41b-4051-90c0-f02a93eaa8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848eb7e2-55d8-43e3-9367-3e92d4fbf87d",
        "cursor": {
          "ref": "aa31e142-ec9a-45c3-87cc-761c1ae32dde",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2d19c369-399e-48ba-bc44-aaa098b8347b"
        },
        "item": {
          "id": "848eb7e2-55d8-43e3-9367-3e92d4fbf87d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2de6ba28-1a7b-4ef5-99b4-82bf4a0d7730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab3b10b-eb0d-4814-b068-6c17e33fa5f0",
        "cursor": {
          "ref": "2fa22c63-2b00-49d9-bb4e-ae5f42a8f8c3",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "451185e3-9c78-4381-bf41-665490167e32"
        },
        "item": {
          "id": "5ab3b10b-eb0d-4814-b068-6c17e33fa5f0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0d0226b6-5817-48de-8692-d9840df0d26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf981ff-ba8e-47e2-a8ba-e2f66f158814",
        "cursor": {
          "ref": "8e42d681-5d62-489d-b351-c4a6159575d1",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6ec7db30-7d42-41c8-b73e-b9b2d2633ce9"
        },
        "item": {
          "id": "fdf981ff-ba8e-47e2-a8ba-e2f66f158814",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9e47ab48-9b94-417f-9eef-74f5ff855639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7bd7f28-3717-4140-a80b-c72b78d4be78",
        "cursor": {
          "ref": "6887dcd2-0e62-4a79-844c-eb02aa9d9e0f",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9e78300f-0aaf-4831-93db-623b2f9bb490"
        },
        "item": {
          "id": "f7bd7f28-3717-4140-a80b-c72b78d4be78",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "113607a3-1537-458b-bbd6-d8d48eacdaae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d74ea738-c465-42b5-9ffb-40cec69fdc64",
        "cursor": {
          "ref": "dab729e6-e55a-4415-b248-4320e71fc54b",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "02f7bf85-91bb-4fe2-971f-d2b96187be7b"
        },
        "item": {
          "id": "d74ea738-c465-42b5-9ffb-40cec69fdc64",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b06a26fe-5513-4bf6-8585-ab975167f880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33cccb0c-f77e-487f-867a-4a43a7f27875",
        "cursor": {
          "ref": "375709ca-44b1-464a-b2ba-b144891efdc3",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7092d45e-fbca-40da-819c-1d948df4f740"
        },
        "item": {
          "id": "33cccb0c-f77e-487f-867a-4a43a7f27875",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "232ed03e-1eaa-42d4-b087-554a4bc5a362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24460800-085d-4540-af55-a23479aaaeb4",
        "cursor": {
          "ref": "34d97252-748f-411f-ba4b-d83084b19c9d",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "abc8e35f-3e83-4f07-bd92-a4ba10ef08f1"
        },
        "item": {
          "id": "24460800-085d-4540-af55-a23479aaaeb4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "115eb89f-d7e2-41e9-bc7b-2bd28734c646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3fab7a-465f-4710-9035-bebc6530d6d7",
        "cursor": {
          "ref": "c006c6ac-3774-4fe0-be1a-e10dabb46d79",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "bda720c0-f9aa-46e1-8e17-6ea694428776"
        },
        "item": {
          "id": "bf3fab7a-465f-4710-9035-bebc6530d6d7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "77eadf9b-c478-48df-a758-5d84cefb3880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ffc160-6bab-4742-aed1-02123e3170e0",
        "cursor": {
          "ref": "32da834d-5efd-4881-8cef-6421a67b0f90",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "739c7c72-4fed-4933-b3fc-be67d882f713"
        },
        "item": {
          "id": "23ffc160-6bab-4742-aed1-02123e3170e0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0d66e810-629a-4b60-95a6-19649f7c80a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e509d6-e080-426a-bbf1-c15be37524ef",
        "cursor": {
          "ref": "596b1834-63d3-44a3-8594-e57d9abf67bf",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ef607bc1-d4d9-4843-90ce-3cf7cd26c411"
        },
        "item": {
          "id": "c5e509d6-e080-426a-bbf1-c15be37524ef",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8e38a464-a512-42de-a878-c7d7e0a58300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9699fef-d161-485c-b917-9ac016f882f9",
        "cursor": {
          "ref": "d3e864d2-b3a2-4f8f-9513-86da1b0eca9d",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7a98d6bd-e4a6-42c5-a722-6a43c97ade01"
        },
        "item": {
          "id": "e9699fef-d161-485c-b917-9ac016f882f9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d6c1eeb5-971c-4941-8917-5602b14edb79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66a9459-3af3-4b21-a72d-382ef3b2a021",
        "cursor": {
          "ref": "a2d651f9-912f-4f10-a71d-9df2f59be0d8",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "78ea9aa2-082b-4deb-9155-e85ab7541c98"
        },
        "item": {
          "id": "b66a9459-3af3-4b21-a72d-382ef3b2a021",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7277e0a0-6718-437a-8bc8-adc81ebb0866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb0dd8f-5bab-4fe2-8b34-c26bdbce3176",
        "cursor": {
          "ref": "3b4299a7-c095-4313-af4a-95595c9b0f37",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ccc17fd7-9660-4f81-8610-ac32c7c398c0"
        },
        "item": {
          "id": "ecb0dd8f-5bab-4fe2-8b34-c26bdbce3176",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0c5bf610-b9c4-4e21-a443-5b5e9c89f2fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7671940e-6a88-4552-8c16-03b4ada85d03",
        "cursor": {
          "ref": "ba3dc952-b8ba-4f11-84a5-29fb4e5f8d3f",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9e244b2e-8bec-4c4f-8b9b-fd642cc923c7"
        },
        "item": {
          "id": "7671940e-6a88-4552-8c16-03b4ada85d03",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7c3dcdb2-f818-4018-b3d4-6a5b0efb6b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3ba461-a540-4818-95b8-cd9304eefb85",
        "cursor": {
          "ref": "b56d7dc4-b2be-418c-8a66-adfc8f889b6c",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7f7cd5ac-a2c0-4f24-ab4a-4f54e709037b"
        },
        "item": {
          "id": "ff3ba461-a540-4818-95b8-cd9304eefb85",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2b6f8b58-fd05-4851-b668-1428efd0d078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47ca8b3-9269-4aaa-b695-00230d0ea91a",
        "cursor": {
          "ref": "780d1cec-f4cc-4c0e-9d15-f1967f1df688",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4fd2ac4b-94f6-40d6-b3a8-3505a8f53e87"
        },
        "item": {
          "id": "d47ca8b3-9269-4aaa-b695-00230d0ea91a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3d51777f-d4b6-4822-a654-f6a9b48d47b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0249938a-34d9-4d88-8235-f2121eb59de1",
        "cursor": {
          "ref": "b959405a-6245-40aa-94fb-ac6e904ba5ab",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d9fd3232-08da-42cf-bf95-668f44123059"
        },
        "item": {
          "id": "0249938a-34d9-4d88-8235-f2121eb59de1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d73aa094-80d9-4599-aeba-1230f515f2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643ffc5f-2824-4667-90da-66c5ce616dfd",
        "cursor": {
          "ref": "b52fe606-ebc1-4832-81f7-8f73a790efaf",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7cdcde2f-95c1-47d6-a148-ec392c038292"
        },
        "item": {
          "id": "643ffc5f-2824-4667-90da-66c5ce616dfd",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "552471f2-4309-4788-b8e0-228a86bc6b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad14c834-a9cf-48a1-9b30-df99768ab3a5",
        "cursor": {
          "ref": "de4839a7-2c74-4417-944c-c0b93f8ef73d",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1f57c7fc-9aa3-4c36-8c89-de5fe7779afb"
        },
        "item": {
          "id": "ad14c834-a9cf-48a1-9b30-df99768ab3a5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "59a74b9d-072a-49b5-8c8a-52dc77d61f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d365e1-7cf6-45d0-8071-7a87d989e26b",
        "cursor": {
          "ref": "e45d3aab-f909-4d1f-a020-bf94113d8e98",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "85add19e-529a-4e43-8747-636e9758385e"
        },
        "item": {
          "id": "75d365e1-7cf6-45d0-8071-7a87d989e26b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cdecb7ea-c4c5-4a9f-9d56-070d5dbbfeb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be545ec6-0564-4c41-8677-86046e3a348c",
        "cursor": {
          "ref": "9b1e7822-9b95-47ef-8b55-c9696a05306d",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ca79ca9d-4f50-4eb0-a533-9f659b5847c8"
        },
        "item": {
          "id": "be545ec6-0564-4c41-8677-86046e3a348c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4063d0ed-e625-4396-b292-630f53ad129a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d459bd-26e0-475a-8043-8dd5fa65fb55",
        "cursor": {
          "ref": "9203485d-db43-4ddc-a40a-5ae04110a8b1",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "80d4a794-9dbd-4d73-942d-dd616c0ef0d5"
        },
        "item": {
          "id": "67d459bd-26e0-475a-8043-8dd5fa65fb55",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b5384a70-17f2-437d-92dc-a3d837b269a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebea4363-a12c-4011-8625-69bcc1bc5467",
        "cursor": {
          "ref": "64f00453-d6e9-49fd-9470-57363f6a03c2",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ca6b941c-a01d-4ab0-b794-8908da5d6206"
        },
        "item": {
          "id": "ebea4363-a12c-4011-8625-69bcc1bc5467",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1d562668-341e-43cb-b5ac-06d1df4d6909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70bab9c6-243a-4cc8-9ab1-ea790d1dda5a",
        "cursor": {
          "ref": "97d3ccb7-78e7-41a8-adee-3ed927ec6669",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f28c59c7-6439-4d1b-b6a4-36857ea04f9e"
        },
        "item": {
          "id": "70bab9c6-243a-4cc8-9ab1-ea790d1dda5a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "224a4991-ac10-4fe6-b999-775ddd8832fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c48fcf0-f39c-480d-91fd-372592785790",
        "cursor": {
          "ref": "98ebcf3d-26a3-4a96-9da4-cea4e7a68e80",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3b28feff-762e-49ae-95c4-be7f23bea40d"
        },
        "item": {
          "id": "1c48fcf0-f39c-480d-91fd-372592785790",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c4b6c9bd-96df-42b2-91bc-49ef3c64e3fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f713553-98a8-44f4-875e-b05b97bf2bd7",
        "cursor": {
          "ref": "48fd04fa-88b5-4f59-b1c9-2a69276f6132",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3d9596cc-40f7-434f-8e1b-179f68e511e1"
        },
        "item": {
          "id": "1f713553-98a8-44f4-875e-b05b97bf2bd7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9cde72c0-ab6d-4450-a971-580463eed08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b704d408-e438-439a-bf4d-eac08fc652cb",
        "cursor": {
          "ref": "78d70833-b8d0-4068-8e05-d6f1db753aef",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b9dffea8-252c-4906-84fa-a77fd12a98f6"
        },
        "item": {
          "id": "b704d408-e438-439a-bf4d-eac08fc652cb",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bfc505cf-8a10-4ba4-b841-4b0b99315301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998fd5ef-b42e-47e5-b955-5f58d2adab0e",
        "cursor": {
          "ref": "45901671-27bc-4b5b-960e-c53a8329e82e",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "664c27a3-c44e-492f-8915-27854ac6da31"
        },
        "item": {
          "id": "998fd5ef-b42e-47e5-b955-5f58d2adab0e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a33177c3-733d-4100-928a-954aa9eef417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c9d578-b944-4624-b9e6-22e1f0d54832",
        "cursor": {
          "ref": "e73c2efd-bd34-4b08-a37c-aad0b27ced5a",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ccff57c8-2e55-45d5-b546-6ec527ea8a3c"
        },
        "item": {
          "id": "04c9d578-b944-4624-b9e6-22e1f0d54832",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "769146bc-a37d-4faa-80fd-5e3964f2007b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e48039b-0050-4899-bd2a-83d52974752c",
        "cursor": {
          "ref": "c4182df5-062c-4762-a644-41c6c16603c2",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5d08258f-bfbb-4795-a12c-a348ea1150f3"
        },
        "item": {
          "id": "4e48039b-0050-4899-bd2a-83d52974752c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "984ac6bc-466b-4b51-b59b-2571aaa821f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab2451a-5032-4bae-8525-334d64fc95cb",
        "cursor": {
          "ref": "a091faf7-3b98-4623-9f3b-61ecd7d22c27",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "122e3b02-07db-4f99-96e7-6b3d55b2d697"
        },
        "item": {
          "id": "1ab2451a-5032-4bae-8525-334d64fc95cb",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9294ef6f-b563-4f04-87fb-178a7315646d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b946f1-3fcc-4e30-abde-ea9017a7e3f3",
        "cursor": {
          "ref": "11bb71ae-0c7a-4571-916c-1f3915d44dbd",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9a252f9a-ab2c-4223-9574-5af6be0ffc5d"
        },
        "item": {
          "id": "78b946f1-3fcc-4e30-abde-ea9017a7e3f3",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ebd019b4-c07c-4018-9273-cfdb5bfdde49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f9dcd8-4ccc-4c15-b334-9b2729ffd24f",
        "cursor": {
          "ref": "c16f93ca-224e-48c4-af7d-63411f6d4ffc",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e8cefe47-6491-4164-ae43-26671380a17f"
        },
        "item": {
          "id": "a8f9dcd8-4ccc-4c15-b334-9b2729ffd24f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "73c285a8-5e66-4d01-ae90-2ed919314395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36406ad-1836-40a5-b43b-9b493ff25273",
        "cursor": {
          "ref": "3efba70f-31f0-4814-ad33-0bc949d21478",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "63075198-ef45-41dd-9cc8-4cfbc21537ec"
        },
        "item": {
          "id": "d36406ad-1836-40a5-b43b-9b493ff25273",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "5f556894-755a-4a0d-9aa4-cb7c96100268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e64000-40a5-4262-9e39-f6e7cb2475b1",
        "cursor": {
          "ref": "f8b48802-1c9b-4b40-9db1-e9363bbe6cac",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b7940a7a-41b5-44d4-a23b-c9404fcea2a7"
        },
        "item": {
          "id": "40e64000-40a5-4262-9e39-f6e7cb2475b1",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "064371ac-161a-497a-8d1b-1fdc2134844d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d07bd7c-7a2a-4789-ad48-433ed460eff5",
        "cursor": {
          "ref": "0ee5199e-5770-4379-8d3a-b163046a7cbf",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "02253e03-0f5d-4791-b412-4c9e97a36c74"
        },
        "item": {
          "id": "6d07bd7c-7a2a-4789-ad48-433ed460eff5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d02beb47-7633-4873-9149-1c195ce11ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe31e8d-69fc-4334-8670-f67c3c585c9a",
        "cursor": {
          "ref": "bc5c26d4-a074-4c07-8327-b3c5304cd59c",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "979e6f79-082a-4941-a83a-ca2dc53ac287"
        },
        "item": {
          "id": "bbe31e8d-69fc-4334-8670-f67c3c585c9a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7882639f-535f-4bd1-bea8-44665cb531e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7345d122-831c-42a3-80da-d804fb4352f4",
        "cursor": {
          "ref": "17c6c591-6492-4099-bdab-830723598d2b",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f81afd48-3de7-4370-ad98-d91e9713b77c"
        },
        "item": {
          "id": "7345d122-831c-42a3-80da-d804fb4352f4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "bd628e04-9e12-463c-9e35-874a58e4e3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0be35e3-578b-4776-bcf9-beb12fd55613",
        "cursor": {
          "ref": "9941d3e2-fb3e-4ef7-b009-9bd741e0ae72",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "fbdfb780-8d84-4ed4-92c4-549dd6e5feb8"
        },
        "item": {
          "id": "c0be35e3-578b-4776-bcf9-beb12fd55613",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "70caa63c-27d9-4cdb-bec9-44fd5a7f8f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd51863b-7d9c-4889-b19a-a639bfdba33b",
        "cursor": {
          "ref": "1d97a10a-4e18-44b0-9e10-75308169aca9",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "10eaca6b-9431-456e-a555-cd85dcade072"
        },
        "item": {
          "id": "dd51863b-7d9c-4889-b19a-a639bfdba33b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1f5ef46e-1e9a-452f-965d-24f8836e4934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1f49ea-5798-4756-abec-6907169ae9cf",
        "cursor": {
          "ref": "7773a661-3861-49ab-9671-c4a5317cb944",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "57707f8e-c38f-4c12-8057-a4a6e17b1a71"
        },
        "item": {
          "id": "bf1f49ea-5798-4756-abec-6907169ae9cf",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9ffe0994-53b5-4367-afc6-8dca4a562f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cbfda3c-ffa3-4543-9b2a-5089b686ee75",
        "cursor": {
          "ref": "39a0350b-7707-4026-8bcd-34eeefbfcf82",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "51facf79-0c85-4740-a280-f6b8123d0305"
        },
        "item": {
          "id": "8cbfda3c-ffa3-4543-9b2a-5089b686ee75",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "76a7d216-66a1-4799-80d9-a7a1c9982fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8789968a-076d-474a-bf61-a9f5500664aa",
        "cursor": {
          "ref": "b7d6f543-329b-4bbf-9718-4c04989554ca",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ebe66ca7-f6b9-4a54-840b-6644149fc7ff"
        },
        "item": {
          "id": "8789968a-076d-474a-bf61-a9f5500664aa",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7099efa3-bdf5-4fb8-b50a-bd65935d4897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d899e1-e0ca-48f7-9351-9cc372f00667",
        "cursor": {
          "ref": "d518c3d7-6c0c-4a13-96d0-87df16b0681e",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a99addb7-4b53-48d7-bb1a-d7a128147b3e"
        },
        "item": {
          "id": "a3d899e1-e0ca-48f7-9351-9cc372f00667",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b3094678-4a1d-4f95-b6d9-fbeab2606c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ac3c9e-5a88-4542-bc1d-590ecff75a6c",
        "cursor": {
          "ref": "910e4bde-513e-46f3-b5fb-3a788acf6152",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "517f977c-baf0-4ad4-ac92-df5b90ac7eea"
        },
        "item": {
          "id": "c1ac3c9e-5a88-4542-bc1d-590ecff75a6c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "97181e66-c9dc-451d-ab44-e4bc5ab6fc8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f9dc05-d744-4982-bd57-dd93518c4c9f",
        "cursor": {
          "ref": "40fc0f95-66a6-4fe6-ac50-fcacdd75431c",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1ba21c90-5653-45e2-a0a5-017c219c1696"
        },
        "item": {
          "id": "a9f9dc05-d744-4982-bd57-dd93518c4c9f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "854cc786-5e3f-4e51-a61a-159359873691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18d58c6-80c8-42b0-9527-bde4be25d8a4",
        "cursor": {
          "ref": "b1a6a79a-74d7-4cc1-83b3-39d3050bc18a",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3bcf0cc6-e205-4a10-a558-baa840eeea30"
        },
        "item": {
          "id": "b18d58c6-80c8-42b0-9527-bde4be25d8a4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "008d6a15-935c-419d-945c-2a9672c6384a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a29cd2-5275-4578-adb1-8933cfa454ac",
        "cursor": {
          "ref": "dba72e16-b81c-421e-97e8-3f7776c79743",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c96373aa-4400-4a49-b226-ea1d51c21565"
        },
        "item": {
          "id": "03a29cd2-5275-4578-adb1-8933cfa454ac",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "80c63377-3874-4f27-a098-6ab595d48094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa3c94a-2e5e-48e5-9dfd-79161fbc4a06",
        "cursor": {
          "ref": "4df580c1-9298-4712-aff2-1fb7145f1bdc",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b7102e4f-fd3c-442d-80b3-8e501a10f044"
        },
        "item": {
          "id": "4fa3c94a-2e5e-48e5-9dfd-79161fbc4a06",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "27632817-4df9-464e-81b9-2b43d71d758a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6eac8f-cf1e-475d-97ac-9bfa131680bc",
        "cursor": {
          "ref": "1cf4ea4e-b031-4c22-9bce-872cc090c480",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b585b007-e6d6-4c81-ba6d-98afc29d6aa7"
        },
        "item": {
          "id": "cb6eac8f-cf1e-475d-97ac-9bfa131680bc",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c015a698-c138-4591-929e-6e680a7c18c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55126dad-ddcc-43a6-84f8-9a7c0cf347d8",
        "cursor": {
          "ref": "040f7a20-7da1-451d-bb06-25eaf3910a07",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b64dbb66-c860-46d8-a16c-c379d7449bec"
        },
        "item": {
          "id": "55126dad-ddcc-43a6-84f8-9a7c0cf347d8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5bc2da1f-e749-4a5c-a0d3-e4074340a9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8688aff2-b51c-4008-b305-ace93c591a5c",
        "cursor": {
          "ref": "89fe9691-d613-4260-beb2-c044c72f59d7",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "040fc8ce-59a7-4447-83dc-7ff2c169532c"
        },
        "item": {
          "id": "8688aff2-b51c-4008-b305-ace93c591a5c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "362c8c00-8317-4901-8466-e4e9318a5750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e066d9-4ef5-47d1-8848-8002cdf3d70e",
        "cursor": {
          "ref": "74cd842b-c546-4cc3-8146-8de92cf3ee74",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e2150a9d-3cbe-43a7-b3cd-21160b051fac"
        },
        "item": {
          "id": "64e066d9-4ef5-47d1-8848-8002cdf3d70e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d54822d2-1f23-413e-a6bd-d1d478579e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1afd9f6b-0a1e-4257-86b0-9d5be3207eea",
        "cursor": {
          "ref": "3cb98fa2-cb92-4ac5-a7c5-5c7d58531697",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "99bef149-a52d-4935-9418-4865a88c4ec3"
        },
        "item": {
          "id": "1afd9f6b-0a1e-4257-86b0-9d5be3207eea",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9774ad28-a2d8-49c8-bc86-dd5c37caf9a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b542bd-453e-4726-aeca-a5df0da672ab",
        "cursor": {
          "ref": "6426aa25-7da5-4da4-998c-0156fe3d4906",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3a4ca117-8490-4b73-9b9b-a8a513f77a62"
        },
        "item": {
          "id": "d0b542bd-453e-4726-aeca-a5df0da672ab",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7ad8360c-f7a1-45b7-bfea-8e5fcaac89f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd3d6b6-fc6d-49f0-9b88-a53d1c083990",
        "cursor": {
          "ref": "3f23b71e-811d-4e0a-97c0-3735d34ef5d4",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "080a8f72-0cbf-4f94-855f-3b55e7f4ed30"
        },
        "item": {
          "id": "1cd3d6b6-fc6d-49f0-9b88-a53d1c083990",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ce1a857b-6940-4db8-9b44-9a9507a622be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6790929f-8367-4f60-9793-6e0eb38c951f",
        "cursor": {
          "ref": "4a5c449b-999d-4168-b449-8e24beb2c2be",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "08383c74-6246-4eef-ad42-73cd24ac495d"
        },
        "item": {
          "id": "6790929f-8367-4f60-9793-6e0eb38c951f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "eef96964-45fb-488f-9540-38e398d7c247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa57e78-4fa3-4e2b-8dde-a97ffae78796",
        "cursor": {
          "ref": "a4dc76ca-e0bd-4635-96f7-09aa2f87f2f0",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "26fa6010-ff56-4f50-bfef-08a1e4ac6c11"
        },
        "item": {
          "id": "efa57e78-4fa3-4e2b-8dde-a97ffae78796",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "18b222a8-f633-44a2-b40b-5dd136508f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914aad56-347f-4424-be11-837a0612ec75",
        "cursor": {
          "ref": "7e3eadfe-d043-4b8b-a22b-598a6c5f8c58",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f0d136b7-62f7-4cf8-8a0b-3bb382bfef48"
        },
        "item": {
          "id": "914aad56-347f-4424-be11-837a0612ec75",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f2b9550d-a5d1-45d6-a09d-727fa7164fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0e6f1b-b353-48e5-8920-5214d960fae1",
        "cursor": {
          "ref": "fed5f860-d5af-4ef0-9d1c-21258f74c2b7",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "61aa8b0d-9b19-4c5a-a600-6e1536bc4f3a"
        },
        "item": {
          "id": "9f0e6f1b-b353-48e5-8920-5214d960fae1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "89a22653-950c-4be7-a46f-ffb8b86a31aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ebbf3e6-c618-4fee-af03-b54beb95067e",
        "cursor": {
          "ref": "6cf6d9ef-bc72-43ed-9035-d7d2a0158f69",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4975b1f5-0a71-4235-acb2-4abe9a1ece0e"
        },
        "item": {
          "id": "3ebbf3e6-c618-4fee-af03-b54beb95067e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "29d895b2-3b9f-4421-8b11-63cb985d93f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68effbca-1031-415e-8b4c-35cc06571199",
        "cursor": {
          "ref": "db43b6db-692c-4012-9c5a-2c30c8139879",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b84cae1f-2a67-4474-969c-384acedcff63"
        },
        "item": {
          "id": "68effbca-1031-415e-8b4c-35cc06571199",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e7be492b-d524-49e0-a7c6-9db89a3fb833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ccd802-be26-4cc5-9f8d-cef621b7e37a",
        "cursor": {
          "ref": "7b2b0845-db32-4b22-bbb1-0282f4388d82",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c8320dc7-a629-4b9d-aef9-aaa442544a7e"
        },
        "item": {
          "id": "69ccd802-be26-4cc5-9f8d-cef621b7e37a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f171c9f1-8c19-43f9-89d7-2d8d2932fcb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95db5848-8108-4f1d-86b5-23aa879e22b6",
        "cursor": {
          "ref": "f2ce3378-55da-438b-b8f7-37363e7a0bc1",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b0f8517f-3113-44bb-9e0d-1e505ac48c91"
        },
        "item": {
          "id": "95db5848-8108-4f1d-86b5-23aa879e22b6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e3307484-8af4-40ac-8140-1568cf231784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0a6a0c-4c14-40c0-985b-21281f0dcb5a",
        "cursor": {
          "ref": "89289c35-e9fc-47fd-b6c6-06568fbd12f9",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9861ec07-e2b2-426e-a9cc-0185627fd06a"
        },
        "item": {
          "id": "da0a6a0c-4c14-40c0-985b-21281f0dcb5a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "39437fd3-2d66-4a0f-b6ea-06f78d326956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7357738-0e0d-4936-a70e-85eea79b9664",
        "cursor": {
          "ref": "8936f0d3-4c66-4598-9bc7-14a2f8af94ac",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2c5b56a6-c584-4f06-9ac0-a4e8b252d570"
        },
        "item": {
          "id": "c7357738-0e0d-4936-a70e-85eea79b9664",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9d2c9b20-5ca1-4bcd-9bf0-66e0189b8551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014c7cb5-0a3b-4151-8e25-9b85ebcf987f",
        "cursor": {
          "ref": "e1f10370-0445-4b12-a7b5-1a891a5772b8",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "fd087812-3490-493c-9590-26a2df79f5a4"
        },
        "item": {
          "id": "014c7cb5-0a3b-4151-8e25-9b85ebcf987f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "bb0dd4b6-ab3f-4c0d-8f02-beb54594d833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0965816a-171c-4fbe-bc46-5a68dd0ba6cb",
        "cursor": {
          "ref": "c888c412-e472-4ef6-9af6-e077067f5993",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "75f55ee6-a762-46ca-914c-c5e482e62bc4"
        },
        "item": {
          "id": "0965816a-171c-4fbe-bc46-5a68dd0ba6cb",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f9f6f506-9a90-4e4f-b4ea-63a2a25d2c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133ba61f-074d-4292-8f8c-66168196283c",
        "cursor": {
          "ref": "2bc871f2-9fa2-40a5-8460-b60a36a336fd",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ce5b7531-9d28-43f1-aeed-4b05e894c001"
        },
        "item": {
          "id": "133ba61f-074d-4292-8f8c-66168196283c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "84f7ade8-2607-400d-a5e3-3d90c373dd1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7060d4-0ad2-44cb-a9d7-896a63a0ea26",
        "cursor": {
          "ref": "bf1b6dfe-b384-4d72-940c-b32e833d7c72",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0d8c19e1-aee2-4adc-a881-91d45dfe6b77"
        },
        "item": {
          "id": "3e7060d4-0ad2-44cb-a9d7-896a63a0ea26",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "94c66361-0624-4ae3-8f25-336ac75dc017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108117fd-5247-4f32-82c1-fb5e8f266202",
        "cursor": {
          "ref": "1e337418-780d-4b1e-851b-215c2acc297d",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5a747cb4-ca8a-452d-bdc4-3c787fd4cbc5"
        },
        "item": {
          "id": "108117fd-5247-4f32-82c1-fb5e8f266202",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b9c63a52-858e-465f-9859-d7e0b392273a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891f0ed9-1275-44ad-8d85-8001dd0ef06e",
        "cursor": {
          "ref": "5be1a39d-561b-4f4d-89c6-f2ac19925e30",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "705fc177-5c19-4055-9720-dc92f0194e76"
        },
        "item": {
          "id": "891f0ed9-1275-44ad-8d85-8001dd0ef06e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ff6bcca4-a4d9-4b8e-aee9-496050ba31c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4985aa70-8f31-4aad-b3ff-ebec31201302",
        "cursor": {
          "ref": "594689b8-6271-4f65-9ad6-5864b2c34aa3",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "89f746c2-57df-4f3b-ac01-340d53fdabf5"
        },
        "item": {
          "id": "4985aa70-8f31-4aad-b3ff-ebec31201302",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6faed5de-3542-4c06-8a87-1b91423c27f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8803d28-1da4-4c8c-a7b6-622946e59075",
        "cursor": {
          "ref": "32a05768-7954-415e-a555-2e27f605aebf",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "297604f2-2afa-4242-912b-9d1afaadad23"
        },
        "item": {
          "id": "a8803d28-1da4-4c8c-a7b6-622946e59075",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3f648670-e3b4-41be-ad24-237f9c46e11a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94b9fd7-a453-4492-abd8-0dda5f701602",
        "cursor": {
          "ref": "ea43e3d3-2d2c-4f78-9905-7e8053220a96",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b4bf074f-888c-4b20-9b00-479400d396bc"
        },
        "item": {
          "id": "b94b9fd7-a453-4492-abd8-0dda5f701602",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "646b7a51-8f0b-40ac-bf2b-e5ed814252b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498b772e-499a-4345-9589-5e12aed4aeb7",
        "cursor": {
          "ref": "98182b5e-25e4-464c-80cf-cd7446186f7b",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "37c5bcf9-3d24-468b-946c-487931cbe956"
        },
        "item": {
          "id": "498b772e-499a-4345-9589-5e12aed4aeb7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "bc95bf54-ad20-402e-ac55-920cdb1cf566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5835b3-418f-49fe-8962-c5abded652ae",
        "cursor": {
          "ref": "f9186d92-dc3c-4e1c-a179-b9d223269095",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d860a978-81ab-4c64-8903-78b00db9dd1c"
        },
        "item": {
          "id": "4a5835b3-418f-49fe-8962-c5abded652ae",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "054da74e-50cd-42a6-b0e1-20286e7ed196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f7fc51-e5ca-4fcb-97b8-42a0bfae62b7",
        "cursor": {
          "ref": "55406ae0-0acc-4cc4-84d0-2107157b9244",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "30c5a77f-760a-444f-9037-618cafcc2bc6"
        },
        "item": {
          "id": "c6f7fc51-e5ca-4fcb-97b8-42a0bfae62b7",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c7cfc93f-9eb3-4f76-8f14-464dfb6e1e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d0c6db-d70e-476a-b9c9-b5adff50f990",
        "cursor": {
          "ref": "b9ed4fbd-9b33-445f-9866-6610f8020563",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e9912140-5aa4-4b41-a9d2-f09aa4963cc0"
        },
        "item": {
          "id": "60d0c6db-d70e-476a-b9c9-b5adff50f990",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8e980f27-8b47-4745-b3d6-bbe80f404e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd8b2aa-14dc-44d1-852f-c6c41e284111",
        "cursor": {
          "ref": "05f0b2c7-9a2d-4229-a4a6-6092d633e22e",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "aef6d32b-d9fa-48a0-818e-9e880b662c8d"
        },
        "item": {
          "id": "6dd8b2aa-14dc-44d1-852f-c6c41e284111",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "519e7991-1d58-4116-8c0d-0ac1445ea727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503aacce-5a7d-4f57-a07d-cb86c3cfeae3",
        "cursor": {
          "ref": "1a25bd79-bf67-40eb-b6e1-f7e1853cfb7a",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "713a20ec-8e32-4cee-ab5c-e2d9e7a454cf"
        },
        "item": {
          "id": "503aacce-5a7d-4f57-a07d-cb86c3cfeae3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d824c421-3673-4373-80bd-e2dcd3d8fecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b73a7ef-2246-40de-9485-287b0c2550cd",
        "cursor": {
          "ref": "60bffae4-321e-4daf-8cb2-0f0ebf6d15d3",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c5a59430-ac36-43d4-a9dc-87cd01641c5e"
        },
        "item": {
          "id": "6b73a7ef-2246-40de-9485-287b0c2550cd",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4fe4185e-44a9-4376-b109-0d8903d67e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378a07c8-ec5d-4a00-b59b-24eb8236049c",
        "cursor": {
          "ref": "92a5c373-a7e1-4b0c-b99c-88f3d1802339",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ef64070e-2298-4901-b976-2d3a0661ad8a"
        },
        "item": {
          "id": "378a07c8-ec5d-4a00-b59b-24eb8236049c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "49078e1e-ff1c-4689-b996-026f035247fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155a853a-81db-493d-953d-0de4796beff3",
        "cursor": {
          "ref": "9c23f1ea-7744-4626-b3b3-d80a78f90344",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2408e967-b009-4c7b-8ceb-0bfe32417695"
        },
        "item": {
          "id": "155a853a-81db-493d-953d-0de4796beff3",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4f203d4c-6366-4da8-a4a4-a9f3ccd83683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e8a906-e7a2-40ae-bae9-6b798ac305a8",
        "cursor": {
          "ref": "b6d1997a-a01b-4717-8688-aa655b675b2b",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e584381c-ac48-4ac9-9451-e67bbd84f07d"
        },
        "item": {
          "id": "f3e8a906-e7a2-40ae-bae9-6b798ac305a8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b0c330db-0b9a-4186-9c19-e9f120df06fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a692133-6100-43ba-a616-d39413ed5b0d",
        "cursor": {
          "ref": "7de8e77c-5e4b-4e81-b908-76c7417a0828",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ff5f091d-857f-4332-b310-e3cbb4649f55"
        },
        "item": {
          "id": "7a692133-6100-43ba-a616-d39413ed5b0d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "05b2921f-5f9b-4088-bc00-b42e6edd4c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b34f5e0-d41f-4121-b5d8-91c4557fc225",
        "cursor": {
          "ref": "12c54659-28d0-45fd-98d6-8fe4dc82b6df",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "91cbe01a-046d-44d8-a4c3-612b82d43ca9"
        },
        "item": {
          "id": "5b34f5e0-d41f-4121-b5d8-91c4557fc225",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "63e11199-7725-4d0b-8f87-f5358045a8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6336ba1-74fb-443e-bfee-a449b7dcdce5",
        "cursor": {
          "ref": "cc3166f0-0da8-4e19-b2cc-c2a623ba35f0",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9b0986fc-68b3-4e96-92c6-f7b33936f396"
        },
        "item": {
          "id": "c6336ba1-74fb-443e-bfee-a449b7dcdce5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "775d4d6b-7a43-40c7-9db3-898589aea580",
          "status": "OK",
          "code": 200,
          "responseTime": 27,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "692c7b14-53d3-4681-b439-274bb9c63c39",
        "cursor": {
          "ref": "13e3f158-6f47-4c50-a967-173e88baaa45",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c955e445-9743-4765-b322-41a6f84eae48"
        },
        "item": {
          "id": "692c7b14-53d3-4681-b439-274bb9c63c39",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "90de9db7-c86c-4190-8943-52a4312fe7d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c29427-1206-4532-9698-2d07372f685f",
        "cursor": {
          "ref": "4ee2e731-bd1d-48da-92e8-fea9cc92cae9",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c787940a-7a5c-48c7-b288-91d20f96b559"
        },
        "item": {
          "id": "50c29427-1206-4532-9698-2d07372f685f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "331b9b0c-61ff-44c5-ad6d-55d4a30e2ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471f283c-12f0-46f5-b711-1d974fad03ea",
        "cursor": {
          "ref": "9b5fb3d8-0ff3-4143-b7e1-364d47968937",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "494cb0d3-968f-4d53-84f4-26135e5e1155"
        },
        "item": {
          "id": "471f283c-12f0-46f5-b711-1d974fad03ea",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6d4168e0-cf2b-430a-9656-8a46b7848fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49969be0-f542-4955-a729-fe3940721349",
        "cursor": {
          "ref": "1e0dc62c-35ca-4354-a81d-0519241ccaca",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2de349ef-ccaa-4612-8262-7371a3304a7e"
        },
        "item": {
          "id": "49969be0-f542-4955-a729-fe3940721349",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ae6ca7c9-85af-46ff-be7b-8e3a1e3dc543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb592a5-abe3-4a7b-a5ed-fc5610b693a9",
        "cursor": {
          "ref": "51c3985c-152b-45c0-ba99-722eaf34151a",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b12f36cb-ce9f-4693-be24-647e5f2eb710"
        },
        "item": {
          "id": "3cb592a5-abe3-4a7b-a5ed-fc5610b693a9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a32d1ae2-5ac2-4f9b-9b31-9993201c64fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b475c241-267c-4695-9e6f-58e78c5c6930",
        "cursor": {
          "ref": "5d778402-b6e1-42e4-af51-f4d5b18bc1cb",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "10803743-7157-4741-8620-6662e63833e9"
        },
        "item": {
          "id": "b475c241-267c-4695-9e6f-58e78c5c6930",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "399ccb3c-79f8-444d-ad3f-774d96b48e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6753b71e-d7d9-40eb-8474-297704e984d6",
        "cursor": {
          "ref": "697d2b67-6758-407e-a43d-487150b9cba4",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9b6cf5d5-6866-45b5-b625-cbeb9b12316c"
        },
        "item": {
          "id": "6753b71e-d7d9-40eb-8474-297704e984d6",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e7b12f66-69f3-42d3-bc26-70e363a763c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b36e9eb-fd74-4c19-8e1a-b68e03e7ecf0",
        "cursor": {
          "ref": "f7d6b161-3c20-44d2-9ddc-16be1ac21053",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ee133361-4602-485e-b62a-0ed1781c7749"
        },
        "item": {
          "id": "1b36e9eb-fd74-4c19-8e1a-b68e03e7ecf0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "28bf524c-cc04-4817-ab06-bc84edd0f6a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca97b997-c2cd-4b72-91f4-83356536de7b",
        "cursor": {
          "ref": "0b957737-94f0-4e6d-9026-95be95a83d69",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "34616cc0-fe95-4ef0-830a-ad40ece30d4d"
        },
        "item": {
          "id": "ca97b997-c2cd-4b72-91f4-83356536de7b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1719e846-679b-4652-8a90-277d8cb428d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e77c496-be4c-4260-9c77-2e79ddc0c8e4",
        "cursor": {
          "ref": "a2a61837-ab0f-48d8-98eb-5a21e01143c8",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5e21bcbc-18e9-4b16-9e64-aeb40fe998a7"
        },
        "item": {
          "id": "4e77c496-be4c-4260-9c77-2e79ddc0c8e4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9a1f9eed-94f0-4539-86aa-5567e6547c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af72e22-4c5d-4b55-9106-0b05e4632047",
        "cursor": {
          "ref": "93e0d0cd-947c-4cdb-a19a-96b22ccb6308",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c9ae5b2d-535a-4274-a771-21da7cf70d1f"
        },
        "item": {
          "id": "0af72e22-4c5d-4b55-9106-0b05e4632047",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2b47b831-5014-43ec-831e-9ff98236ff55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c22c4d-5ee2-4ad8-adab-b4126291fb4b",
        "cursor": {
          "ref": "0367b205-3926-4432-ab80-b4a83491f565",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "41722e56-c339-4d88-896d-7b2c7ad916d6"
        },
        "item": {
          "id": "44c22c4d-5ee2-4ad8-adab-b4126291fb4b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fa388d20-8e39-4845-9e8b-59f939796d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4ff3c3-502a-4081-9e07-c10f61661342",
        "cursor": {
          "ref": "ac43d99f-d8d2-4c27-b95f-6c98461d6583",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0deb2191-04de-4c7c-a027-b2b146746a31"
        },
        "item": {
          "id": "cf4ff3c3-502a-4081-9e07-c10f61661342",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "04b4d75c-d214-4801-a644-51cf22edb973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be015c3c-b62c-4dc5-bdbe-39816e1173ec",
        "cursor": {
          "ref": "a6cc5501-3dfa-4112-9e64-f096e402d94f",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "60fb5ddf-fc54-4eb2-a051-bbe073b0607a"
        },
        "item": {
          "id": "be015c3c-b62c-4dc5-bdbe-39816e1173ec",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3a6b94b0-370c-4490-9160-6d9ad40a16a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febd58e7-cccb-4143-8572-bd141a7db00e",
        "cursor": {
          "ref": "7793796a-ed80-4a70-a703-62cf930937b8",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a02fabcb-b118-4d7c-b2cd-f5ca7ebfb9f6"
        },
        "item": {
          "id": "febd58e7-cccb-4143-8572-bd141a7db00e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f335b7c5-3263-47e1-b4d4-6ada24aa099e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb19eeb-cd81-4698-a82e-eba736b25774",
        "cursor": {
          "ref": "d5f4ab50-e710-46d9-911e-10c850bfd4e1",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "20d4191e-8414-49be-a2c4-803364de8cff"
        },
        "item": {
          "id": "3fb19eeb-cd81-4698-a82e-eba736b25774",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9bdcc0db-2d25-4a48-9e1d-8d43753e7bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5092abb0-15ec-482f-a9c1-12b6730dcfb8",
        "cursor": {
          "ref": "bc22618e-6315-47fe-89a5-14561c7c3aae",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7cc74313-d06a-47dd-ab87-089483911fce"
        },
        "item": {
          "id": "5092abb0-15ec-482f-a9c1-12b6730dcfb8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c1637361-4892-4541-902e-853884b51199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ceb7ec7-ffc2-4349-87ec-f2eb84f76d80",
        "cursor": {
          "ref": "977307fa-37d1-45af-a01a-8dbd708a8ad1",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "009065c7-222c-45b4-b92b-cf61b14e4e24"
        },
        "item": {
          "id": "9ceb7ec7-ffc2-4349-87ec-f2eb84f76d80",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "91164494-0c48-4a61-9a78-37711ac6aa1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade50228-e0da-4eca-a7d7-8163473148a5",
        "cursor": {
          "ref": "0b2b2f17-bbac-4deb-b8cd-616f9691f95c",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3ae92969-8f7d-46e8-b856-1b08e55edd95"
        },
        "item": {
          "id": "ade50228-e0da-4eca-a7d7-8163473148a5",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d7b17764-5277-460e-8ed3-6774e3090d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f0f680-8c86-4373-b720-39bb7077defd",
        "cursor": {
          "ref": "a0923c6e-2b4c-47e2-9ddc-65a909e6761c",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c70eb042-dbdb-45be-95a8-7ad2d6ae86c7"
        },
        "item": {
          "id": "60f0f680-8c86-4373-b720-39bb7077defd",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5b42f013-cce0-46f4-8f31-78f5c22fdc97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a6a528a-1d59-4ae2-986f-9d152e2fd85b",
        "cursor": {
          "ref": "69cc4854-fd5d-4a5e-90a6-25eb7e7cb12e",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ef3b6609-82ab-465c-96ab-082804d4d451"
        },
        "item": {
          "id": "4a6a528a-1d59-4ae2-986f-9d152e2fd85b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "64b86326-ef48-4fc3-84bc-1c5c0d4d4a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5892b6-8ba7-4a40-81e9-63daf23a815e",
        "cursor": {
          "ref": "df10f49c-3090-4f90-8534-614287bf2567",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0aa233e8-2fec-46ed-b5ea-8548d50c3acd"
        },
        "item": {
          "id": "db5892b6-8ba7-4a40-81e9-63daf23a815e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "28e1d04f-78f3-450e-b336-a9abe79f3ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929de868-b198-46a4-9ea4-7c432d03228a",
        "cursor": {
          "ref": "3683a7da-aa2a-4b1f-8aea-f251d57e6528",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "ca2ab828-890a-468e-8d7e-f20d5584321c"
        },
        "item": {
          "id": "929de868-b198-46a4-9ea4-7c432d03228a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "edd8a87b-3872-4e8b-8f22-14211e820915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad0bf1c-6740-4a8e-96b7-912c537e0ca3",
        "cursor": {
          "ref": "c3db11ef-78c6-4b61-b850-2bcf55892ef3",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "84cc9c09-4b90-443c-82bd-c73a38e6ffda"
        },
        "item": {
          "id": "7ad0bf1c-6740-4a8e-96b7-912c537e0ca3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "30dcba52-b7c8-4c26-8221-05a863ba0a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22654a23-2ba3-4ee3-8da0-175de9a5bf27",
        "cursor": {
          "ref": "e9397a0b-2833-4837-8e5a-8240c6cc5c4d",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "9d39f517-a755-49e2-ac8e-0a009f4e1513"
        },
        "item": {
          "id": "22654a23-2ba3-4ee3-8da0-175de9a5bf27",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "127704a4-53db-46d6-9cd4-28aceaf648f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44fc4bf8-60b9-43f8-b59c-dbe18bbedfd8",
        "cursor": {
          "ref": "d30e91ab-bf9c-4649-8015-094b7f6bd23b",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "583c22bf-e349-4d45-92fe-245c7446a66c"
        },
        "item": {
          "id": "44fc4bf8-60b9-43f8-b59c-dbe18bbedfd8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "830fc6d7-7377-4515-af33-09d86eca4793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0821b782-eb00-404e-b121-cc67fab0ac15",
        "cursor": {
          "ref": "8054ea10-e815-4593-be3f-eeab2b76017b",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "fabbd92a-8f0b-469b-9cd9-a42e9149ce48"
        },
        "item": {
          "id": "0821b782-eb00-404e-b121-cc67fab0ac15",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "93c9f3d7-daf9-423d-8215-2cdff0881dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e491b19f-5809-4f80-8a57-bc519ac7e898",
        "cursor": {
          "ref": "f644c12f-b0c2-408f-81d2-180e254f2e77",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "9fc244a7-7c53-4668-9b13-29144e0f5f47"
        },
        "item": {
          "id": "e491b19f-5809-4f80-8a57-bc519ac7e898",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "563de826-033a-48d7-ad5b-694160f9557c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b40ee11-fd6b-4ecd-8245-d0583229024e",
        "cursor": {
          "ref": "5ea6217f-629d-4ced-914a-19db4847f3c7",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "177a9b72-1146-4ca1-86af-5988af26495b"
        },
        "item": {
          "id": "8b40ee11-fd6b-4ecd-8245-d0583229024e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "100ec25d-1ee5-4e0f-a1ce-ebb788911828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52f14e3-2792-440a-8d3f-890916bde82a",
        "cursor": {
          "ref": "ed0fa4a4-166a-441d-88dc-28d225f0c809",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "c5610156-0a2d-4887-b387-1c8a419d4b9d"
        },
        "item": {
          "id": "f52f14e3-2792-440a-8d3f-890916bde82a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ac0becef-cdd0-4beb-b066-c3b5a77edc9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfba0314-37c4-4e1a-9bf0-1e51767b6b23",
        "cursor": {
          "ref": "f5c1db31-2be6-4614-9fd0-3740f56116cc",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "46d1f11b-4e26-47d1-b67a-4484f8e5722f"
        },
        "item": {
          "id": "bfba0314-37c4-4e1a-9bf0-1e51767b6b23",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "01a2b3da-ddf7-45c7-9c96-fcc3e8232dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a455acc-a3e1-40c3-95b9-e07db29e65fc",
        "cursor": {
          "ref": "09dea0e5-31d3-4810-b04d-cadfe0c43a97",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "d1d7c2aa-052d-489a-b54f-6270d20ea69b"
        },
        "item": {
          "id": "6a455acc-a3e1-40c3-95b9-e07db29e65fc",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1cebe512-a8b5-4fc0-890c-c7540b1470a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e392726-44d5-41e6-a6c9-13b72c57c253",
        "cursor": {
          "ref": "604f84c7-6587-415d-8c5c-0f2a0322488f",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "4c3b0d21-f840-484f-8102-fad3b1186a64"
        },
        "item": {
          "id": "8e392726-44d5-41e6-a6c9-13b72c57c253",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2df214df-1ddc-40ef-9bc0-f2930bfcb5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4445dd1-f77d-43ca-890c-7cdc52c76c05",
        "cursor": {
          "ref": "0abb6a5e-4341-4781-b55a-62a4d4bd4cd7",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "939c2061-9e3a-470e-850f-77162e454f90"
        },
        "item": {
          "id": "c4445dd1-f77d-43ca-890c-7cdc52c76c05",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "957abf36-bd21-4e4b-96bf-12df7f05d097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9faa71f7-8fc3-420f-b3cd-1137f4ea9251",
        "cursor": {
          "ref": "3efd83dd-cb3e-4ceb-acab-af4c87f5ab8a",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "7d98f536-9b93-4e57-b485-de3dd8637d20"
        },
        "item": {
          "id": "9faa71f7-8fc3-420f-b3cd-1137f4ea9251",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "917fc73d-2e66-4cd5-b3ac-71167ea843a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3053dc56-2f78-4825-b551-8e78d5cb874a",
        "cursor": {
          "ref": "491302b8-d77f-4d9e-8023-ba283bd777b3",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "0cb40aa8-f285-4265-b235-6b24c96e524c"
        },
        "item": {
          "id": "3053dc56-2f78-4825-b551-8e78d5cb874a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d5e786bb-4686-4bda-9c42-06f6ec299cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44df23c9-15be-4805-9ad0-a6b6401c5d95",
        "cursor": {
          "ref": "bcf6fd38-f3db-4751-b78b-ebddf1028e8e",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "9fc222d1-58ce-4de6-8c5a-4493962bf716"
        },
        "item": {
          "id": "44df23c9-15be-4805-9ad0-a6b6401c5d95",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0715cfd3-5e05-4164-af5f-5c43d90f8e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f621c7e-8396-4031-9de8-33c06338feeb",
        "cursor": {
          "ref": "32968ea5-c975-4dd0-8aa5-d8275e5732e0",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "558725d7-9ccb-44bb-bbfa-68feee62c678"
        },
        "item": {
          "id": "3f621c7e-8396-4031-9de8-33c06338feeb",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f9186e49-c011-4efd-bb4a-9d7a27eaa79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5130b433-5add-48ad-bd4b-bf571582f20d",
        "cursor": {
          "ref": "f69e721a-7c9e-4c9e-97f3-93b62794ab68",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a884bc61-4360-4871-bd02-51754ef4e98b"
        },
        "item": {
          "id": "5130b433-5add-48ad-bd4b-bf571582f20d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e2d5e404-5bb4-44e3-b701-89eb6e966b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c906c1-0649-4cb4-b5bd-ac3573eea00c",
        "cursor": {
          "ref": "0e069e5a-0747-477d-b2ab-32798287d835",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "1c31873a-8c5b-42b6-bfb7-9a09433e0a22"
        },
        "item": {
          "id": "65c906c1-0649-4cb4-b5bd-ac3573eea00c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "05b1d132-bf1b-4948-8339-eb2c6bca6ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa35e78-a85e-466a-a780-c8f7ce9a1c7c",
        "cursor": {
          "ref": "33fe2902-e4b8-421b-bd0c-5ec4a70891cc",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "12321981-24be-48cc-abd9-bb1fd068a3c8"
        },
        "item": {
          "id": "daa35e78-a85e-466a-a780-c8f7ce9a1c7c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2ed1caae-924e-41e5-b15c-c0b143cd125f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5694db32-4cff-467f-baa7-d63ada188ef0",
        "cursor": {
          "ref": "28301a98-d78b-42f3-a41d-d699dc3ecd9a",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "cdf79dd0-3ebd-47d8-985b-ab33cd79c051"
        },
        "item": {
          "id": "5694db32-4cff-467f-baa7-d63ada188ef0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c157eca0-bba7-48f3-b042-8dd78e14ab45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ebd370-336a-424e-894f-b38016fc683a",
        "cursor": {
          "ref": "327df726-c91d-4461-87a7-db308e470110",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c3798333-fe0d-4489-9ebb-b60c455f321b"
        },
        "item": {
          "id": "03ebd370-336a-424e-894f-b38016fc683a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a48354b5-7ed0-4db5-b54c-0667190ad5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ae0b00-a488-496a-9826-ede91b7961fb",
        "cursor": {
          "ref": "f5511aab-71be-471f-bc45-a53d5e00ecc4",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "876e85c1-ceb9-4a31-bac4-42eebc6c95ad"
        },
        "item": {
          "id": "d6ae0b00-a488-496a-9826-ede91b7961fb",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4b015765-fb13-4cd9-a392-29110fecc768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6865465-f27f-4a00-8b47-0608e4423793",
        "cursor": {
          "ref": "8007fd82-5e99-48c0-bb43-6f7f01e3800d",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f7ce9a73-6bd3-4b58-8f73-ebf9c1556400"
        },
        "item": {
          "id": "a6865465-f27f-4a00-8b47-0608e4423793",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "44f8614b-09ad-41d4-8445-fc83e791ebec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee4d87f-9521-4a43-9e96-1675ef715b1c",
        "cursor": {
          "ref": "17a5b08a-d164-4efa-911c-ad4e760bbf9d",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "0db23cd3-1463-4e41-a1cb-970d34048603"
        },
        "item": {
          "id": "eee4d87f-9521-4a43-9e96-1675ef715b1c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5f35c85c-f0e8-4ed9-aec9-78c84b128fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652c5875-0fbb-46ca-961d-cbc85f2e4960",
        "cursor": {
          "ref": "27298007-623a-47d4-9d35-3cbb2c14cfd1",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "6d51c288-be9e-43d7-b2d0-24e7b0b6e384"
        },
        "item": {
          "id": "652c5875-0fbb-46ca-961d-cbc85f2e4960",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f65bd5e6-1d3b-4939-8353-18f91d7c2fe6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846cc70b-6ace-45c4-9dc6-bf3d521cb738",
        "cursor": {
          "ref": "3d3654d3-fedc-4697-a41c-d66288eba8aa",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "5127ded6-0171-4a27-b182-b83cf46ed150"
        },
        "item": {
          "id": "846cc70b-6ace-45c4-9dc6-bf3d521cb738",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "36a0abc3-506b-42b7-8c67-899500427cb2",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb1a734-5f6c-42fa-8123-05f34afc22c4",
        "cursor": {
          "ref": "6b514a42-079b-43bd-94e4-71a50bb54eeb",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "83b5a7c3-b5cc-4e15-bd82-508000cb3ef1"
        },
        "item": {
          "id": "bbb1a734-5f6c-42fa-8123-05f34afc22c4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d9ce3ac0-c24a-4951-ad82-7db31a1585d5",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7500319e-0668-4e41-b556-abd3304bd229",
        "cursor": {
          "ref": "17b3b8c0-b982-4523-960f-d021710b0a01",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3faa06ea-3e12-4a5c-bb25-6537ab8685a0"
        },
        "item": {
          "id": "7500319e-0668-4e41-b556-abd3304bd229",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5fa8de43-4c0e-42fb-9278-04a66c3baf26",
          "status": "OK",
          "code": 200,
          "responseTime": 35,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d95f89-bbb4-46a4-9d60-6c5371c65bf5",
        "cursor": {
          "ref": "29967881-f202-4216-8427-a6c54e28e434",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "95d579fe-93c4-4fd1-8be9-483ab7d5bc3b"
        },
        "item": {
          "id": "49d95f89-bbb4-46a4-9d60-6c5371c65bf5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "100e8cd8-fd93-4528-8b26-1b95bf5053e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d95f89-bbb4-46a4-9d60-6c5371c65bf5",
        "cursor": {
          "ref": "29967881-f202-4216-8427-a6c54e28e434",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "95d579fe-93c4-4fd1-8be9-483ab7d5bc3b"
        },
        "item": {
          "id": "49d95f89-bbb4-46a4-9d60-6c5371c65bf5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "100e8cd8-fd93-4528-8b26-1b95bf5053e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca74337a-d6a9-404f-81e6-4fa0209f940d",
        "cursor": {
          "ref": "09be4ddf-007a-4bfd-87b7-277004082df8",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ede7321a-1841-41cb-92f3-06af32a85977"
        },
        "item": {
          "id": "ca74337a-d6a9-404f-81e6-4fa0209f940d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d0e237dd-46b5-43f9-bb43-ab6b71178934",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253abdbc-8b48-49cb-b429-5a3e231a050a",
        "cursor": {
          "ref": "872d36bf-1476-465d-94d2-f112aade7ac5",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "cea4b422-7e61-4f3e-ae53-0f00e5100a31"
        },
        "item": {
          "id": "253abdbc-8b48-49cb-b429-5a3e231a050a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "507f060a-5220-481c-b595-27e117eff1e3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}