{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "01c28674-8a3c-44be-86f0-27ea13c00be2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "35f70a36-165e-409a-a9b1-575415e2c458",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c181aeda-5135-4823-b84e-3858e4c882dd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7bf4ba5e-bec2-4b73-b869-68926b83d36f"
                }
              }
            ]
          },
          {
            "id": "039ebb80-f645-4864-8b14-123dc7b80d88",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3c9aa29d-c648-454d-8413-9710691bd417",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e4676e39-aaf7-4d62-a5b1-0daed32199a2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a16aaa5e-93a8-4649-8aad-5e24d0951cc4",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "fca81837-ba2f-4f85-b14f-125ec4a10ca1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "01480523-b65e-473c-acad-0b1784194e25",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f492671e-73ed-4ba8-b3e4-163a998bb51c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bb70d0cd-b76b-4486-aeb8-30cb27cbaaaa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5b3cc0c5-e633-48bb-b308-5c967d45d755",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b5e57d46-d909-4c40-b6d2-558970657251"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7f573c99-427d-4a79-8deb-653a1b53cd4a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3164da16-7842-4367-ae34-8df714cd308b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1b20fec-0892-4bde-a906-40f0f3e45644",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "09e93214-4be4-42e6-b01b-563b71abbf7f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b41f4bd5-d8b4-4812-a61b-4d588292d3d8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dbe5dbcb-cf05-4a65-b21b-f1b5c13b606e"
            }
          }
        ]
      },
      {
        "id": "882e6fd7-d504-448f-916f-c5fb75573c00",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c5f0866e-a915-4e3b-a5d7-80ffe65f3b37",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7f143063-d70b-480b-89c5-9999bc1774c0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e6a33cbd-2964-4741-9322-788003530ec6",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb05bbe-8784-4931-9165-61bba3e5cad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3bc2f50c-8212-44a9-9d89-f495e5cad798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c166ae1-93d5-46b6-be3d-cc68c5fa118c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6033f5b1-f31b-4c27-a623-a33b4fbbcb9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "43c81f25-164d-4f4b-93cd-c7d3d35d5945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb13146a-c6d1-4b77-8c62-ed1d181ff0ce",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66d3ba4-43ee-428d-989f-cf4ea739e361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8139bac6-11d3-43cb-8e4e-966ce364effc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4c5dd29f-cef0-492a-b7b9-b872feb2e6c5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f4f59a6c-9c89-4bae-92d0-6dcb661faad9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7843ccf-737b-4226-b11b-32e037378dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9e896ae-f487-4fe8-8d1d-65063337792c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f80d4f9-b26b-4874-8bb6-4cac0f9231b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7c89d46-abd4-4395-af7e-f1fbc3b5ff21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d97052-2f77-492b-ac87-dcbda23a9ef6",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5aedfa-86e8-46f9-a845-509860d5b71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa349b6f-42df-4bb8-9e1e-c7e5e57ca9e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81773a09-764a-477a-aa28-cf75c365041e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "d6d6cb19-e957-4f7c-9e9c-5832bf62c6f3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "96471819-2f9c-4ce6-9f90-2d19b0a64236",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3fe05063-05c7-40f4-853e-7ce7f4689bc0",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf13cf60-177f-4242-bf41-3d5bbe81f3bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e572eddc-b726-4fa7-ba34-ac9c2557d754"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec2c44c5-7a7d-4285-a812-059adf21499e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "dad3aa88-af7d-46a4-a9a2-1886613a177c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff60e01a-1d26-46e3-87bf-f7026c3f8a08",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "671ae99e-8f0a-4938-8ae6-e3d0ab5c8acb"
            }
          }
        ]
      },
      {
        "id": "060e4b95-9d54-4d6b-a6d0-19dbe0e27d26",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "cb83a860-1430-455a-a189-c8c3c5c877fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e3e577fa-b2bf-4702-bb2e-77be908ae8cb",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "65cc6c8a-3fe3-4fb8-bdcc-3ff49351f72c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34eb1b33-085b-427a-9566-cceaf15e2ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c632357-0c24-459e-af20-ad48f5401111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c79e2a-d0ab-49e1-aa1e-c83d5bd6b351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55777436-4454-4a6b-b61a-55f87b1f54d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf47fc2-64e6-4ad8-9361-3eec6fab9999",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5aaba2-8ae1-44ef-bd93-2554033bc415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597e2ae5-d761-4a9e-a9dc-a6bb68284072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e96cdf1-7376-40c3-9cd2-b07c20d4d92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5182dd0f-6b34-4608-b606-7ad4e0e8ea8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48271b95-1d74-49eb-b441-a69020e25556",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "536caa1f-92e8-4daf-9800-3ed8692e4680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec398aa5-ee14-4252-8664-c611d6ba2b81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc008e8-f529-407c-aadc-8c8ed08d0e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9f0be19-51f6-4f4f-a52a-b22b3d073585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5394f20-df6d-4b78-b608-1032e9febd58",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db301645-569a-48a3-b7d9-1301e877483b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa0a8f7c-3c44-4257-877d-1ed575669428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd6909f-eae3-4168-87e6-67783ee75319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c197188-a2db-472c-9f27-32e73980a7ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf232b08-00d0-42e4-a9b7-e8734bb938f4",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88ace4c-6426-4aa6-9202-d678b66d8bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60244ca8-cd40-4885-b97e-369e2e37c7e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73df3ebb-d672-450e-8250-93b1578ca816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d9e402d-4d2a-4bda-9b96-89cfe68c05d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff74748f-b72e-4ada-b949-55413f84834d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c9425a-8feb-4f9c-842e-e5b19c9b160e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10fe368c-6347-4f1a-8fed-a642da2dea63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca74c0f-b120-40ad-a48b-0069d2511e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76b6bfde-53f9-47a9-8063-a4cdec2a3de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e65fb2-adf4-49e1-a091-ef92a07d6c30",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e980e92-2ea1-4df2-a44e-17f32ca22c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a4c4cb-b979-40a4-991e-a091b0871b80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8da279a-695e-4e7d-b875-084d9d9f574a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bad199f2-528d-4184-9fe6-e189c96ef68a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ee337c-2645-49e7-a2eb-f057409cc86d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbc9a84-d416-482d-baa5-f30b76a61cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e94b450-9c64-4fd1-a25a-f8428127d1c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed0ff0c-5229-4933-b921-0ead3657631e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c55bc00-efa1-4024-8302-b6c81810dd63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac77df49-e5cf-471d-83df-2188f437bbf0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2b719f-32ab-4492-a792-30249357542d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cb0865d-0374-4271-9f06-6ca35019f1fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c938ef-4fd2-4ef8-8643-acacec2a777a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9622791-3e5e-4e2f-a987-c092ca2d8a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8d2016-f969-40ae-9bef-8d775b979fcb",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ed8fca-3813-4d4a-bac8-45ad0e1377ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dcf1a47-4def-4da9-91a9-dd32a6006a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19192cf5-b668-4740-9be3-aa8344a80b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "066f1936-79d7-4692-beb0-eba6b8754423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98354ec-c450-4ea2-b61b-21bbd8a9d2e7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c10e70e-041f-4f20-826d-2242e4d7920f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d9ea3ef-84f3-44e2-8cbf-15035c6c2768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d2ba6c-e488-42b5-a328-305c2accdacd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4275df6e-ffb2-4865-9a60-c1ad8abb74cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac649a48-68ef-4480-a867-5ee60df0c7ad",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ff9304-bb41-40e0-bcd2-eba58f6d1c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7c9787-3afa-43ba-a355-66e88df3cc72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e86bb6-9dd5-4370-8693-eb258446de2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95dae530-cf5f-48a4-a558-fa2ceba07882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92bb2ea-dae6-4916-aa79-c0965a8aa255",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17f3689-3c5a-454e-b50e-e587f33399fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa25ed7-df54-4a52-9726-6fb166371a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47871a08-76c9-4f4d-ba83-757cb51a2e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3a00275-dc5f-45ca-b588-74ccd6601897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e93d15-4582-41e7-b4f6-aacf2e22510f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38f4737-659f-41d1-a78c-74bd186a7bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d2953b8-8fe4-420f-ad8c-af2e1b6c44d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cabaa3da-f33d-423f-84bd-af965c31a073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47aab699-f004-4e3b-ab0b-e2cf57c48ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571e383e-909c-4532-9511-98fef57063db",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed63cf7a-2102-47bd-bc32-35fb7aad1dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac050fc-8fff-4125-9814-817447309680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a96333c-1eea-43de-9809-e0c9c15d6e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74a4cc68-a26f-4a85-81d8-216ec9e4e33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b537a8b-c94e-41de-9b38-6a4d483af03b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd24268-44fc-427d-878a-b0cf2e4afab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f50db86-ba71-4b89-855d-368148a87032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76116ada-2aad-44bc-88ed-6c85c4976558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "020765b3-bfd6-4f6e-afd4-08d2ea2f2c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e375d15-c6e4-4b03-8c33-153d0550cb8d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36667f17-8547-44ac-aca8-f3cf56175cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fe64e23-e4ec-47a4-9ba6-ce79904b0336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee2624e-c9ac-4e95-a03c-1fee7060d503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c759436-3693-4b1d-bb97-70a37615f565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44cb1492-8973-439f-9951-aebc724eb07a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "821f88e8-fcc7-4205-b031-0050b52dd17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327a6f6f-c44a-4b34-88b3-a742873fc00e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c1ccbc-e481-4ab6-8c4f-7fe2af93a8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6b2216a-ba4c-4012-80ab-9e7b29e0a622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fee4ba7-7adc-4621-9860-17cd2c3bc498",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9c8e89-a82e-4278-8ddb-92e9dfdc0b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b35fc69e-3193-474e-a57d-50f47a7fa202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7f7853-c4d0-4dc3-8c39-cc41e48e7924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "425fdafc-5f26-4bf2-8cdf-6f862c5bd345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462cded1-9cae-4fb3-89d1-0832a7e929ad",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4074a49-387d-4b0f-a2e1-09cb6e4203ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d880b19-df78-425a-9fc6-54567d67f825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2a470a-cf20-4d56-b972-c4bd8908bb5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e770b06-4da9-4e55-b13c-0b11f3a653a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf62d89f-5a94-46cd-9ea8-985037291db9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08f836f-8c0b-4929-a9ad-0fbfbcadc006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a07790d-5bf4-4c79-97d0-456bf5b05d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "033d5190-8f80-4960-b82a-f7a9c16d7989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "afff1ab4-da53-4393-9067-8ba7316a0475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a287f073-7796-4b22-9067-ecd643f5f8a6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f541ab6b-1481-44ad-a8f0-b256952185b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61685e11-2adb-49b6-b332-97657ff9a8fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51cd8e11-613e-4786-92ac-69f45540767e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8c0f4d7-d80a-40e6-b12d-9606e7c82632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2496046-ee53-40f3-a270-1c42f4259b82",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ebf98e0-8b4b-4b5d-8543-26b92b67101c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73843b9e-2501-420c-899a-76bd3ec975fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8e34cb-48a6-4805-a2d2-e68380e79f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7a03f352-ab07-49b6-9b67-22be6a17a1b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a10bf8-5f36-42af-9a18-aa8ed3c8be8d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75ef873-a1e3-4c2a-8419-222b98898c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d224534f-817c-428a-9e28-7f3932a67a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4653b4bf-a363-4205-afdf-453af0aa8c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3557128f-111b-43ce-9288-143948f1e246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883df26a-f374-41ff-ad98-85a2673b700f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3097d6-7f2b-4fd0-8020-9db1c95f077e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1210e5f9-301b-4588-b422-ea7b276a9d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b221c0-ff71-4687-947a-f09952070b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa27c5e3-3bc6-4502-90e6-55ccac01f90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2cd88bc-8ec1-4c9f-b020-f960cbb038de",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e33adf-bc20-4e72-838e-12447610f0c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5431a7b4-bf13-4f3b-824a-b49feda10b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1fac843-bae9-45f1-afce-3a72c1358a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f939e9be-5dba-4c4d-b245-de202c7ad36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56defa37-8351-481d-bc28-1545cbf4f372",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2578a1e2-1af8-4ab3-aa6a-6fc7a2dbddfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6359c784-481d-4698-a552-e6b9a16a4691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd218b5-c28f-4bf7-814c-5b0965cc4ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "93f5e4f7-276a-4078-8356-d30ddc00bbbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce73bf1-b72c-4f6b-b9d6-af32921f76fd",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "326de258-ab4f-4e22-bc1f-1e59f831fe39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "720d47f0-5450-45bb-b31e-66599579a0be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92afc4f-24cd-4d5a-8ffa-49d579b90bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee88972e-e384-409e-9f3d-9fd7933deb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81e2d30-7d8a-49c1-8197-6dd997257862",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb26ecec-5ce1-419a-8a4c-a7ca40fb1fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d866f0e-4fc9-4b02-a173-857dc557e8af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b208e9-e4c8-47bc-8102-2da4609db12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "75a36a01-7d94-4f30-9022-870383438d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c517643c-df66-467f-8d8c-7ee4736a65a7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4d9693-e292-48ea-bddd-e86eb1b291a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d165c7a0-6cf1-4dc2-932b-acbdb2033740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52216e06-bf1c-4f59-884a-7118223728ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c7a566-f479-4683-8025-69545c4a9267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87577332-5271-4d9a-9a3e-897c6e2fcaf4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5375898b-49f6-466b-b28f-92bd8275378b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb0cb0d-24f5-47a7-bf93-66ce9ecf8eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03796444-c6fe-4067-ae20-24a1e678ab13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "65361c62-ef31-462d-9fc2-bc1214f58bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34953d8-629a-4847-b967-476dc29fe4c9",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfc8636-101c-445d-9680-4611446243be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a6d469-3a92-4779-bb0b-2cb614ddb7eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edac75eb-4ccf-4d9f-b61c-8f8377d08d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5718ad12-f2a3-48d9-8a34-8d65ef562b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a039304c-a41c-47a3-b30e-925f9677a792",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dadedfbb-a8d0-4ddd-bbe4-0821a7772e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00df63c4-6882-49c0-a9a2-7562c24de412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db12e50a-5f14-4714-9bfa-c05ffbc4878c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08706020-dc66-424a-964c-a538a1f41e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3771968f-598f-4e16-8aeb-a3550af58e27",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae3bae3-40b4-4dd0-9447-598fa0883660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94644a88-33dd-4bab-b0e6-f0cd5a9bdd6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1393050e-a7ec-4147-ae60-557d6b2b6bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80b042fa-201f-430a-a858-a581f597e48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62edac4-df1e-48e3-9fbc-610988e44ff8",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c2d78e-bb82-403f-8fb8-5761d99a4e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98bab1aa-f81d-4e32-81e6-421597801175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ee69aa-ddce-45e9-8935-668171b8752e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7abe70fd-a067-4af4-a901-769330123b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e11715-cba5-4ff7-9d4f-c9d20442e76f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61093ed-da2b-488c-af0d-e45f6665bd58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7553d7d6-a1bb-43f9-b463-6584119003f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76415a9-6838-4c70-9936-5232e952566e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2c57b243-7955-4f5c-9fae-9a831c97a250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d648078-9f54-4bc1-a9e2-d6b162849bc7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eeec108-895d-4606-aa40-dbefa4094d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee65ca8-0fe4-4a4e-b5f0-287f544f4a69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ecc6a9-934a-4d1d-bd1e-b247560d901e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cbd1a20-52e4-4bb3-8383-840dedfed79c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882702f5-80d3-4d6c-abe8-8d294f4e79fb",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "732e4a1e-7438-44cf-9801-9248a81cb216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36aa4f4b-b6c5-41f1-89dd-db6f2b661ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa924a59-5375-46b1-a267-6da02310e99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "33643f81-87e9-4095-af61-5e8ba0a962c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4a6e65-8810-4c20-96b8-eb9c032d8996",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ebebbbd-accb-454d-b4a8-268ca01d2ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c76421be-5cb7-4620-91a2-c99f1b800018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db03176b-33b2-4dad-a765-874156cbed97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9144558b-1518-44eb-bfd3-d4c8a52af239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b4610f-6fbe-4a24-ab98-0d682d50d8f9",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c468f768-992c-40f6-8c6e-f5d520dee6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1362585e-f389-41bc-afd0-d4e4ac3a022e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa37e78d-3ae5-45a1-9f92-95f23d69d9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d12b89e2-66ab-4de2-b1a4-a766dfcd6819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765b8419-d83f-49a2-afa2-79a45ffbb51f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccdf13b7-e204-4441-8440-08ae9c4eacc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "354dbf7b-cd21-46e8-b458-e67dab32dbbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722b9a32-fb7b-4e65-a63b-48ba8573642b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "12770d16-3deb-4bc4-b555-81987daa6603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc33322-d0d6-4f08-8bd5-77069553bbdf",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b08f3e6-5c98-46eb-8733-bc3a160cd2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd2b6ae-6002-47ba-8d5f-71100f58e47d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2210499c-9e6a-486d-abc0-f286e6be9474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "805ab386-f813-4139-b073-2c86dffd8196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76aa6b29-8d72-42dc-823d-0fb5bf8f91d5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1465575c-af8a-47c3-b8c3-3f363ade58e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d22f3ff5-1acb-4a2c-883d-f2b4563e2d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5a1c9e-55c0-44a2-aea1-437ec22f9a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffb9827b-1f17-4815-b75e-c48db06972a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35008fd6-36df-45f1-b88b-d7c225e80d78",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc9bc47-51bf-45ad-be07-32530c9158cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76ac9416-8e14-4516-bee5-3e77d48a5626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21fb893f-d97d-4644-a042-b22fa7a3b9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c9274f4-44a3-45f8-8cf0-7e43acb2121e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266e4283-10ce-45ee-b541-f59ed31e13a3",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5e3213-3641-4a8f-9efd-a4072f7b3816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc649db1-1283-43d1-9ca4-f07556b30317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680af4d6-02f9-4858-8c93-9182fc2052ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "edaeff9e-82e3-407b-8693-c4c3d3e6d9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7c7827-342e-4b88-8ecd-80763dc30989",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe40b6d1-01ff-4079-851a-ae3c2d72919a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b30e49c7-a570-412b-9bee-4a123023218f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26e37a2-aa81-4971-8dce-f60c7ddb3bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef5a92a-0dda-4252-a905-3004a4defe20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec77d2b-d260-402a-a3e6-48f36d3852a1",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95d9414-e015-4662-86cb-584ee251a51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "049f60f9-b399-4e9a-a8c8-6131f3d03297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3629b56b-8d69-4779-a317-5b4ea2f238f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f63e1c51-a4f4-4cbb-a381-bbd9777928f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150afde5-559a-4265-a641-e4e9373e544f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa1a043-35f1-466e-897e-02ec1d6a4863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e401fe1-5bdc-4522-9272-453aa58997a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3888d5b9-ee29-4f08-9073-b3266eed07b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7be1ed13-03fc-467c-8449-e582dbb5b9ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be6944d-f960-4121-9acc-ddcd8e0408ec",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e68511-500b-4354-8fde-81edaa84d36d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e803b949-3dcc-4bb6-9e1e-12e6e2c84ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6855fce7-b0c9-4d34-b0c7-7d2d2e5fe187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ddace3ae-5ba3-4adb-afbf-462a0fbf8350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1458de9-db76-488e-9f18-cc6669debb1c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9499c2a5-b694-4fd0-b82d-786c5e2ac5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0fb7e8f-c44d-4b88-ad23-dddea2158a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6d5164-33f7-4ed6-9a09-21bbdd884b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "91bce5e2-8adc-45aa-a42f-c07a30e241ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14195feb-b70d-460b-83cd-87ad32f48af1",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce7aa90-d514-430a-8f39-10e8a22d2665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c628df2-6186-499f-9b21-9c96364249e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d78518e-6372-48f9-b832-f3b40216d5b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "43c072b6-c67b-4f8a-91e7-74b822d8b1cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd706700-8538-44c3-8a73-c24928191782",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b9a09d-44db-4533-8a6f-d80482c15d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef4c796-cfc5-4d54-bfe0-38f1d15dee36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a013becd-bb04-45d1-9e06-50ddba0fe986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "92152d38-f081-4a73-a7b3-1250fe5a9168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a03984b1-9501-4fe1-9be9-8183a592ddbd",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604001a6-7b1c-41eb-aee8-402343f330c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "155994c2-a189-45fd-a034-29d59502741f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0e4122-c0c2-405f-a107-47abce83300c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12a09ab8-d507-4d6a-9a6e-735c491f4bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eec9c55-d71a-4e0d-bb47-3bebc77676bf",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0352e169-0d9d-4d04-9d23-40a7210e6558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6aa07b1-d3db-4792-b4de-66bf66f071d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232ec881-c9ae-4a30-b0d1-53abff3a7a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46e08bfc-1d49-483a-a825-3a4ce87b32ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0e7274-5050-48f9-8bf7-d938c8da5b69",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc70b79f-741e-40b1-a7ac-346e26bc4805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde0aa10-28ca-4aff-91da-bd4f11575585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf51a28-40cb-4953-afd1-646bbb9a0ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8caa7706-e70c-4e84-a272-ab97bd8e9b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a5536f-f824-4777-8c19-2148eab3c172",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8c7c39-8a53-4a13-9c78-1254a9afc5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cb2841d-b57d-46f2-a08f-1b19c1409cc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9799149-95bf-4d45-98bd-1ce73eb734db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1f0a673a-c844-48cd-b836-6f37d302b12f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aef9375-0114-464d-9b3f-c6bb12cb7841",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "697c9fd3-7da6-46bf-b0cb-7c4da7c39dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0eb7e3d-d648-4a05-ab9f-45fade6115a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0736dcf4-53e0-4ec3-9139-8225a10b866e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb9916eb-c79a-43f2-b046-bae0b5732160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5832028-f996-410c-bc66-e8709bb5ce57",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ab3f75-b71d-4dd1-9e9a-68463df34a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76ad0377-4f7f-440c-8852-aa6abb190947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a1388e-f836-4007-beb3-383c678aa3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5803fcb-6e9b-4aff-9f8e-6a183bf9f0e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6025ec0c-41ea-4368-80f3-92540cbabf3d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff65743a-94d4-41d8-bdba-ac6c11832bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e7500d-a291-4f74-9946-51faa68adf76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7b2d86-9080-4087-b105-066713c26cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc911cdf-2bd5-4bea-9133-2eaa773d1d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15b8f1d-4735-437b-a6c6-d28abb4011c7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e142070a-7ac8-4307-8dd9-69105b8ad525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c676edc-b8c4-48df-bdff-4f2ea271ea11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6c7fa8-4225-46fc-9d54-0250346f91fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "76ed11e7-80d7-4c3a-a422-c60429a0672a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e979213-a925-4b4b-b308-ab49965da772",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd164472-ba40-445c-9b64-b6a19db86d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a45e8b82-ac38-4880-9c17-a90fb6645777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea02e35-6c26-4ce7-bc89-d5b44af52462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9a58f69-575d-46d8-84e1-31aacaccb523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d10be2-70ea-4779-9ba9-693640416993",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "609fbcc0-e841-45fd-b3c5-db9842a41c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dfe8ce8-0398-406f-9cd4-c6f4171644b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497b223f-f43f-4980-a132-a3a862fa30a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8609f0f-81f6-4f95-87c7-6bd56e64211f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3056b49-2b0e-4f9b-91ec-3737526468ba",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ef76a4-a4a9-4d96-9a66-ccb53f45aec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60780b6f-e858-4b44-8f51-4ed5f0c2bcea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3762dbba-9749-4a65-bd2e-cd25e42cf614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9f63c83-0902-4007-85b4-9c9261042266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a8245d-983a-4b28-8315-10bc4d83d179",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25392198-6b3c-45a2-a8e1-734f3ecf7c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78825db8-a1e4-4e6b-84e7-d7963812fc1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3dcde75-2878-4155-9bfc-e094bca4af04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b04b5bf6-7b63-4fbc-b1cf-1596105d5cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128a5e96-d801-4b1a-a5b6-350019217aca",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8859866a-8365-4286-a195-d2cbf10bcee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c32468f-0833-4ea2-9589-f79defa8272e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ac7a7c-fd57-476e-9070-021c6662f726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "620bce38-ca7a-460c-b45e-7b66d8965246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e1b801-7f6d-4288-9258-bc085236da4f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "014d1b56-6135-4a59-9114-87840f46c376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b866c6d9-53b6-4221-8a9b-0cab9911c43e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dbbe950-7658-4b63-bfc5-f5bbda824912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "520931af-f40b-4178-b97b-d9231f63e28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a11979-2bcf-4b58-9288-1f3275c95b25",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d48ccb7-9bf1-40c6-b801-702c6029f8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "318de595-f0f9-464c-acee-4f68f9f16787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75354597-ef89-4c60-bc54-5b004a9dd389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "12597e64-fc43-4b1d-a22d-c608c77c0b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa36ec1-52a5-4654-8740-e1c100a14b77",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7558a629-b844-4caa-8e3e-6d1e623f3c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "240d5fbd-c35e-4c25-bdfc-6cc315a81959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f7eda1-108e-4598-8710-33e68ff20d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1459ad8-6c2e-4324-a016-ca16293ed26f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b1dc72-5c17-41d2-abc3-5b63436590cc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "298d9909-84bc-4627-b423-451c549f7912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd97ce1-3d95-4cbc-a644-b6ae9772091b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38aca0ff-332e-4bc1-9364-519e45ee81db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f32404f-a6ab-4284-8234-9b00d5ee7c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df871eb-4261-463f-ad86-7baa838df115",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "982a14c4-acff-4102-a7bc-7a8007b80b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c2a2c8e-f675-48c8-ada8-fb553e765a84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb27bb3-d70f-47b2-9722-d16fd91b77c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5678797-3efc-4090-aeed-a22ebe20fc7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce572f47-5b9d-43e9-881b-bc3890e2d167",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2280b56-9b3b-4a38-9ef9-85256783e936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e9ecb9e-e8c6-42d5-ac0b-68187b47b7af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565da68a-da90-4bfe-8504-7b479571a1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3a16454-e38d-47fe-9baa-cacda87cee8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6333afc-3266-4842-b40f-34bdcdfccf7f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d2c166-5861-4403-a15d-437c1125e50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a563c1-39c3-4b73-a078-2ea626a1dba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0445afc-e7d9-415c-bd48-881bed4d136b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "778de1c5-7b61-4c9d-a644-731518ec1027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ed5ac7-d5e2-4924-8cc6-91d608326762",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e023dc06-4a89-4d52-bc48-e021c2160b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f6dec6-dd0d-46a0-985a-82dded2ae370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f358286b-13d5-4128-b677-9c24c03a17f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "107c818c-8e1a-4eb8-aace-8f3335a000b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5abc1617-1725-4c65-8a02-f77d9fa9368b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e05cf4d-2989-4119-a99f-e611f4b9b50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b0e817d-1488-48d0-9f84-c1f92e87a548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c92af6-109b-4f6b-a8ad-807c6d5fd716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "243194bf-2a8d-40ed-b8b0-4f3dab07d274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4a4065-2b1c-42f6-92e6-680be5d07f56",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a954c36-3d0c-4a54-ae8a-b820f192dca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a8840a-5408-41cd-9580-8779818d6376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9749adc3-c807-4a54-b8e2-3769b9dcc5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "13053cc8-8681-4095-a6d7-4bdc03e708b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512be3fa-fd98-4a1a-bb3b-a202deebbc2c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4050a7dd-2424-4e4d-91e8-d939b57ccf9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "627a9b39-e70b-4f9b-b214-ac46ecbff31e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8f8b2a-abf7-481c-bf7e-834460cef0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dad90d65-be26-4dd0-9232-f5b129d84872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7e1c66-507a-4c01-a4ab-8c87a071089d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17aa2e0-4404-44ae-a625-34f4cd1c96d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c31fbd8-40b1-4818-95af-4833956d0f82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f985271-355b-4425-aeef-ec3f6b090262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f998c463-ba1f-44fe-91b1-c1a0ae1eff68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4306eb3-a403-4f9d-bcd9-12e2a70f9898",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad36bdce-d8f7-4ef1-b101-b9028cb535c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b4d90c8-b41f-40ca-84fd-2764d419a55f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b36058c-b94a-48b6-a9dc-3e205fa1bf49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a87086ce-7572-43c4-8ebe-0387323afb81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1cdf662-f345-4d8a-a8c6-97218e01c323",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb34621f-f86b-4f24-bce2-e55eb661c412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8b46f72-dd5c-463a-85a1-c1358412ee6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6ec7ab-2b98-4a11-8d12-7f7fed22bf0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2367c8a-ed10-4ae4-9c69-611a1f0978af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54502b61-84fd-4b6e-9b31-9b58fe2fd314",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3dbf07-cabe-4ca9-baa6-c989eb0c137a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "894e55ef-6485-4b76-aa64-48af0b96368a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3baf69c-cd89-4040-a0bf-f4a0ec041491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "260d32cd-b827-41a8-a810-5d089b070998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb17e0c-87ea-4b0e-bb07-2a80dd3b44ab",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9246ecac-ff26-4782-a9e9-746f054ef9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b00cf276-09ca-497d-84be-9945c51f8c29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366fd51f-ff14-48ef-b779-ebadcc5770ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a8be297-d6d3-4a34-a73d-3f5d872afb47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f0c6df-e931-49a0-9b34-94ea0a7ffc8c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51a6b76-0a70-4f80-bb94-b785bb23fb61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1373ea70-c884-434e-b257-9c684d73b4ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b4f2fd-5d17-4b97-ae41-c940c6bcd669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "142c63a1-1581-460f-b00f-b5eb95401ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9d9864-6664-4089-8971-3be7d7c78a68",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "242c3af7-a4af-4321-9f40-04e1935796a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bf9cade-90a4-4d96-a88b-5251b876065f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d039215-ac35-4869-a749-862325e282d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a449f6d-05e2-4932-b771-724c47dca746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1da2c91-7696-42e1-bfa1-c938d8572efe",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e9111f-7285-42f2-904d-3c39d09f3800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1aa822e-d15c-4d0b-b894-2ecbc65e570d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b261a1-6c45-4358-acc9-593ad8b1425d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "36639f72-2668-4a12-b4c6-cd6d77e612d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65fc314-103a-4abb-9a89-e670a9635b04",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba22c95-1f29-4bbb-9038-c49ed1dbe24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac1c0efe-cd80-4ccd-9937-6d9b4a9a7332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a780896-66bc-4e7c-9e4a-1df0fa5ec247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2c1b288f-a7f2-4d6a-a5a7-446bb5fd0b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cd57c0-7422-4d32-8bd2-08c209dcc131",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed2c421-1936-4ed3-90b6-67e200a55ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "933bb576-8b85-4d0f-9130-f065f6303f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17d2428-12c6-4fbb-b1cb-36cd36fb65ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31b3d769-4f7c-4284-aa1d-e67167e15dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06076d9-5587-4f43-a280-c4777b6e1697",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6aa368-ed99-4622-8335-5585dc12affd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20006c94-b3d7-480a-8b1d-d00dd7574ba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feaf59ba-cc90-4db7-92cf-ae4f8ec510bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e407eb01-78d2-4a07-8448-d79aa5cea611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afbbd74c-6c42-43b1-b578-1612cf77ba9f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d49791-1957-400e-b12f-25d255e304e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91e24ab5-01b7-49c9-bd26-8e8edd9c3d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac9a906-ceff-4105-9b7c-8f1da2f375ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad8db8ff-392f-4829-a98a-de24b6aed8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f215a1-621a-4007-9b3c-28aab5607db5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb3689f-579e-4d76-b97a-27cb9ff554b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c7224aa-ee6c-47d1-9b67-6d9bc791fe4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21877a9c-8a77-4140-926b-453959841a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "caaf575e-614b-4942-965c-c282ae6ebea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3033b1-30aa-4ee3-80c1-5d1a9387b8df",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8629b158-8684-4982-9e17-267896f0b318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a45adb2-e2a2-442b-b81e-1ad63619d528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e44235e-735d-49dc-b273-227bf2c024a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3550f027-16c0-451b-a445-1566f578acd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693a30c6-8b0f-4450-a762-9cf29089bc58",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6035c2-553a-477c-b095-ed2df962a098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1a0bd5c-6e3d-4c78-98f2-5e831d7aefbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b79ac4-0ce0-4dcc-abfa-6a34607467d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "47ee4bc1-083c-423b-b058-e4d62d308fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f69824-1b81-4fe6-a8aa-ad17a32f24a8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e8c662-e678-4488-a08d-5912927e47c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "44bc0a92-d16d-4969-b2db-614b00913b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3291706-6ce1-4119-b1d3-83f5dfbe0d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b54fe9a-c7fd-40db-91f1-40dbba4cf55b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d098ce86-25fc-451a-82e2-345b50214c9c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "63758aa1-d1f0-4ce9-a541-9cb597d27808",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67226f7-f22c-424a-9b70-241e9ff16049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "535ed261-c111-4fb9-84ef-48c5135ae2e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e566a0d-42df-48ae-aedb-5de4410a65f8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6d7c04e-5db4-41ff-a3c0-0086ed3cb434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250708bd-c665-4026-975e-bc8cdb88c549",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d9db6e8-8fd9-4134-9883-a07949307af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4087d0fc-3079-4b1c-8e88-829270491794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699bce2f-bd08-4a05-a69f-99283aaa3f92",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "322cf2a7-d309-46be-81cf-b4a408315899"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "384b9399-ca2c-4761-889c-c60cae0b0dc9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e772329-b908-43d2-b4ce-36a6332034c8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "146cd3f0-9deb-4091-8a51-442b83f58768",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f2ea367-59d1-45bc-afd0-14f296aa721a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ba9366cf-8524-4c46-ac4f-6ee3f0dfc196",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e495e036-2732-40db-a171-72d651a4656e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "774d78f5-b006-49bc-80ec-3343ffe1019b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "464201ed-4998-4a65-84bb-4c8a5331f401"
                }
              }
            ]
          },
          {
            "id": "14093458-ac52-4e5b-95c6-b136f0da990d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4f9b5752-fddb-419d-adf0-a40cc23816d0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f754b1f-97b9-4d0d-9a5e-da7292afb884",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3df740ff-ee6d-45dc-9d74-c5d43eacd3e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7fbbe5fc-bc76-4975-8807-d67e39a0f80e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "87cc4612-a795-4769-a107-ed51a7fc5a59"
                    }
                  }
                ]
              },
              {
                "id": "9ea76b2a-bcf7-43e2-86be-f23ad4193621",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d834888-c9a3-4cec-aabb-aa13947666a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8450a011-9813-437b-a47a-3d820e31e820"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d3337cd-b0fa-452f-aa75-404d54e71bb3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "10b0e0fe-1c13-417c-9947-d15413609516"
                    }
                  }
                ]
              },
              {
                "id": "6a24bb7b-617a-46b0-a331-76b2f9b7820a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "616fce5e-59e0-4685-a7b2-f1053832e3b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b3e7601d-5f32-4fb2-8fb3-71ffaaf58a0f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8cd6a23e-6047-4ed6-b51b-6f95d65ea346",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "61da3df3-e963-40fb-88f7-f39724b26cdf"
                    }
                  }
                ]
              },
              {
                "id": "dee3e8c2-dcea-4347-8a02-a5cc78390eb1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be3e9bbf-0b14-4e3b-99ed-a7b454463839",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2d1cef3e-9ad2-4985-98d3-328d68353f8d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0baf8e26-51bc-41af-9eb5-4aff67dc5089",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5d9b0b26-157a-4379-b49a-3ffcc1251526"
                    }
                  }
                ]
              },
              {
                "id": "9f4d54d0-6bc5-4bec-a23c-dbed6ee6e0c8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08ec70ea-a208-4277-809c-70ae7128a36f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2751f3be-0e4e-435d-bc25-107977c56195"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57c3083c-70c5-4585-a82f-c7a49b2a5eb0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "090b40e7-6233-4add-83f9-594fd5d3270a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2e4e84d3-b3af-428c-a199-a891404c2dd0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "223cd926-b040-4bac-a3d0-835f5a4a13c2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "311b5e6c-91d1-428b-a230-f146cb4ffb03",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c312a010-f93c-4619-beb4-933a4f274009"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50272790-4981-4f1f-9a31-2ff19d2f9d43",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7b6e6605-1822-460a-8ac7-8135f920401c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4982b39f-5d06-4377-ba53-b6427fcf6032",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8bf89220-3823-4207-9b20-b684da58c0cd"
            }
          }
        ]
      },
      {
        "id": "82463956-3541-4b76-b641-5b3cd2758d8c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1ce150fd-4dd6-4c7f-9494-9415e7d2cb78",
            "name": "Negative Testing",
            "item": [
              {
                "id": "00dcfa79-621c-4e6d-a365-c0cc6665f100",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "507ca95e-25d7-4a44-abdc-4c5aa5867c55",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce713d4-58a2-455a-a8a8-f41ce8358dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c01f20-7e4d-4171-95bf-f319ccbbfed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0b0b80-dd38-48e4-b8e1-de1fbd687d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b7dab9-cc99-4fac-a468-d5e3a96cb651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c91a17d-eb74-479a-a34a-76784d3ab831",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b9ea43-d509-4931-adcb-580f7d1835d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb4a9ff-4e9d-4ba3-8dbe-393e1af9b333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa36beef-d248-466e-8ac8-17d3caf9f117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b947518-283c-4401-b809-66cba3fda5cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82cb909-c546-4926-8047-e2e062c14b2e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5666b273-b1b8-426d-ae54-3298e0c5afc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "571a2e7d-5003-4b2f-9e78-08105961ecb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a36659-52bb-4f53-bd09-c623f0a0f152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e481226b-f11c-4f2a-b567-6d165c5e4139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b0e3f2-7caa-4d9a-a204-6b8247c5ea0a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3b0699-b767-4583-9974-06309c9b5d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0c3f01b-8c4d-4c09-bdfb-8c4fe0362480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43dc982-1ca5-40b2-b564-ee58dbd36136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "247ee88e-cce9-4215-a6ad-f05ebc8cbee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6136a4b8-6ee2-4393-b6ad-bd82dfba651c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5094d8da-106f-4488-949f-7224def91f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b3f867e-a4ad-4e81-a741-b7dd6edecede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58dcf798-d032-4202-a65b-6a7850625ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c9c9ffc-860a-401f-b4d5-fdd46c8b354b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad454ee-048d-47fc-86c2-a857450e1993",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "747f5a1c-5f00-4e33-8e27-681e933bbbfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afaef3be-af12-46a9-852b-a14c383ae68a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ffbed9f-5f07-4f46-910f-69b1965014fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e9af9e5-f3ed-4e0e-92a7-93d252caa7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ffa077-6b66-4123-94c0-18a3f3ad5aff",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "984c62ea-02de-4e2d-89cd-083c97365907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1011f750-e885-47c8-8f9b-15476c298dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba48bf26-4228-4ab6-b062-919ec42aa9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e2ea81b-956d-4c8f-9261-aa88c5a7840b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482990d7-4688-4b5a-8878-cd999c71fe69",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8cf31d8-2f91-4d50-b537-b7a214d1ee16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac9a1445-3904-4309-ad45-c773ff2716ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09feb359-fee7-4bfe-9f00-427739245504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f425b90f-2954-4ed8-a069-0b3af2a8cee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f11a72-6805-4d39-8121-c62ea2a6b97b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2412619-4d61-4286-9789-66e99e60afbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd6f097-4ce2-4bf2-aa48-35b9db47ac41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19d167f-3a3a-42a1-85e0-6be0927bfb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad7a5e73-f587-4ba8-bc05-09ffe384c35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb53c8e-5c3c-4c0a-a3bf-c9bcb3cf923a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5611c9bd-c998-408f-a88f-e3805b3e4aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9e9a79e-089d-43ec-bb9b-0ab7df7e301a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33127bf0-9051-4b84-9fd9-53f1b387451a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "916a491e-2567-435d-a31b-eeda2b2e6a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8f096b-d4fe-4272-89d4-fa132b8cab12",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0758e1f-1cf4-4681-a1a9-67dd88e95276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6dc5caf-744f-4bd9-966e-209bc7a1bcd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2937c04b-0e44-4255-a5b2-9b76f7c57654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "05f90aaf-2cbd-4ecf-9edd-1f7148d5eadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60f89f6-7d3f-415b-8d2f-dce66c6717e7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e10a47-0b80-4b5a-b546-ee45c4cf9b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76e71531-3bfa-4bad-a98e-aeed86de4bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4afcf4-4d79-4910-8b98-ba8375088350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "19e0e063-e8d3-4df3-8895-a8432873a0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8812fb01-b26d-442c-bdd2-574a6dbf1c7c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88049858-a9d1-44fd-9bc7-a59a34dba3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c6f968-331d-49da-9cd5-df2d02d920b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03395eb1-b331-4c06-9a76-1bbe8e4fdede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d52d8f96-c303-475f-97d7-6efc861cf287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73271f2b-4c24-413f-adf3-39c3d3e00de6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "424d1260-eed9-4a65-9aff-b01c34b4de9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dcf05e2-0a3d-40d7-a06a-d99d70b2ea12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df28d23b-cd90-4a07-bd70-153c476d880f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c1e1fe5-bc51-45dc-9b3b-2a1972fe901d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bb54c5-0dd5-48ba-8244-abe871f99fa8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd24fc51-54be-4166-9edc-5f2844da7d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c601529-e44c-4d09-9694-a673d18964ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8902e66-a3aa-4224-8771-a9d087b823ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff6a6b9c-e530-4524-96a9-b8ce5014f530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0575bb4-73c6-4da8-9d43-ac307ff55c66",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd88de1-982b-4100-b370-020123ab50cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e6a1b77-43e9-427d-a2da-4c7433a1c7a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81eb386a-ac9c-4bde-af95-f60bc229f080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "01260c76-c18d-4dc7-b017-71988f649a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9a7079-43b7-488d-a19c-d206ecfb3395",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84b0a87-5370-4f9f-bbef-1d7000904353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aacc53d6-82d9-435d-84bc-7aad6f6fbe72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6256e624-70b2-4eb0-8628-c151e78c861a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "427ea5dd-0afb-4b22-9139-17e949b5916d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c1dac3-aadf-4bbb-90e1-4ecbb394258c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a853b4e-122a-44e9-88c3-e2ed4e2a5b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3550b40d-0570-491c-9b8b-9f2ac4d6162f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983586e9-e8b9-493a-997a-aeeae29cd27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecc7b500-c00c-4f2a-98f3-da894d241c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481edc21-ac28-459c-9569-a8cf5cda5b6f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19285ee6-5f3f-4187-9a99-70a6debb669f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed902e74-79c5-4d85-ba05-2f54e405a812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffc26d8-da11-4444-b8f3-6fa750954801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ffa4fd3-a44e-4186-a5ec-c0a6ca094f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04203d3b-aeb9-4232-b422-a420e4ae3334",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb639cf-96e2-4132-9f07-219db7604f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f78c10-2290-4e87-aeb8-8ae1344afad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659b625d-be05-45d5-b92f-0377c2fd8457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75673987-0526-4dfc-9b83-6195b643fcb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13257a99-519f-46ba-b72a-4edce8373bb2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4405786-ead4-4361-a8d5-caa6d1250df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c89b302-9178-4771-bab8-ed223de72f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf52d8e4-b4e8-4cd4-87fc-a09a383e0fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b011ce99-090c-4fa7-b3e8-1263d106570b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c94c41-5a00-4b9e-af22-8ff7df342091",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4148aba2-3d08-4714-8b4b-396fcce1ade0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "021453c4-a67a-41e3-974f-4cbbdfcdf30c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bc7b8c-5505-473e-ad0c-255bd6973d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b31734b-327f-43fd-8063-aa5c3eaa492e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0897470c-85c5-4f3e-9b7c-8cf51ee7865d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9158cf35-68c8-4cda-9152-28e474b53cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11d2f85-f642-4c3c-9f61-f1b71336029c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c297e2e7-4475-4fdc-aca8-603f0bd79d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a3cce16-057f-46dc-b19a-4df82b9e6cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d181fd0-2c88-40de-bdba-2ce86695f0a6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323d38a8-42a5-4806-9a52-7aab359cfd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1bdbd9d-7f27-4008-81ab-d93da36215c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12aaa52-d723-41f7-8222-611a6b00c59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea5d4912-7d8a-4826-b39e-4bddf5d698fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade1edfe-5995-4835-976f-45dad8903373",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76550d1c-6298-40e8-8df0-abdeba0e85eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5880f5f4-a556-4742-951d-2752ff82bac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86295ba-32b4-4cda-904e-a3dfdb46dc1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea06a7f-896f-4414-ad8e-c1787eaa071d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07fc776-b5a9-4cd0-865f-3386bf1d97c7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7faf66f-4e56-41ae-8fcf-9f476a4ab398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d313966-064f-4767-a680-b278d846cdb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59dc5c0a-619e-429f-9069-0414c7e079d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b50fd0e-5d02-454a-9214-f140e2647d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af733287-4232-475b-8d63-43bb6466b900",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1e11d7-29b8-4774-98ad-a8883dba4e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f52fcf-7f1e-4085-a650-ceb4575e5697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "599a6c2f-acce-4319-af6a-76f6c685e1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb156c9-40ef-45b7-a279-4c6c11c5749b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70cfce67-fc10-43ec-bea1-8e44fc239185",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806f5847-b79b-45f0-90f9-77bd4f2b0ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b31c44e-910c-449f-a14c-e4ff5ba92fd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ce718e-8f3e-4084-91aa-6878d5f1fb6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "272b7319-e83f-4dfc-8519-818841fce88b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba906e31-757d-4423-9d8d-c6121b150eb2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbcc4dd-4208-4578-8bb3-fd0dbb832618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c597f2a-b0fc-4bf8-a641-f3585ec8351b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162cbe6a-7a31-4022-abf1-8acbbd15aa84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "198b5350-02aa-427a-894d-44beeb3f4c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94fc27c0-40c7-4268-ae68-d1acfdb46350",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a02024-e7cb-4f6e-bc3f-35665bc71296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf8576c8-1d29-411d-aeef-368eaa24ca6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62312c1d-76b7-4c73-830f-c887141a4741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f649dbbc-e4d2-46bd-9f78-022089cad300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f743ef8c-ecb2-418b-af17-f6f00f67d078",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d642be-bb53-48e5-bf1b-267904dc1cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1f0cc5a-9591-4ad3-b91b-135e3073b502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7730c2ab-5b4e-4f86-b91c-7a248460a29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "974e63b3-babf-4c71-b9ae-3c88a810a68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b312c838-c9c5-4959-8880-8d1cf6ea1aa2",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf34603-a1c9-43b7-98b7-5d4a02df5d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d1e877e-0fcf-4378-a597-7f24df377c7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e26648-5aa6-4d5b-9e0c-6e4beb2f76f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "959fcef7-8e6e-4b28-9d56-db593cbcaed6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d74901be-fc44-4fa4-b887-86db29b4b249",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "59680f3b-f77d-4689-b1aa-66a84d37a5cb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c158a7-241f-4a1d-9cfa-989b0746ecce",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "be4a4a1e-a1b3-4464-a540-5705e12a6554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1256116e-e242-434d-871c-559487c6bc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "299ff9ae-bc88-48ea-be40-101d847edccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa1849e-0689-4b8d-b120-f531229f368c",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e1b41e-8d05-4c6b-9bbe-5aa3e4fb4d7c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0d17c01e-b586-4554-8c57-a05d11ab8617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbe2271-ab81-4fd8-a14d-b770ca33cb23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de2f6e0b-5e74-41f8-877a-f110e33600cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7bef9e5-5ab4-47a0-89b2-51d8e9f89054",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f96c680-b265-4fc9-85c9-bf1b3d73e9d3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "017dac8d-8be9-4028-83e6-8ac51d9d8cf6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2929893b-5ddc-47eb-adc7-6c4e4fabad5a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4d28fb4-de0f-4779-b8cd-b8eef3bd31ce",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c2f20ef0-93ec-44da-aa44-8edef9d50013"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86358b0a-f1c1-4404-80ab-2b934aff2bed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9161edad-6af1-431a-8bcf-bef3bcaf6bbe"
            }
          }
        ]
      },
      {
        "id": "015979c7-6dcf-40ea-b628-3fef709f440a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e2a280b6-e9d1-4e28-bbd5-d5be293219ff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e285610c-b9ac-4045-bbbd-f3784b52acce",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6a707f01-9b56-47e7-8911-b210f2b878e5",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c142a865-aa65-40b9-b0ae-5c8223b42b5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dcd24c9-ef03-4ec4-a4be-7cce4d880a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d20cc4-9269-417b-b66b-a1346263b22e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2b8c5d-e473-42b3-baac-8d9439b6f928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f37fd2a6-fd9d-48bc-ac95-1a427ce252fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c110e627-3ad7-4e1f-8268-34a682dec072",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e6d58e-21f5-4fe6-a1cb-0e63e9de1d74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e733e06c-1651-43d8-a11a-cf5d4c111b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83db02db-feba-48eb-b94b-3ee8abcc239c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e50b13b-0bdc-4133-849f-defcd54d2fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7fa3965-dc72-49ea-a9e2-f00a7be2ce68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e300741f-83b7-4a8a-94e9-f786c06e9bce",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "007693a3-463d-4850-91e1-6d742c3c6a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8232e984-4a44-4509-98c4-1029d3f42453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1c95e8-313d-4163-a5e3-7df1d3d76bd8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb0f3f4-188f-431a-8669-464d11e6b982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8620c7e-507f-46bf-a623-2fcdcafe70e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854245a9-5828-4917-9a76-f4bfc3fb2df2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18cc7999-ce94-4b55-a416-ae9227a4892d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "691574dc-d218-4c04-ad7e-c4023d60cf0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7707c0f2-9b6a-4d1c-854e-54a5623cfdd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31eb810f-5285-442d-8919-9b03bea902e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1a8211-da17-4de9-b6fc-9f264dcf647a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8e2542-ab80-4149-b408-6e1d7a958ac3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0539bde-4238-4458-a383-e40c18d5d5f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e8bb32-c275-4c90-9901-393c68e3c205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42bd647e-78b0-45bb-bf61-1b561b5e4be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "136f9ce6-e94e-4bdc-942c-8b3f9c5535f7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fcb09f8-c802-46fe-a7dd-26f165f41a83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41d7144c-c92b-402c-94c0-dcc9f9894720"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37bcf6e8-9110-4c3a-b7fc-975bf842c9e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab62aa0-baf0-468d-b703-b560207f937e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def42b26-7da6-4bd4-b407-d4c639cfcb37",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8766b75d-0b04-463e-b058-6f10307b586a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "776ec9c8-c6c5-47fa-8ac5-a2eae304a6e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67364024-e383-4d01-92cd-00d4f59f6d9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b569a3-06bf-4901-9d22-39b4035c9a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a57d811-ab4a-418f-bcaa-7e7ea40c7a53",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f765eb70-f962-4134-89d0-e10c5a62e3f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f5faf8-fae8-419f-8c69-3e5d75e74540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e31c82e-3b68-43b0-aa52-f7434b891417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e111e375-8e0c-45cd-b52b-0211cf889066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80081d4-1ec3-483f-98ba-87273b88eac8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7a1f94-b81a-4e19-86bd-ee9eacc5d20a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f758410d-6df5-4f80-a4c6-70b90970080b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f91678-24c0-4848-90a1-d03408eaf1a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76e726d5-db3a-450e-83c3-2b79c69274fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d640d8e5-70d2-4f9c-b8f3-f2a105548c23",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a7e0c4-0ac9-4c3d-a409-dd6a9d1b6bf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9bc04e9-0017-448d-8f3d-1cc361cd715f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3be51e-0166-463b-b807-48c336d03d32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b1f842-81c8-499b-a568-588c328fd3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4774b879-4f1c-4395-8e8f-823bec31dbcf",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3b90b9-034b-4a53-ac30-61e60f486559",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41468d00-32c7-41f0-9c42-5741372e9730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dface08-1992-4046-8d01-b57190aacf64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f836adf9-9d83-47e4-bf77-613ca2852c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf74a3a-dfcf-4e29-bbc3-f6ba57d6dc63",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a371a242-c245-4a07-8a6e-9e76dbb85ec8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09750ad6-d235-4e92-90db-621db03b5cc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60ffd21-a807-4c93-82be-3e190c110d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a130499-ab95-4d6f-b4b2-71ece0931f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39660cc-ce4d-46ef-b9fa-19b5c8dfe4d7",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3553e5d8-b82d-44c8-8513-c130862f3e9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44e89f84-ca3d-4821-91d9-33d953933afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a7e704-d30a-45ad-99d5-c88798d863b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cda267b-fa82-459a-8050-b3d5be46bb98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6ff10d-735d-4857-b23d-8f9b311030a6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e4eac7-0553-4028-802e-48fdd7c77b60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "361b8801-d829-41e4-a624-eeeac6a9a5c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e924caa-12e8-4f00-a5dc-c4f7529816d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4871cd26-e587-4fa5-96db-19aa1bcebb83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a319d3-8bb6-45f3-adbe-8319b193b28c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7189dba-ab81-45db-b60c-fbb0b62eef31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42917396-7eab-4ddf-9e2d-dc246a12125d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a19e78-1c1e-42ad-9bbb-5ca36bf64e98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92fb6647-d57d-4536-b22a-eaaa8c1bc5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0128fa-ed86-4100-9438-f0d320be03d8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f354dab2-523d-4c53-b972-43d7bd593a88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "264ab377-568c-4046-b33b-a2288c07d0e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb1c13d-e968-4217-9c56-62f16b07e62b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e66debd5-c51f-4b38-a5ba-d12d1ef4b1e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d119807-3f5a-4e6d-9671-664f4cbca495",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2b7812-a8b0-46ec-80a2-42cfa27a5cb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24641491-2066-432e-8d89-4a83ee5eb574"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d57914-66af-4234-a27b-cbc9c72cf1fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13a9edc8-cece-4c2c-b555-364d19540156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca493be1-a4ff-4b5b-a553-29e9eb48ab69",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68dbd202-9874-4ca8-8610-f54d8ed1dc8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe7acd72-622c-47bd-8522-3c66292b7603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deeccd8e-9c87-4577-9c2c-933ee4e6ebd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf7e5249-7655-4cb0-a95a-5d3b7c64cebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b924251-705d-4f80-a60b-6d9cbb580a99",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f19769-9b1e-44b0-9589-f1ddd8ca37f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "149d3504-da77-4106-a117-2af53106b8af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84982972-d6a8-4cdf-8d35-76898c4e4f44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df92f640-d270-4886-861f-17de50919de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134504df-e9d8-4214-85a4-b97b231a02c0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86d06db-cc31-4961-a748-39c53fa7f656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18176f3b-09c2-4af1-964e-3f8e0002d3b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2a8090-f2b1-4333-aed7-d72e3cd68199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "304e3543-7470-40a7-b2ea-16afe5ac31a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90230607-b4a0-45a4-8638-07db605021a3",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43a67d5-c3d1-49e1-8cb8-3e473a4b5f4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b92f797-a5d5-40a0-adfa-f18409f24018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8c0293-bc70-43c0-953a-84c3fa3d9060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abae12cd-9634-4035-9c77-1ba1c1dc54b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2fa691-4c8c-4337-abee-8d9d20a652a0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f381c10-63b9-46dd-a7f6-5dc725ff557a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6b11163-29c0-4c4d-9cfa-9308650d1648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f3614a-fef9-4075-b6e5-4c036646ee73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c938cb7a-48f6-4f04-b687-6d5a44666284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3798a4e-95a6-4310-80e4-418799ecb782",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd40c4ec-5908-47dd-8d25-98604d1eb4e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cd143c1-416e-4502-a9a0-70095588cc74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f75013-9b7a-409e-a950-a51de6d19de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38648d86-dc89-4185-9bcf-631b48cde7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9450e2e2-e728-4967-b8c9-166ea4b6c324",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95124462-3915-4cbf-afe2-2063e74a3182",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96ce7184-9a15-47fa-9fa4-7427d80d3424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4844e0e-2171-4d5c-9f4f-a6fb6e3a91e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89328a45-4bf2-4f1f-b8a0-2c2561374357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49417bc2-1545-4c49-9402-15cddfca407a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d952e3-1c17-4669-b930-d2e02a012dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5298327b-e9bb-4f04-bf16-af7d04e8af54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a51555b-6650-4706-a507-e6307dd963fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fd910dc-784b-4474-af5e-e535cc158961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33eb9b58-01b3-4a70-a351-979033cc6089",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50ad2c0-3b0e-4bea-af77-bc71c4f6cc20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b892a57a-2557-40a7-9bc1-5716d3b4d712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd231c0b-c95f-46c9-a055-861f6aaf4703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbaa4ddb-38d6-4e3e-86a0-f8217ad8efcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0bba81-4646-4eb6-8e71-3bb02d7c6cc1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126f376a-dee6-4231-8ccd-567d03448941",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7a9bca9-329d-4dba-8bac-fc33873e9e5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0a8f86-db24-4a91-b5a4-178a8aade9f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3273810-b32d-4306-9425-cf12eec29649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60990c6e-ef39-4cce-bb71-2d2bd6e0518b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d772979d-63d5-4f82-8b96-7d16049e959a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8e8f692-e14a-4c39-8da6-ce4d8d4045c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b917a4-e7d9-4eb4-bb21-cfe3a1024ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bcd79f9-ee62-4a14-a0b3-1ef61d5fdd10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7b508e-e503-4e8f-add8-435c71045898",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84477a4e-de90-436a-9a85-d73503eb1c28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e528862-d16f-489b-b105-b64bd79a3ec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bd15e2-d5f6-4288-bac4-bebc493950ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bc5a148-e18d-4743-b753-8e4f74e9b427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f536bf0-12be-4d68-81aa-a149fa5c5e49",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d138e2-be75-47db-8d01-6deebdec25e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "308e7167-f495-4267-a488-4655bd13d03f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b66bee-f51a-42f9-ad90-02b7e3aded5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "458b16d0-2edb-44f3-9649-3158ea6c16e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f796d3f2-ddba-4ed5-b81a-1dfa933e57b0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d95c6e0-2bb8-4859-9bdb-84315deb68e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8df2ab4-e1bf-4fd6-91d8-ce4b40c0242e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "406f80dd-5123-4c3b-9a84-a22d7f39b9c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc4d2f8-5ef7-4792-98ab-749c6ce1cd6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11167de-202d-44a6-b5f2-62143b53ba5f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1961f88-42d5-4827-895e-20679edd935e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81cb066a-c60a-42f1-a59b-90be9f4d8e84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e80f360-c8c9-461a-aaf8-a822aa11fa23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5936418-06cf-4fb7-9a06-24963651fcde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "674fb15f-5767-4868-a47a-974258dbfbb5",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6edf84a-3eb1-49c5-b00f-256ad2e3a225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7c4f712-2ac0-485f-87f8-d1816fe852ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c536a835-ab2d-4702-af5b-17091c2436d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f22bc81-9862-4f1e-ae91-86c94c0b9850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c280535e-85d5-499e-b7d1-82dc43c62d0e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f744259-302d-4498-a7ea-07120621c10d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa56608-da7a-4033-994d-c535405e3f01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bdfe4b7-d869-445f-ba3d-11f3ec83cd71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b41f8ce-f878-4783-b2db-028fc2569d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19bac0bd-19da-4992-a1dc-3f3adec8cf4a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1998f05-a8ae-412b-9ac8-057f163b0a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbdc3bde-4018-4745-9c1c-83c3a34725c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb8c227-1127-448a-871e-92ea2f39c036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee27af7-3445-4f1c-8e0b-ee80ffea0850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49ea07e-8977-48bd-bfca-dc968615b86c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ef14cd-b990-4eae-83eb-affd653938da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd6cac2e-861f-411f-88e5-b9a7c9bdf22d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5970cc-ab50-4bce-86ef-3f96d28d1033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8138c3b4-c438-44d8-9843-9bb89ea10eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81dbb5e4-bc79-4bb1-94bb-28e58d6ed958",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47cc42c9-5690-4354-8c1d-8309366314ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "785c6307-8f93-491d-b082-e54c0e4da48c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33742ebe-1527-4785-b412-4d14da6004ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6de1b191-8929-464b-b08c-2bd878f53c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8088cd92-4ac9-410d-9f6c-30e09a59fdaa",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b16dd8e-c39b-4469-8c80-f961e066697c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d177bd51-1225-4395-9ebf-6666152b3fae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abca7f45-3a28-446e-941b-ec13affad934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93ce962e-0f31-4134-b1a5-4fe59e35db4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451cbbf9-d974-4c62-bf6d-5b62dfeb0e78",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdcd51d3-53d1-4b24-9afd-17df4d47a64d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d339e12-b164-4563-8d44-514e0f6837ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa502ed-f9df-444a-a71e-499a3dcf36a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7cf7e29-cf17-4e71-9f1c-47fc1352108c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e32dfb-25c5-40cc-a08d-cfe182fe94df",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c675a45d-ac9d-45ff-82ef-ef6e59b77e32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a10f18cb-d5bb-46ef-9eb0-a69764cf716b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "027e2518-cd2c-4447-b3b6-33e412bd0274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a996d86-17fa-4965-a15a-ff7fd8c1ad72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c329c2-7943-423a-8315-d788fbf7b9ce",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b523ab8-f8a4-4fbf-a791-b2b6a4681999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31e48da7-238f-4726-bd05-3a703c99910e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c5db18-2dc4-4773-90b9-4e3d37344258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f3a167-f3be-4974-9306-c55ddd0b81a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b8f338a-7f73-4e20-8799-425a5cfb8dd7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c045ed1-f87f-43a4-9a92-a0764c019a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a11f4b85-14f9-44ee-ae87-154b0026bd2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89961bd8-32f2-454e-a075-d43ddfcbd5a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd7e036-9283-41ea-a18d-729b66652654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e620c9-3697-4477-9557-89007e7e84e7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e093c624-24b3-40eb-a7b4-ceae52067844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7566b98d-0579-47b2-83c8-0597e205f704"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9c4691-c192-43a7-9f5c-6572c73eca3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb2f1abe-7405-4308-b3a0-a1740e62097e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8375e7-2450-4da0-a4ac-8c74ac00541a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9f1b92-92b8-4d1c-bd4f-3991f5f704cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ded70a-e9d2-406d-853a-b5ee6df2d3df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67bfc043-b589-40e4-b0bb-25700c073308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f7a02c-6dda-475b-bb52-6e2cbb1cb9d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efcd3bb7-0b9a-42b4-878d-19d8fde0c9b8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44cd5ff-851f-42ac-80d6-1edb3d4ae48c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a98b48b7-24c7-46d2-b5ca-5125ea61f2fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd2e3c1-e98d-4234-a626-b4840d796b84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56b6aa24-c8fa-4549-862b-ae3b1100c580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6239c865-5607-4978-b21f-ecc61276deb2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace71d6d-c486-4049-8f2a-a3d7998319c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7efb8c97-f8cb-48e7-806d-ce3244fe922b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de72d5e-c948-43df-89b7-4dbdd7489ef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20554f13-543e-4d74-9c91-ee2ed5509304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892ee10b-c84f-41d3-b701-5912f6dbf595",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e866552d-0da4-49fa-ae35-d4470c7e393c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81568058-8dff-4e63-a0ba-1d22b2065133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45afce46-9178-48c2-9ff4-36ab46b683f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0b4d7a-d1e0-4f52-b489-4951e425efce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e680ce94-5bb0-4994-b72b-f4b7af48593f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e34666-eb84-425b-abf9-c05c5f705794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "755e642a-8727-4620-8613-4f310af69f5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1afdac1-ec95-4efa-b820-e068281d085e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69788c36-7977-4311-baaa-ecf868a3574c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e333d490-f89b-4228-ba0f-4774ad738f95",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b5fd32-58ee-4839-8168-9a6594cef1b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b748ffc8-bffc-42da-9c86-c22135ae0467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea69574-2275-4971-837c-b38135d7d95d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27015495-ab77-42c5-b89f-e91aa7a6da0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17ecf3d-29bb-44e6-a720-02358367a4d7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c43e42-1737-4134-b31b-6bb40d9ebf57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb359c0-b89a-40f5-b81d-963a8de01dba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51bba06f-fe4d-41ea-9af1-9c6522ceed9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7396a1b1-0995-4aa5-8219-5ac03300e344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5dd65d-2d27-4b87-8e39-232022e6ac0c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44eb4084-cce6-4475-a26b-0af7e4b737da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "986144a9-8afa-4472-a7cb-8e507693ed4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c48018-fb40-4d88-9fbc-9344714344c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7daae59-2532-42db-8fcb-73e04e25de13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c20cf64-9da4-4abe-b09a-74c7f485f61c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c75ad7-d5e0-45a1-a259-8628d845e16b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "336ecb51-a3d1-4313-878f-0a89d1ce7c2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95cdb6a2-b9e2-46d3-b8a9-9999513027bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "079404f1-b237-487e-b6be-cc46004f9ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8089a6c-db61-4ee5-8ba9-e504e2ff721a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8296de0-3ad8-4a26-83e5-f7f87ea8537d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a27e1241-65e8-456f-968e-330bee694b89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad271232-ad20-49c6-b38f-131954d6257a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e4dc171-2dad-47dc-a82d-f7d2937aef16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb23bffe-49f7-4634-b28b-1e0036985e6b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d6f943-13b2-42c3-97c2-18af96710670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee565ce3-83c6-43ad-9d6b-b549481d8c89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfbeb7c-1e5a-4ddf-8419-e098c2e19f74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "889cee92-c6c7-4382-a8c1-478acf82165a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505c5053-2c4b-43c9-bc3b-eafc96ec523f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7249714-9179-493d-b4ed-bae1d3df0293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "713a35e9-8ccb-4bd8-8ca6-1d400d6a1c00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea9cf21-0e4b-4924-b2af-c63e665de482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc7a9e79-e132-4091-a8f6-c4f57773800f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85521e44-0fdf-4f30-8c33-68acc9f54480",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3bf793-082b-45d4-8ef0-e5af01ebc59e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f06e670-2f3f-4104-83d6-e6569012e125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69636ae4-e1ad-4b8f-81fc-c87f99c6372d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bfff477-c5cd-49be-9334-fa3bb260b900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e011218d-0c21-4d5f-963c-dcb66c034f42",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a344f5b-e7e2-4b42-b916-976987bb6b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfad3ad0-2416-4068-9e1e-96206ee4b296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c0735a-21b7-4653-8613-a74557de4466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e85a8387-ff07-4ca8-9593-17bbd6da7545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b846fac-54c0-48fd-8ff3-4da9c142be0c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f0541a-748a-492e-94c5-437ac3af1529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fac45853-246c-4334-ba7a-d31e6e29bed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87cebff6-4f09-4a3e-bee0-c9a22b4d9467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f41598-d517-4f6b-bde1-a43a09070501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2b3f99-dd5c-49ef-a2d7-b2b351df361f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c944a016-d28c-4084-9a50-a826fbc51fa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c9d8f1-5f3b-444b-aae2-7bfb6307e92e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb062bd-bd82-4087-907d-e4b4679a7204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206f5155-332d-4d00-a6b2-0e17fd185574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711fb3da-8011-4ecf-b8ff-6545fdcf5872",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254d8661-b10d-4f5d-aeb8-f950b9a8a18e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e865b952-64d6-4c57-9cf3-ae9892947b9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab65b5e-b5ae-4943-b25c-432312c8939a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b5af9d2-c138-4a6c-a5bb-8d9a6ccb1f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c973a9-cc1a-48fc-a876-f38d69bd05a5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82bee784-002a-435f-ae6d-22927c26ad00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "847c3492-049c-4f88-a717-9292ba412817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c68962-b3d7-443c-b4b7-8766925b0b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17cb4773-1f56-4783-bbcf-45452391685d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39f32b9-bd52-4dba-b00c-92ebe9bb20aa",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce78d2e4-7240-49ae-9c38-f557e3cd8c8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4057a6bb-b405-4fa5-ac34-9ae51a91af8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3e3b2f-6211-498c-bf50-10d3f4dbca8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75a4db43-70f0-42d8-a2be-437824910824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229af435-6268-425a-9383-d5c50449ac1e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7237c677-c5ec-452e-bb90-6eb579236bf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acc95c4a-03ef-40ad-8bcc-70bea40ab642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2db59a-74df-407d-9304-0f6fe550f0eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbbe4123-6307-41c7-b9b4-e05aeecb7a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9ddbaf-103e-477b-abaf-917fc11885dd",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb00c43-8976-49c7-b94c-68aabe67a7ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "273a16b9-0165-4a81-9f11-5e8696e5da75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "296627bd-1011-4ea4-8ab7-14b57ed5d305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c8d683c-fa70-4030-b288-3f72663173ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b077d80c-d2fd-4e1e-b2cd-6f60525a4067",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90ec16c-d8db-4e3a-a172-3b57d0306eac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d472962-ccf7-4629-8e80-0401f763effd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d2a481-e2f2-44d2-8027-c6c873375e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36cf314c-e2e8-4e0d-a6e8-796b5483947b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10dcde0-01d8-43e5-b2ed-1917553f5c40",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500adb0f-d80c-48b6-bc3d-35e8dcc204a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bab0793-7df8-4f25-8257-8522fbff97ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d1a588-66f2-43ff-9e15-a07b21e3a8b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5559f515-232d-4e79-81d7-bba9614c7690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b1f2dc-777c-4825-bde0-0feda6b9fb54",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a3e9c0-b38a-4c78-be3b-1d1180781f4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ab240d3-ca8e-4af5-992c-5390c38e0c1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19899b51-a384-4498-9689-15bea2f8a396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae5df97-d44c-4f67-a7d7-51f93458207b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93896119-e75b-4413-8078-ec84701dcc35",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773d7f35-7066-4fc4-a599-b60f611f4809",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e902383-cf8f-454b-91e7-b1ef1aee81c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8578e5a-226a-4159-ac86-c391086e57b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a05c940d-c365-4cb2-a90a-047233e44e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293a6098-3c69-4eb8-aac2-5ea7a941c0ba",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddf6437-7dc2-4cf1-a36d-1dd42a8711a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a48286f-b3a4-4186-ad5e-33a5bfda590d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce96c63-c544-47f2-8ec6-5133f35426b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f62d90a-370b-4884-a8ea-eb879037ba32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2996dcdc-68f2-485f-bc67-07da7c9e8236",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885df250-a54b-4aa1-bf10-37f002f6f088",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1ff9ff8-73f7-4c1b-946f-91d44ebf3d68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05197a4a-9548-4f77-b0cd-0a027d4d8636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a45fe95c-03bd-474c-8ced-61eb863a4473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49783fac-ef28-4530-9a94-8856b55f2676",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb9bf55-0ddb-4ed4-9662-ade544782f88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82eb046c-7a4b-4eba-817a-ebfbd977b92b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed21494-c970-4a51-afeb-2b09987028c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e46c0b38-632f-44cc-b5f7-36c60db08555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b223210-ef88-4792-9906-cabf2cc83eb6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ff4c2f-3c9e-4afd-9ab8-0f29ee24534c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8aa3a08-7d2e-43bb-8f4b-64ebf1c3f3b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4db19bf-498a-48de-ab9e-8ef71acd1a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c411404-89ea-4c95-9928-d9051f02ce81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31bfeced-a01f-4203-8565-ac2491b7aafc",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7333046d-1104-4856-ae27-39a9c248ea65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60456fad-ab58-4a68-ab11-040a971abc56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "817e7cc8-3168-4fc6-97a3-dfd3554390bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c8a081-7ad7-4b7c-b509-e39732019ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e42584a-52e4-4ce7-8d3b-0fef13beb6b0",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd776edc-6ff3-4953-a139-613f35e98381",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebb7045d-19d9-4923-b8cb-1e9d9a5e5971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f772dd8a-4465-4b1b-8202-bc8380a30024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c1ae85-7d9c-4ca7-be92-0f4cd2972ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7f318d-bf94-40b1-b952-849280a18bb0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d193f566-66b7-413e-9a4d-35965ef45257",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31f430b0-2b7d-48d1-a785-2b18e0227155"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e148af-2825-4f8d-b037-a4f4d8d96b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c2767f8-c7d2-4b6c-9362-e63b46c66629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ef507b-7b81-414a-b47f-1fd691b7173d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0caf68f-c077-49a7-a47b-b1896c2da868",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bab7fd1c-6754-453b-b72f-7ae503c46462"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2ceb74-4f75-4ff4-a999-556cb7e756b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29b61130-265e-4ee6-bba2-a423096abdd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c839f57-f0b8-4c02-a416-b68c08610f55",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf2491f-bb3d-48e7-b483-e53d4e6b77e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95764bc6-82f4-42ea-8d16-6a2b45542c76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1839f61-6cd3-4cbc-87eb-2a1f81d607b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f2dd42e-e24b-4866-bfa7-6ac6ed3c748c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f1657f-b61e-4255-bf54-9718aa8f8605",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9918e72d-e7f4-4d73-ad3b-61635c2f5e3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "224b70a3-1fc7-4494-8043-117c1dd8e334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94cde9b-bf1a-45b0-b2cd-e7802f24933d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca1abfc4-e55d-4c6e-b4ba-9f34d9a8ef0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5148488a-bb9a-4531-905b-fe800b853de1",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8f10d5-0051-406d-8400-bacadb1818de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd489079-a3be-4d6e-a8c4-5a1540217f89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5874d008-5bf4-4cd1-9e6a-4b80074149ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba24c29d-0c9e-429d-9936-2dd59ab1fcba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a851b48-1616-4f0a-9155-4be35ebc773c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff16887-a026-4598-9e61-2392b0232081",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78f3873a-3f84-4fbc-be73-2ea2ddf3cc29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a5ed8b-1629-4ffc-a33f-e92f078fdcbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2b2fb54-add9-4038-ba95-60e0c045af18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee482fd-bd95-4cdb-80c4-afddc0e125e6",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04bd9e6a-02fa-41bc-abf4-bd35b60c77a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58a79b8c-676e-456c-9d49-ba479b8f367f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc4658e-de50-4a24-9d60-3c86340b4bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ec4a108-0a2c-4299-9d0e-f0bd568b67a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175f8ad7-20a8-47ff-a22f-468c92adf10a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f422c25a-0a8b-4e40-bdf4-2fa1678cc797",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "873c3614-7bed-4ce5-9781-9a4ad6c2835f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60764a35-d1c0-4206-83a0-4be308dab0cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ad6a336-5e70-45a7-ba83-824c8cf525de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf23ca2-781d-42af-83c1-fd0c666f4a86",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d7af64-5975-483f-a6b4-5bd16a4bdc18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c162984e-96f3-430b-a51d-18834e814d39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6b4f7d-69e2-4a39-9e73-c13cb52b609c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df803896-5ad2-4ba7-b53f-c2c81689a2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fea5fe2-3aaf-42ee-aff5-9a0dc3c2b53f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1afe9e7-9d5d-45b0-977d-e1ec48ccd66c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "540ac9ba-ea04-41ea-8c8d-3f8c2930526c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f439cce-831e-462f-8813-daa873050c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71046e14-71b6-4e21-8670-5e256b450907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d57bff-39c6-4a6e-b4f3-7e3b986a9018",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a646e3d0-fa80-47d7-ae73-933563adf1e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b3f111d-1746-4ebd-8e60-1d9e1720929b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0389d55-7564-4e1e-b07c-0d5a39668449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ece2ae-92c5-4943-b5c9-e3fab28d3757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965248e9-611b-4081-b1ce-30fb23c86c22",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e277af0-7cbc-43ed-aac1-486f4ea76ea1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a16bd9b1-c4e7-46ff-8265-ac9ae5a671e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e310d536-1ded-434b-9d46-24c003c13a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f56b4345-5d40-43af-bf4f-47a1c078afdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f2a3e3-4c6a-4802-be12-068596a1ea9e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2accf8b2-1271-439e-ad63-f84fe069149e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d8d12cf-c8f8-4f95-b8e4-0584020fd101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03734b3b-1901-48b9-b766-7fabb52c8a9b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aed55ee-4900-486d-901d-766227e5ba04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5accd2b8-b45a-42cb-ad9f-28be3b5d4dd5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4baaf316-ad39-457b-ac38-8e00f5706bb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb1ac6eb-dbae-406f-a5e0-e75c97a80cf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5e2fa0-077a-411d-b867-1a1dd69e9535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b090a555-4da2-4362-a995-811772e53e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea51e134-963a-4f32-ad54-48b5823b3f13",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fd2f4d-492c-46bd-a901-d52531070195",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e226111c-43a4-4450-bf82-4b80611ba5bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ec13e4-41bb-4323-bec8-a1d213c57c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86bddf76-f4a6-416f-b505-56ddaf10e2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b43084-0556-4a68-9cd8-86f890f0bcba",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4421309-c808-4c9a-b872-18038fafac3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53e354b3-bb3e-4b0f-ac1c-fb628fb29a20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51428c8a-8fb9-40aa-93d8-de63a9149657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e53045b7-a10f-40a9-825d-87de6dfbf76b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0be036-4fc0-476b-9f55-0ccb7dd5b45e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07208433-3dd6-45a2-9205-1867d698417a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "178d4209-b24a-42c8-ba42-f3f353737bd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c77a1eb-d1d7-42dc-b823-e277b4af1f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2c0038f-f36b-41ef-8825-dd2aea0ec7b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea805720-e1c5-4f41-9cba-38a7a3f2a7ca",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806bb0d9-c3da-4e9b-9cc2-ea7ffeb9b3dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba090bf6-592a-4d59-b7ee-35f5d0aabf1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9653c0-baaf-4369-b77d-4cbdbd8841ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79e093c-c726-41d4-a2a6-daa4cffa997b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff98938-7fe6-4b27-8cd8-f6171dfa9f1c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22377258-4033-4ca8-80f8-18d432c24261",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d026d9c-ef27-4046-8732-44466b9aac9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e475330f-2054-4a38-b052-5ade87cb4b85",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ebbfbeb-b526-46ac-b449-ad51436e7cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6498e3-c67a-444f-a7cd-599fc19d340f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b129db-351c-4f72-a614-94a0089641fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3f044c6-5da5-4445-8b4a-20fec6ddf076"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "498b5d52-5389-4994-8cbc-234bc13bdfa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28060944-f8da-40b2-b0b5-f26d7508dd4a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f61e8404-9c7a-46fe-96f2-eda42e1ef57e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17cc9d9b-c931-4aad-b7b5-cbe7db929310"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0891894e-1296-40e8-ba2e-a6c7c948a244",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4bb29837-1c08-443b-a629-fe0f2209597d"
                    }
                  }
                ]
              },
              {
                "id": "2889323e-2c54-43b1-b0d2-0440b7ea8c7c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9dd4bc77-ff5f-406e-8771-e37e95947a8f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46bfd4ea-73c3-4cd2-90ca-67273c56b71a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1e2abac7-42c3-47fb-a74f-e9290cc7f7d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6df684d-4c74-4954-ada0-3dad8e453032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f507bd39-c62b-4359-add5-1ac6b619dd52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab4c6ad-f749-4b35-b526-ebe0e83ebf06",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8141b1-5a2b-4eb0-84db-473e0200f8ae",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "97126fb7-945d-4768-b8e2-6c767e935ce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a85de28-feb6-4e60-8848-d24f4086c4aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5fb2cad-ded3-43f7-9692-982f9f53d860"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29cad102-8de0-48e7-99c2-b87c9222a9a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df2a082e-81b4-4cae-a359-6c58c68c4d24"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7de3b8fa-87d6-4634-89af-873044f42aa0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1147bfb4-7dd8-415b-b95c-55db6fa40389"
                    }
                  }
                ]
              },
              {
                "id": "223b1c30-bf1f-4da1-8b26-b35bf3ab967a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f06fdd8c-afaa-4a01-93ed-5fa30577787a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62df709d-a0c5-4228-9847-881b1e19a82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6a16a881-a595-476d-ac73-9dd49cd51115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556b9af5-3b4a-492a-9958-9b696a426592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "917f666f-82c1-416f-a531-dab879411294"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ae47a768-e2c1-440b-9973-167f5f9058cc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ceb20c1b-6a7b-483d-aaa1-05e3ad27867c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4378c1c8-dd63-458b-8c4c-472ad20ca69e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6ccebaf5-36a6-4e4a-ad30-9a797f55ce5a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9727642-6c5a-4cf8-82d0-d24d5a27a095",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee734843-ecd3-4843-a01e-be260f2b2607"
                    }
                  }
                ]
              },
              {
                "id": "103d6fc7-7020-4e37-a5f8-d61bb6318f91",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e241a7f3-578b-41f4-a9b8-825b0e65e540",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d4697595-d127-491b-8af3-ddb157b96a01"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c34d86d-9604-4f4e-9078-5dce1de60323",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "688b8149-674c-4fa6-90c0-f9c0a9adbcb8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7e6e96c-0e25-4f84-94f2-8fca391aa07d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5980d192-deb1-4d03-8de7-998f0d604bb3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c67acdf5-e1e1-4a40-a79d-e18993337656",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "93b2e8a9-6ccc-4a68-897e-947e64dd0901"
            }
          }
        ]
      },
      {
        "id": "4f54f7f6-2f9a-4986-b402-37543807a8e6",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "555db18f-e38d-4ab7-ac8a-0a1925573121",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db9069c6-721f-4f05-8452-1120882f8f26",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "023ccee5-4f9e-44d3-a8ab-01dfc29edd46",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8197ae-4c74-454c-83bb-c7bda2abef0c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cb6c60de-3f27-4f09-ada6-6243686ff2ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1694fd35-72d7-4c28-8e85-c66f52e26d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4995dab2-0d27-4990-9544-dd012228307c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c9cf48-fed2-4b5a-ab94-f2dce396c893",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41486e83-c678-4647-b435-136eab72807b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "aa27f50e-7964-4063-9c31-9462d3c3b076"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "536af3a6-4a06-4307-8804-0eb86fad77ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d3e3cf6-81a1-4ab3-b18d-d797538da5dc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4f53d66-d3af-4a31-97df-9413ce02ba05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "896729bc-8ec4-40c1-a6a8-b7fdbb145e10"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c87de82c-8e49-4e9b-b6a3-8c82c44bf6ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffb75703-69d5-401c-ac30-d2d16d7c3c42"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fbc90555-82ff-4011-8eb3-d51b41a2d70c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f79f14de-c8dd-49c3-860a-f9f21ee60fe7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "865202ac-4485-4acf-a999-2d5a15450422",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed02067e-adc8-4841-a4f6-c181248c99cb"
            }
          }
        ]
      },
      {
        "id": "cfd2d6e9-2cc9-4b4e-b0fd-3d0ae91e6c7d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "cecc2ca3-6edf-4032-b6f7-0134ccb91691",
            "name": "Negative Testing",
            "item": [
              {
                "id": "10c99236-d49b-4282-9b2b-5154b8135935",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d31bfd96-dd3e-4eb1-9fcd-f11a7e7611d9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38268b3-861a-4787-a08d-9dae653798db",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7aa71c79-e7b9-46d6-952f-d2201f964b57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6998fca-d27a-433d-bdcf-6f37130e2e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1fe8efdd-5ea4-49df-a463-bc515a34a1c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f34606c-c187-4b45-ba68-bc2dcc0c3ca6",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761e8028-fb67-4248-9ee4-332878d7b78f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "764c7961-96a8-4bb1-8dfd-d2bade000381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f577c0c4-4683-4df0-8b4f-64c983d41a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb8f7410-d749-4fde-a0e4-84dc85d1f069"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6e7a414-1b24-4b82-95cb-aa6b8e7e74be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae418b18-1d0f-4586-8f39-a1f250b33094"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "625e57b4-c4b5-4513-b360-ae65349fe35a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60b2d8b3-5af4-403b-b939-54f5abcb1ab7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1d8e343-cf18-428d-bfa8-acfbfbbef3b6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b5d11a58-b0e0-490f-99bb-f8714011d678"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b54743d-0b4c-45b8-9751-843b7bcacacd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "689178c3-0a8b-4101-a8ad-91a3c872d254"
            }
          }
        ]
      },
      {
        "id": "6ca9f1dc-d961-4760-9e50-ea94304cd59b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "967aa5d1-1a84-4ea8-99ec-b8dcd99ff524",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c768db89-33e1-47ae-8c8c-0ff80c878ccc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "388dcda6-dc9d-41b5-abe5-ae7b08f365c5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92091f9b-5178-45cd-a710-630d728a82fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "030e34f5-80f8-4018-8898-f190c18ddf0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb9b8fc-cd8b-40a1-98ee-a8f1fce5713f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b1a8392-39ff-4452-8d33-4695ae0521ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f481cf-7838-4ec5-a790-9d5b7fc4405b",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27751d1-4ecd-4f0c-814b-e44c04947333",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ee584a46-e866-46b0-80f8-1b195de76c97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2af5f8-6b94-43b0-bdfe-4eb38a793a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "132e6131-d2e2-40ec-92f1-c2049b9699b7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18401618-c319-47fd-a50d-b419f6a8bce3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6d6ed31-93b5-4ea3-86d8-e41d3db2c1a9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1add8aeb-95f9-465f-a9b9-70d97a018e2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62e0a4ed-0771-4a83-b30c-7bc38a183b43"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e61036c5-fd85-455a-b3ea-eaff4c06d497",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a280ec06-a639-4391-988d-347e2de3e26c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bdd84c09-7203-4367-8be2-3671e9de4935",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1cd43263-72f2-45b3-a8bf-9721fcaac9c3"
            }
          }
        ]
      },
      {
        "id": "a65fe68a-eb7b-405e-b57f-077771caaf49",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2da0830e-8b1e-41fe-98e3-26b7229dacec",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2727b436-3bf9-469e-a052-4182c7ab84ca",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "0e9cb435-919e-4e2c-9261-b0f0da7bc4cf",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "080a2c19-060d-486a-ad42-dbff90cc1c08",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2de25c66-2017-42a1-ac60-abc95fe1e1b9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 46.625482625482626,
      "responseMin": 20,
      "responseMax": 907,
      "responseSd": 63.75576805806995,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1677890383817,
      "completed": 1677890407061
    },
    "executions": [
      {
        "id": "35f70a36-165e-409a-a9b1-575415e2c458",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4053c36b-2efd-4022-b4a8-6139affe7e57",
          "httpRequestId": "687d87fd-cff0-4e61-bf9b-8356fd04927b"
        },
        "item": {
          "id": "35f70a36-165e-409a-a9b1-575415e2c458",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "99689d88-9f8a-40b1-b234-d2471adaa0d7",
          "status": "OK",
          "code": 200,
          "responseTime": 107,
          "responseSize": 0
        }
      },
      {
        "id": "039ebb80-f645-4864-8b14-123dc7b80d88",
        "cursor": {
          "ref": "98a38813-4fe1-4493-9205-bfa8ccb2816b",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "bf7e9581-074c-4e8c-8009-151b331f1f99"
        },
        "item": {
          "id": "039ebb80-f645-4864-8b14-123dc7b80d88",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "930d7d8e-043f-4a1d-8283-c396d8439afc",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "01480523-b65e-473c-acad-0b1784194e25",
        "cursor": {
          "ref": "2ec8d6c0-4655-42f9-a90d-836f847c7926",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8035a9ac-286b-478c-b6cb-78e7b742a928"
        },
        "item": {
          "id": "01480523-b65e-473c-acad-0b1784194e25",
          "name": "did_json"
        },
        "response": {
          "id": "61fd64c7-ac36-4a99-9e5d-5a42b19c0c64",
          "status": "OK",
          "code": 200,
          "responseTime": 171,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a33cbd-2964-4741-9322-788003530ec6",
        "cursor": {
          "ref": "dc86304d-de0d-4f34-a862-4e76c03ecc10",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "780a2797-f2cb-41ed-9a7f-dc3ef416a5e6"
        },
        "item": {
          "id": "e6a33cbd-2964-4741-9322-788003530ec6",
          "name": "did:invalid"
        },
        "response": {
          "id": "3ac8f2ce-7b6d-4221-90e2-974fc4865442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a33cbd-2964-4741-9322-788003530ec6",
        "cursor": {
          "ref": "dc86304d-de0d-4f34-a862-4e76c03ecc10",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "780a2797-f2cb-41ed-9a7f-dc3ef416a5e6"
        },
        "item": {
          "id": "e6a33cbd-2964-4741-9322-788003530ec6",
          "name": "did:invalid"
        },
        "response": {
          "id": "3ac8f2ce-7b6d-4221-90e2-974fc4865442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c166ae1-93d5-46b6-be3d-cc68c5fa118c",
        "cursor": {
          "ref": "a1467f3a-681e-4c8d-a4ef-40e0e4e6b87c",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4218d5ec-7c37-4437-afcb-db4615ebf683"
        },
        "item": {
          "id": "9c166ae1-93d5-46b6-be3d-cc68c5fa118c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "19e90170-456b-4393-99b1-03645b664545",
          "status": "Not Found",
          "code": 404,
          "responseTime": 82,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb13146a-c6d1-4b77-8c62-ed1d181ff0ce",
        "cursor": {
          "ref": "3766de8d-2418-4962-8768-49691cab0b0f",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "aa259e23-1dd1-4ffb-a678-d718a28a9084"
        },
        "item": {
          "id": "eb13146a-c6d1-4b77-8c62-ed1d181ff0ce",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8372c4c5-3e3b-454f-88b7-d56bd802ab67",
          "status": "Not Found",
          "code": 404,
          "responseTime": 35,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f59a6c-9c89-4bae-92d0-6dcb661faad9",
        "cursor": {
          "ref": "7b200286-ced2-4148-a3af-221021c994a7",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "12ec6a8b-3e64-4d05-b7c7-ef2be928ba92"
        },
        "item": {
          "id": "f4f59a6c-9c89-4bae-92d0-6dcb661faad9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3871afd5-7827-475b-b39b-89cdfb2f854e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d97052-2f77-492b-ac87-dcbda23a9ef6",
        "cursor": {
          "ref": "e426d58c-fc9f-473a-9d3f-6c8062daadd3",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bb76a571-3cc7-48ec-98f9-27154a41742e"
        },
        "item": {
          "id": "94d97052-2f77-492b-ac87-dcbda23a9ef6",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "c266348d-7202-44ba-a33c-035418a88a19",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 36,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d97052-2f77-492b-ac87-dcbda23a9ef6",
        "cursor": {
          "ref": "e426d58c-fc9f-473a-9d3f-6c8062daadd3",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bb76a571-3cc7-48ec-98f9-27154a41742e"
        },
        "item": {
          "id": "94d97052-2f77-492b-ac87-dcbda23a9ef6",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "c266348d-7202-44ba-a33c-035418a88a19",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 36,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe05063-05c7-40f4-853e-7ce7f4689bc0",
        "cursor": {
          "ref": "7b5b8cfd-c55e-4723-924d-29a88e9fc090",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "13e1a7ec-869d-4500-b627-3b4872163961"
        },
        "item": {
          "id": "3fe05063-05c7-40f4-853e-7ce7f4689bc0",
          "name": "identifiers"
        },
        "response": {
          "id": "00c436dc-54cb-4756-9a07-347da72f56fe",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65cc6c8a-3fe3-4fb8-bdcc-3ff49351f72c",
        "cursor": {
          "ref": "59aa05de-ef47-4a79-8a08-a82bc3209e92",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "efabf2ee-ea00-4906-8d6d-93a0cc008d9d"
        },
        "item": {
          "id": "65cc6c8a-3fe3-4fb8-bdcc-3ff49351f72c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "30b0f31d-ba49-48f6-b509-9db893bec594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65cc6c8a-3fe3-4fb8-bdcc-3ff49351f72c",
        "cursor": {
          "ref": "59aa05de-ef47-4a79-8a08-a82bc3209e92",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "efabf2ee-ea00-4906-8d6d-93a0cc008d9d"
        },
        "item": {
          "id": "65cc6c8a-3fe3-4fb8-bdcc-3ff49351f72c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "30b0f31d-ba49-48f6-b509-9db893bec594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf47fc2-64e6-4ad8-9361-3eec6fab9999",
        "cursor": {
          "ref": "e9230221-2a0e-4b3b-a490-60c365c1279f",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e0866bcf-5057-4d83-92d9-b5ef3486b2cc"
        },
        "item": {
          "id": "adf47fc2-64e6-4ad8-9361-3eec6fab9999",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "611b8f21-9626-4d2d-b225-d0ce36a4c7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48271b95-1d74-49eb-b441-a69020e25556",
        "cursor": {
          "ref": "e90549d4-5bc1-4dd1-96f2-08e17f5cee8e",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1b4f2646-2735-46d4-8865-b729a712ec2a"
        },
        "item": {
          "id": "48271b95-1d74-49eb-b441-a69020e25556",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f8ba6b89-e8f0-40dc-89fe-210bcac837c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5394f20-df6d-4b78-b608-1032e9febd58",
        "cursor": {
          "ref": "0d65358d-1991-45c5-a180-e820dbe8bc7e",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b4ef11ae-7d93-486d-a2ec-a6884d549d4e"
        },
        "item": {
          "id": "a5394f20-df6d-4b78-b608-1032e9febd58",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2bae2cb2-7923-462b-9dde-071c820aa7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf232b08-00d0-42e4-a9b7-e8734bb938f4",
        "cursor": {
          "ref": "60629c72-4376-4def-91ce-be00a6bc212e",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b6937947-b39d-46d9-a0f0-cd43d68b9b2f"
        },
        "item": {
          "id": "bf232b08-00d0-42e4-a9b7-e8734bb938f4",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7eb9ce32-ba61-433a-987d-48581b4ff7a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff74748f-b72e-4ada-b949-55413f84834d",
        "cursor": {
          "ref": "a03fc5c8-a9d3-43f4-b856-d0db07caab01",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "14411f3b-1766-4018-8213-5e4582ffb35f"
        },
        "item": {
          "id": "ff74748f-b72e-4ada-b949-55413f84834d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "54ef9b4a-67b9-4515-b570-7554cb64a9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e65fb2-adf4-49e1-a091-ef92a07d6c30",
        "cursor": {
          "ref": "b1fdafb6-330a-4543-aa0e-24ad0675f137",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "46c4d997-f190-4050-87cd-1e97089e55c9"
        },
        "item": {
          "id": "a4e65fb2-adf4-49e1-a091-ef92a07d6c30",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3ab51b5b-9050-4e96-b85e-d1bd02ac1081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ee337c-2645-49e7-a2eb-f057409cc86d",
        "cursor": {
          "ref": "ca5fcc0a-b9ec-449e-b478-825c3a3fe156",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3c99f1ba-2647-48ef-8f0e-d55bf5934847"
        },
        "item": {
          "id": "01ee337c-2645-49e7-a2eb-f057409cc86d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c6708b9b-70a6-4fbf-b5e9-ae945a0b157f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac77df49-e5cf-471d-83df-2188f437bbf0",
        "cursor": {
          "ref": "bc01a5c0-4e8f-4305-9d30-8d5115a0f94c",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c4ac5d17-70db-403a-97a6-f19d1f64213d"
        },
        "item": {
          "id": "ac77df49-e5cf-471d-83df-2188f437bbf0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2b0512c0-bbe4-4d67-a054-ab229cf99d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8d2016-f969-40ae-9bef-8d775b979fcb",
        "cursor": {
          "ref": "bfd59329-c7e3-425a-92ec-fdee2d8a81d1",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "69715ef7-6d7f-4b6d-85c6-3668a75cfa4d"
        },
        "item": {
          "id": "9e8d2016-f969-40ae-9bef-8d775b979fcb",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "056f1bb8-bab7-492f-b0ca-f4cb1bceb598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98354ec-c450-4ea2-b61b-21bbd8a9d2e7",
        "cursor": {
          "ref": "5b575a16-43df-4643-beca-bfbc7bce5286",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "840d5ed5-048b-45d6-846a-e25e3f8d4977"
        },
        "item": {
          "id": "b98354ec-c450-4ea2-b61b-21bbd8a9d2e7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a955c4b6-f234-4a70-8f95-aebe0347367c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac649a48-68ef-4480-a867-5ee60df0c7ad",
        "cursor": {
          "ref": "6799f704-8542-45f7-9c0c-6049234fdce7",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1086fa12-b234-4ad8-8442-1ebfb4d5096f"
        },
        "item": {
          "id": "ac649a48-68ef-4480-a867-5ee60df0c7ad",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e3b2ae28-ccb5-45fc-a339-23815be4776a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92bb2ea-dae6-4916-aa79-c0965a8aa255",
        "cursor": {
          "ref": "9f220fb1-0072-4e25-86a4-107770c90984",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b8aa728b-5f2a-41f5-aa71-8af5bac01c4e"
        },
        "item": {
          "id": "b92bb2ea-dae6-4916-aa79-c0965a8aa255",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0a72d2b4-20da-4deb-9b67-62d093e7c425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e93d15-4582-41e7-b4f6-aacf2e22510f",
        "cursor": {
          "ref": "3857d183-0bd9-47c7-98c6-5478bf101470",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "83771b6c-e284-4eed-930d-d4eab692c308"
        },
        "item": {
          "id": "61e93d15-4582-41e7-b4f6-aacf2e22510f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "28a7ff86-dd0d-48ce-92c9-8a8db22f9345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571e383e-909c-4532-9511-98fef57063db",
        "cursor": {
          "ref": "c6fff823-c3b3-4083-9939-fc8c70f62dfd",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d6ff00eb-bf79-479c-9023-a00ec298ab14"
        },
        "item": {
          "id": "571e383e-909c-4532-9511-98fef57063db",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3d40b2ac-fc5b-4812-b47a-e75a7314b3cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b537a8b-c94e-41de-9b38-6a4d483af03b",
        "cursor": {
          "ref": "538252ca-34d2-4dc7-83fd-7e03cb112132",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "06f47ea5-bb8d-45b0-a6c5-4cf4ee1b1234"
        },
        "item": {
          "id": "6b537a8b-c94e-41de-9b38-6a4d483af03b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6d22bd96-2994-4e8d-a573-731b3ac32ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e375d15-c6e4-4b03-8c33-153d0550cb8d",
        "cursor": {
          "ref": "a5326f93-937f-402d-ac93-469f0c9e2c3b",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6aa9176b-d9d9-457e-a392-15eb696c4e0f"
        },
        "item": {
          "id": "6e375d15-c6e4-4b03-8c33-153d0550cb8d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c891eb67-9970-4e20-a098-2bf05d96bb3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44cb1492-8973-439f-9951-aebc724eb07a",
        "cursor": {
          "ref": "6b54e668-fb4f-4ef2-b7e1-c10cadb60985",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f7bbfa2d-bc02-44d8-9c3c-1022543d59b6"
        },
        "item": {
          "id": "44cb1492-8973-439f-9951-aebc724eb07a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ac905d5f-8218-4664-853c-bd6a87ece24a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fee4ba7-7adc-4621-9860-17cd2c3bc498",
        "cursor": {
          "ref": "828423ce-69c3-4d1d-bbcd-f2421073aaba",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2b486b18-ac85-4542-8d68-9428b4bac061"
        },
        "item": {
          "id": "5fee4ba7-7adc-4621-9860-17cd2c3bc498",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a5d5f6cc-ab25-441a-93ba-46d14dfdb6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462cded1-9cae-4fb3-89d1-0832a7e929ad",
        "cursor": {
          "ref": "22060711-b83f-4000-b466-9bd86d17ebd5",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0e5db930-5955-4e80-aec5-11fe935d57ce"
        },
        "item": {
          "id": "462cded1-9cae-4fb3-89d1-0832a7e929ad",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "608bfe43-a904-4c4d-a15d-f95cea0c6d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf62d89f-5a94-46cd-9ea8-985037291db9",
        "cursor": {
          "ref": "bbaa89b0-a92d-4457-b3db-124a0b07ff22",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9db82d6a-ba79-4975-a797-72341c192908"
        },
        "item": {
          "id": "bf62d89f-5a94-46cd-9ea8-985037291db9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f9738bdf-ded7-4ed0-b0bb-857e9fcd4f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a287f073-7796-4b22-9067-ecd643f5f8a6",
        "cursor": {
          "ref": "ea7fdc16-cd53-4219-bb5f-83910cbb98cd",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "33713b74-fc5d-4890-abe3-c06f87e10c69"
        },
        "item": {
          "id": "a287f073-7796-4b22-9067-ecd643f5f8a6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0cdd1d65-0713-462a-a318-a632fce60fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2496046-ee53-40f3-a270-1c42f4259b82",
        "cursor": {
          "ref": "4e71fa8c-7b95-45db-b5c6-80d62c8391ae",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "adc54df1-9f00-41a3-837c-90808f9e1a37"
        },
        "item": {
          "id": "f2496046-ee53-40f3-a270-1c42f4259b82",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1de9eab1-98c9-4c09-a629-6c61f715d54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a10bf8-5f36-42af-9a18-aa8ed3c8be8d",
        "cursor": {
          "ref": "0954b908-b05c-4793-ba32-f4e738b4a088",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "54e75a45-2f49-4aff-8b44-4f5a2a6fc7c5"
        },
        "item": {
          "id": "95a10bf8-5f36-42af-9a18-aa8ed3c8be8d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e7e1e3b4-ac5d-4372-b8fb-0d4bfefbfcca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883df26a-f374-41ff-ad98-85a2673b700f",
        "cursor": {
          "ref": "2570e0d5-35c3-4748-9d0b-58dd100a88ca",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "95f53460-18b2-4678-bda5-a9ffad640416"
        },
        "item": {
          "id": "883df26a-f374-41ff-ad98-85a2673b700f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "abb980ed-27cf-4d85-96ce-61891986f4fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cd88bc-8ec1-4c9f-b020-f960cbb038de",
        "cursor": {
          "ref": "fa9208f9-2dd9-4b2c-988a-f79c8411d4d9",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4c643af1-4bed-4094-8943-44aecc0a0d04"
        },
        "item": {
          "id": "a2cd88bc-8ec1-4c9f-b020-f960cbb038de",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9004378a-a9c7-4ccf-97ff-d908b7297aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56defa37-8351-481d-bc28-1545cbf4f372",
        "cursor": {
          "ref": "11c0e847-908d-4cc0-9edb-7d57a0e7bbf7",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "bd50dd19-67f9-4acc-ae5e-f592eb3d3b5e"
        },
        "item": {
          "id": "56defa37-8351-481d-bc28-1545cbf4f372",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e18b7aa2-21c7-4676-98ed-772eaee21b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce73bf1-b72c-4f6b-b9d6-af32921f76fd",
        "cursor": {
          "ref": "dc46eb32-c683-4254-b695-d69a177efd6e",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a8e671b1-c6c2-4f53-8f4d-4f117ea6414f"
        },
        "item": {
          "id": "cce73bf1-b72c-4f6b-b9d6-af32921f76fd",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "14eca01f-5e30-4ef9-8a24-a7139319adaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81e2d30-7d8a-49c1-8197-6dd997257862",
        "cursor": {
          "ref": "f10556b5-8642-4522-9db2-f5f5d9ab2bca",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "eff0d9a5-fa95-4a19-8d9a-2ef92234b09b"
        },
        "item": {
          "id": "b81e2d30-7d8a-49c1-8197-6dd997257862",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2192c619-5d62-4999-aaf8-582ac9c90937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c517643c-df66-467f-8d8c-7ee4736a65a7",
        "cursor": {
          "ref": "5d831f76-2125-4edd-b49d-c2a84ef3a352",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2b02e62b-e0a1-4f48-8f1e-f3fee71c0d8a"
        },
        "item": {
          "id": "c517643c-df66-467f-8d8c-7ee4736a65a7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a254c4d3-29b7-4f55-8ca4-d706b3ddc712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87577332-5271-4d9a-9a3e-897c6e2fcaf4",
        "cursor": {
          "ref": "670338b9-20f8-452d-bd3e-28ab691ee0ab",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "cdca64cf-f3e8-499c-bc9c-89eb48f85f63"
        },
        "item": {
          "id": "87577332-5271-4d9a-9a3e-897c6e2fcaf4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6ab03e06-678c-4240-a26d-608985a221a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34953d8-629a-4847-b967-476dc29fe4c9",
        "cursor": {
          "ref": "dbe1194c-572b-4be0-9ea3-d310aa02e7a4",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "247ab4a1-f874-4557-82da-48eaefa44366"
        },
        "item": {
          "id": "d34953d8-629a-4847-b967-476dc29fe4c9",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a851367a-d467-4067-908f-f1e65903be94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a039304c-a41c-47a3-b30e-925f9677a792",
        "cursor": {
          "ref": "f24fa466-d4dd-4109-97f5-7ec4d808826d",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f2c86046-c4a9-43ff-a21b-e80d683cb976"
        },
        "item": {
          "id": "a039304c-a41c-47a3-b30e-925f9677a792",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2855284e-f109-4788-8ead-46ecff6527f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3771968f-598f-4e16-8aeb-a3550af58e27",
        "cursor": {
          "ref": "282c40d2-20d0-400e-94f6-f3b751af1841",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "543aebc7-3a99-49f3-b674-b9eee2b7a8b5"
        },
        "item": {
          "id": "3771968f-598f-4e16-8aeb-a3550af58e27",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "45355796-d1d0-4e11-a906-2d7790893c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62edac4-df1e-48e3-9fbc-610988e44ff8",
        "cursor": {
          "ref": "a403f934-9a80-4b3d-9b1d-36e6b3107c4b",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f90176c9-7c01-499c-9dd0-b9d2c74cbee2"
        },
        "item": {
          "id": "d62edac4-df1e-48e3-9fbc-610988e44ff8",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f2594289-7d2c-4db1-b093-8fc4853a677f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e11715-cba5-4ff7-9d4f-c9d20442e76f",
        "cursor": {
          "ref": "67c4f1ac-e0fe-4f96-a1cd-ff59d59659b0",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4ed0dcec-088c-4964-8f2c-501a9981d15f"
        },
        "item": {
          "id": "68e11715-cba5-4ff7-9d4f-c9d20442e76f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "127fd5d2-09ea-4192-bb5d-25eba6b645f4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 43,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d648078-9f54-4bc1-a9e2-d6b162849bc7",
        "cursor": {
          "ref": "d38550c5-44ae-4051-9155-d3c4f134b4ec",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "57891d13-5cb5-4828-89f9-16520d5b42de"
        },
        "item": {
          "id": "5d648078-9f54-4bc1-a9e2-d6b162849bc7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "754c1d6d-6a0f-49e9-897c-d15ce548fa15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882702f5-80d3-4d6c-abe8-8d294f4e79fb",
        "cursor": {
          "ref": "59fe33e4-5193-4a2c-afaa-aa1f4a0d2a31",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "07651c6f-7a23-408a-9f93-0a750f9108ca"
        },
        "item": {
          "id": "882702f5-80d3-4d6c-abe8-8d294f4e79fb",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "73af6ed5-dd09-40b0-938e-6adf0704ab33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4a6e65-8810-4c20-96b8-eb9c032d8996",
        "cursor": {
          "ref": "b54c0498-e5bb-4baf-8274-25545bc3e2c3",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "80a8563f-254c-4171-9099-43d7301deec8"
        },
        "item": {
          "id": "8a4a6e65-8810-4c20-96b8-eb9c032d8996",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9d8d2dec-f39c-4acd-b267-6ac3910cefaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b4610f-6fbe-4a24-ab98-0d682d50d8f9",
        "cursor": {
          "ref": "395c9e7e-9d85-42e5-b612-374465f13b14",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2dc2c1d6-bd04-4be7-af30-e3bc32a628d9"
        },
        "item": {
          "id": "00b4610f-6fbe-4a24-ab98-0d682d50d8f9",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b96f3e85-9329-47cf-93e1-a9a9bc9d2434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765b8419-d83f-49a2-afa2-79a45ffbb51f",
        "cursor": {
          "ref": "a603d71c-32c4-48f4-815b-1438f9ecb02e",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6f2468ff-4de1-4e63-8a36-de04414dd33b"
        },
        "item": {
          "id": "765b8419-d83f-49a2-afa2-79a45ffbb51f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a4f8273d-6126-4138-9c54-8398d816f68e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc33322-d0d6-4f08-8bd5-77069553bbdf",
        "cursor": {
          "ref": "66b00515-6b3e-4f04-9aaf-a64114f388cf",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b2df023d-b37f-4968-810f-354095e46c26"
        },
        "item": {
          "id": "8fc33322-d0d6-4f08-8bd5-77069553bbdf",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "05dd9099-f1e2-4ccd-8541-d23fbbceed92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76aa6b29-8d72-42dc-823d-0fb5bf8f91d5",
        "cursor": {
          "ref": "88441536-de24-45f7-bea8-ebea2225f953",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "81c10458-7493-45b6-ac1c-e8bdfdf5006b"
        },
        "item": {
          "id": "76aa6b29-8d72-42dc-823d-0fb5bf8f91d5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b64a94c3-1a1f-4d28-b67d-2efb0f64b40c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 43,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35008fd6-36df-45f1-b88b-d7c225e80d78",
        "cursor": {
          "ref": "f61e7e7c-7b0e-4320-8140-2ce85878f885",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f691dde9-d193-4a22-8853-6048cbfa9067"
        },
        "item": {
          "id": "35008fd6-36df-45f1-b88b-d7c225e80d78",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "54f26506-d088-42b8-b58e-fd539940ca52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266e4283-10ce-45ee-b541-f59ed31e13a3",
        "cursor": {
          "ref": "16240762-676c-4374-85df-bdb377229935",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2975080b-d71f-449f-82fa-da16acaf6f9b"
        },
        "item": {
          "id": "266e4283-10ce-45ee-b541-f59ed31e13a3",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5b05afa1-1c77-43e0-935d-6c069c0ba645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7c7827-342e-4b88-8ecd-80763dc30989",
        "cursor": {
          "ref": "d00e6107-17d0-435d-b7d4-182199fd74e6",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "46e2119f-19e8-4fdb-b97d-701f69be9198"
        },
        "item": {
          "id": "4b7c7827-342e-4b88-8ecd-80763dc30989",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4e0b5688-6c10-46fc-b8fa-42cff0fc7000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec77d2b-d260-402a-a3e6-48f36d3852a1",
        "cursor": {
          "ref": "093f0e93-a512-44a5-991d-57cd33845add",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8e4899e9-2e1b-44e8-9382-9df7a7b45aad"
        },
        "item": {
          "id": "2ec77d2b-d260-402a-a3e6-48f36d3852a1",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "26f8c116-2d5e-4cf6-8d65-f99b8d99caf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150afde5-559a-4265-a641-e4e9373e544f",
        "cursor": {
          "ref": "4f2d9f64-5a83-4d99-9428-a9f1036c8aaa",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3396ae4f-1c3e-4b62-b844-243203bda4f3"
        },
        "item": {
          "id": "150afde5-559a-4265-a641-e4e9373e544f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "519afd5b-be05-40f6-9662-7e5ea47a7dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be6944d-f960-4121-9acc-ddcd8e0408ec",
        "cursor": {
          "ref": "b00c5fb4-7f55-4d04-87f9-b112f2e093c0",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ec1677c0-2b40-43cc-bb77-8af02a8455ab"
        },
        "item": {
          "id": "0be6944d-f960-4121-9acc-ddcd8e0408ec",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b6f42768-d78f-4f91-af0d-3d008796127a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1458de9-db76-488e-9f18-cc6669debb1c",
        "cursor": {
          "ref": "7b7a3f5a-1d44-4b62-9baa-480f4e812ae5",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "249aec0d-d254-41ae-ab03-d18253f4a46d"
        },
        "item": {
          "id": "f1458de9-db76-488e-9f18-cc6669debb1c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "36018286-74b6-4829-aa9b-4c4fc625dc42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14195feb-b70d-460b-83cd-87ad32f48af1",
        "cursor": {
          "ref": "a0868cdd-bc83-4f0c-8a11-98b3101616eb",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d7051c7d-97ef-4e38-828e-7229ebafe6d4"
        },
        "item": {
          "id": "14195feb-b70d-460b-83cd-87ad32f48af1",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "135cf247-4bf1-4962-9a52-4cef2a1104a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd706700-8538-44c3-8a73-c24928191782",
        "cursor": {
          "ref": "7991fc51-89c4-4f55-9f39-5c491eb95f80",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "cb22c39d-16db-47d2-ab83-d3ed3ad79519"
        },
        "item": {
          "id": "bd706700-8538-44c3-8a73-c24928191782",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9060a59a-6f9a-4f26-8072-cf1e7fb58eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03984b1-9501-4fe1-9be9-8183a592ddbd",
        "cursor": {
          "ref": "10e41ab4-2c81-4ce8-b2c0-f479b822002c",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2e45a8b7-f580-4895-a454-abe843c6f540"
        },
        "item": {
          "id": "a03984b1-9501-4fe1-9be9-8183a592ddbd",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ab5e3822-b1d1-481a-9548-843959f2932f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eec9c55-d71a-4e0d-bb47-3bebc77676bf",
        "cursor": {
          "ref": "00104200-1afb-4b36-8fa2-a8bb755d6d51",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e75b34bb-e727-46a1-8a4c-4f38fefc4908"
        },
        "item": {
          "id": "8eec9c55-d71a-4e0d-bb47-3bebc77676bf",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "50222544-8782-416c-94c5-96d395afa902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0e7274-5050-48f9-8bf7-d938c8da5b69",
        "cursor": {
          "ref": "de7e2e46-31f2-4c4e-ba88-48ecbcea5d1d",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3d416358-1cbb-42b1-897b-aba4cc88c13e"
        },
        "item": {
          "id": "1c0e7274-5050-48f9-8bf7-d938c8da5b69",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c4b0af64-1310-459d-9ca8-d984cf10e235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a5536f-f824-4777-8c19-2148eab3c172",
        "cursor": {
          "ref": "114ea4e5-8a1c-4f2a-bb65-8733b694e33a",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c443c7a5-1c5a-4f2a-988d-7e73c7d4ea5b"
        },
        "item": {
          "id": "05a5536f-f824-4777-8c19-2148eab3c172",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "22d914de-9473-4fe7-8cde-583a1e5ccb02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aef9375-0114-464d-9b3f-c6bb12cb7841",
        "cursor": {
          "ref": "de8cc56d-2602-4562-be79-5965f4a39412",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8c5ef0f2-24c4-4794-b08e-b2343d7f74b3"
        },
        "item": {
          "id": "2aef9375-0114-464d-9b3f-c6bb12cb7841",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "55f2ec24-9c86-43a4-806c-e905c36f0861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5832028-f996-410c-bc66-e8709bb5ce57",
        "cursor": {
          "ref": "09d8824c-806e-4ae9-a765-691e42e68fd2",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "30ebdbc6-9405-4eef-b620-dd6378793388"
        },
        "item": {
          "id": "b5832028-f996-410c-bc66-e8709bb5ce57",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "71cd245c-10d4-41e5-8445-a2e46aa258fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6025ec0c-41ea-4368-80f3-92540cbabf3d",
        "cursor": {
          "ref": "4f92ac30-d901-4ead-9c79-026bd88fa3f4",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5393bffa-f49c-473e-9755-0cbcaf372d94"
        },
        "item": {
          "id": "6025ec0c-41ea-4368-80f3-92540cbabf3d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7a2099b1-1b44-4fe5-8e41-75b5e05e6053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15b8f1d-4735-437b-a6c6-d28abb4011c7",
        "cursor": {
          "ref": "be3d8095-d8a2-48c9-9022-7f714022fd54",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "10766aa6-bedc-4dab-85bd-b55708e43991"
        },
        "item": {
          "id": "b15b8f1d-4735-437b-a6c6-d28abb4011c7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2295be4e-6f08-4bde-8db8-9e948aa8b51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e979213-a925-4b4b-b308-ab49965da772",
        "cursor": {
          "ref": "29fdf147-e3ab-4ada-938e-20276cc0f2d0",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a34a9b6e-4884-4442-9538-ec90d97cccae"
        },
        "item": {
          "id": "7e979213-a925-4b4b-b308-ab49965da772",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "32ae0ae7-f847-493a-881f-b8999e33726e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d10be2-70ea-4779-9ba9-693640416993",
        "cursor": {
          "ref": "09ce9b4b-2df0-46a5-ace7-a2888bb3e48f",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "11cdf3a9-7c13-4135-812b-4c3b9dd887d9"
        },
        "item": {
          "id": "84d10be2-70ea-4779-9ba9-693640416993",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d1868d99-fb49-4cfb-881e-9ecfb991d757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3056b49-2b0e-4f9b-91ec-3737526468ba",
        "cursor": {
          "ref": "3105c710-5abb-4cc8-b32d-622382de4fec",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "58a116b5-c48a-45e3-a265-7f53ae1ffc0e"
        },
        "item": {
          "id": "b3056b49-2b0e-4f9b-91ec-3737526468ba",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3e4dd213-c4ec-4822-9be3-dc160cfe69ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a8245d-983a-4b28-8315-10bc4d83d179",
        "cursor": {
          "ref": "f0da5bd1-7049-4443-8876-1e94a2e78c38",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b6f13a87-301f-4a50-a94a-eab7e2f5011f"
        },
        "item": {
          "id": "06a8245d-983a-4b28-8315-10bc4d83d179",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "38bc10bf-4012-490f-b794-c1116bb5e992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128a5e96-d801-4b1a-a5b6-350019217aca",
        "cursor": {
          "ref": "2e4475f2-6273-434e-8501-b81691b87ee7",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0ea77faa-9b34-4dbd-8f46-1d0876d9a4fa"
        },
        "item": {
          "id": "128a5e96-d801-4b1a-a5b6-350019217aca",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "db4a8f8a-265c-40f2-a737-b15789565941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e1b801-7f6d-4288-9258-bc085236da4f",
        "cursor": {
          "ref": "960c53dc-28e4-4f31-ba2b-7d98f4ddd759",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4993141a-076f-4d5d-990e-241d24a63451"
        },
        "item": {
          "id": "d7e1b801-7f6d-4288-9258-bc085236da4f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "798e0d43-95e8-46a4-ab0b-1dd54d5d7caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a11979-2bcf-4b58-9288-1f3275c95b25",
        "cursor": {
          "ref": "1d570602-910d-4ae4-9597-fa454639439e",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "404c6366-c856-49a8-ba06-886fc7e48c2e"
        },
        "item": {
          "id": "76a11979-2bcf-4b58-9288-1f3275c95b25",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5cb20c97-361d-4735-b8ee-6128d0209c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa36ec1-52a5-4654-8740-e1c100a14b77",
        "cursor": {
          "ref": "86303224-b6ab-45db-8da9-7b823e910df4",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f9d27769-9c39-4e47-95f8-1e4de43b0685"
        },
        "item": {
          "id": "8fa36ec1-52a5-4654-8740-e1c100a14b77",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a98eb33a-adf3-438b-8409-05374a4df4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b1dc72-5c17-41d2-abc3-5b63436590cc",
        "cursor": {
          "ref": "25188238-74de-48af-a881-622a6aa14f64",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a47989df-1655-4a06-94a6-3fa09cf0d6f8"
        },
        "item": {
          "id": "a6b1dc72-5c17-41d2-abc3-5b63436590cc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e5ce7caf-d688-4b40-99bd-b9f8b3bada56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df871eb-4261-463f-ad86-7baa838df115",
        "cursor": {
          "ref": "3ed5e734-6b7b-4dd4-b35b-8b6ccbe247b6",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9924f18d-6c3a-4daf-a19f-18c8234245d1"
        },
        "item": {
          "id": "6df871eb-4261-463f-ad86-7baa838df115",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b0523fce-bf6c-4c4f-ba52-68cfec07bfa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce572f47-5b9d-43e9-881b-bc3890e2d167",
        "cursor": {
          "ref": "fde8c7b3-817c-4c53-bef9-82524b0b4c76",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fe9b8873-9094-4cfb-aee4-dfa2bd6f239a"
        },
        "item": {
          "id": "ce572f47-5b9d-43e9-881b-bc3890e2d167",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "18f4d37c-4239-4c28-9f97-e3ab06087c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6333afc-3266-4842-b40f-34bdcdfccf7f",
        "cursor": {
          "ref": "07e49739-960d-4427-8794-031137ce2dc4",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8c7bf714-cd21-40e6-9391-e2934da73967"
        },
        "item": {
          "id": "a6333afc-3266-4842-b40f-34bdcdfccf7f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "aea605df-0fbb-408a-8a18-e4ab38e33e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ed5ac7-d5e2-4924-8cc6-91d608326762",
        "cursor": {
          "ref": "d5c517e7-1b60-44e3-9d2b-223213d5a4e3",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e5180b32-903d-439f-8c3e-683360ae5e4d"
        },
        "item": {
          "id": "f6ed5ac7-d5e2-4924-8cc6-91d608326762",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "55435ebe-1444-45a3-9cea-d74d7a14b512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5abc1617-1725-4c65-8a02-f77d9fa9368b",
        "cursor": {
          "ref": "5c7cde6d-104b-4e0e-9397-3190cfeae33f",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1f35c1b8-8f71-4c24-b217-36cdabf677bf"
        },
        "item": {
          "id": "5abc1617-1725-4c65-8a02-f77d9fa9368b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f6f880f2-f651-461b-80e2-0b34a5fab3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4a4065-2b1c-42f6-92e6-680be5d07f56",
        "cursor": {
          "ref": "0fd4ca31-f272-4475-b57e-4b3508f6b668",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "997082a4-b4c9-40e6-8b09-2dd9c09155c7"
        },
        "item": {
          "id": "3e4a4065-2b1c-42f6-92e6-680be5d07f56",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "118eb329-54cb-4495-bbb2-f9f62f17dc77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512be3fa-fd98-4a1a-bb3b-a202deebbc2c",
        "cursor": {
          "ref": "5c2b2683-c668-4e42-b750-811ab9f59ef5",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cd8242fa-5494-4a5e-85e1-f1e8ed85b744"
        },
        "item": {
          "id": "512be3fa-fd98-4a1a-bb3b-a202deebbc2c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5831a502-4c5b-4858-b8bb-2535c32e9988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7e1c66-507a-4c01-a4ab-8c87a071089d",
        "cursor": {
          "ref": "16ead48c-0d62-40e7-9bc0-da23a6bd0989",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7121e83d-e6c6-491d-b76b-a2482f8b710c"
        },
        "item": {
          "id": "ae7e1c66-507a-4c01-a4ab-8c87a071089d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d2c37fd4-cbea-460a-992c-36eca1f09142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4306eb3-a403-4f9d-bcd9-12e2a70f9898",
        "cursor": {
          "ref": "7a8a3714-9bb0-4f63-aede-0a66adbf8314",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2f952618-5ea2-45f8-ab3c-2b649904f14a"
        },
        "item": {
          "id": "d4306eb3-a403-4f9d-bcd9-12e2a70f9898",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3ae49b0a-6ae7-4e25-944e-101687d24c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1cdf662-f345-4d8a-a8c6-97218e01c323",
        "cursor": {
          "ref": "8bad39a4-6cbc-48b2-99a8-e4de918df9b4",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8faab829-e4f6-45cf-bf8f-8514b755d0e1"
        },
        "item": {
          "id": "e1cdf662-f345-4d8a-a8c6-97218e01c323",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bda424de-1b48-4170-aea1-2ea7324e8adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54502b61-84fd-4b6e-9b31-9b58fe2fd314",
        "cursor": {
          "ref": "77621933-6da4-488e-ad15-abc11630169b",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3f2efe7f-39cf-491e-ae30-f72f31ed093b"
        },
        "item": {
          "id": "54502b61-84fd-4b6e-9b31-9b58fe2fd314",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "42fe3477-bddb-4181-afd7-b89c68320e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb17e0c-87ea-4b0e-bb07-2a80dd3b44ab",
        "cursor": {
          "ref": "044e5919-e313-466e-9ec2-dc98661ae5ca",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "18595d96-7bb6-49c8-a6c5-c7aabb5d42ca"
        },
        "item": {
          "id": "feb17e0c-87ea-4b0e-bb07-2a80dd3b44ab",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "04543c2a-6736-4c8b-bede-427656462db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f0c6df-e931-49a0-9b34-94ea0a7ffc8c",
        "cursor": {
          "ref": "9e17895c-29c7-4b4d-91d1-b5cd2003e3b4",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "48d5c10a-4c7a-47f0-83d5-e65c170311aa"
        },
        "item": {
          "id": "55f0c6df-e931-49a0-9b34-94ea0a7ffc8c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "cbd3e810-ddd6-4c42-85a2-8d0f17281e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9d9864-6664-4089-8971-3be7d7c78a68",
        "cursor": {
          "ref": "004312c7-89fb-421f-952c-399d242e2279",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a277d15d-c3e6-4b69-8e6a-9bb89095b4f6"
        },
        "item": {
          "id": "3a9d9864-6664-4089-8971-3be7d7c78a68",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "826676b5-c0ef-4c51-a111-6f4f04dfd9cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1da2c91-7696-42e1-bfa1-c938d8572efe",
        "cursor": {
          "ref": "8fef07dc-4768-40c3-86cf-2c953a806c6a",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "30ed6327-96f8-48b6-90f1-4f9cabf31e9a"
        },
        "item": {
          "id": "c1da2c91-7696-42e1-bfa1-c938d8572efe",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "94d23f9b-7caf-4470-bd83-ac803b18bab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65fc314-103a-4abb-9a89-e670a9635b04",
        "cursor": {
          "ref": "cf122c56-b2ce-426c-abd7-d5dd67d92d6a",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "bad613fb-621f-4359-bcc5-d9410cfb92bf"
        },
        "item": {
          "id": "f65fc314-103a-4abb-9a89-e670a9635b04",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e96fe0af-3c91-42f7-bd0d-34c9cc700d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cd57c0-7422-4d32-8bd2-08c209dcc131",
        "cursor": {
          "ref": "9bce7dc7-3b61-4753-b5f8-d1d2a6e5bf35",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d2ff6a48-eedf-456f-b0cd-078f0ec4a5b5"
        },
        "item": {
          "id": "c3cd57c0-7422-4d32-8bd2-08c209dcc131",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "bdfff7b3-f7ce-421e-bd44-87d5f4fd531c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06076d9-5587-4f43-a280-c4777b6e1697",
        "cursor": {
          "ref": "2ff493fd-753e-4ea6-9ff7-6c630f4488f8",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5129099a-c205-4941-a1b0-09c1721af859"
        },
        "item": {
          "id": "e06076d9-5587-4f43-a280-c4777b6e1697",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "afaa1db1-4057-4b21-8e1e-7de1ec2c04fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afbbd74c-6c42-43b1-b578-1612cf77ba9f",
        "cursor": {
          "ref": "8fd69cdd-e57b-49eb-99e1-271be7b20e10",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7a5129aa-c3be-4826-b75f-03fa20e85036"
        },
        "item": {
          "id": "afbbd74c-6c42-43b1-b578-1612cf77ba9f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "289406b2-bcce-4806-a155-4f0d7e49c35c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f215a1-621a-4007-9b3c-28aab5607db5",
        "cursor": {
          "ref": "dbf27089-d2de-4df1-a20b-43ee444b8f51",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "86a84f54-7286-48f3-9d10-48608c8e21f2"
        },
        "item": {
          "id": "63f215a1-621a-4007-9b3c-28aab5607db5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "bd3fdc4c-fa57-441d-b189-cf67133d9e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3033b1-30aa-4ee3-80c1-5d1a9387b8df",
        "cursor": {
          "ref": "84e32712-4df8-4201-ae67-affe1684390b",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ccc8387c-bff1-4605-bd57-4fde3c57f5ef"
        },
        "item": {
          "id": "7b3033b1-30aa-4ee3-80c1-5d1a9387b8df",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6338f275-e7fd-40a5-a86f-710e9927a80c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693a30c6-8b0f-4450-a762-9cf29089bc58",
        "cursor": {
          "ref": "fbf84e8a-e22f-4e63-9157-f0272f0d21ea",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b9d032f8-1e37-46bb-a277-af7f72f094da"
        },
        "item": {
          "id": "693a30c6-8b0f-4450-a762-9cf29089bc58",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3e351ec5-1147-40d5-91f1-fdbde390319b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f69824-1b81-4fe6-a8aa-ad17a32f24a8",
        "cursor": {
          "ref": "4321327c-9d99-4012-b82c-95f8f60fe288",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8a052036-9b99-45f5-a521-88198b6211f2"
        },
        "item": {
          "id": "99f69824-1b81-4fe6-a8aa-ad17a32f24a8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a60b7cf5-f563-48b2-8789-38efd3c7a5f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63758aa1-d1f0-4ce9-a541-9cb597d27808",
        "cursor": {
          "ref": "54761201-509e-4551-916e-dfce475dceab",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2bbd407b-461d-443e-a345-c9d4e7ba375d"
        },
        "item": {
          "id": "63758aa1-d1f0-4ce9-a541-9cb597d27808",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "851e495e-c67b-4a58-b3e5-1eeaec15ed9f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250708bd-c665-4026-975e-bc8cdb88c549",
        "cursor": {
          "ref": "c33b4f9f-539b-40f3-8962-3a61b6accf9c",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e05b7c33-29c4-421f-a9cf-b1c6d60b4782"
        },
        "item": {
          "id": "250708bd-c665-4026-975e-bc8cdb88c549",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "53d5d761-e53e-4c6a-a214-65a8f55e370a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 168,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9b5752-fddb-419d-adf0-a40cc23816d0",
        "cursor": {
          "ref": "d3151d72-1a5c-4e31-b114-e14bcb21aa9d",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b38e7e79-8b3e-4f93-9ca9-c14e83d8f8f4"
        },
        "item": {
          "id": "4f9b5752-fddb-419d-adf0-a40cc23816d0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f9c17440-39e6-4ba5-9af5-cda17e8f0908",
          "status": "Created",
          "code": 201,
          "responseTime": 59,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea76b2a-bcf7-43e2-86be-f23ad4193621",
        "cursor": {
          "ref": "6257d8b6-e1e8-4e13-8d44-e3acffefe83f",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "869e46a1-67e0-408a-86cf-f176cc382df6"
        },
        "item": {
          "id": "9ea76b2a-bcf7-43e2-86be-f23ad4193621",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c367ae93-d418-4f4b-96d5-db6f30165e7d",
          "status": "Created",
          "code": 201,
          "responseTime": 907,
          "responseSize": 860
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a24bb7b-617a-46b0-a331-76b2f9b7820a",
        "cursor": {
          "ref": "222258c0-e1c9-4a1d-b622-40b1d75daf25",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "12b03ff2-0124-4d36-9412-9741a0c16e97"
        },
        "item": {
          "id": "6a24bb7b-617a-46b0-a331-76b2f9b7820a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6b73a03f-9a8d-4b84-8d0d-fe34f7d7699f",
          "status": "Created",
          "code": 201,
          "responseTime": 53,
          "responseSize": 883
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee3e8c2-dcea-4347-8a02-a5cc78390eb1",
        "cursor": {
          "ref": "4a1f33d8-fed7-4420-935b-0f1c389008cc",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3d92b908-59ec-45fb-a5de-c3057e8b8ca0"
        },
        "item": {
          "id": "dee3e8c2-dcea-4347-8a02-a5cc78390eb1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "34d59ff7-c14b-4f67-a9fa-5e366a09b800",
          "status": "Created",
          "code": 201,
          "responseTime": 52,
          "responseSize": 852
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4d54d0-6bc5-4bec-a23c-dbed6ee6e0c8",
        "cursor": {
          "ref": "8b29b415-653c-45b6-a037-5b3cfc069313",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0016c0b5-0aaa-42ec-8c1d-33aa8fa441fd"
        },
        "item": {
          "id": "9f4d54d0-6bc5-4bec-a23c-dbed6ee6e0c8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8de208f7-89aa-4200-bdfa-a07027560fa9",
          "status": "Created",
          "code": 201,
          "responseTime": 53,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "507ca95e-25d7-4a44-abdc-4c5aa5867c55",
        "cursor": {
          "ref": "8af2ff31-e8f1-494f-97fd-67c33129362e",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "24aa23a6-b76a-42e1-907b-1dc4f80da32c"
        },
        "item": {
          "id": "507ca95e-25d7-4a44-abdc-4c5aa5867c55",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "21720433-d797-4a74-8d39-b29ec616885c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507ca95e-25d7-4a44-abdc-4c5aa5867c55",
        "cursor": {
          "ref": "8af2ff31-e8f1-494f-97fd-67c33129362e",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "24aa23a6-b76a-42e1-907b-1dc4f80da32c"
        },
        "item": {
          "id": "507ca95e-25d7-4a44-abdc-4c5aa5867c55",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "21720433-d797-4a74-8d39-b29ec616885c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c91a17d-eb74-479a-a34a-76784d3ab831",
        "cursor": {
          "ref": "f0aaedc0-a53a-4eae-9fb9-a039f5fcf1da",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9ada6495-4547-4632-a8ab-4503351385ba"
        },
        "item": {
          "id": "1c91a17d-eb74-479a-a34a-76784d3ab831",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "37c2513c-fb40-44b1-9ee2-529beca717ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82cb909-c546-4926-8047-e2e062c14b2e",
        "cursor": {
          "ref": "ad4ef756-f15c-446f-9099-28d77c19d3c4",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "062250a6-c3b7-4d47-8f65-299a60d2ce47"
        },
        "item": {
          "id": "b82cb909-c546-4926-8047-e2e062c14b2e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7cc0ea22-3393-439c-9227-74e1bf1387c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b0e3f2-7caa-4d9a-a204-6b8247c5ea0a",
        "cursor": {
          "ref": "b3235ede-23d4-4f4f-9edc-3b16ea1d3507",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "67edf955-a604-4a8a-bc2c-ea4cac668580"
        },
        "item": {
          "id": "67b0e3f2-7caa-4d9a-a204-6b8247c5ea0a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c29543d4-06e7-4c74-93d1-8a00edca233b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6136a4b8-6ee2-4393-b6ad-bd82dfba651c",
        "cursor": {
          "ref": "05693939-5ed2-45d8-9b03-892fb3e0906e",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "170b0495-bd0a-43a0-98df-40afc6445a3f"
        },
        "item": {
          "id": "6136a4b8-6ee2-4393-b6ad-bd82dfba651c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f8956587-48fa-4ab6-804d-2402ad6defa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad454ee-048d-47fc-86c2-a857450e1993",
        "cursor": {
          "ref": "98dca15c-8d90-4481-b308-4d24e250b32d",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2dca43b8-9818-47a3-bd2e-e5ef8cece336"
        },
        "item": {
          "id": "9ad454ee-048d-47fc-86c2-a857450e1993",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6fe356fc-ab76-48da-9476-20149a28d76e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ffa077-6b66-4123-94c0-18a3f3ad5aff",
        "cursor": {
          "ref": "1c955e5e-190b-42f7-90b4-44f63a22b4ac",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f73dc2a1-10d2-40b9-bf40-274e02e9b832"
        },
        "item": {
          "id": "e8ffa077-6b66-4123-94c0-18a3f3ad5aff",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2a5c8c30-e478-4d55-bbc6-5b322a9b17e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482990d7-4688-4b5a-8878-cd999c71fe69",
        "cursor": {
          "ref": "47cbb1dc-5997-4dbd-81ee-e7802a8c24ba",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e2dedd63-53b4-4207-996a-f46c5a7d6a0f"
        },
        "item": {
          "id": "482990d7-4688-4b5a-8878-cd999c71fe69",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "094d78ab-58cb-4dbc-ab51-5e07bc08f59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f11a72-6805-4d39-8121-c62ea2a6b97b",
        "cursor": {
          "ref": "11957b22-1435-40f9-9fbc-7e82cd68124d",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "81b25752-b8cd-4619-9035-e90807bfc9fe"
        },
        "item": {
          "id": "e1f11a72-6805-4d39-8121-c62ea2a6b97b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9f14e6f0-163b-48f1-a605-eb968043ea3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb53c8e-5c3c-4c0a-a3bf-c9bcb3cf923a",
        "cursor": {
          "ref": "e939f55b-dd62-41cb-9b10-8404a6045529",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "eedf24dc-7a6f-4712-9617-74d73d0ecbe4"
        },
        "item": {
          "id": "dbb53c8e-5c3c-4c0a-a3bf-c9bcb3cf923a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "39c3b93a-b40b-42a4-abc9-5cd8021c3d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8f096b-d4fe-4272-89d4-fa132b8cab12",
        "cursor": {
          "ref": "b630e3cd-9b9b-424b-8523-885c82f86f71",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "45c393c9-783c-4ce8-9ac0-a4c7a19d25bc"
        },
        "item": {
          "id": "9e8f096b-d4fe-4272-89d4-fa132b8cab12",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9221615b-9144-4fcc-98fa-2b231bf08eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60f89f6-7d3f-415b-8d2f-dce66c6717e7",
        "cursor": {
          "ref": "4ef393bb-474a-4aa7-9ff0-26e7bd09edff",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c157f784-3048-4d08-8046-1440c4e29bd5"
        },
        "item": {
          "id": "e60f89f6-7d3f-415b-8d2f-dce66c6717e7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5844a897-5992-4739-adab-f06729f0e988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8812fb01-b26d-442c-bdd2-574a6dbf1c7c",
        "cursor": {
          "ref": "b89365ca-c7c0-46e7-8c39-9f304604892f",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "91aeadfc-fae5-4b73-8a55-a44677a419b3"
        },
        "item": {
          "id": "8812fb01-b26d-442c-bdd2-574a6dbf1c7c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6d13a01f-458d-4bcf-8e60-ccb6cba72dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73271f2b-4c24-413f-adf3-39c3d3e00de6",
        "cursor": {
          "ref": "6912fad1-2aa9-4321-bab5-097f3c4ec6d9",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ff96c05c-6f51-4b6d-97cf-98782603ca3e"
        },
        "item": {
          "id": "73271f2b-4c24-413f-adf3-39c3d3e00de6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b6b3d3b5-fd8f-42c3-9580-383bb29a33dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bb54c5-0dd5-48ba-8244-abe871f99fa8",
        "cursor": {
          "ref": "a31b764a-065f-4ac4-8696-1d9c0f3d13f8",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e8491f3b-53bd-4972-bbab-b950fdaf9201"
        },
        "item": {
          "id": "d8bb54c5-0dd5-48ba-8244-abe871f99fa8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "04f9af41-80fd-4c52-a1c7-3a8e1fce4a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0575bb4-73c6-4da8-9d43-ac307ff55c66",
        "cursor": {
          "ref": "6b73816a-704d-4c40-949f-014e106ca476",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "fab3d616-9c07-4503-bd91-5c7e7bdbb695"
        },
        "item": {
          "id": "a0575bb4-73c6-4da8-9d43-ac307ff55c66",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f36604bf-9f9c-4047-a1f1-3df7bb57cdba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9a7079-43b7-488d-a19c-d206ecfb3395",
        "cursor": {
          "ref": "6eb02222-d0cf-49e0-a857-64922de0a4c0",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e59bd01f-e0fd-42e0-9c56-e2c9b85f12f5"
        },
        "item": {
          "id": "0e9a7079-43b7-488d-a19c-d206ecfb3395",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e97628d9-1d3c-4d8f-8272-9189c131b9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c1dac3-aadf-4bbb-90e1-4ecbb394258c",
        "cursor": {
          "ref": "cce9c544-c393-4542-93db-24bdb36d30db",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "35cc415e-ca19-4f99-add3-164636a81ec5"
        },
        "item": {
          "id": "54c1dac3-aadf-4bbb-90e1-4ecbb394258c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3790d899-ff69-4cb7-9833-72b10d351b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481edc21-ac28-459c-9569-a8cf5cda5b6f",
        "cursor": {
          "ref": "e4bde2e4-77fd-4168-9928-3f7d54e93cf1",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c8f48c45-a61d-434f-9acd-cba2030d1d20"
        },
        "item": {
          "id": "481edc21-ac28-459c-9569-a8cf5cda5b6f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a8f2d325-863a-45c4-ba97-fb418ea7dbb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04203d3b-aeb9-4232-b422-a420e4ae3334",
        "cursor": {
          "ref": "b079adb3-f4bf-4fb4-b4bb-a87095c1c228",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4ecd1b17-fd2d-477e-9dbb-559efdff73ee"
        },
        "item": {
          "id": "04203d3b-aeb9-4232-b422-a420e4ae3334",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8c55fa26-fdb8-492a-b9ee-80f9bfb223b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13257a99-519f-46ba-b72a-4edce8373bb2",
        "cursor": {
          "ref": "42eb63db-5b52-40c2-b155-a540f746bf70",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1a4206a2-0af4-4b0f-a4e7-ebc8158fa784"
        },
        "item": {
          "id": "13257a99-519f-46ba-b72a-4edce8373bb2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3c1fbd52-41ad-4b36-bfd9-c321c286cd35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c94c41-5a00-4b9e-af22-8ff7df342091",
        "cursor": {
          "ref": "f933e0ce-0972-429a-8945-f3d860e17bc0",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "760cc22b-adcf-4040-950a-8a3586780f26"
        },
        "item": {
          "id": "02c94c41-5a00-4b9e-af22-8ff7df342091",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a0d8c926-03a9-4c51-adf2-4bb15db97d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0897470c-85c5-4f3e-9b7c-8cf51ee7865d",
        "cursor": {
          "ref": "9808ce05-3b35-4266-a554-8fc2c3e5ba4f",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2593b78e-1105-4991-b676-6aca0bca1885"
        },
        "item": {
          "id": "0897470c-85c5-4f3e-9b7c-8cf51ee7865d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "43398999-0dd2-4dce-a7e2-20944dc01200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d181fd0-2c88-40de-bdba-2ce86695f0a6",
        "cursor": {
          "ref": "9d1220fd-f561-4840-b095-85f45738d6b1",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b5c38537-f8ca-4ca9-b4b4-ce630b6fb1fe"
        },
        "item": {
          "id": "2d181fd0-2c88-40de-bdba-2ce86695f0a6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "26192272-0d29-47ab-ade5-44a565d902cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade1edfe-5995-4835-976f-45dad8903373",
        "cursor": {
          "ref": "1e572a0d-536d-490e-a49b-acbf2fd7f424",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "47df0dd4-cb8e-4334-b99e-ab2b93490ffb"
        },
        "item": {
          "id": "ade1edfe-5995-4835-976f-45dad8903373",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "008bc13e-0f8d-4544-b98d-348e54332d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07fc776-b5a9-4cd0-865f-3386bf1d97c7",
        "cursor": {
          "ref": "38bcc2dd-c88d-473d-bcf8-fde691742ec8",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1ffee4cc-72d7-4abc-b1e9-e567483e9e20"
        },
        "item": {
          "id": "e07fc776-b5a9-4cd0-865f-3386bf1d97c7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "70ace327-63ac-4cc2-ba45-84487c51f09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af733287-4232-475b-8d63-43bb6466b900",
        "cursor": {
          "ref": "b05e5a8b-1b4c-4e9b-8af6-c5530fbf8e44",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "14154e9b-a9b5-45a5-908e-7ab8a0d99a3e"
        },
        "item": {
          "id": "af733287-4232-475b-8d63-43bb6466b900",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e4b71243-73cd-471a-a05d-3d3dbd37720a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70cfce67-fc10-43ec-bea1-8e44fc239185",
        "cursor": {
          "ref": "be495e2f-f3e1-4a30-bd4d-28e61f8de329",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "520dea38-64b2-4c6b-9f17-dbf1ef843fbe"
        },
        "item": {
          "id": "70cfce67-fc10-43ec-bea1-8e44fc239185",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c08f6cf3-e953-42cc-ae21-1842bbcee8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba906e31-757d-4423-9d8d-c6121b150eb2",
        "cursor": {
          "ref": "5bfca3e9-8f91-4b6e-b1d9-e5964c4c3417",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6246ce67-4d6b-4764-8e6a-f4cf3e482dcc"
        },
        "item": {
          "id": "ba906e31-757d-4423-9d8d-c6121b150eb2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e202b58a-78da-44d3-9a4e-fe81f06ed34f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94fc27c0-40c7-4268-ae68-d1acfdb46350",
        "cursor": {
          "ref": "803550d5-b9e5-440b-9a9a-6707d639dfa1",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "fc2f312c-2f16-4a20-90fa-8517eef27e13"
        },
        "item": {
          "id": "94fc27c0-40c7-4268-ae68-d1acfdb46350",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0d0d75d2-7870-4f56-8501-b03d2a283865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f743ef8c-ecb2-418b-af17-f6f00f67d078",
        "cursor": {
          "ref": "fe5b7dd0-7d9d-45de-ad47-859973a38280",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7adccb8d-0f4e-495b-a938-0b975aa01240"
        },
        "item": {
          "id": "f743ef8c-ecb2-418b-af17-f6f00f67d078",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "25f22bde-cba6-4231-82ca-6c117c74d57f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b312c838-c9c5-4959-8880-8d1cf6ea1aa2",
        "cursor": {
          "ref": "89a23d39-61c9-4dca-84bc-b419c6f4313d",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "155c60fc-a6f4-4185-8212-a17c1d95cb89"
        },
        "item": {
          "id": "b312c838-c9c5-4959-8880-8d1cf6ea1aa2",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8734c246-a2ec-455b-b1d7-70747d27e02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59680f3b-f77d-4689-b1aa-66a84d37a5cb",
        "cursor": {
          "ref": "5a9c0019-c5bd-4785-9988-efc6b29f6daf",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "570a0bf0-e35a-4a33-86bc-ea08f59474d7"
        },
        "item": {
          "id": "59680f3b-f77d-4689-b1aa-66a84d37a5cb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "36f8f6ff-db38-414f-a584-a3c1de758d1f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa1849e-0689-4b8d-b120-f531229f368c",
        "cursor": {
          "ref": "78ecd091-a409-4610-a27e-3caa1f15293a",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "06a505b1-f670-4c0e-a462-3d5633a96354"
        },
        "item": {
          "id": "9aa1849e-0689-4b8d-b120-f531229f368c",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "73683b8a-d28c-46fc-9542-7ee89a842602",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 35,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a707f01-9b56-47e7-8911-b210f2b878e5",
        "cursor": {
          "ref": "ef6f4f14-0a5f-4b90-b352-a144f4a989f7",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ff0aa543-cf87-475e-803b-005931f3e4c9"
        },
        "item": {
          "id": "6a707f01-9b56-47e7-8911-b210f2b878e5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c4b2a41a-d543-425c-a9ec-8f60f01d6210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a707f01-9b56-47e7-8911-b210f2b878e5",
        "cursor": {
          "ref": "ef6f4f14-0a5f-4b90-b352-a144f4a989f7",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ff0aa543-cf87-475e-803b-005931f3e4c9"
        },
        "item": {
          "id": "6a707f01-9b56-47e7-8911-b210f2b878e5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c4b2a41a-d543-425c-a9ec-8f60f01d6210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d20cc4-9269-417b-b66b-a1346263b22e",
        "cursor": {
          "ref": "583945f7-086f-4814-bcc0-d80f2f27ead9",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "639b2976-2e75-4552-9412-66ac2032b457"
        },
        "item": {
          "id": "c9d20cc4-9269-417b-b66b-a1346263b22e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8e80bb8a-f356-49fd-a168-d0dc6b51d2a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c110e627-3ad7-4e1f-8268-34a682dec072",
        "cursor": {
          "ref": "6ccc4409-1305-40cd-a582-b89bf79d2ac7",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "654a3d5f-dbd8-483c-a88b-44e032b236ff"
        },
        "item": {
          "id": "c110e627-3ad7-4e1f-8268-34a682dec072",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "11b05515-5df8-4825-8bf2-ddf4acc813e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83db02db-feba-48eb-b94b-3ee8abcc239c",
        "cursor": {
          "ref": "cf436172-c8aa-4bc4-86b5-d1656cff89c0",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "13c71527-6642-4712-a3fc-63936b79f992"
        },
        "item": {
          "id": "83db02db-feba-48eb-b94b-3ee8abcc239c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "60543906-bbe5-4986-ad73-cfd4cd900a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e300741f-83b7-4a8a-94e9-f786c06e9bce",
        "cursor": {
          "ref": "d25782f8-bde4-4b1e-a4b4-8b9afe0b5a93",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "496f40c7-5553-4afc-a76c-744c7d9bfed9"
        },
        "item": {
          "id": "e300741f-83b7-4a8a-94e9-f786c06e9bce",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a13b5ea0-ba51-4866-8adf-5602122a43c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1c95e8-313d-4163-a5e3-7df1d3d76bd8",
        "cursor": {
          "ref": "2885b1cb-f32e-472c-bbda-0f97843a390a",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c38e1355-0d6b-424e-a92c-3a9084f841fa"
        },
        "item": {
          "id": "ae1c95e8-313d-4163-a5e3-7df1d3d76bd8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6c524ac6-b725-45ae-a5d4-424a591bcc6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854245a9-5828-4917-9a76-f4bfc3fb2df2",
        "cursor": {
          "ref": "f9d4d720-8f37-4be1-8b6a-9110b6b7991c",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "cc1f0a38-fa46-4066-b532-56146114b766"
        },
        "item": {
          "id": "854245a9-5828-4917-9a76-f4bfc3fb2df2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a41f0911-66f7-4eb2-8da1-e24a55c1e55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1a8211-da17-4de9-b6fc-9f264dcf647a",
        "cursor": {
          "ref": "0afd1998-3d47-43ec-b0e1-30039f27df50",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "21146252-fbad-40aa-8137-163ff08fc353"
        },
        "item": {
          "id": "9c1a8211-da17-4de9-b6fc-9f264dcf647a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8cf83e75-d60e-4b1d-a7ef-cee731634dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136f9ce6-e94e-4bdc-942c-8b3f9c5535f7",
        "cursor": {
          "ref": "27e62585-3818-445f-9df9-c86bdccc6c07",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "593a75e0-5e87-4b15-b371-45d6111c4dbf"
        },
        "item": {
          "id": "136f9ce6-e94e-4bdc-942c-8b3f9c5535f7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "76ed95bd-c239-4076-9d6b-938d7cfafe54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def42b26-7da6-4bd4-b407-d4c639cfcb37",
        "cursor": {
          "ref": "d46e3441-8ff0-49d4-8845-0484dfe82c57",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "41b2a9d7-9297-43e6-8213-dc53cdeda164"
        },
        "item": {
          "id": "def42b26-7da6-4bd4-b407-d4c639cfcb37",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f5799273-6b91-4046-8ebd-d209a9874944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a57d811-ab4a-418f-bcaa-7e7ea40c7a53",
        "cursor": {
          "ref": "ffdc36d8-b4d0-47cf-8134-93d4c94d962a",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "419f2e81-5bf4-4317-b4a7-d39b5ab99be0"
        },
        "item": {
          "id": "2a57d811-ab4a-418f-bcaa-7e7ea40c7a53",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e0f4e63f-e25e-47ae-8e66-6bab2d14c11f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80081d4-1ec3-483f-98ba-87273b88eac8",
        "cursor": {
          "ref": "022e1a83-5909-41fb-ae2c-3583a98842d2",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4342dc9e-0d66-4214-8d42-2daf26428b0d"
        },
        "item": {
          "id": "d80081d4-1ec3-483f-98ba-87273b88eac8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3d7f3f5e-f824-4952-9643-5dda46d1a079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d640d8e5-70d2-4f9c-b8f3-f2a105548c23",
        "cursor": {
          "ref": "4165a3bc-bfe1-4597-b3e1-96eb7aa357e7",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "836d0fbe-3975-4f32-b115-e99556c0c09a"
        },
        "item": {
          "id": "d640d8e5-70d2-4f9c-b8f3-f2a105548c23",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ee9abbde-697b-4d24-9ece-fcdf48ac3f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4774b879-4f1c-4395-8e8f-823bec31dbcf",
        "cursor": {
          "ref": "a18a890d-5358-428e-9676-e2168d1b531b",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f6b7b235-1a5f-4f06-a521-3ac732326d57"
        },
        "item": {
          "id": "4774b879-4f1c-4395-8e8f-823bec31dbcf",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "321832a6-96e9-4cb8-9486-8a86f002bc23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf74a3a-dfcf-4e29-bbc3-f6ba57d6dc63",
        "cursor": {
          "ref": "256092cf-49f5-41c3-bbff-f8faee1ba45d",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f2ad8c1a-feab-4376-96cf-64acf79d2335"
        },
        "item": {
          "id": "bbf74a3a-dfcf-4e29-bbc3-f6ba57d6dc63",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6ec2834d-b565-4e37-ba67-b267af1db378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39660cc-ce4d-46ef-b9fa-19b5c8dfe4d7",
        "cursor": {
          "ref": "5eb13d3f-b577-4bde-b475-8d4cd64c663f",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e66d11c4-6a5a-41d4-8843-53657e9a4378"
        },
        "item": {
          "id": "c39660cc-ce4d-46ef-b9fa-19b5c8dfe4d7",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6f3a7722-6892-4469-bbd1-91c0a791bb64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6ff10d-735d-4857-b23d-8f9b311030a6",
        "cursor": {
          "ref": "45c37ee5-2e42-4520-bae9-76db3ef74bfb",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "22c242b5-748a-4b5b-af83-7e58351b7ed4"
        },
        "item": {
          "id": "1b6ff10d-735d-4857-b23d-8f9b311030a6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5fa8750e-d264-4b52-8417-76788ef237de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a319d3-8bb6-45f3-adbe-8319b193b28c",
        "cursor": {
          "ref": "4b4ce390-11c4-475c-813c-2053940ccfe4",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "942023d6-844e-4b65-ba87-6e65fd1689aa"
        },
        "item": {
          "id": "95a319d3-8bb6-45f3-adbe-8319b193b28c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "61e6a8a9-042a-49fd-b091-6cfb848bc8ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0128fa-ed86-4100-9438-f0d320be03d8",
        "cursor": {
          "ref": "9f604079-5646-4aa9-aca5-e767f8ba1d53",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "15eadcd8-c005-4d5c-8414-a1578d8547a3"
        },
        "item": {
          "id": "3d0128fa-ed86-4100-9438-f0d320be03d8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "65ae901e-03eb-438a-ae19-c7e2f80d21c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d119807-3f5a-4e6d-9671-664f4cbca495",
        "cursor": {
          "ref": "69fcb2c0-40e0-4325-af4e-dffafcb031c1",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "715411bc-cf8e-4e5d-84d5-f7c5da6b8a37"
        },
        "item": {
          "id": "3d119807-3f5a-4e6d-9671-664f4cbca495",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "69c05e4d-c10f-4922-b494-edf3fbb70e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca493be1-a4ff-4b5b-a553-29e9eb48ab69",
        "cursor": {
          "ref": "bdeb6a5d-a5a6-47b6-9639-4b6eb7289b5f",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6c613ab3-8692-44ab-9b3f-55ff473eff7c"
        },
        "item": {
          "id": "ca493be1-a4ff-4b5b-a553-29e9eb48ab69",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "33ce217a-b0d8-4f77-bcd2-b2e2506fc4c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b924251-705d-4f80-a60b-6d9cbb580a99",
        "cursor": {
          "ref": "09f7f8ea-bb9b-4146-b78f-1d67bbef755b",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1acbdc9f-2c32-43d7-bb48-a8aeb8ca23e0"
        },
        "item": {
          "id": "1b924251-705d-4f80-a60b-6d9cbb580a99",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "33230363-b506-4f9f-9622-453e3d59590a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134504df-e9d8-4214-85a4-b97b231a02c0",
        "cursor": {
          "ref": "f6fd31b2-e6db-4efa-ba82-400464f6f3b5",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8adb0083-8865-4320-99f8-e8f49dc20283"
        },
        "item": {
          "id": "134504df-e9d8-4214-85a4-b97b231a02c0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b1242d40-b778-484a-91c1-faf7416a0593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90230607-b4a0-45a4-8638-07db605021a3",
        "cursor": {
          "ref": "2f495600-ffe2-4fbe-8596-5fb5b9d77cbc",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f71235da-08b8-4f06-af4e-ff0cf924b4b9"
        },
        "item": {
          "id": "90230607-b4a0-45a4-8638-07db605021a3",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b52832f8-91bf-4658-9f6b-cdf55ce48ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2fa691-4c8c-4337-abee-8d9d20a652a0",
        "cursor": {
          "ref": "849a44ca-7252-4271-800a-95fc5cf809da",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ced18026-6b2c-49df-a77d-285f2720ebac"
        },
        "item": {
          "id": "6e2fa691-4c8c-4337-abee-8d9d20a652a0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4dfa7272-db13-40b3-818d-ecd5be01c71f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3798a4e-95a6-4310-80e4-418799ecb782",
        "cursor": {
          "ref": "6f6af2dc-f821-4cbe-aa17-2c8a6491e664",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "078c9ef0-f024-4378-b973-cf5ce545212f"
        },
        "item": {
          "id": "b3798a4e-95a6-4310-80e4-418799ecb782",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f5bbd6e7-c992-49c6-bfe9-c16829ab6d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9450e2e2-e728-4967-b8c9-166ea4b6c324",
        "cursor": {
          "ref": "188d5201-447a-4c64-8bcb-db16f7cfc40e",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0f2d20bd-4fdc-4d36-b139-d97c023b1a77"
        },
        "item": {
          "id": "9450e2e2-e728-4967-b8c9-166ea4b6c324",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d79cb17f-bf6b-4a8e-9958-69e7b767645f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49417bc2-1545-4c49-9402-15cddfca407a",
        "cursor": {
          "ref": "ef65c9b9-c8b7-4692-99d7-deda13ac1f2b",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d4764c70-5ea1-451f-a469-9e002eda864b"
        },
        "item": {
          "id": "49417bc2-1545-4c49-9402-15cddfca407a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f0027201-1037-44f1-86c3-36d92e83ac37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33eb9b58-01b3-4a70-a351-979033cc6089",
        "cursor": {
          "ref": "cbae30c2-ca33-420c-9a26-b88e9d7d4680",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "14d30e7c-6f9a-4060-863f-ed0f841829b8"
        },
        "item": {
          "id": "33eb9b58-01b3-4a70-a351-979033cc6089",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "23aa13e0-5182-4fb2-bbbe-034c4a608771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0bba81-4646-4eb6-8e71-3bb02d7c6cc1",
        "cursor": {
          "ref": "94964627-af14-4b87-b5c3-150c7403c354",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fbb9003d-646f-458b-bad0-ef8451239e8d"
        },
        "item": {
          "id": "6b0bba81-4646-4eb6-8e71-3bb02d7c6cc1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "911ca1d5-d1a7-4f89-84c9-cff24247af05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60990c6e-ef39-4cce-bb71-2d2bd6e0518b",
        "cursor": {
          "ref": "b11c3d82-0360-400c-a249-fdc85d6bdf27",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "326a1fed-f230-4ff0-b0f0-ea9545736462"
        },
        "item": {
          "id": "60990c6e-ef39-4cce-bb71-2d2bd6e0518b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7c43305e-6580-4550-ab46-f98cb5b90c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7b508e-e503-4e8f-add8-435c71045898",
        "cursor": {
          "ref": "3d9b1c8d-a0f5-440a-bb6d-87c33a85a725",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c22b4ee0-3c05-46ed-96ed-cd04fdf464a2"
        },
        "item": {
          "id": "af7b508e-e503-4e8f-add8-435c71045898",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "78dc5bff-4b03-445a-afdf-7521211301f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f536bf0-12be-4d68-81aa-a149fa5c5e49",
        "cursor": {
          "ref": "37f80128-7c1f-44eb-b2d5-74a775972d39",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9f9254fe-3a06-434d-bbcd-7f3c0e1dfe3e"
        },
        "item": {
          "id": "9f536bf0-12be-4d68-81aa-a149fa5c5e49",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "197192f8-7240-4303-85f3-dc1a782bd40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f796d3f2-ddba-4ed5-b81a-1dfa933e57b0",
        "cursor": {
          "ref": "4261f2b6-4c95-4ba5-b0f0-fc4ba793771a",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1d00fdc9-9627-4771-bfd0-563f60bfbe3b"
        },
        "item": {
          "id": "f796d3f2-ddba-4ed5-b81a-1dfa933e57b0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3e3c1f4e-63f3-4b18-8eb4-0441391c23b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11167de-202d-44a6-b5f2-62143b53ba5f",
        "cursor": {
          "ref": "dfb3a607-0e99-4d69-941e-822af8d26444",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "78aed280-2126-494b-9a4f-d0f6ede1938d"
        },
        "item": {
          "id": "d11167de-202d-44a6-b5f2-62143b53ba5f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1f65d2da-b1f3-4620-9fc5-5851e11fbff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "674fb15f-5767-4868-a47a-974258dbfbb5",
        "cursor": {
          "ref": "045d5f3a-4781-4c7d-8ac2-7318ecf70d91",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c55cafe0-f216-4fbc-8b83-3ff3f916060c"
        },
        "item": {
          "id": "674fb15f-5767-4868-a47a-974258dbfbb5",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "74d6369e-bbea-4261-a4ac-b9c957f25181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c280535e-85d5-499e-b7d1-82dc43c62d0e",
        "cursor": {
          "ref": "dedff0ef-c9ab-45fd-937c-ab5efc651de7",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f51f6239-ca23-4e6d-825d-9cde9bc08731"
        },
        "item": {
          "id": "c280535e-85d5-499e-b7d1-82dc43c62d0e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e3af89ca-5ebf-4860-a91e-445401660b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19bac0bd-19da-4992-a1dc-3f3adec8cf4a",
        "cursor": {
          "ref": "a668ec65-8c00-4714-8de4-eeea5a23c44a",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "31bd0af2-c582-4b49-b5ab-60df254ac09f"
        },
        "item": {
          "id": "19bac0bd-19da-4992-a1dc-3f3adec8cf4a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ab41b218-d981-40c1-b3f3-8760133bdcec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49ea07e-8977-48bd-bfca-dc968615b86c",
        "cursor": {
          "ref": "0282b1b8-1f43-4459-9c58-deac945840ea",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f0ae9894-8322-4368-bd30-502aa26f8e1c"
        },
        "item": {
          "id": "f49ea07e-8977-48bd-bfca-dc968615b86c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9500802f-a64d-4ba4-9a91-3be992975e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81dbb5e4-bc79-4bb1-94bb-28e58d6ed958",
        "cursor": {
          "ref": "956abec2-737d-41b2-bd02-3199bc3f858a",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "555e3278-d461-404b-8b25-65dd0a378075"
        },
        "item": {
          "id": "81dbb5e4-bc79-4bb1-94bb-28e58d6ed958",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2cb68ba7-8ceb-4569-a0fe-81b838344745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8088cd92-4ac9-410d-9f6c-30e09a59fdaa",
        "cursor": {
          "ref": "c9907318-cdd1-47df-81c7-16c7957449b3",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ef3e2c15-a473-4b32-9887-19cbffb229a6"
        },
        "item": {
          "id": "8088cd92-4ac9-410d-9f6c-30e09a59fdaa",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "dc0750c8-5270-4aab-a12c-8518d1ec37e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451cbbf9-d974-4c62-bf6d-5b62dfeb0e78",
        "cursor": {
          "ref": "4fee971a-6fcc-4f87-9642-a129500205bc",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5d0939e8-43f8-41e7-a094-a0195add9dd6"
        },
        "item": {
          "id": "451cbbf9-d974-4c62-bf6d-5b62dfeb0e78",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "87169165-4c0e-4abd-9149-6279f3881da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e32dfb-25c5-40cc-a08d-cfe182fe94df",
        "cursor": {
          "ref": "06391a77-1bc0-443e-b911-6b0a0a9bf9d2",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2c87ea34-9d29-4104-9826-b45979303259"
        },
        "item": {
          "id": "02e32dfb-25c5-40cc-a08d-cfe182fe94df",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a36639dd-b084-4e4b-9ee8-935aeaa99fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c329c2-7943-423a-8315-d788fbf7b9ce",
        "cursor": {
          "ref": "a669b168-61bd-41e7-b22c-17dd907bb0cf",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f6f410d6-a772-4943-b117-a5dba11b04fb"
        },
        "item": {
          "id": "82c329c2-7943-423a-8315-d788fbf7b9ce",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9ba05872-95f5-42ae-8b32-2747e6126fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b8f338a-7f73-4e20-8799-425a5cfb8dd7",
        "cursor": {
          "ref": "1930777c-6459-40f9-bd40-6c9a79d0c4f0",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5a6222c6-edc3-40c4-a628-a4ff1ad6b153"
        },
        "item": {
          "id": "0b8f338a-7f73-4e20-8799-425a5cfb8dd7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c5eb3b59-e8ef-46a2-b1ca-85871438cb65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e620c9-3697-4477-9557-89007e7e84e7",
        "cursor": {
          "ref": "0d4d3f3c-94ae-4756-9b91-2a3403290a0b",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c0f2062a-fc0f-4c67-96e9-53320bb1ecae"
        },
        "item": {
          "id": "b1e620c9-3697-4477-9557-89007e7e84e7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "efe62ca3-60f7-413b-8112-e23087ac4ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8375e7-2450-4da0-a4ac-8c74ac00541a",
        "cursor": {
          "ref": "0b9fb8a2-1ac5-4a32-b867-f23513c0d8a2",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4f6f000c-03bc-4a4b-9421-894428491074"
        },
        "item": {
          "id": "ea8375e7-2450-4da0-a4ac-8c74ac00541a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6ea9e093-ba7c-4e09-b13b-93e7ce092f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efcd3bb7-0b9a-42b4-878d-19d8fde0c9b8",
        "cursor": {
          "ref": "a460c92e-ca59-4a7f-8e1a-07f52cad88a9",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5a1ff564-39b8-43c8-b464-1007157d4042"
        },
        "item": {
          "id": "efcd3bb7-0b9a-42b4-878d-19d8fde0c9b8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "45dc9f60-ae2e-4e2f-99da-93001a77e6da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6239c865-5607-4978-b21f-ecc61276deb2",
        "cursor": {
          "ref": "80552934-0a8e-47de-b45b-d7129c18ffe7",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8be328e7-1c78-44d7-9224-3bdda8374677"
        },
        "item": {
          "id": "6239c865-5607-4978-b21f-ecc61276deb2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "47eb25ed-ca86-4f7e-b6f2-d52c777c209a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892ee10b-c84f-41d3-b701-5912f6dbf595",
        "cursor": {
          "ref": "714370e2-139b-4254-b851-62dc92f8e121",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a9d72435-4d2e-4dc6-88cd-25422e5184f5"
        },
        "item": {
          "id": "892ee10b-c84f-41d3-b701-5912f6dbf595",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "78134f5a-d8e9-4b43-b025-3dfc0de7576a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e680ce94-5bb0-4994-b72b-f4b7af48593f",
        "cursor": {
          "ref": "bd2e65be-9206-4fcb-8bca-3192b3518164",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "000eecd0-da39-4175-8ddd-1d024886b647"
        },
        "item": {
          "id": "e680ce94-5bb0-4994-b72b-f4b7af48593f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bb3e1679-21d8-4362-b6ed-9b2eb3e569e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e333d490-f89b-4228-ba0f-4774ad738f95",
        "cursor": {
          "ref": "c6e62a56-f833-41c1-a349-acd638fda0c8",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "93ed2e1c-0174-4d23-80a8-9bb5f23f8bba"
        },
        "item": {
          "id": "e333d490-f89b-4228-ba0f-4774ad738f95",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7ac5630c-9f0f-445a-a19b-9d177bbdb305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17ecf3d-29bb-44e6-a720-02358367a4d7",
        "cursor": {
          "ref": "4da2504c-31c6-45ea-ae73-6f9e67c7beee",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "28137b3f-0276-4237-8b1c-d0b66aa82d25"
        },
        "item": {
          "id": "b17ecf3d-29bb-44e6-a720-02358367a4d7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c339eed1-b27b-4983-94ab-a1457e836f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5dd65d-2d27-4b87-8e39-232022e6ac0c",
        "cursor": {
          "ref": "2934d3b8-4b14-4577-93dc-bc30417584de",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0e93ad03-4344-4773-9273-f1d94b0c5822"
        },
        "item": {
          "id": "7b5dd65d-2d27-4b87-8e39-232022e6ac0c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8769c893-7acf-4f98-bf7e-d621320ce390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c20cf64-9da4-4abe-b09a-74c7f485f61c",
        "cursor": {
          "ref": "e5d3c21d-ea15-477e-9d6b-4aa378e342a5",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d2209ce4-7e22-45f5-9dca-351a59f79cc4"
        },
        "item": {
          "id": "1c20cf64-9da4-4abe-b09a-74c7f485f61c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "38dcda5d-a2e8-4f19-8102-e307678197b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8089a6c-db61-4ee5-8ba9-e504e2ff721a",
        "cursor": {
          "ref": "573f8210-798d-4ad0-9b25-331425ce1d77",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "91a39928-8db9-482e-9686-a9062af5309b"
        },
        "item": {
          "id": "d8089a6c-db61-4ee5-8ba9-e504e2ff721a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "aa9b9c1c-9d36-4201-9ff0-ea27c26295bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb23bffe-49f7-4634-b28b-1e0036985e6b",
        "cursor": {
          "ref": "510991ab-a221-4660-aaa7-cc2ba41a0073",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "039bebaa-184a-4e51-9283-284087c36a14"
        },
        "item": {
          "id": "cb23bffe-49f7-4634-b28b-1e0036985e6b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "908d37ae-7793-46a3-a5fc-e27445ef4b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505c5053-2c4b-43c9-bc3b-eafc96ec523f",
        "cursor": {
          "ref": "9229d3a1-5ce6-4d08-964d-36a9a30def6b",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "675b332e-06c1-48e8-ba2f-853065c55c59"
        },
        "item": {
          "id": "505c5053-2c4b-43c9-bc3b-eafc96ec523f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ccf858a5-7634-4bd2-ae32-5dd6ec014fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85521e44-0fdf-4f30-8c33-68acc9f54480",
        "cursor": {
          "ref": "49deb0f7-ced4-40be-98c9-c94ba2292a9d",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1ed48feb-dfe0-418b-ad78-bb57f964038e"
        },
        "item": {
          "id": "85521e44-0fdf-4f30-8c33-68acc9f54480",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0d40d84e-0978-464b-bd77-a6e1e36a0f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e011218d-0c21-4d5f-963c-dcb66c034f42",
        "cursor": {
          "ref": "796368a9-286e-4a8d-a775-9bc2cb7a76d2",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8a375e59-824d-40ad-b1aa-232ccbfd9abc"
        },
        "item": {
          "id": "e011218d-0c21-4d5f-963c-dcb66c034f42",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ab22de23-a3ca-4e22-a47b-94076902b27c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b846fac-54c0-48fd-8ff3-4da9c142be0c",
        "cursor": {
          "ref": "dcbdc3a1-fa7f-41f7-b7ce-936fdc7ebb33",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "238f380d-fa31-4e1d-bda2-5933bc3ddec0"
        },
        "item": {
          "id": "3b846fac-54c0-48fd-8ff3-4da9c142be0c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "33ef059e-9771-4f30-b555-b535ab52d617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2b3f99-dd5c-49ef-a2d7-b2b351df361f",
        "cursor": {
          "ref": "721533cf-cbca-42ff-83e5-9aae8adc4df6",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "af62cc82-ace5-4ed3-a1d2-f958659ff53c"
        },
        "item": {
          "id": "6a2b3f99-dd5c-49ef-a2d7-b2b351df361f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5fe57f33-85be-4973-a5c7-3b11e8257641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711fb3da-8011-4ecf-b8ff-6545fdcf5872",
        "cursor": {
          "ref": "583a4714-bb72-4749-8a07-583fffab8acb",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4b070fa4-dc72-4be0-bde7-713b45f87131"
        },
        "item": {
          "id": "711fb3da-8011-4ecf-b8ff-6545fdcf5872",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "17efa7aa-fa95-4064-97c3-bfb55397e200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c973a9-cc1a-48fc-a876-f38d69bd05a5",
        "cursor": {
          "ref": "ea0aacdd-da63-40d4-ab3e-4a81ce3a279a",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "da3dd34e-3637-40d6-ac47-71951a039194"
        },
        "item": {
          "id": "67c973a9-cc1a-48fc-a876-f38d69bd05a5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e58a138d-3c76-4132-a7c8-bfa9d2c5cd4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39f32b9-bd52-4dba-b00c-92ebe9bb20aa",
        "cursor": {
          "ref": "5ac95d8e-a8c9-445f-9cfe-df1ce503a000",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "32e4e198-eaa5-4b67-b2da-8762f9238790"
        },
        "item": {
          "id": "b39f32b9-bd52-4dba-b00c-92ebe9bb20aa",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ff434a59-bad3-438a-886e-5ea660b8a399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229af435-6268-425a-9383-d5c50449ac1e",
        "cursor": {
          "ref": "d5b6e846-f588-40ce-8ee7-51af8c9f2f2d",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "fb38436c-7771-4f76-9757-f5285905815a"
        },
        "item": {
          "id": "229af435-6268-425a-9383-d5c50449ac1e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "34f5e9c1-c487-4b18-8cac-9bc9f56312bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9ddbaf-103e-477b-abaf-917fc11885dd",
        "cursor": {
          "ref": "2d795d15-b445-460f-9158-a28a4692a286",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2383228d-394a-4394-be08-6c17c52ae6f7"
        },
        "item": {
          "id": "2c9ddbaf-103e-477b-abaf-917fc11885dd",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d3683040-7bf2-4933-aa36-07de6d485c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b077d80c-d2fd-4e1e-b2cd-6f60525a4067",
        "cursor": {
          "ref": "2832b1e4-6d96-4f33-8123-5b125da36866",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "221495e6-c7cf-42a5-b5bc-496259e94aec"
        },
        "item": {
          "id": "b077d80c-d2fd-4e1e-b2cd-6f60525a4067",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7cfaeb50-efd2-4280-8292-e4e9713b8eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10dcde0-01d8-43e5-b2ed-1917553f5c40",
        "cursor": {
          "ref": "089fca31-1bd4-435c-94de-535b64273b84",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "202b82b9-067d-4d1a-9215-e6f440eaf4aa"
        },
        "item": {
          "id": "c10dcde0-01d8-43e5-b2ed-1917553f5c40",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e90843df-eddc-4fe4-b1d9-70df3327c040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b1f2dc-777c-4825-bde0-0feda6b9fb54",
        "cursor": {
          "ref": "f5750b94-48f8-44fc-8d73-c7c4648bea63",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "411452e1-6376-45b9-a980-add0081316b4"
        },
        "item": {
          "id": "62b1f2dc-777c-4825-bde0-0feda6b9fb54",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6829399c-6e35-4876-af6e-7916aa4c1cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93896119-e75b-4413-8078-ec84701dcc35",
        "cursor": {
          "ref": "32c8a623-4b52-4f90-b801-6bb6c4cdee76",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e2777a42-3a1c-40b6-a7fd-9594ef1544c6"
        },
        "item": {
          "id": "93896119-e75b-4413-8078-ec84701dcc35",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4c36c3ac-dfce-4e49-b06d-a01333cd548e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293a6098-3c69-4eb8-aac2-5ea7a941c0ba",
        "cursor": {
          "ref": "665ae363-e324-452c-83d1-638a442eb575",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c1272d31-9962-43f8-8d3f-87853bb87f9c"
        },
        "item": {
          "id": "293a6098-3c69-4eb8-aac2-5ea7a941c0ba",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5105a01c-04d5-4002-a376-8a9ef9511bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2996dcdc-68f2-485f-bc67-07da7c9e8236",
        "cursor": {
          "ref": "58ce0649-7060-4871-b560-25e2d9c38708",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a43f4b27-3fa7-470f-b585-dd8eac3a00c4"
        },
        "item": {
          "id": "2996dcdc-68f2-485f-bc67-07da7c9e8236",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "75845899-b085-45b5-99e5-9f5e95fb7e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49783fac-ef28-4530-9a94-8856b55f2676",
        "cursor": {
          "ref": "4063ecf3-f10a-440a-8637-ac5c3ae38923",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b8a3f314-1289-4ca1-9cce-de588f7c5236"
        },
        "item": {
          "id": "49783fac-ef28-4530-9a94-8856b55f2676",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "da7c95d9-8c5e-487b-8b04-37577c037546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b223210-ef88-4792-9906-cabf2cc83eb6",
        "cursor": {
          "ref": "b2e89749-ff60-4e6d-9ea3-3c786e373126",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b87fea0c-aa10-4a32-8bb2-8c1cc26fc6bf"
        },
        "item": {
          "id": "1b223210-ef88-4792-9906-cabf2cc83eb6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e8e88e68-7210-4b7c-80fc-94d5ef5ce186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31bfeced-a01f-4203-8565-ac2491b7aafc",
        "cursor": {
          "ref": "7d819af7-ad03-4467-999a-3153ed001bf8",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6a7a38e8-2514-4c1a-9e2a-5f5e51e022b1"
        },
        "item": {
          "id": "31bfeced-a01f-4203-8565-ac2491b7aafc",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1a839043-a75d-4e24-b473-dfdf68986969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e42584a-52e4-4ce7-8d3b-0fef13beb6b0",
        "cursor": {
          "ref": "6ddbe79b-0957-45f3-b153-6c11a68666c2",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "434e3570-3485-4af1-b051-5428750205c8"
        },
        "item": {
          "id": "4e42584a-52e4-4ce7-8d3b-0fef13beb6b0",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "39ece1a2-e533-43ec-bf7a-b7264aeb9c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7f318d-bf94-40b1-b952-849280a18bb0",
        "cursor": {
          "ref": "65dda011-f007-4934-85df-d4c8932c0df3",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7aeb5784-15de-4c93-ad1c-b769a5284604"
        },
        "item": {
          "id": "7d7f318d-bf94-40b1-b952-849280a18bb0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f22b2f3a-e925-4c89-b629-b073a8e1d00a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ef507b-7b81-414a-b47f-1fd691b7173d",
        "cursor": {
          "ref": "5447ff42-d241-4baf-be0f-73a4f115105b",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "de3da06e-3002-4397-99a8-949dfc4e94e3"
        },
        "item": {
          "id": "79ef507b-7b81-414a-b47f-1fd691b7173d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d24ff29d-2e08-4298-96af-f15f73980038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c839f57-f0b8-4c02-a416-b68c08610f55",
        "cursor": {
          "ref": "c9474401-2b63-4957-8b9b-bdfe0d5c5f68",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "98dba9db-977a-4b28-9141-7942e382c26e"
        },
        "item": {
          "id": "1c839f57-f0b8-4c02-a416-b68c08610f55",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c8dc12c5-e1d1-4f1a-9e12-13cc18d65e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f1657f-b61e-4255-bf54-9718aa8f8605",
        "cursor": {
          "ref": "6c5d059d-396e-47fe-804f-f444770c0a52",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "71e0e3d2-8522-4263-b7bb-1952ec941e00"
        },
        "item": {
          "id": "37f1657f-b61e-4255-bf54-9718aa8f8605",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "585d8319-7b68-471a-a8fd-6f075dd1259d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5148488a-bb9a-4531-905b-fe800b853de1",
        "cursor": {
          "ref": "c74cf9cd-7224-4694-96dd-f87ab290ff1d",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7eab80a5-2343-4aa6-977a-f3d5453b61b3"
        },
        "item": {
          "id": "5148488a-bb9a-4531-905b-fe800b853de1",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "febdbac5-c373-4c49-9036-4f4f348fe16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a851b48-1616-4f0a-9155-4be35ebc773c",
        "cursor": {
          "ref": "132e51bb-0792-4bf2-85dc-75634b79a71b",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "eb66bd9b-f880-49d8-9596-65fbe010e292"
        },
        "item": {
          "id": "8a851b48-1616-4f0a-9155-4be35ebc773c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6a4911ee-97dd-4873-99b9-57ba704b2afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee482fd-bd95-4cdb-80c4-afddc0e125e6",
        "cursor": {
          "ref": "6449e49c-fc15-4e8b-9815-5e84c743f23e",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "aa1ff9ef-90be-4f4e-ae69-ef0304e98570"
        },
        "item": {
          "id": "5ee482fd-bd95-4cdb-80c4-afddc0e125e6",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5ab4e05b-0683-48ec-b381-c8f5e8448d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175f8ad7-20a8-47ff-a22f-468c92adf10a",
        "cursor": {
          "ref": "d58b7f89-4fae-4c2b-8bb6-b04b079b7933",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c7ffe21c-7ae9-46a3-ac95-ba010f49f9ce"
        },
        "item": {
          "id": "175f8ad7-20a8-47ff-a22f-468c92adf10a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c6d2e867-d1f7-4b6b-bce5-d0d838811e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf23ca2-781d-42af-83c1-fd0c666f4a86",
        "cursor": {
          "ref": "471418a7-9ad5-4435-a7cf-298b43f8e4c5",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "395d3cac-ab35-4e44-817f-0fa6e502431a"
        },
        "item": {
          "id": "9bf23ca2-781d-42af-83c1-fd0c666f4a86",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d8b6afe5-4332-4f77-993f-b3dff55dd24c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fea5fe2-3aaf-42ee-aff5-9a0dc3c2b53f",
        "cursor": {
          "ref": "bd6f71bc-f051-43f7-b1f5-43e53f184c7b",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2322a0da-0ac5-4cd5-ac2f-97957510e7c2"
        },
        "item": {
          "id": "9fea5fe2-3aaf-42ee-aff5-9a0dc3c2b53f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "497898c5-febd-47cb-98a1-a1ac7d49f1a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d57bff-39c6-4a6e-b4f3-7e3b986a9018",
        "cursor": {
          "ref": "9b43a1ac-19b7-41be-ab5e-43b5a725bae5",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "36682912-74bb-4a49-bdb6-24ba537dcfa7"
        },
        "item": {
          "id": "a0d57bff-39c6-4a6e-b4f3-7e3b986a9018",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "72f64333-d8e4-46e5-a4cd-7061557dd70b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965248e9-611b-4081-b1ce-30fb23c86c22",
        "cursor": {
          "ref": "52f7ff3a-1b4c-4960-af87-bb2bd5bed700",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "63d8dcd7-3fe8-4b08-a49a-fd90e4f2b83f"
        },
        "item": {
          "id": "965248e9-611b-4081-b1ce-30fb23c86c22",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4cf0b939-dfa6-4168-b91e-565840207a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f2a3e3-4c6a-4802-be12-068596a1ea9e",
        "cursor": {
          "ref": "d79e6d97-7924-45f7-9cff-2cd8ff00f22e",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a4b9ef6c-7c67-4b60-b23b-3def51c18eca"
        },
        "item": {
          "id": "d1f2a3e3-4c6a-4802-be12-068596a1ea9e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a461968d-9112-43c2-837b-5858d6c08742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5accd2b8-b45a-42cb-ad9f-28be3b5d4dd5",
        "cursor": {
          "ref": "66c917e2-c3b2-4634-8f4d-57bb0cb9708a",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "22f34c45-ef4d-49a5-b237-8032f3be9c88"
        },
        "item": {
          "id": "5accd2b8-b45a-42cb-ad9f-28be3b5d4dd5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e31c0c54-8f06-4be2-af49-a13bd3626300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea51e134-963a-4f32-ad54-48b5823b3f13",
        "cursor": {
          "ref": "cc71e3b4-e45e-407a-869d-4707a95344db",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "58d1fa58-8ec8-4c32-97e3-ebefd8b5a630"
        },
        "item": {
          "id": "ea51e134-963a-4f32-ad54-48b5823b3f13",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "aa0ea7a0-f4fa-4881-a9f8-beeaadf08472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b43084-0556-4a68-9cd8-86f890f0bcba",
        "cursor": {
          "ref": "3d40c1a2-5f3c-4e93-9e18-9e3547b10018",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d481ccdf-e59d-4726-b788-86b8d8c2f148"
        },
        "item": {
          "id": "28b43084-0556-4a68-9cd8-86f890f0bcba",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e9c1984b-91d4-4b90-9236-2ee5cc715fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0be036-4fc0-476b-9f55-0ccb7dd5b45e",
        "cursor": {
          "ref": "3d1de9c9-0cef-48dc-87e5-65cd1bab65f4",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ceb550c1-4c37-432f-83b4-227e5561f03b"
        },
        "item": {
          "id": "8d0be036-4fc0-476b-9f55-0ccb7dd5b45e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "05e7c6e5-b0db-4fca-bf7c-f81bc81eeb1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea805720-e1c5-4f41-9cba-38a7a3f2a7ca",
        "cursor": {
          "ref": "7972241d-3fad-4bab-b1f1-a0ca4130699c",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2db42424-70dd-4ba2-b20d-e3b63f2c782c"
        },
        "item": {
          "id": "ea805720-e1c5-4f41-9cba-38a7a3f2a7ca",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "94ac9b81-9e29-4478-8a24-0cb2a9eaf158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff98938-7fe6-4b27-8cd8-f6171dfa9f1c",
        "cursor": {
          "ref": "3b616813-fac8-4592-8041-955ff51124b9",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "cf657910-4fae-431d-abe3-1a09d5a321a9"
        },
        "item": {
          "id": "8ff98938-7fe6-4b27-8cd8-f6171dfa9f1c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "dc316a13-cab5-4dc9-a645-bb1ba78eee0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6498e3-c67a-444f-a7cd-599fc19d340f",
        "cursor": {
          "ref": "54d08e03-ca01-40dc-a5fa-248cb90232db",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "239fb441-6a0c-4dc5-9b5e-73fb5d87888f"
        },
        "item": {
          "id": "2a6498e3-c67a-444f-a7cd-599fc19d340f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1c73a65f-3b33-4000-ae1d-d180877588ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd4bc77-ff5f-406e-8771-e37e95947a8f",
        "cursor": {
          "ref": "3919762c-6e10-4db8-b0b4-8509555a25c4",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "53e414f2-4c20-422c-bdc1-6b695fd6b990"
        },
        "item": {
          "id": "9dd4bc77-ff5f-406e-8771-e37e95947a8f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "add3ee5d-08ed-4094-bcfc-95dfedb43e5c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab4c6ad-f749-4b35-b526-ebe0e83ebf06",
        "cursor": {
          "ref": "35bb9e92-ee57-4eae-9589-539d3015ef5f",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0526521d-18e6-4e41-a5b1-094982dda379"
        },
        "item": {
          "id": "dab4c6ad-f749-4b35-b526-ebe0e83ebf06",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "97e9bde8-f727-4cb7-a102-6e63d56c9093",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 34,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06fdd8c-afaa-4a01-93ed-5fa30577787a",
        "cursor": {
          "ref": "2fd215c2-5bfa-445f-9b73-50199a4bb53f",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "85323dca-5c4f-4035-af2b-cbcde7f74435"
        },
        "item": {
          "id": "f06fdd8c-afaa-4a01-93ed-5fa30577787a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "73356664-e673-46f1-9569-c8612e267070",
          "status": "OK",
          "code": 200,
          "responseTime": 36,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb20c1b-6a7b-483d-aaa1-05e3ad27867c",
        "cursor": {
          "ref": "4f8b5277-0db1-40b2-a44f-b1e9ca9eb3ac",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "69477d01-7872-4f40-9914-fc4dc1a683d3"
        },
        "item": {
          "id": "ceb20c1b-6a7b-483d-aaa1-05e3ad27867c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8a1313fc-6f0e-411a-9902-c11785984b2d",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "103d6fc7-7020-4e37-a5f8-d61bb6318f91",
        "cursor": {
          "ref": "6557c716-92fa-4014-88eb-bbe2ceadfe4e",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ffb81e97-3498-49fb-a385-0686b6bc7b31"
        },
        "item": {
          "id": "103d6fc7-7020-4e37-a5f8-d61bb6318f91",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "178f7451-863d-49be-8c3b-45436d9b7a2a",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "023ccee5-4f9e-44d3-a8ab-01dfc29edd46",
        "cursor": {
          "ref": "291765ef-61a9-4f6a-b1ee-15c8c47ec796",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "41beda16-a96f-418c-bf40-62d80e2a7570"
        },
        "item": {
          "id": "023ccee5-4f9e-44d3-a8ab-01dfc29edd46",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "862dcdbe-2fac-4d06-86e8-6ecb009058a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023ccee5-4f9e-44d3-a8ab-01dfc29edd46",
        "cursor": {
          "ref": "291765ef-61a9-4f6a-b1ee-15c8c47ec796",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "41beda16-a96f-418c-bf40-62d80e2a7570"
        },
        "item": {
          "id": "023ccee5-4f9e-44d3-a8ab-01dfc29edd46",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "862dcdbe-2fac-4d06-86e8-6ecb009058a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023ccee5-4f9e-44d3-a8ab-01dfc29edd46",
        "cursor": {
          "ref": "291765ef-61a9-4f6a-b1ee-15c8c47ec796",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "41beda16-a96f-418c-bf40-62d80e2a7570"
        },
        "item": {
          "id": "023ccee5-4f9e-44d3-a8ab-01dfc29edd46",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "862dcdbe-2fac-4d06-86e8-6ecb009058a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c9cf48-fed2-4b5a-ab94-f2dce396c893",
        "cursor": {
          "ref": "79de1a25-022e-40f0-ba25-98ebd04be7bc",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f5e1bd75-0cd1-4a84-a0db-334872e83099"
        },
        "item": {
          "id": "93c9cf48-fed2-4b5a-ab94-f2dce396c893",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "69a052b2-ae72-478a-ab16-fc1e2496f582",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 35,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31bfd96-dd3e-4eb1-9fcd-f11a7e7611d9",
        "cursor": {
          "ref": "ba7e51ea-cc72-4c53-8d99-f64d97865310",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b8429435-ebc8-4c72-a778-a906d336f712"
        },
        "item": {
          "id": "d31bfd96-dd3e-4eb1-9fcd-f11a7e7611d9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9a804bd2-7ea5-4e47-a4ce-91bcdf5090b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31bfd96-dd3e-4eb1-9fcd-f11a7e7611d9",
        "cursor": {
          "ref": "ba7e51ea-cc72-4c53-8d99-f64d97865310",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b8429435-ebc8-4c72-a778-a906d336f712"
        },
        "item": {
          "id": "d31bfd96-dd3e-4eb1-9fcd-f11a7e7611d9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9a804bd2-7ea5-4e47-a4ce-91bcdf5090b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f34606c-c187-4b45-ba68-bc2dcc0c3ca6",
        "cursor": {
          "ref": "3df359a8-df45-412b-8497-64e276b0157a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "de33e614-89ed-4822-8de3-9e15c587e379"
        },
        "item": {
          "id": "9f34606c-c187-4b45-ba68-bc2dcc0c3ca6",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "b8995c87-c0bd-4897-b4db-1e9f2ab86ca0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 35,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388dcda6-dc9d-41b5-abe5-ae7b08f365c5",
        "cursor": {
          "ref": "52b21d51-867f-4312-ad8c-5792552dcf0a",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a93240f4-88a0-424b-9019-e27cb011e999"
        },
        "item": {
          "id": "388dcda6-dc9d-41b5-abe5-ae7b08f365c5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "cca5d0c9-c465-47b7-9231-928757a8c48a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388dcda6-dc9d-41b5-abe5-ae7b08f365c5",
        "cursor": {
          "ref": "52b21d51-867f-4312-ad8c-5792552dcf0a",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a93240f4-88a0-424b-9019-e27cb011e999"
        },
        "item": {
          "id": "388dcda6-dc9d-41b5-abe5-ae7b08f365c5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "cca5d0c9-c465-47b7-9231-928757a8c48a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f481cf-7838-4ec5-a790-9d5b7fc4405b",
        "cursor": {
          "ref": "6979dc32-ef77-47e3-8109-e445c259bc44",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c90d8bf7-ff9d-442b-a83c-6fc4a314ed1b"
        },
        "item": {
          "id": "d6f481cf-7838-4ec5-a790-9d5b7fc4405b",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "598fbbcc-b957-4d2e-bab5-560c8a3fc6a4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 35,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}