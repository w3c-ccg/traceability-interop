{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "35a59fae-6819-48bd-8bf9-0c7467779252",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d05916d6-88dc-4046-affb-670881ba8dd0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a550c16f-a42e-412c-9c2a-abaeab3da333",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a9fae769-4c48-448d-97d2-4a0191d976ae"
                }
              }
            ]
          },
          {
            "id": "6a0f48b8-ae33-4e59-8f05-7fe3046d61c9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d9b67655-737e-44bb-a068-fbb71596289a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2853afcc-8d25-4b58-9da0-bcb40865a7f7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "aa864bb3-5265-4034-beb0-ae012e19def8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "109ea973-403f-48d8-95d8-2891d4d3d6ea",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8a8f3cc1-caf6-4da3-bbf6-406a82776b3e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd4ee719-20c1-4dee-b285-645d2b0d2c37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cea8e294-1f06-44c2-af63-c7a70c04293e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fe4d8ef0-acfc-4b42-8bc5-9a50e65b09e5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d721d8c4-5d8c-4e34-9589-2d2873320e5a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "54e3d95e-b1b5-43f0-a910-3c5a3076c072",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f66dd034-4092-42b9-955a-7a96dc56ab02"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df5e84ee-51d3-4c40-bf23-18fe60a878bf",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "afa0dc91-4001-4dc0-8ca0-f2dd1d27279c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dbbad4ec-fa11-44be-ae37-a39268fa8a6b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "61f8b0b6-eaaa-45b6-8cb5-dc2f14a3f8ec"
            }
          }
        ]
      },
      {
        "id": "c5a790cf-5174-42ae-9627-a54498720617",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5ebfe84b-86ea-41fb-a210-2b1f11c5f11b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3a428226-4d87-414b-abee-48d75ef82449",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4b24a834-6764-4b08-9614-350886d96c22",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa1d0b2-9fc9-4ecd-b8f9-5ea00d8d00b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e715251e-7efe-4aeb-9a49-f098ff2e2477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce99f84-b9b8-43b3-acbc-95d8c371b103",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f54c175-fbef-458b-b67e-90527a169774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a015437-8843-4c2d-a0fd-48aa5bd35d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15093eda-b92e-4cbd-9349-fd3255b5cc70",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30271595-e1da-4307-bed4-8cab996ffe96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9979118-fed6-4e7a-b9e3-d75a90c661a8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1a85d3b7-a393-4733-89c2-29f9e49612c1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d2ab88af-9ab7-4d90-b1f5-8a8988dfabaf",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a656225-0e79-4b47-81b7-f45186a387aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81432ded-5fa0-4f58-803c-e710d6349933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc025ad7-331a-49a5-8ef1-69331fad5018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41c67c51-513f-4c0f-8e27-18268c0786df"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0187d19e-a840-463e-b2db-79fb1fe67a57",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b56b3eda-0a46-4ad3-a99a-034ef7469217",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "350c1259-305a-4d9b-ad40-a5fe527c62a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d41dabb4-9d08-43a3-bb27-1350d20fd2b1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8178ce4e-55a5-41b4-8201-8fcb570f8fee",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "fe6d81e5-1eaf-4f88-b8a4-81adf89856d7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4fa008f0-95ec-4ce3-b431-65e72bddbc42",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "30c67258-eab9-440f-97b7-24f13bc18be8"
            }
          }
        ]
      },
      {
        "id": "0389648f-7a9c-4e5f-b6a7-260431fbdd82",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "70d16c62-f0af-4c56-ad16-e44fc72bbdf7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2648af73-8db8-4da5-8897-acf92b9407b3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ea60cd48-e1da-4ec8-b115-ebf3fa89b847",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50004840-d757-47a0-95ea-252b87d1afb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42ede83c-2a79-4840-9f13-462ebd3aaf63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518cebd7-9404-4767-a1e8-7a608aaba532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84d1e55e-3282-4602-9404-53e6ea953df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a0a0e5-cca1-4299-a438-efaa2ecf8c42",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4454ac4a-fcf5-4a0c-b35a-1709362e3c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0386ea82-1ccf-470c-af98-29105c5a0637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2fd59a-1c5f-49ec-a8b8-b6d52e8a4c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f489b024-90bb-4587-a066-4c8b65fd11cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f98914-9f13-4cd7-b703-4fb25decbdfb",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20022a0b-6d41-4c28-b790-0809cc78a966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f023b39e-7964-42c4-b482-59ce6e467c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d68c2c-ea7a-4578-8c8e-eac5058a31a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f34725b-80cb-46cb-86c0-0238eb2a55b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4760aa32-4c72-43b5-86a4-af1c6b0f28e9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fdd5a3a-9118-4ebc-9646-3888e8115b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85e0ef99-b1dc-41a7-8b46-e19f18611a24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577d2d87-7646-44a9-88a5-02ced40e85e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62ffd40a-c9b3-4b01-87a1-d8bf294b8a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5aeaa97-4aee-4a69-aa4d-5b775d8357bf",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd687811-6373-4ee5-9e97-ee98e2880089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e6a920e-251f-4a31-95d5-cddbe932d905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63bb773-5fcf-48d6-aee5-16ce7b14adb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52a3e31c-eebb-4c13-8c23-0903cec8cf11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e1363c-815e-4f78-989d-a95a43b858ab",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e324fc4a-73f6-41f7-a880-3ee63c092a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f008652c-f049-41e3-9674-b1a5b2dfc285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1771c389-a1d3-4ca7-8879-b50d0e954a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c7bb52b-69d1-4cf8-94e8-39ba69747e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e48b50-48c8-41b0-9f8c-cf07bac3fb67",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a689a18-fa87-422b-b4e0-8300560b0782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c392cd7e-44d0-47ea-bf51-f7ab9ef7514b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b75c03-9aaf-45a9-809a-5a60f384eb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8a0efc3-7ff7-4365-b36a-9ec7b7263aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9260884f-7f25-42bd-a824-482380309a0e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77336da-66a2-4b57-b928-167e04b96db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23d7a7e8-3788-4de9-b3df-b484bdb69306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91da13c-62eb-4289-bdcf-a20b1d7e0a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "482445e6-c7b6-4fe7-a732-c098f882b8e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7062ce2-527f-49b5-a38f-07a420c9d91b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5de510-d321-4eb0-927e-b892139fd483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "badf8be2-9dd7-473b-b260-495094182ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a5ffd0-98c9-4976-9037-f468be100e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a285f659-bfa9-45f5-b31a-4577fffb87ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0356ba-1bb4-4950-a65a-8f6ad3042ba5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c512d60b-7b51-4550-ba85-5aef1675f3e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a66e25a1-cc44-47dd-96e1-727192690151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88cc8f89-15c8-42b1-9a94-efd4248477e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "150e5d7a-faa2-4b00-9b11-addb8831a2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580331cc-f91d-48da-854f-b82629bc5ee9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1655d373-8b23-4602-ae4c-e1d6a85a8e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9748fad-c678-40d3-98a8-370e1552f5af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f600874-a7d1-4700-afb1-e9bfe9a66c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a010046a-59e9-445b-9fa9-68ba721edfd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77976802-cbc1-4e99-ab5c-8fe12d04cb64",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a815cfa2-8c72-4340-9f91-552d1cf5807a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02317442-94e3-44e2-b9bf-f9bd2b11645a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03381136-cde6-4289-a972-e02454dabaff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "811df160-8fad-49ae-8ffb-19a07dd326b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e078cb8-182a-4f91-8724-d99d2cee78a7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8ad623-56de-4fe1-ba8b-e65bf5e28c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78cbf2a7-3c0e-41b5-b917-46906a7e2d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edec1bb2-256f-4335-b7ca-a835c13ab8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27865c1c-dba0-4c00-b98e-d36a80c02a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05118909-6ab1-446c-a2d2-1236c2a6ad0b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e65a48-67fc-40d2-9fd4-2a2152622db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5c92a98-a3f8-4917-9d9f-b7b7a66f8d22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd996f58-7945-4a69-9d95-f556518507c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38775884-92f7-45b9-b880-745f681faadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19c8868-af1e-4ad0-86ff-79ff5170453b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f35f3f8-105c-44c3-9272-c0c6272f18c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98b528f0-024e-4c40-8eb2-e5fee44c5c05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4a3ba4-40bc-4dde-879a-5c92b667f854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e122e24-bd86-457f-a2d3-94f8bef209a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c8bcd9-baa2-40b3-9b57-f8548c674e4e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62acf562-5e5c-426d-a4fa-682910ccdc65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a836bef4-5692-4625-8df3-a3f7f8700dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b13939-2b39-476b-b7dd-4882460024e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4ce01ce-78b4-4d2b-9609-e268aee17fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e27384-ac83-4f55-8dae-8772c7616564",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df837fb-1c0c-4e94-96be-e6f51c0fa462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7ecc816-4ccc-4f40-8753-1681a6087f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137694e5-3964-48b9-8a47-09094d945a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e2093f4-2de2-4c14-bcda-c8ece88adb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93bbbe01-1297-42c6-ad05-01841472bf0f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac1ab33-6357-4d00-8227-61b5a8f12cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4c510e6-a53d-4aaa-a129-3ab3bb083c8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807ee43d-420a-419f-a527-8b29fcad163e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "260fef9b-ffde-4b4a-8b3b-039d6d954fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866404e0-c350-48a2-809f-391eade4cef8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ce2601-6834-4987-a9fe-934c6341dc9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5946ed2-9c4d-4c5a-ad55-1e6389a8a5ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d55a93-126c-4178-bc9f-e9fae0e33e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a47c8811-bbc4-4c4d-b4b4-f3cc9fa36665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6488482-a26e-4f70-a938-33b78c4dbbf2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93b05fd-86b6-442e-869c-3c34050f6c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e545a0-d4bf-46d4-b7d2-ba2aa067615c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1f6cde-7768-48bf-86e2-584c8a7f7bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3420ac35-0860-4630-8267-861a3e90e336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5acae0f6-3d42-4e64-a2a0-334db9c5d486",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c899e09-f87d-44d5-afff-4a9efade3f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c49f4fd5-8c44-4642-887e-0c0851df3ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7869046e-02d8-4505-a6ec-d7cfb59ca45c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "028f0b0b-183d-4354-9e6c-e261b6b147cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf3e227-cccd-4811-8fa1-c1f688270a45",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ea3415-f82c-4c45-b18e-a2bffecd5387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15fe1399-894c-44ed-bdb9-1c07f8b653e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52137b0c-f2f1-4962-adf1-2310794dbd38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3444d716-e8fd-4f0a-906e-4f16b48cf327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87febaf9-8f23-495d-ba6d-284da7e2c295",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c1e0b4-3894-4adf-ba8e-4d012d38c48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4318f40e-5de5-4a77-b96d-59243710feeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3417097e-1f46-48b4-8db6-b54d74191fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ee2ff1b6-df1f-4ee3-9d20-0eec0bbffe38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e491d751-a039-4032-b4d4-133d415b6818",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aaa0c49-cf14-4826-9078-f1e17bef3fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd45f490-b48c-4b8a-b079-7354682ed5da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb69ef8b-b4ce-4a3c-9882-ef6db58d8faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "77d784bb-07c5-4bfb-bcea-ec17f257db64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc14ad06-ef4f-47c5-be5d-9d3926056d57",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ffd093-1d97-4fdd-b968-9af7460c0b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1593472a-8071-462c-949d-75880fe6d838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43b09a4-5c83-49c8-bd32-2b6beb1767e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdd52280-270d-4692-b49d-7c0d53be1387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72dde3b5-1bbd-4c10-86a9-a21257eaa7d3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c70b353-d039-460a-a98e-5eef52695eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ddef7a8-6143-402d-989b-7df4bec1c4f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffdc3cda-0338-43bd-9c5b-f5fe23d81dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e9984d-2dd2-4f80-bd7d-8f858f2d1db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764e4af3-dbce-4607-bd85-af1fcd4cf18a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3cb59e-b3ff-4abf-acdd-084b70830e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3de4a41-4b50-44a3-9994-8aa30fc9320c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e335dd-e417-481c-b649-b9612509239e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c49e01a4-1c7b-4a5d-b44b-c3b2cae16cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3271aee4-d4e1-4d00-86a0-11eb889ee7ec",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "149cad1a-3497-4ef4-b524-1f0648d02cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39685b0d-3299-4bdb-9b1e-32259c894ed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac6eecab-eac3-4bb5-b344-698f006d8d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "48a3b5a1-558c-4712-b787-bcdce0e998a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d3e6e7-30b9-45f5-91f7-2845d5aaf612",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65b4a2a-079f-44a3-a34d-16ef8b4970d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc6c804-d895-4744-9888-9e65523e8826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7adde84-a1de-4054-b935-6450cc25766e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e68ccfc0-f5b8-4935-8f8b-4789c0730ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26eb5481-de69-4d59-a402-4b3ba819df6a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "626d5183-e970-4990-bbb8-6f3e391e6a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e34acbc8-71b4-4503-964c-558cf0ee3d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7532bafc-9438-49bb-bdaa-7c8f726bbbad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce126ca4-8c86-46e5-b807-c1a0ec7ca198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1991f7c-520a-4702-b47f-38398ade915b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a5ab70-ca87-425e-9237-91a7b9d174c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "234186d5-de10-449d-88bf-cee5b54f3c21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209c742f-98a1-46ab-8892-b5427d0dc97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe17f066-be76-46f6-9481-410630dfb5cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc3476a-b5ba-4bba-a194-2917b0d1c8ac",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78a7536-8b86-4207-b1f8-50a78c221acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e27c862-74a1-47ec-a8a3-fbf0a9cad330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b604bbb-db56-4bc4-a1cf-24b892131918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa2d81be-130b-4695-af6d-b06fb15ed8df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1907a99-b458-4228-8d79-06ae272dad64",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad40f53-0609-4298-beb9-f3155b7512ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee92d599-5afb-4875-a23a-21b76186005d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6039e376-a196-457b-9f2c-086fb5fdefc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f52fbfb0-6b47-488e-98e7-d289ebdc0393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e421819-a816-4813-8f73-22335325f07f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9acfe8d0-f09c-48a7-af3e-c7533bdcfd7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8808afb3-2484-4ad0-a24b-2f0c79b1ca48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7f2fba-f377-46d8-ac81-9677f4fc176c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2903839-1882-41e2-a095-8fc28f846d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3166bd63-03ff-481c-bd49-918678b71ace",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d64b7f-ce65-46dd-837e-580bdb3b9ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a3f67cf-f583-47c5-93b2-e338ed204b0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3239dda-5ea5-4571-895c-280800612b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2c91df3a-84db-48fb-be3e-9f298ad4cad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37da766-1142-44fa-b50f-4164bf48787a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13cc9c4-0f79-4b6b-8970-005a80479233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f84ddf9f-f695-427d-8f23-b3e67d7fe632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0db4a08-e418-4d71-8db5-d77ffd66d706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d981f2e9-9c57-45a4-b630-e2d8e6e28dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb3c3ed-3e53-4640-9352-5a52bf670cff",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8f1ebc-5dfa-4fe5-8920-ab21f484b548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "023d7f30-bc5b-4dcd-bb48-c9ab259272b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da08b2e3-e054-4b1e-968d-14b3a27e86ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ba02bc-9bb5-4408-a0e4-c7ad344032e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ea933a-55fc-473b-8b7f-f5dd91265ff5",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0e1979-74bf-4ae9-b226-81870284be98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad5d43a4-88de-4863-85f9-70c01ca69fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3536c88f-4fa9-4a4b-9cba-976980fce241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "05d4b710-fb76-49f1-81f5-70048214c38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183e8b30-81ed-4f8d-8031-3509cf49758b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf03b26-99c5-457d-9039-526a332d15f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3051714-289f-4b5f-a347-e4349c0ca078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b474b004-5ccc-4fd9-ae9b-0ff1f3f6823c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ef8537d-b9c7-48a8-9168-c1ef021dd886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f7326d-63bb-4e2e-ab09-22945cb2576c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b319aa-cbd8-4c9f-9dab-5af59cd7e567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7560cf9f-b26a-4d11-909b-f99ad653a675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cbe65b-0bdf-4baf-b43a-bdbf8af4d433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "84f65222-1aaa-47f0-ac43-d211f30adc2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3092397b-df3b-4034-81e1-4b71b5a4e740",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd08e2c-0ed2-4141-8f5d-6b881afcdda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ff934a-cbca-4a1b-a84a-480038ac0b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1407909-2b31-4f27-9c22-dd6b309092a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f984f5d7-6b83-43cd-8ebe-4c72f0974dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af0fb1ef-210d-4162-9bc7-0bdb9242c089",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f15ae55-e9f4-4a88-ae75-8b6686c3e63e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbd196f5-2a5c-4c77-854b-45b7d5b30207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8813cad0-2aea-4a36-b315-f207e61eeaa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8f7387c3-55ff-4e07-9669-976e210cc97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db096d0b-e5c3-48cf-9296-a9d96f264025",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3769f9a-1d8c-43d6-9fbc-fe11bf3a0f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bb4542c-194c-4453-ab5c-80d9ee161ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3817d2d7-b645-4541-b748-3c56e02ffe2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "99f983d1-b642-4397-b07f-b6a0a4970e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a989db4-69a3-4a26-aa83-f678286c410b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd6fad2-fddd-4ce9-b100-184bb2715279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ec6a0cb-1c6d-4b0a-9b4e-1c5b4c78e074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409def69-fb0d-4867-9c73-3d1f898e7643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a65da7-61be-4c90-b9ad-95a962ac5ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26c08be-c6b2-4094-b48e-49e79f2166f5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0a6e2f-0eaa-4148-a03b-225f5b753ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4fe7782-a8c8-457b-b6bd-6afcd7984327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb965634-0052-4b2c-b1a0-74a3faaef80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc337010-e5b1-4bfd-bef9-7df6f7e40fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286940c3-d20a-41d8-a9d9-f5f2a47879ac",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfcb11a-1f20-4055-b788-ba72bf789328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ac7213-b5c6-4c46-bf8f-bb6662e5fe9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054c71c3-0195-4861-b7d6-8788c47b3b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4eaadd0-46bd-404e-ad6a-91a5bb63f74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0328b73b-57cc-47d0-ab58-9afcac0b12a2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76be82f3-ed43-4c0c-909e-d599e3fe0965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "783cd65f-599f-445d-b0f0-764c3613ca46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c66e98-7e25-4a44-ac2e-32d2bafa3527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee7f7801-a98a-41b0-8be8-bdd46c8784d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1bfbbde-1ffc-4caf-b010-1af334ba8238",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f7cf75-5dac-437f-b758-5ea3a2052b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4457d6a2-0a41-42c2-a438-7ce0e199350c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d1c517-bddb-4803-bdb1-8bc35026d60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6643ddf4-40e8-4cb9-bb0a-03248366c577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21caf4b2-576d-4670-abb2-bb429597407d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a3f244-03da-4b1a-b294-6a795578c487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "642da812-e065-490d-8dfe-c96d08919f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67d0497-65d1-41eb-be3b-4f8184ce580e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0111b95-dc0b-497f-8ccb-3e1f3be48763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334a5ed8-ffc5-4e48-b2f4-40ede7405ed1",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa627b0-ecbc-4324-9ddc-1030a19aece3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c1b7028-3f28-4e5a-98d1-a60cb9ed676c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3a22e6-48f9-42a9-a7e9-49267cf6619d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8035a67c-48a1-423a-a54f-6f073ad259c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4554a9e2-bfa1-40a3-b9ca-f0d189e1d5ba",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "161eb7b8-636f-47ee-8646-66821f65380d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c115323a-3efb-4296-9157-72712e52ba51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d75c9a-3cfc-492a-88de-1e88d6c83fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ea06a7f-3218-474f-973b-cb0e6fc08cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d411b0f4-a9b0-4b91-aac8-8499090dbcd1",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25fe9c57-e1d4-4f65-bfa1-9a9e2ee75daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21827bf7-4069-4e42-bfee-6c4cb68da0ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b92ed9-4de6-467c-b7a2-427e12a8ca9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c45a8fee-024d-41d3-8809-c520d82875a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c2d8572-4869-450a-9360-3d2fd3e4d778",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f95c799-b582-4b41-902a-a36ca2a6c4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04b84393-c137-4358-b799-e357e33813cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954d4efe-c378-4866-8d8b-7f53494a0f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9fe2d7f-9ef9-4a23-a0b9-ef832343032a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de641637-87a4-42b7-b855-41d576cf4c89",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62621fed-11f1-43b2-9aa9-803559a6e4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d581b639-d0fd-443b-984d-f3abf4cd367d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975e0480-6367-49d3-833c-4d79fb17086e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f616eb2e-fef0-4eca-8232-8cb72dc9d3a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db68dff8-1dfd-4cb6-a13e-65d0c7a15056",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9768f560-b3b0-44a2-bc59-9ad957b5856d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8dc53ad-52b6-420f-bdc8-0ce89f91d293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb7f0ea-0de1-454d-afe1-b2ef9b0c4c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3227bbca-0788-4c6a-99c9-ba772d0c5d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5734195b-b014-4975-b298-a8415ba2a88f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abe1b8f-bd3c-4000-bac2-cd1731c852bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d73d0e7-aaff-4836-9020-4fefdf60b270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d75bad-57bb-4f2f-9b16-03a63dacd1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2c007c60-4757-4c5a-9f63-23641df09549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c342c0-0b0c-43ba-bb62-f4012b55bf77",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d618d2-cf7d-4f09-9f9e-41a1b08a71a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6a0bd2-16c0-47de-b851-08a8a8b07a7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77bfa8ce-c6d2-424a-860f-56b6d7922d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b5adec1-53ca-4104-a8dc-5978eb5381ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d58403-093d-46c6-9381-d9aa9344c38f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879ea652-7710-4e4a-9535-a2e788a9f188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04636b69-b53b-461c-b837-bf0789a9e27c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ee2674-aa85-4206-8af0-465127163f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9bd0bad-c850-45c2-a23b-8f14308cc05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd25032-0aae-4ae1-856a-fac2e51f9529",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef01f56-93a4-4be5-b605-3a55553a43d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf3866d-b519-417d-9096-f308c1729007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce91923-c0c4-4423-a611-86b11e932bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fa8ddf7-3b14-464e-aaa5-8dbcdd533c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7bc05a8-2d9d-40dd-9640-9a3458c721a4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3089a95d-aa3e-43c8-8ccb-b20ca733e5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac6f51df-0ef4-479b-9b0d-e5015d97364f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0330b7c3-c581-4c28-940d-57f5851e7c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "090e2f65-84b6-4a63-b912-8beb2d65dffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4ada33-a37a-4d73-bdad-904d2122d960",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600a4cb9-8d11-467d-9aa8-0108261b510a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c210460-03c2-4dca-b5ed-75b60a48857c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07871d2c-ecb2-4453-b76f-138a8672726d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f5a8183-a86a-4dab-97de-006c528f0adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331f5549-28e7-4899-9cf4-7ef1e978c21c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf83858b-a224-45c6-ab6d-908b800c3d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f20f617c-85e2-434c-855f-7b479330ff13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344d0990-39bb-45a2-8dfd-23605f7d7b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bd2f0bc-a42a-49f4-9412-86cd61e5d704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5057b3-ac09-41f5-bab9-25696466b881",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3392b9a0-ba6e-4eb0-9f77-ec7c5f786004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfba12ed-8b62-4844-afcf-ddd7c6813b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e60faa-974d-4238-97c7-d12a76090d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "da3b2b0a-9402-4220-b100-7a477bfd3cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c69fa2a-93ce-4c28-9525-80239c52ac76",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a24125-a05b-4762-8c87-a5a2f71595bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adee1ffc-cacd-42c1-aa82-ed234e70d7b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191ed7f3-1515-4d65-92fc-592192ff6e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ba941f3-e7ec-4339-bb8d-144b57c234c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f8ceead-879e-4c7d-bdc1-d49f0bb1109e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a147002-ceb3-4c91-a9bd-0c0fdc9ed563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff997d6-57bb-46fa-828a-2fd2ce85762c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad98577-47c9-4603-a952-653d5aae806f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6375842f-64f4-4748-84e7-06083ed25d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad01245-f279-4814-bfb5-1330ab43679f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4334e88f-0ac4-405f-a62b-53abc0a4600e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d395d946-be6c-4994-86c2-5cbead11884e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06f8405-8a6c-4c85-8cc5-5f22fbf8a73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "739cf716-9561-43e3-9d5b-996fb2127642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d52143-8c86-49a6-b091-e19f319ec3d0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80fb6cef-c63c-467c-811b-5e549bae34c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37fe18c7-8985-44f4-beef-9b2714e5537c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b68519-3b81-403b-8bc9-93e1285c2b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c0d0afab-9924-489b-83d8-08f1e5b62d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471f7fed-3f46-4cf2-bad5-28b1f5d47c8d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d817cc8-d4d9-404c-999d-5aea9927e656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "674d8afb-5383-4833-8734-84f75642fb7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e906e5-369f-46cc-9079-9fd81f54676d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "860f349c-6d92-4635-9434-e805ff05dd97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c276202-0d61-4af1-acb4-5dc8a2152841",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4d971a-595d-4ae5-bdd1-665563528224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9f18c03-e959-4fc3-a375-5d10cf678880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f68ed99-3bdb-4ae2-8ad9-57f10b4f2570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e15bc3d-5cbc-428c-979b-db7b286099df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37da74de-95b2-40cf-b83e-31a75b7f1d7c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31050131-6f4d-45a8-a792-90225405614a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d5b7697-e30a-4e47-86d1-ee5c624bdbeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0828da-9b86-4c0f-947e-b431b186e5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed727ed8-cf0e-46d5-a030-dd8880d1564c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff65129-7002-4420-846b-a8b812908220",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7744128-8904-48d6-8ee8-d45c9a069453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1f69b32-3229-46a7-a73f-fd048b683700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012c3112-5038-456c-bdaf-61af379c521f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3679a0c6-7fea-45fd-996c-0ff1fbb63846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe307015-61ba-4116-88f5-04315a323ad5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09a37a9-193a-4ad4-a2ff-9b69e512f8d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "addc0d54-d658-41fc-9120-e5c030bdb037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2872838e-2e46-428f-b4e1-6986f79469f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "52567328-6285-49aa-8537-822788b07327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a8b39c-4253-4267-b028-faf41b7c3ce8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70244054-09cb-49c9-a590-6cc1f3b88b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bad22032-8ccb-4eda-a5a7-12f070b61c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b6e907-1cb2-47f7-a216-0fcb5c49351c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e2729c6-c174-4309-b69c-f821b9c5ace4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d19562a-4979-4a32-811a-2614e8e6b51f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b331bdf8-9f3e-4919-a9b4-420f39ccb5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5daea376-7002-410b-a483-1326094fd3ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3bb4c89-707b-4019-8664-b1fbc42f4372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "89d559ad-219c-4b3d-a994-c0c5bdeb8ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84595dbc-f661-4d2d-8808-b4a719bc0d09",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a632309-f1aa-4d72-9cc0-b8f5f00fbcf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a94dba-c447-41f4-aede-aa5aeefb4d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80fb58e2-a1b5-4b0e-aa96-15e17e3c7488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "02f37c11-d994-421e-a8e7-8c53f4e0e8ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc292e4-270a-4e22-bd60-e7267e0d28c6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "138ef1c6-53f3-4f92-854d-670e5c59a911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e99de1f0-fdcd-4203-b130-6425f3b9e013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac083fd3-26b8-44bd-82aa-1b9da174cbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8862039d-3150-4d16-a2b9-d2482b1f9792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462152ca-aa24-4c0d-8e5e-255b0f2aa759",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db35436-6471-4716-ad13-b2e021a47121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40f3f010-415a-4382-82a8-b7624b23329f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b29a89-9cc2-4db7-b67f-c1a111360496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1f9a4ff-3b4b-4ff9-8074-7003cd062af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57a2f34-3c97-4224-971e-a55b68ec8437",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ffc803-273b-4538-90f3-3c70ae1e1980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21a565da-6582-49c4-85e1-fac4805bd8ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5ae72b-33ee-4064-9d29-b6d1d46b23ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "959329a0-3d48-41d5-b87e-568b76a707a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95779d0d-f973-4731-b342-cbd7d0297e3b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f4da8b-945b-4fe6-851c-92e8b9526323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbc8add2-a874-4d8f-9d26-8e8ad9b1f852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0d0f6d-3656-4956-ad11-0acbf2ae8605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fc5f4f4-6ca7-4b6a-aabc-7a598dac3e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10109a16-5629-4fd8-b200-8c039e4feacd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f9dc43-e889-4566-8797-fb66b3b45fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd3b1e2b-4215-4569-bf2b-af3106ce7e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ace7f78-1a80-4ac8-be7e-80683c839e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0573191e-7160-4214-aa5a-a6631a1bdac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0119094-58a0-4ca7-a6d6-f87d09300e40",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9294e3-56ca-4188-9892-26e2da03f8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db5fa777-20de-443c-afd4-e46ed62bce59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffbc345-1344-4a3a-b4ec-53c9be9895cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c39c356f-dff4-408c-b314-5eec39a58f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360a49a3-f487-4060-b910-6994c4d53804",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e65fa33-11ac-4400-b00f-b34ac2236c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd82751-ccf2-4387-8070-016045aeb254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0282df5-46ef-493d-9924-60819e0cec58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cf0eb74-6d0a-451e-b8cc-8a04631efda6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c3016a-6dc1-4691-afac-b1ca47ca83c3",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6320678-1f78-43d7-9433-3d41982d7771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd4a6e7d-d573-40c9-8adc-acab1e815908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09dd4567-94d4-4204-bcbe-6a22cc0d09be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d12a6188-3168-4f8d-9d7f-b8acee4939a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c525cc-5c7b-433d-9bd8-17812c9fb5aa",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83318edf-57f2-4c98-ac02-96eb2fc547fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "554c2b1a-1a51-4d9e-8d8a-2867eca6f23b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8869e40d-e00d-4ba9-bf5f-4941b5ce8095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f47dfc2e-368d-4cdd-be25-f4a01b7f5479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483fbf51-d039-43df-9fde-adf1ebb70c37",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f7a346-c7fa-42eb-a4ef-3095a98e11dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a63499fd-d047-4503-a1af-2c0b2563976b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4836821-26f6-4c71-875f-95c124696901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "084fafa7-4b31-4763-b133-045182691a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73da9cda-5e88-4d3c-b66e-52c7e606f7d5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62496b40-a6e6-483c-a898-6a78ca2a11bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f6c33d-2234-49b1-ac56-0d7bd74c8fb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "decddcef-b37b-4928-b462-906b2a9ca426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee11d3b3-23ff-4441-8ccb-bb08f12358f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aef3c40-e710-42dc-8780-2b03eaca09e5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0495b4-59c5-404f-9d7c-55eb738c99c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e63f884-9bbf-4adf-a403-c92df53473b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1113c4b-25f4-408c-a89c-ac0cbf4c9ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "86554431-1643-4f74-89a7-dd0a63a26181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9428ad17-2cf4-4491-b624-97d28ff0d1b1",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb31da0a-6d1c-4b82-9851-4d6571a0738a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb692489-a9a6-42f0-a6a1-4098cd8eba43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a076e5-a235-442c-b6d2-ee064ed1a033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d20d92a-dd8d-4c05-bd48-b0ecdd0c4267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f065e411-0ad8-4eab-9593-998a27d24afb",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6384ba-adbd-4ec7-9b21-c2a9e3fd50f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf550f9-ac01-4932-9346-9226e6dd9482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a28503-96ba-48ec-84ca-9a5220085581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0a1f5ef-b228-4747-a8c4-b5e34f2145ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c227ebcb-f0c6-418c-9b7c-2109a14af9cd",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f4ba64-669d-4975-9b87-7970dcfc1f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08aa2998-297a-4bdc-9141-09aa108cb731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c441fd2-5d2c-4254-92de-a96dffed94fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3eae781f-cb74-4b3d-a217-f97830362915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796bfe5d-c9ae-4c5d-8c81-6f8f5bae0874",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b7c6e4-3d26-402e-b039-a80dbb461dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa1362d-b09c-44ef-ba20-627ef63c8ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39c5b8f-0fbf-4e3a-b34e-655c480910d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "11aa619a-675d-4bdd-92e1-ac7f1a403bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b8e2a6-7f08-4875-b292-7f376c0b6e53",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03eade68-8a41-4672-b63b-56c589b3ba46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "08a37ea5-4ffd-4e8a-a928-f3018f01b5c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc6451c-91a4-473e-b176-081de38a0923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "db3e43ff-f867-4d50-b2d6-8d2fa35b8b0d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f4158346-3b3c-4dfd-8f0c-4e80f665ec01",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ff87976c-27a5-4dde-aa19-c2b8caef29a3",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87dc5ade-1748-43fb-a6b3-3daa4070a6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "383a5047-685e-40bb-ba59-e872f711e0bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5f63fd-785a-44cf-a62b-5a30412617b3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a945158f-d577-4780-ac6c-a45537803b5a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8951c1e-87ee-4d6d-bed6-c0e86c31af89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fde5ff50-feb2-4b16-9047-2cc96b1d2cc6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9413f4c6-154e-42ea-840b-51d25988946d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffa17841-fa7a-418c-9d3c-93660e0a251f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "caecfa12-2407-4710-b79b-98532a71961a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "52ab9782-2430-403d-8acd-d340d3fd3e17"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "82fd8b04-90be-46f1-9cba-ae9f8438e004",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c11be6d8-fc36-466a-8907-0e9fb2da0466"
                }
              }
            ]
          },
          {
            "id": "2af20199-8ebd-4440-bbbd-697a0c3aefe1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bcb6837c-adb4-4d43-b217-4bc2019ac580",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "be9a96c0-e3cd-46f4-803b-83c0379668a1",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b0a7af-7e49-4590-8639-a9a90ddfb359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f1cf5f70-3543-4979-bb74-420ac8cb5894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f3fbc3-e9a6-417f-b2e6-915e011c687c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb41d9dc-7c38-4df9-94ad-aafda7b37f36"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "96430d6b-5fe1-431f-853f-73ebed86bba6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce7dec8e-5422-414c-b625-053365876d1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5fcafc00-06ab-48cd-aab7-e77673d75a88"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "268ef419-0227-4561-90fb-31c4cdac2bd2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8234e0e9-f6b2-4aba-9077-ec36447b89ff"
                    }
                  }
                ]
              },
              {
                "id": "2a1d3926-80a2-4298-8df9-c8a4ae662f89",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0401da3b-683a-4861-8725-b34c09d3a405",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0074a968-98b7-462c-bf56-be26bfc9a2f6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d7a8762-2b42-4a0d-9b76-43ba67cfe1f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9db3e950-e041-42d9-a998-81b84dfdff7c"
                    }
                  }
                ]
              },
              {
                "id": "3bca30e8-f3e2-4cad-8807-183019009e2e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a598e70c-cdd5-4054-8ffc-9d905a8043d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6265f9ff-6bed-4868-a3d9-94ad67ca5290"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a585b23f-8cef-4835-b71b-ec4ef0ab4b9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "023e1b94-54b5-46cd-98ad-da36685e956e"
                    }
                  }
                ]
              },
              {
                "id": "bbd33024-2d49-424b-af44-45aaefd1e513",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "470cce79-0651-458c-a172-13cfd1ad8650",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f004f95d-1ac4-49df-a8c7-1076c6b1a1a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a261b07-172c-46b1-9334-6d42ddd83b99",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0048bad9-948b-4dda-a793-6b29022683ae"
                    }
                  }
                ]
              },
              {
                "id": "3428923d-4287-483b-806f-7f314ea66b91",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b56f821-3798-440e-a7ac-1123b7332257",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c60ec54e-1d6b-4052-bf90-3f54cffadb04"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80bdc5ea-8a70-4fac-b333-aede8c613eb1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "38b11ed4-143f-4312-8bab-4bed53a85ea3"
                    }
                  }
                ]
              },
              {
                "id": "e2bd6277-b8e2-4dbf-9013-e74c63369247",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9657ea0f-cc08-4bdc-a9c1-c578256605db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "51e8ae48-49f8-454a-92d4-c929bb1f2d90"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d1cc071-8af7-4ece-acd9-694c66195f64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "af0010f6-def6-4290-93ce-f20e752635bd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d96e2185-ed1c-4270-bcb3-9df48cff30fd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e7759c92-b96c-4a9e-816e-fef3868eee40"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "efa9f7ea-349a-47f9-8e9b-451d5b063cca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4a6c2532-eed7-447e-95e1-361e85392079"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ddb4ef90-de13-4810-ba74-2d28cb20976a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "be63fd96-4297-4709-aec5-f69fca4c137e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8b3e75a8-0036-4179-b8db-7ce662482a3d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bace6730-ebd8-4873-8fc6-eceedc3b74e6"
            }
          }
        ]
      },
      {
        "id": "97a0d260-5ee1-4d91-bd39-9ec5ea454b0b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c130913c-03d1-440e-808e-2fc2cf350ef2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5d314bfd-82e1-443d-ba76-5344dba1f7c8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8c1ce9ff-24a8-4b62-923f-d254c0cfdf33",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c6b313-eac4-406f-810d-baa51f9e1e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69736b41-0b3d-4778-a336-c9b014eda877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d922ca76-260a-4445-81c9-b870631ee534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "23c99b5d-9764-4418-8efa-3af2dc2390e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba905082-fa9a-4eff-841c-46160d941001",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6ed997-0e01-4de1-b975-b786db4da127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca8b19d0-4674-4999-acb2-7d0b3605e466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821ed5a1-87c5-497d-9fb4-52948ab785cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1128a379-c36d-4b00-b2eb-e5de4ce124c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2216b2a6-d33e-4a3b-8ab7-245eb28805df",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "897db8d9-10f9-42ac-9f41-5f87ee4206b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "964da765-48cf-49b1-8e72-908d01046d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca34dbdf-e1dc-4c51-b318-c120e93bb496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7701eb3-06e7-48fc-8496-5157a0444913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954d4df8-ea13-4572-a5a6-5ef324de85c6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f08443c-3b35-402c-8e68-5a958f945fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2e45eb1-4c15-46b6-9dbf-65a02f81ee07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382aed76-7ef4-4bad-aab9-37957e12a12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66ce4cdd-5c2f-4fb6-88f1-57cdae40ce06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600b6135-f952-4c41-86c5-f647087d1a14",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6697972a-860e-4a8a-aa97-f8f3eec29959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c2e221f-7dbc-4188-b848-61da4a7e0ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633278c5-4858-408a-bbfc-b376fad57f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ca593d7-8f5f-4de7-b591-81d0105dccaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fcc9d06-9d72-4b7b-8942-3e2dd3eac3c8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9ebf5b-de08-4629-950b-aa9dfbc723b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50f9cbbc-2e82-4eca-a23d-17f7b136a9ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1cbca6-07da-4fb1-8d08-73572a733dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "adf3b54c-fe02-4ade-936a-ba0e89963e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29fe1c5-ea0c-4f3c-880b-1d275b55d27a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0310f80-1177-432a-babc-32dd94839acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e8f80d2-59f3-409a-9783-d566149f3e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5164c7-2024-44ba-9fdc-5ebbe3879d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "48e9e23f-b8a5-422c-b8ce-f95c30dc2393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e89afd4-dc9a-41db-abe0-0d5aedc68e04",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2623f796-406a-483a-babc-44f3713ccb80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b60a63-3753-4482-a9fa-5b834b2c1b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5399af4c-35a1-408c-8289-6b093b862c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b92ec9bf-409a-4a8d-80c6-2df15b1dea76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d40683-b764-436d-8e36-0ca0461e16df",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74e7c2f-d219-4e90-9d23-b82e57a8be1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0491bcea-3829-4d9b-ba1a-1f0c59c40277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6feeaf-a148-46da-9edd-5cf763752293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9992e9c-7b88-4bf5-83a2-4fddb47ee280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f89f19-94b5-4dd8-b6d4-0234012f5db4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4299fe6d-412f-4b46-bb63-96717f9734c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72217025-8bcd-4aa3-b8cd-849a9c77d84c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c52057-b16f-4b97-8b3f-3f3e5669a314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30c73c8d-e783-4d11-a33b-50a91b319203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7ec8e0-0054-47b5-bc32-d58a9f9a3f0e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448bf1d1-608b-41fe-8aed-d2c876396902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4f93a55-ac93-4343-8b40-164da6c98c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47700668-66f4-4a90-b56a-aa64254ae354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a6a84b60-2c50-4d8c-ba47-36dce44d2c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8494868-0300-4d70-bf22-34f275bbc80f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e2332b-1057-47f0-92d0-18386eac830e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8e22d3-3aab-4a1c-acb2-5fb1bd96fe93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630ed567-21f8-43d0-beb7-2cc92d95f1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b5992608-d248-4548-8cd0-1ea421ddaa19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7665b0c8-067c-4eb3-9d2e-cf33513bbd0d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a045c388-aa24-408a-8d6b-c0e63268efdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61f6a5f3-2b90-4c20-a83a-6b9d5fae3049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db268ba7-a680-430f-b71c-22a158917b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc07eff8-222f-4b16-836e-bb5a8873f326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561018a4-e6e6-4fdc-b0fa-759556ea34cb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1fb549-9c6b-4d3d-8a66-13a049ef5927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ecef0d-1454-474a-9553-4c2cd9421f00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81da134c-a37c-420d-a7a4-bbd3f8d4b7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "26e5cce9-0570-48a7-a994-a886ae73a99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3e50fb-39b9-46dd-afa6-176657ad905a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6933331-8882-48d1-90cc-3c65809b486f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e52ebb28-5fb8-47e1-b28e-42748f375c29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7adf038f-d5db-4c74-9de0-9a70504c3805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "09f1893f-46c4-4c29-ab67-1a02a40788c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90970d60-f8e9-4a14-ab22-b5022b1a044c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871b083f-cc75-4c38-9204-8834bc67b79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b1bd25-249f-4f42-978b-b6824f685229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9cc848a-9917-473d-a4d0-ad52e4e67bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf4dfb13-4766-4729-9a37-8473b753b3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9c954e-4a6f-4b31-b593-c6f71b64455f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7e55c8-dc18-4ac8-9658-94c1bdbe6d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc10e4fe-5151-4715-a788-2078677eae4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fbe02f-84cf-47e9-b697-fa553375334d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b6b92a4-258c-4af6-a397-32b63a7b5ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9d75a1-ff47-4cb8-b553-c2896df66885",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14262a67-4b3c-472f-b552-3b2a1deee6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baaad615-6c4c-468b-81e5-c2d9b31255c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb6f113-80a1-4440-a3c5-8f7652360dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b3cae34-55a9-4d6c-987f-68e41bca7d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2031b64-e09d-469a-9f7d-449dca06edfc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9c4722-81c1-4a28-b5d7-87a750ac6ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27128dbd-03c1-46e8-b2e6-b9bd1c4f4ae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430af79b-4c7d-4ea6-b0fd-df0681b798e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e85266da-febb-453d-87da-1bf4c48bc0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a946bb-ec69-426c-8cd3-cdcf0adf0820",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30d79c4-2c7a-4969-951d-2d9a3dfe723a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0802802-9a1d-4871-a389-d66315ff0069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e863c1-2d30-4300-884a-20e243c2ce39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba19de04-768e-43e9-bba8-cf8b6c4ca206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddc1e07-27bc-42c6-bb55-ea11116af487",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e225519c-2946-4514-8fcf-1069730253e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b513c5c4-3792-41e0-b572-5603f167dd63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b370e51d-a411-497f-ba59-bda9e6258778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3aa1ec3-20e8-4a24-8acc-5e55ccd490b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c9e976-da2c-4195-8e1b-5db243f9d5df",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87760b2-9f77-4d15-9cd2-12e041c39013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a62bad-831c-48d7-b89f-8f76dc4ec752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674f94ba-af14-42b4-bd9e-57853e1339c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb274d4-907d-4f04-bcf9-a98a45695b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a919db-18ff-4a6d-9294-f9ff0d6f83e6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ecb4c88-f52b-4496-bf73-5650d1297919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3070b0b-5078-4ce5-8215-f31a5831874e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c2930f-97be-4650-bc62-78ce81bd29a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c668a1d9-f129-442f-89d7-127e651e2904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a5316a-d87f-4116-ab9b-99a9b9e0d786",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "519450e8-47af-4aab-a69a-1c157aa9f510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a6aafa6-cb26-48c2-8799-451a185df6d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0200e3d7-2700-4c10-b70b-c950cee6161b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4727bf6-9884-453c-bb39-c69d093337cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba74d471-8f87-45f8-819f-ccf0589d0a06",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efac7247-076e-410b-b874-249556f61d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05dee991-25cf-40fb-82c8-a079021e1c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231534ce-bd4a-46c5-a027-c4f0d39da750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6788984d-d861-4407-8302-372069d65996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915d3a49-e105-4244-b879-a7370e6d21cd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dacd41dd-de16-4586-9a2b-63bc057536ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d05b7b91-d28f-4049-ab1c-888efbb77300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b799cb-26e4-4c77-b925-9b713be9cb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7580b454-47dd-4907-bdce-338c0c82072f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f84fb2-6cda-411f-9283-bc0abcc0634a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47f0b99-4141-4b2c-b954-11998966aa44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "721c89e5-507c-4848-bc41-72646568c09e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12d97d8-4a18-4b48-83a2-56cc21a46760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "001caeaf-43a1-4917-88f3-92bdb82f610d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c95050-ff1b-4bd5-a407-929ec6598044",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bddb09e-569c-4fa8-b10d-fc819120bfca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35eca0c0-fea4-4c27-a89b-a74d1d01c4e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a53537f-a182-4e13-a746-2a67f800efb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49f58cc2-6769-48f8-9dc7-09c3071b78aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec246df8-3ad1-445f-b401-ec23b5d05e2e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf12be6c-f796-4f5e-b307-9d310b3993c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "030d60d6-9e57-4bf6-b3f6-00bca35c0524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f3b755-f106-41db-b4c6-26757152ebba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc7dc6c7-9982-48b5-bc11-baaedc3a6d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bec6aed-153d-49c4-81da-aaef77326e95",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89050170-7019-4370-84fe-c1d20b8388df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe77cbbc-1bf1-4188-bb4c-8885bc87e17d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b20b4b9-6569-4d2f-bd11-0bc13bb944b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ece442b3-9d18-4ce9-90cf-1ec82b01faaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e953cceb-1311-4c2b-a3ef-375e66edbe1e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9bd8d5-6bda-44c7-aa20-c03bea58ed9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a51d68bd-ab29-437d-91a1-5893a308d044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7423de6-1782-4394-a4ce-0c5eca5f1138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "faa2b772-551b-4608-92f0-63fecf1fadfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6005e9ec-b624-4990-966c-84052166493a",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f95f70-532d-4ce0-baee-f9fb6522ddd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e582e01e-dc9c-473e-b721-7af5e0b19077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df78ab6-782b-4dc2-b2ba-97d470211cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dca66854-c5f8-4399-95da-c0606154dfb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eefb6444-66c3-4317-9749-2eb6af44a47a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c19c19-e0e5-41d6-a708-dcae273abf3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b37b44f-4987-493c-8306-03cb1b067a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3663921-64e6-4480-ac05-90d1ad0a93a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0eaf6d38-00bf-48d0-b804-788e140637e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59552227-3b9b-446e-984f-637dd4d22939",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3016f3-982f-47b9-964b-92613506c0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db001e63-517a-42b8-b5eb-783ebadab8fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc10672-aec0-4ba6-9c73-3db4e9f77f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4f157e6-4ca9-4a56-bbba-51795debdb77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696608c7-2536-45d3-b1bf-423ec6177314",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d661955e-1238-4db8-a294-fabbf0dbf526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d2ff0b-e3d2-480d-ac0e-a5451e379af9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824fed62-aa6e-40ce-997d-d10678b1eacd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f22c669-cadb-4312-bbae-3a45a3febefa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c03f19f-d552-4d87-b2ea-ab76aa3de77f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "554834ba-1cf8-4b05-9edf-b7e706ad5e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "471000c5-c53a-4134-a0f4-0736bf352243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2832a3-bd68-402d-a841-40be643fdd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c87a7b48-697b-4a36-921c-e9f8bad6e6c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191125f8-8251-46bc-b5aa-2356d38abfd6",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c628ed-86e0-4ec8-a5d6-adeba5cd55dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf23cdf-a0b4-4558-9335-9d28d41d118a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7765987b-aeec-4236-91d1-19fc23e3f87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebe737e8-23ab-4ab3-9ca9-369792bcc63d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2f620073-43c7-47e8-aab1-d20837f9bb5f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9f6c6bc1-d577-4433-b8a2-387b4324de86",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec5a58b-bdb8-462f-8ca4-5bbb3f691441",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fdb0f83e-5853-4113-be4f-bb910faf8250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "addde3f6-116d-4ba2-9812-0a483eb6d303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72a38d46-166a-46cf-b87b-7742b7d1de25"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "670d5c41-d5e8-4e68-b75b-963a110560e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c317659-f0c3-4586-9946-19b909667724"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "32cabab9-cb6b-4693-b86d-2966b8dd1017",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ac3e743-306b-4886-8179-68f316f8b185"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "10620833-03b6-4e0d-aa79-5db9ae63c5a9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b0d08539-8c70-4cf7-b878-2be6c6c069d7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bba11e76-ca64-44e7-a7cc-cd7dc67035ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1df413af-cc20-4919-bc88-a4613375b7e5"
            }
          }
        ]
      },
      {
        "id": "0d49d9e2-11f7-45be-9155-b6e55430e536",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0e0867c4-1463-43e5-a11e-f0d9204d756a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "72ea92d9-47c1-4871-a74d-2fdc146637c9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "48f7bf6d-b91c-4b95-86c2-2eb734e0c977",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75bd914-950c-4a74-8934-6fbe9ceb030a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b0ac0a-2341-4855-bdd6-fa3241623bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56bae0a-775b-4a8c-b0a7-9e97a51a815e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fec928e-9b24-4fac-a8b9-f951aa770ab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc164030-fb21-4890-a326-c79caa04c8df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c788980-7089-4f3b-ae13-16e72e7f3372",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6de717-86ff-4372-a1b3-7c1a77ba04d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b28dd479-aad5-410a-8e5a-fdd6bea19bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05508eef-8592-476b-9e29-0abaa42e88bd",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dccca23a-d251-4aaf-90e8-ad7f4a64f4ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4fdedce-2890-4595-a7c4-aa9d4f60d06b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52608598-cc39-4d86-b16d-772d6ac01676",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68080166-fd65-4e59-b81c-8afa486d6ca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59918f39-05d2-4fae-bc11-a77b85a3cd30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f274f78-f587-4f22-8301-f6c566016992",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1288559-60f8-4a98-904f-75355809ec03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "983b70bb-bad3-44dd-b64b-55ff533ffa00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfce15e1-db3c-4284-8af1-6f7f78657b67",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21c4a44-0a7d-4770-92ff-fca558b59f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cfe1ded-2204-4ccc-b95d-0a88da255a5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4aca78-1b6a-44a8-87ab-06151aff2106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9989765-e156-4e70-9974-e09899c516d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5921cd-b124-4937-91fd-f847779b6502",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4c96b1-fc5f-4a8f-82fe-7f599c69992f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75c59277-c239-407a-b76a-94163dcfb9ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f41672-b9eb-4442-b83e-7dd7b310afa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "547862ee-17dd-4fb7-b33c-f075b14dd5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b990f0-1bcc-49e7-bd13-47a33aea4186",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773ec1a8-bc45-49c7-bab8-364087e217f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfe7afdd-22df-40d9-9df3-8a4094c896b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5006a15b-9b99-4479-ba15-fabaf3469686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4650136-6a20-4cdd-ac5f-b91d527e26ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33062a18-c579-4008-b1ac-b7eeffe4cf1f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40dcc32-eafd-479d-8425-07a99a10aa68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "360334ca-ae7f-4f7f-8e8e-079f0f5d99de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b85420-5294-4734-a3d1-fe888a344acb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "896924f8-71f2-44d8-8f7d-a46f40b9f164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ac4227-0130-4fe1-8b97-b916a5aa698b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3845419c-dcae-42aa-9462-9941304e38e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70b1b8ff-0632-450c-b6b8-ea0f875f0b4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3151abb9-1316-422e-829b-241a37acf322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f04ad1a-046d-4fd1-af51-6ccd9cabac2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae5c8be-32ad-4a19-b95b-77a45e540ab3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edff4e46-7809-4682-999c-603389ee5d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddf8f9ee-256a-44c9-b934-bf1d5cc2146a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48175e0f-abd1-4db3-8b40-34682766817b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2322c4c-f75a-4e5d-a972-69242ec27429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb456146-57b8-4a19-99d1-2e053d17a9ef",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c542d179-91fb-44d7-9ca4-7b05792a8b91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "986b6f10-a5ae-4d7f-a7ea-1dfacbc4146d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9003bcd8-d19c-4734-80fb-51d699699317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f76dde9e-db4f-416a-ae11-d90f4570b85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1871fd-b484-40cf-a7c1-d6bcf45793ca",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72c891b-1141-4e31-9a98-61b2eb6b9788",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9955981-2ecf-4ec0-97f2-4df4fbdeb404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc22743-af6d-4dc4-abc4-6b4a69061db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb14cf10-703d-431a-8f8d-5fbfb5d00a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b8d0cc-8aa1-4795-94c4-95c5d49582a7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb529f1-500d-43a9-adba-b341cf45ec54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cca65f3c-6538-422e-afec-ee596a495a81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f358b489-c9b1-4ea4-979f-5e848894e10e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde0c4db-3ee9-44f4-8a66-e4feb7332b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97066f04-a07e-4b14-974b-7199f1141aad",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1044bc-5e7d-4f1d-8779-ccda8e8c2d18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fe7b092-ae62-466c-b533-4f4f526b2af4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8cf697-6331-4cf0-ac46-924f798d5257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e94858d-0ec6-4dd1-8279-999652f6f874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9957ad19-16b1-4166-9d04-0a052b5e76ef",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265d44ed-f952-497d-b062-1c86822dc4cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcb536fa-4039-47b3-87e2-6bb424468ef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83bfa7b-55fd-4b7e-afec-429418064ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289666fc-e93e-4994-84e1-d81efc40f5a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1dc6010-2eae-4cdb-b875-15754a1ab3f1",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a345b5-4986-4eb8-8662-f7db3c6790fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b6f642-ea52-4a39-ada3-7ef8da3e3b93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "413f6d57-0128-4e30-a304-e3c1acff704d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49cd3fcd-3ca0-4749-948e-b2a4a2879e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65cc7ef-cdea-4a64-9def-e3acd5d72dd7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc29b098-01b2-4b0c-9a7f-c09788c766e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eeb0d15-a787-4cf3-877f-c850ff301e7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbddb78-a308-4bdf-9f33-29c68550c562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd2a626-7d97-46b6-99e6-33736ce1fa2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e6d256-112e-49fc-a37b-8d918ba0c071",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bab7574-6525-4079-95f5-a7c10d5a25d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79f1e1aa-6319-45bf-aff3-0d7cc3a656a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c112063d-4d28-4c7b-afce-94530d68d11f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec21f16b-4d56-4114-95f4-8cd52e293e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6fc69a-c76b-4c92-9610-96df782809d2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5318f50-7dd2-4d07-ad0f-8c602c36ac5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "748bbba7-fcc3-439e-83a5-5d105e16c388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f105abe-c380-46b7-91f4-74587e823220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "905838cb-e1bc-4e41-af59-e8b0b9009f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0047f1-6d01-4011-988f-36e375e8e82d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8443ac8c-75ab-48fe-b864-80d49692308f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea791168-59de-4403-92e2-bd9e05f3acf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "add66258-f10b-4226-ad56-a8b92d6dbde9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a787a3f-95d7-40f0-9aa4-e197e8777f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ecaaa5d-cbf7-4e59-9a69-64a920e19252",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39771738-d5c8-4891-adb1-16b54309d57d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afe2f551-a5d5-4b0b-9947-b94b791a5bec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57155ac5-9f1f-48da-b8d7-eb31a6da1056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39875159-6ca8-4a64-b37f-64cf9e7680f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9edd8b-69a4-4aee-ab34-948675c3deda",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21f09c5-55cc-40e3-95bf-0d6f24621f88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34d7c242-ecab-4cf5-aac8-854ff9f932b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6cd747-8a83-4792-bc70-6613aeb46fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea429d3c-d885-4f36-93fb-b639c036e45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9596a613-32ba-4651-b79f-5931538bf7f4",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b120e9-3264-4865-8d6e-87c6081e9d6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a00fc3e-8f27-42d1-bb33-f7d57cfc8a35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fcef8f-dbac-49c7-8116-1956835cec50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ac12e3-cb91-469a-b49a-24667b23482e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba0477c-e48e-4cf4-82ef-89e585215778",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f984f983-82f1-45b8-94dd-4ceb9f686b54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0059e861-24cc-469b-ba5c-a9a8ec5f4783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2cdf6d0-7661-4f39-bea7-9c5e07a88190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50894241-0df5-4368-ad51-47fe3672835c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e80cc5-45ef-4e97-b75d-4430ea1f8f79",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4f3526-248e-4298-a45a-2f5dbd71a549",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78436338-aac5-4540-ac85-17f52971f612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8843f8-53a5-4853-8ac1-159e0632eee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ebe2f59-d293-4722-8df0-7da1a0444b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2cd3088-46bc-40e6-b9d5-f0749a0335d2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052598d5-ee8b-4cad-841c-1df5a6d31b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd5d4c4d-fbd0-4e82-bf4f-b2b493cbfb97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "747100cb-ded5-478f-80e6-c633c5d0a947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890b7ecd-732e-49ef-a082-1801dd42ce1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb64977e-9aac-4860-a303-c0628f904567",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691bb6ad-2307-479b-a3cb-916465607b16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d19ba532-7d2e-4df1-8037-4bb9befb484e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "134370d4-b49d-4991-908c-987e9831c83e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "247bdfcc-345d-4c57-944e-0fbc0f93554d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610dcf24-91e9-43a9-bb1d-ba582f96d6a3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98aa990-97fb-4691-9c16-7df90ae5cc1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baa8d47b-d605-4058-8496-ab2c32ce6829"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef85c7b-dd6e-4c01-94f4-bc31029a25f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8904eaf-16b6-463b-a040-31dc2ced9315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3828fa2-68fd-43b9-be42-e2387caf30b2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192d06be-683a-471b-b92c-cbb55ae5b388",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30d72e5d-578a-448d-b95e-8fa39b4a4614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0fde9e-72ac-4d77-b175-ccd2a2534ac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6af18370-fe53-4d5e-a14a-3fe60957eae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5839f6d7-ee81-477f-a106-10d1a2356bb5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61350d73-6f36-4626-83b4-1412af18493d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7a99765-d9e9-4d19-ad35-4807fea3bb81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "918286a5-f5ba-4306-900d-ebfc0d5fbc9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fed4ec4-625b-4c3a-a700-72019ae46172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9747772-232d-4ac7-8612-150035134760",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b24114f-4b9c-4451-9288-78722a99d1aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc65d5d9-899f-4891-bf99-eb7f7021e7ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d82fe28-3b89-43db-a997-b80fe43e5da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2366b6e7-8f8d-4330-8ba5-175a49ec3892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70dbe467-5ff9-4435-8fef-4503582c7ffe",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0f5166-0d0d-4d63-90a0-4f51ba434eaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c600578-2ed9-4bbe-92d7-fccca1cd0fd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2faecc72-6c8f-45f0-9014-1fb456706789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a8839e9-9985-4efc-a3c1-a6d5b2505049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ba9e8a-31e4-4ce6-8dfd-8451f8b3a73e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a47ab12-cdf7-4a7b-930f-cdf7c63be951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84e85f65-8fcf-42f9-b6ed-9fda8e4d7c0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abff7449-f229-4011-92c4-01e080600219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "452450f6-c762-447e-9b15-e9e8f946392c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63aa948-cde3-4bb4-975d-8699a72faf15",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592ab992-b290-4482-a11f-7172555a08c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ae762df-24a4-4a30-b2b1-f9bd1b8d981e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98baf67-3036-4f5f-9414-d47917bfe81e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d5be656-8b74-4ec8-986b-d17817d77c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337aa496-f465-432a-abd9-6ebe05db2d58",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc959ee5-f370-49ff-8328-1bd486d591e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6363ad34-275a-4b9a-8b55-82a1aa88faa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc65a0a9-8825-46c6-bd04-8072a2403bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52cf472b-ab8c-4fe0-93fd-bf487f3c61d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a1ea70-a6d8-483f-8723-4af0ee99aa53",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102e7b16-8085-4a1f-b9a1-7ed13d35d333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b704f333-4660-45c5-8695-6032679f22cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2778ec79-56b3-40b5-9c96-c07a7db333a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9de5d6bc-3e05-4e4f-b43e-0b16dc067149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75460f44-a158-430c-86cd-76323ae8c7c1",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502a8c25-352e-4021-9721-a3732932b585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3face5ba-c12a-4af1-b17c-e66fb552c68b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a21488-5fc8-4e73-980c-45fe2980268d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef945aeb-dd94-4794-b234-c1a331915bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b7d80a-f1cc-4ab2-8c9c-fb54e78f1fb7",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac059d50-c527-4385-8c9c-03deb84059a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad51d2a-0728-4d0c-a12d-c1207b3d2558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee31ef0-ca17-4e2c-b42e-9daecf793689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1d8da87-b5ee-4fa5-8607-e573fe902bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37924e96-684b-4d12-a533-da00906045b1",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8643267a-6ca1-4620-82a8-15a9adfda1bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642c5fe4-99f4-473c-9beb-af65679f890f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c80ded-2d46-40bf-ac3a-65f83dc23332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "933a756d-019c-4b91-a3bd-0bea32aad720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6257da40-6359-4127-8a69-304194ecacbd",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac6c8f6a-f626-4af6-8a55-77947f72d633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d996e663-cf38-4b3f-9cc2-bc83782666fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1434d1-5c44-48c1-95c3-9a0c91042416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b61426-101d-447d-8f09-7c2100ef2f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0f4ad7-bd93-4eb9-a086-d83419ac824f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63a0cdf-8e53-44e9-b951-6d631053ee10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23d1687b-d639-4c47-97d8-0ba4ef223245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99dc8281-672c-4d99-bd7d-55ea7ca42c1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "519a9c11-0642-4cda-82c4-e1b64c659375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e49f74-49d1-443b-993f-a6323fb28d2b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c57eba0-d119-4dc6-bbc3-6bc392e52902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f36855-2186-443b-8cb4-77e8d34c80c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ec1434-7bcb-4a7d-8985-f7a0c22d551e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dff75e8-1cd9-468b-8716-1d9f462ee351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0c2f22-2574-4932-ba11-b41fbeb072cc",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7cb994e-849b-4ec4-87e1-ed40264a7031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37cdd1b8-47fd-4e7a-bf48-d22c2547f802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "036e3007-572d-4a92-8daa-c86892838c5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a4e5504-70a7-480c-b41d-32d82ef277e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497e5f01-c677-4403-a6e5-abdb616755b9",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bffae89-ec0d-42f9-8dea-7f318b524be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "162532ad-a308-411a-9663-b3b60d5ffe51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a50617d-218d-41ba-aeb8-59e5eae5e4a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "248ef70d-03ba-4b4d-904b-8b9f4eb9d1d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce5ff6a-760d-461e-a59d-5945a3993466",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d2a47b-3b8b-4ada-a676-5a195d63343e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf90497-069b-4353-b605-ac64f2a77067"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d081f1-db82-4cfd-88f6-a82f679505f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0452a9fa-2b0f-4c33-b623-4c93187eb54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4546a3-2426-4c55-bb88-3d4fdfa52c0b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb03fde0-efaa-4201-abfd-34441f83fcda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4d57696-6f30-4df8-87af-4d2b47726abf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e2e083-7d28-41f0-a2ce-fde01040a213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "239eddf6-2232-4482-93d5-0dd0b7525b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d592b1-6dc6-45b2-85b6-d9bb74885884",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b2de2b-ea3b-4076-9793-681df08f3fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a6abc2-8066-4045-ad77-dbfa657f3b95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ea98c6-6e5b-497d-92ff-eb8f2d1635bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4caf0b9b-3615-4db1-a087-f49e9ae33139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bbe1c44-a4ea-46eb-b681-cf30611a225d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a45b35-59b1-41bc-bef9-285eb1810d9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee6afefd-933f-471b-ae98-1b04579dafc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37a4341-ba31-4a01-8f53-3b6862fad363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c201480f-cad4-44ce-81c3-1e39cac597aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b995f3-91ac-42ed-badd-12716ed7a29c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4ee4ee-0424-4583-b57a-385719541b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf0f4a7-d0dc-42aa-b0d0-3a311b47fe1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c3c09e-9aaa-458d-89ea-ee013def32a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5947ef5-4418-4eab-8d9b-2432511c02b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8efc7d25-6c1f-4e58-b39c-6f35af50ad9e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7c8a09-570b-4cae-b5c5-e15747c1a6bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86676da2-5c23-40e0-8ba5-896aeee6bd38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b0298a-3f4f-442d-bd89-b4ba8851d002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98ecc2fe-4478-468f-9825-9e64ae55ef99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82570ad-c32a-48c6-9576-46a38c252c4b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51b7181-3ec0-4553-af4a-3c883a11d8c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4703d9c6-ed42-43c7-a980-28e322fbff1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56befb14-7cab-4111-aa08-7ebca30ade25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b98ab6e8-0ee6-4fb3-85e2-0234a805ac28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd977dd7-0b27-42eb-b3de-ee53a8c88bbb",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc9ef72-f3c0-41e8-920a-43571be98c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7e745a1-b167-431a-8752-05777cb1e32b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f69f4a-1ba3-445d-b25a-0e455a1bd8d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb806aca-785c-4653-8d22-ab71e6e3b783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36986112-f970-4117-ac71-d090266c583b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7789748c-0e5a-43ce-a3bc-10d3936d33a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c9a8572-6b49-47c3-ac16-4e564d27e649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3561658-c9f9-495d-ab35-fd0b31f06dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13e8c30f-b58d-4943-98d6-620457d4ee8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18590cb1-f38b-45fa-a443-01ee8a9ccf37",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67adbe62-8189-41b6-b0f2-4ab1d15755da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ac95e5-0376-47b9-b686-045f851dbe91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a20ea39-3742-4f60-ada6-ddf0bfc1f548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "381430da-9dc5-413f-aa11-475c3a886882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9b9e83-e0e2-4b23-9adf-f9b80f7c3dee",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8054a1-29f7-48a5-adf8-7fac78c4fdb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44bf5351-5816-43a1-b6ae-8d3f1dd43202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7331ac62-f873-471f-9deb-7917a30646f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9fd79cd-2c67-4db0-9551-a0559182a814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342a99bb-20e8-46c2-bd54-8ed1fc305abc",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af339db5-1443-421e-864b-3457b3540f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08f3a43c-ab14-4d1f-8e42-355747dedc8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d18826-ad61-4599-b23b-2aba7f0033c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3323f9-01f0-400d-a974-81e6a4dac8dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a2dbfe-20f9-493b-bff1-fd2fa0752cf9",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104866aa-bc9a-4f9e-80c3-2fb2087bea73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebb3e8a9-0946-4c26-8609-f1d5f9fc1172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ec3bd4-b0cb-4afc-9347-cfed5cdec56b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a47d5114-2dc4-4c50-ad0c-58fecf727db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e114b9-2092-490c-8d1a-eaa5a6d337f7",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea60dde6-998e-40d4-b61c-0af13c625caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3540878-8867-4081-8bcc-b210edf9b89f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dde583e-75cb-4674-b723-12a716f1fff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c3ef6db-923e-403c-9f82-ee694fbd4287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0ea574-e319-41b7-a6dd-b939f486be12",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6139bb0-0648-41ec-85fa-3e39a4ac26d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83452463-6841-4302-9f1f-933b580d4d60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3c4da7-99bd-4b08-90f3-aefc299583d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b91ad62-268f-42d3-8bda-da43300b7765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b8f33b-30c9-4720-9032-d126095eb52f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4ce245-f0a8-41f3-bf61-6a2c9122696d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba6666ea-945a-4535-be56-98c461c6331e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a636d6f-ff50-4613-85b3-10fdf1e4e053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b606770-7667-4b7e-899b-4e4e80ef81aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866a6847-b767-4114-9d6a-7f089e2e27eb",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be081b3f-a094-44b8-8d9c-a1efb39b86b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be1d3a54-3532-4cf1-a219-19ed4b4ee97a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da0b4b7-22ed-443d-8608-43dd3c06dbd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e4674b1-dc24-40ac-a881-abead2b0382f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e32cf13-9c2a-4d72-bb4f-a1f2c6a02647",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb67466a-14a8-4072-a3a4-e8f2e289d1a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e9d1429-7133-4c33-b68d-695e04146a00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "842a41fd-16c4-4512-b41e-acab1d000a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b38261a-261a-406b-9fff-e7ce307d7c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95a8bb6-1d72-428d-a6a0-4c060cb1a433",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa0a5bb-adcc-47bd-9be5-372845443a44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0694ba92-f3dc-4dad-bf48-c05c12c058e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5619ed-da57-48a5-a055-696b514c31fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfb23a47-35ff-4ec2-8195-c67278deaf45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f0cc18-0ab0-41b5-9cea-4016935d8a35",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f1c3df-ab59-48c3-a454-8a6ccf60d648",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5027f2e-75ed-4ee3-b55a-3f68a5e49066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c050ed-95bc-45af-bbdc-17437c0b8860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1d6470d-1411-47d7-9fe3-32806f008b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a614e1c3-9f6c-4d32-9ba7-7bc68f922194",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de77561-6845-4d5e-9589-05591973bcec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2618312d-57e6-4e63-b0fc-4215202864ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca50bae0-5196-4b0b-a701-cc8c0fa01356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a13e9a5f-7207-4230-bff1-d76169e14515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed81e97-c06a-4fb9-bb88-09fc612d32d8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3497be96-e5dc-4aff-b96f-b9c8fffe6feb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a493b38a-e5af-4606-b108-77dd3e985df3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24ea937-b1b9-4907-ba67-cea1dd24ffb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02335eb7-8ee9-48d6-9a24-e04d7af76420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c48a6f4-95a5-47f3-a7bd-8b82590a3b18",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3319bf6d-8a7f-46ad-aa78-7a6bb3a7ff89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47dbb521-f8ca-423b-b304-3d3bc79d1a90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b22781-0432-472e-bd66-2c8c612c8ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a7cbb8c-a9a5-46e4-bf03-4714606eabbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e66a06-f988-414b-a014-da9e4db29bd4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c21969-fa15-4c2c-8856-37ff6bb03a03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc067be5-ed78-46d2-b7a6-6b5277416d88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44046f4-cc14-4d6d-9cc9-5c60453208ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2cfd805-b3ae-458d-a39b-7c91e4aef37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e64ede-e0d1-4a00-b362-d18c592160b6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b14ce3-5b8d-4690-95bb-c1972b16f337",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad141f47-6945-4a48-8cdd-0e55df1c484e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7d0923-9110-4d15-804d-c1331be4fa48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9836060-2bf8-4c31-a36c-258c7616c592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7b616a-09af-4c27-870f-652df0b17f57",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d53e37-7368-46fa-86f0-7514a4095d35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3441c966-0a64-4056-b287-f4ebadcf3961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a940f396-5c65-4099-8a64-b688cd1a8862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94a5feb3-b6e3-4619-9c3c-3b8e2753ec44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bc6b90-21a3-4e44-868b-5775377d1e0a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72dcee8-9c4b-4f5f-aba6-e5426732462a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bc4383c-3f20-4dce-965a-7913c1f23f24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f62a1ff-81bc-4a3c-96ad-446924c7a7d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b36d186-77e9-4435-89c5-8d2a8144ec51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc46cda-1e47-4249-9550-a04f6745e45b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbe5e2d-c819-4023-9d42-94aaaf075339",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81783a94-c81a-4fde-9383-5ad03529de22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc8fa31-2c4e-482d-a284-c45223aa3d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e3c9321-0823-43d7-aedb-42f21abdd943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8171c42-4f41-4a26-b3a5-93515a8c284e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631bd05d-7d61-4c83-85c3-d0d0e40afed9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "172ed293-a858-43f2-add9-a1b43638c791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab814d0-e26c-448f-9ce0-303130fb50f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e930b78-5071-48a5-bb50-58f2716e2951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b44b9ca-6608-435b-b86a-ade34cbc0f11",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a66b58d-026f-4592-9739-5ccebe097569",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15f605ef-ab9a-455b-8168-4fbf78bde739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6c9175-14b7-464c-8115-6b0e17004f16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22b9b4fe-ba5d-416d-b996-7daedbad91c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866bbcfd-3bf2-45ea-b1a3-c4768d2bb9ea",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fbfd2e1-9aaa-4d9b-a5b9-9d93bcba3f9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08a3cd2f-52c9-411a-8c20-2c9dd7bdad19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d53f35b-f711-41fc-8568-b42844ccb4ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2552e33b-fdb2-4f3b-9e04-a7ff85520f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e636b38-cef0-4be5-aec4-379a60e3bc4a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b289b4de-28d9-47ac-8ced-0f5e2e1d6001",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b478331d-7969-4565-8365-0a75b24046e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d09f57-f945-4b66-9796-d6855908143f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff6e5faa-939e-45b4-b703-36b98f558ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce25f3e4-ca92-4657-8ab8-c71189c68f35",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c21239-0844-4fcd-8084-494f8774267a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60e910e6-e234-4652-8ed2-3f4e059f02c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd55f9d-6ae9-4dbf-82f2-e7f2db88d2a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb403157-7e90-4a22-909b-923661d87ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911a4ecf-db5a-4365-ab0d-0d6241bee77c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0da046b-9589-4d6e-a3db-e1576f5fef3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8bb7fb7-b01f-4661-a06d-44bec2530e1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea91c4c-1c1f-4c99-b38b-1a23ac2bd764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c7395e3-ac68-458c-a2e2-93d139784ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295acb06-9b0b-4345-893a-7fb8f4d1df6a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f50d687-7ab9-4ad7-91b8-8d88e74a4224",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47378a4d-d947-4292-8fef-8a675ead81cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75958bf8-3beb-4e59-8143-e454f4448ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69986e64-04ee-4eff-9bf0-d0ed64e0a913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba8c823-c424-4335-b958-aa42107ec294",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4271a6d8-7adf-4e3f-b3ed-3bf88067cd6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea26236a-9cb2-472e-97d3-fac2ecff1ec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "737c8b41-b49e-4cd4-80c5-93fcd2ffad66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "701ac059-3237-4b3d-83ea-4aba6eaebdea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7d3bd6-bed4-41a1-a355-ad2a82fcfff9",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c312710-d1c0-4d46-a800-bd0e01219737",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e15d8f73-dcbc-4b3c-bb46-de8baf8647f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d9fe31b-0ac6-4d46-adae-fbb98abc6b5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d926ac1-5b74-486d-9f88-75d3a9ae6546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d92336-1403-4ae8-bb36-fb18ab23362b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85291a6f-b53b-4ee0-b97c-b34afe8b17eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ed32df9-b8a1-40cd-bffc-e8d911b59fc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5cd3ca6-e08f-4f08-9958-cbb6b485e117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5691146-9da3-4cd5-975c-4421a67c474e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ccdb61-54c0-47d4-b61b-d9fa9902507a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826e5e28-a64d-4f1e-b01a-969fed3c6944",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34268827-1872-4664-8658-76a07a0e9112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4faf1f4b-495f-4083-b0a7-2cb442edc4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb2c9e5d-a310-4a70-bcaf-9b82366d5b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30cab13a-e1b4-41a2-92d0-cb0b03c4d9a3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d07e5b6-3be6-4f8f-be23-a4ba20e92a97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c80d0bb9-b942-4f65-b23c-87a87ecd7f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98423209-9ec3-4a63-9f60-8c8edb1a6cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb9509d0-6834-45c4-aa9a-7d04bf01d644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285cc760-2186-409d-a6bc-e3fe5c7fe571",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3e8b1e-802f-41eb-bd19-9d5d2f51087b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24e07917-474f-4465-b5b2-9ebf8883f0e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e6d523-8723-4b52-b232-3eed11009edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d1a646-06e4-4a22-971f-6e679064187c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5636143-56bc-4754-8ae5-3320c6a07f7f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da693a8a-7430-4fd5-95a1-9c0107cd452f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f618e61-edfb-443a-8fea-c1e123195054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc76797-3c6e-4850-b743-2027264233d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53711d06-664a-4722-a84a-7fa9bf690bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3080152-fd9f-4a9f-b5e2-819e779c3fbd",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eaf73a4-7875-40c2-a78f-18ba3f124bbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1c87f82-96e7-4b53-9d4b-5af135e324bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d01936-a41d-4e61-ae59-cedd360183e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bcd12cc-1e9a-43b1-95f5-149c163c1ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40e0a22-aed1-482c-ae3d-26760d023a4b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25db0a3-d490-4c99-a181-882c74057b07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12e401bc-afb8-4426-9d36-0f81063434c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7dfc1e-8134-43cf-9de3-6ed220630bd0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b6fe56e-bb9d-40b5-88f5-41a33ad0b327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87858956-a7e9-42a5-b644-68c7179123a5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7cccea-492b-41fe-abc8-4ccf01e1dc00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f87e3f8f-3dcf-4df5-97a8-442d58829d7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fdd5d63-eac2-4f54-a6bb-cd8212b2579a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ec0493-81c1-47bc-85f7-f2466fcfe45d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4563ec41-f480-415c-a1ae-abb9ce5aaac2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34db21a-11c1-408d-8af6-4e2228dadf25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98cd61e2-e30c-46c3-a97a-36da3814c689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f993770-6391-4b9c-b862-b473a5dc48dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f001bfe-fad8-4861-8b5d-65b1a4df7557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f057b87-6d42-4694-aec1-3b9b5d95a0c1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a10b13-50ef-49c5-977a-9999b54d9916",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68281223-ac73-42a3-a3fe-e754529d9a76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fff000-e21b-48a0-ae1b-8541c90b15ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1129dccf-bb0e-48d2-a7be-edc2cc450da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7983eb27-b5f1-46ef-94ff-a8c1373369d1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558be3a2-5c5a-4ec3-a3a3-2c371d27f8a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3ff9424-f06e-40aa-9368-0029dd29cbd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9aecf6-c7fb-4f78-995a-73116ebdc80f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b73391c8-8376-4d91-a855-7c2266b48564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499180d1-b268-49e6-b805-2236e0068dad",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c631bded-00d4-4d9d-8147-6de875d18123",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4412d209-d1ad-4f52-89a9-e05a4cf0dd06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5fd3182-f247-41c1-950c-05411b48f6f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "620c3ed3-3ccf-4f4d-a6e0-372147444b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39011ff-05e9-45f8-a667-fa1b98467502",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc0a4b1-9d4e-4e02-baf0-0b211311c10a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a18e0f8-6ea2-4ef6-8633-dcdbc8a0a1e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e2ba83-5cd2-46f8-8d3b-4152aa5d9a68",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23bffd93-8ca6-4316-ad70-aff7ca255683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7266d92a-002f-482a-9f95-c60c2dfd896d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79a85f9-a567-4644-93e0-6c44d94885f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db86badb-8db2-408d-bbe1-314e953ebadb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb127a9-478a-42ea-88a5-9dda7e6fcefa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8115a75-980a-4870-8be8-4230b7ad6aac"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5466268c-fbcd-4fcd-9007-7e070c6fda97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94a4ae63-bd4a-40a2-819b-771d6c67e580"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "416eb3fe-92a2-4135-998b-704417c3ae39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7bb85637-136b-4764-8208-4c0d94163b7e"
                    }
                  }
                ]
              },
              {
                "id": "21564119-195e-474c-8b35-db7dc1755865",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8470d398-353e-4179-bcd2-412a964483a1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14f9aca-8c8e-4079-8212-b34c0988faa0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "edf17d32-539f-4d80-90a3-dd81ead12871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d44e364-0a6d-4bd3-aeb4-45e92d4552d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d2471ea-e670-46bb-8d26-d62ad66425d0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "adaf1e70-f58b-4f3b-a6b6-2905b887b693",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "388fdcbd-9ac0-43dd-9eb7-6792c0ec5a3e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "df3c2030-6e81-4438-9856-470ee30a3c30",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7bb61fd-6103-444a-b6ec-945a58d386a6"
                    }
                  }
                ]
              },
              {
                "id": "7a14d73a-6029-4223-941d-2b410bb9738f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e9ee20ad-5899-4c27-9537-942d5a63fc8e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a655c3-754a-4116-afb0-860cd0427b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "37ebb9b1-5f28-496d-bb89-8fe6ac98fc44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a3a71d-2e48-4d50-9d6f-d2b1a4c636cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42a37550-9d6d-46a4-9e74-06a2b7423e07"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0068648c-d266-4f25-a956-8c94e4d55aca",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a225cf79-6824-450b-b1d9-b0fb7b74d979",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "458d65fc-7a3a-4c24-99cf-56cc391de7ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1dd1528d-8468-4d77-b7c4-e2e7306f0cec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53f82e9a-f3d9-47a5-884f-c8f58ff05e78",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3650c7b9-5d54-4ab1-861a-834e39a66761"
                    }
                  }
                ]
              },
              {
                "id": "0cdc6482-eaec-4ece-8c6e-f81939f70573",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "97b9b1d1-8b89-4b81-8069-c1e0de89192e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a7f476a3-07f5-4edf-b593-7bd551dd7735"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "655a913a-d52a-4f04-bdb7-19018725d7c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5d03de8-b05d-4f6b-adc2-3471e773f686"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "098889ce-69f1-4cf8-84d3-f82259345f01",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fc167838-573b-4b1e-8bdf-7aaae7585a14"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bcb30bf4-9a10-4382-8ec1-85b8a21189d2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7238b0be-d81f-4800-ac8b-5dca535b2611"
            }
          }
        ]
      },
      {
        "id": "2ce81e31-6688-465a-b8e5-d8b34030f3f4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "23daedfe-ddc5-4faa-83b8-0eeeb81d2b2a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "16aaaa52-fc3d-4bc2-9f1e-dfa0b63128ff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "55aabeaf-f5ea-46a7-b1ea-d851db971737",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78bc924e-1f93-4677-9d8e-2dcef88bb426",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7b246bbc-bcb6-4bf7-a1da-2e1a274cf57d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f2f29c-70aa-4f85-a8b1-cf57e93e2eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8701b6f-a639-4da7-9d44-332bf5168624"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54a5883f-b818-4e53-bf78-9cfeed9632aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d89c24b-b0e8-43a7-9c6d-9635930ac9a7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ae82412-3589-496d-8a2e-2cec40cbb08f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28778a7e-1ac8-4b70-93f4-6669d4aaf448"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bce58a6f-2105-4d9d-9f13-160847b9ab06",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "95bdb08e-b554-4937-acac-4d947e3675aa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a923748a-5916-4183-9112-83db79ae7793",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1384cb86-be24-44b2-a2a0-87d37d2da98c"
            }
          }
        ]
      },
      {
        "id": "a37d4116-b5aa-46bb-a820-9d2d7f3c33df",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "451886f7-13e1-4dad-b529-11095b183285",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9ee2bcc2-f1d1-437d-9ed8-8abf387f9833",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d36fee90-4e9b-4c5b-8135-11f25e03f5fd",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2f9927-1896-4c96-9118-428ee3a19aa2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e081ec25-289a-4221-acec-9d6145b6ad8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c8f5a0-ee6a-4431-8470-1d048cfbd382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "410bd8d0-1533-418b-85c3-a3284df75248"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed27cf07-af15-4017-b4ff-b92a5a47d5c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d699386-6705-4a65-aec4-297008ab7f46"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3e33df4-47f8-4469-881b-d785b59354d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0dfd334c-32e5-44a1-bdb7-2ce3b98d5fb9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bb9e2283-9985-4a56-aa6b-70ba3c57bf23",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fe4bc186-bc0f-468c-a7b3-63a35299195e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d498746-0f8e-4656-a86c-c43ea555f1f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff1b1b74-960b-4026-a6e3-058dad48728d"
            }
          }
        ]
      },
      {
        "id": "9692e0ff-bbde-4ac9-8fc6-d25c3d9610e8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "85a443e3-c255-43c1-b07f-77c064b694db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "762f4d4c-0c79-4ba1-9244-1c2942a2ea6b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "89780c85-f9cb-4523-b8a8-ea6b32aad6cd",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1589c3ab-d763-4389-832f-a7bc5d5e0b14",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e106498-4c8b-4779-bc91-d7bca8a9280b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1f9cd2-0d21-452d-b764-fd4640eb1a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a1848a1-9865-4d26-b94c-e45ee5541589"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97ec1727-9a10-4022-b6c0-23a38539beb4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95e19987-be27-46b0-97b2-30b2f94f2446"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae917545-df33-4ad7-a9f9-924d567cb7ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef96e5c7-164a-441f-b91d-142f6ee00110"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9375f5fe-11d6-4646-a850-ceb45b5c4439",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eb68b5e9-b686-4341-a75f-cefc2fbd2fef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0950ad35-c9bd-435a-bdb5-39df5cd59eee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7607234a-195b-4137-a258-5d9f90007900"
            }
          }
        ]
      },
      {
        "id": "0e3ba6eb-5eb0-463a-9963-f53002945b0a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d29ca73-8c0e-4f44-8608-9bff40cfbbce",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7df77fd6-951a-4688-893b-23d80bd9f75e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "03f9afb3-a19a-4db4-a208-0983551a5d7d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c609fa2-f8f5-42ba-a463-97f871860aa8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2178f759-e3ca-4b84-a791-97ee4b368f9b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 125.77777777777774,
      "responseMin": 10,
      "responseMax": 12193,
      "responseSd": 808.7362902239641,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1716480319879,
      "completed": 1716480359882
    },
    "executions": [
      {
        "id": "d05916d6-88dc-4046-affb-670881ba8dd0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "bd94d56a-6764-45bd-8ee6-1a71595a14ae",
          "httpRequestId": "0f4d8946-ed1a-4425-92d1-7fbc320ff532"
        },
        "item": {
          "id": "d05916d6-88dc-4046-affb-670881ba8dd0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0b684c6d-eda7-40e3-a054-95ebad17ab79",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 0
        }
      },
      {
        "id": "6a0f48b8-ae33-4e59-8f05-7fe3046d61c9",
        "cursor": {
          "ref": "f2e4d59e-72fa-4e36-ac79-19e20ab54629",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4b28e84e-8193-4960-980c-996e07d25eda"
        },
        "item": {
          "id": "6a0f48b8-ae33-4e59-8f05-7fe3046d61c9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9a81b26f-162b-47ad-bfd8-26ea7f5ff98d",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "8a8f3cc1-caf6-4da3-bbf6-406a82776b3e",
        "cursor": {
          "ref": "ef03bfef-4cfc-43b1-a48a-375fd77692b7",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f744c810-7270-4806-8126-1e7c6aa97583"
        },
        "item": {
          "id": "8a8f3cc1-caf6-4da3-bbf6-406a82776b3e",
          "name": "did_json"
        },
        "response": {
          "id": "c92ec68e-3bfc-456c-8d72-68b5628ca421",
          "status": "OK",
          "code": 200,
          "responseTime": 174,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b24a834-6764-4b08-9614-350886d96c22",
        "cursor": {
          "ref": "160a6aa0-445a-4c87-bdf2-66955a15ac1e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "56f8ab24-2cce-416b-a507-a2fd72510d84"
        },
        "item": {
          "id": "4b24a834-6764-4b08-9614-350886d96c22",
          "name": "did:invalid"
        },
        "response": {
          "id": "bc93cbd7-8551-48d6-8160-cf37d25482dc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 513,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b24a834-6764-4b08-9614-350886d96c22",
        "cursor": {
          "ref": "160a6aa0-445a-4c87-bdf2-66955a15ac1e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "56f8ab24-2cce-416b-a507-a2fd72510d84"
        },
        "item": {
          "id": "4b24a834-6764-4b08-9614-350886d96c22",
          "name": "did:invalid"
        },
        "response": {
          "id": "bc93cbd7-8551-48d6-8160-cf37d25482dc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 513,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce99f84-b9b8-43b3-acbc-95d8c371b103",
        "cursor": {
          "ref": "9f67e29c-5384-46ee-b6fb-18a61161210e",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "dc006f0b-8c8c-4661-80f7-e95a73eed543"
        },
        "item": {
          "id": "1ce99f84-b9b8-43b3-acbc-95d8c371b103",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "63fa3a70-bda0-4219-8705-339e68514cd6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 41,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15093eda-b92e-4cbd-9349-fd3255b5cc70",
        "cursor": {
          "ref": "c52c3989-f6e3-4a4c-a6a0-00368cee9468",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5084659b-08be-4bf5-b78e-0047b9909810"
        },
        "item": {
          "id": "15093eda-b92e-4cbd-9349-fd3255b5cc70",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c4f14099-6b99-4f11-9cc9-72ad8d6d488e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 42,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ab88af-9ab7-4d90-b1f5-8a8988dfabaf",
        "cursor": {
          "ref": "f32e14f6-35ca-4d32-a40f-47b371a38658",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "aa388f5a-5b47-4880-a743-95b0d5b72aa6"
        },
        "item": {
          "id": "d2ab88af-9ab7-4d90-b1f5-8a8988dfabaf",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "da9fcf0c-ef2c-4630-9598-6c309790e518",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56b3eda-0a46-4ad3-a99a-034ef7469217",
        "cursor": {
          "ref": "ba621e86-3068-4532-8565-898e03307d33",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f0032330-66c1-489b-bae3-d556d3b0ed94"
        },
        "item": {
          "id": "b56b3eda-0a46-4ad3-a99a-034ef7469217",
          "name": "identifiers"
        },
        "response": {
          "id": "a0fe8942-c9b5-411e-b95c-2d7eead13da7",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea60cd48-e1da-4ec8-b115-ebf3fa89b847",
        "cursor": {
          "ref": "a1e3286e-d822-43e5-a99f-65295b570e83",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5b44394b-fd01-490d-a0fb-4b88302b1576"
        },
        "item": {
          "id": "ea60cd48-e1da-4ec8-b115-ebf3fa89b847",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b9aacfc6-4460-4eef-b41c-ccc750f3021b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a0a0e5-cca1-4299-a438-efaa2ecf8c42",
        "cursor": {
          "ref": "d327e9ee-e2c7-495c-961a-3c4f81e929c3",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "98dfe848-63f8-4b27-b80d-7ca4ed61b040"
        },
        "item": {
          "id": "27a0a0e5-cca1-4299-a438-efaa2ecf8c42",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8aaa9cb7-b3de-4787-8eaa-1d3b9dafc9b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f98914-9f13-4cd7-b703-4fb25decbdfb",
        "cursor": {
          "ref": "6ba23f72-9f6d-42c2-bbc3-253477004e82",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9cea2ef9-1e34-4096-91c5-1d49ea1a577a"
        },
        "item": {
          "id": "a5f98914-9f13-4cd7-b703-4fb25decbdfb",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b26a9fcf-96ce-41b0-b95e-49dd4416bc1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4760aa32-4c72-43b5-86a4-af1c6b0f28e9",
        "cursor": {
          "ref": "78b1f243-7350-4bf8-9d71-bcbb64baec01",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5d239a2f-1116-46f1-a879-ff75f353d82d"
        },
        "item": {
          "id": "4760aa32-4c72-43b5-86a4-af1c6b0f28e9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7b35936f-8937-493e-8b0c-ff6001ccf882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5aeaa97-4aee-4a69-aa4d-5b775d8357bf",
        "cursor": {
          "ref": "b1edd6b4-4015-49e1-b8e1-366d65dae6f4",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0666384f-a2c0-49ea-969b-0f12590dc12d"
        },
        "item": {
          "id": "b5aeaa97-4aee-4a69-aa4d-5b775d8357bf",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4c9fba70-6a0c-4a45-a066-6ba32504a491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e1363c-815e-4f78-989d-a95a43b858ab",
        "cursor": {
          "ref": "c7dff221-5cad-487c-8c24-ab63b62bc307",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9e952a64-a939-41f4-b5cf-6a4b8fb4e3cd"
        },
        "item": {
          "id": "83e1363c-815e-4f78-989d-a95a43b858ab",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "698ccd34-cf3e-48cb-88d5-e43749fd4b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e48b50-48c8-41b0-9f8c-cf07bac3fb67",
        "cursor": {
          "ref": "d909985b-0d06-4baa-8c9c-86b8358831fa",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "bc08ee98-d957-433c-952c-58168547af8d"
        },
        "item": {
          "id": "78e48b50-48c8-41b0-9f8c-cf07bac3fb67",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f2544427-05b2-4d46-b544-aa6ae121a951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9260884f-7f25-42bd-a824-482380309a0e",
        "cursor": {
          "ref": "10cc0ba0-fc19-48f3-b28e-78aa4b5ccb06",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1b034799-13e5-484f-afbc-f22dbbe2b5e0"
        },
        "item": {
          "id": "9260884f-7f25-42bd-a824-482380309a0e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d57d7782-c42d-4287-bd9c-b712a861b827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7062ce2-527f-49b5-a38f-07a420c9d91b",
        "cursor": {
          "ref": "062b54ac-77db-4e27-bfcd-74ee1248aaea",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "780a8528-ffa5-440a-a69e-5ffcacddbb16"
        },
        "item": {
          "id": "f7062ce2-527f-49b5-a38f-07a420c9d91b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d563e6ad-625d-433f-9297-d3c18cf74c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0356ba-1bb4-4950-a65a-8f6ad3042ba5",
        "cursor": {
          "ref": "a1ae36e0-42ff-4446-890f-07f368a50eb2",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "dbbb0bdf-872b-4733-9719-6874142075d2"
        },
        "item": {
          "id": "ba0356ba-1bb4-4950-a65a-8f6ad3042ba5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "cdf52435-97eb-4b5f-a44b-ed3e936e85bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580331cc-f91d-48da-854f-b82629bc5ee9",
        "cursor": {
          "ref": "e4d29e37-3cf8-46e1-9b7b-d793f816dd37",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "33c710fa-ebd4-46df-aae8-a3c29dc8e199"
        },
        "item": {
          "id": "580331cc-f91d-48da-854f-b82629bc5ee9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fd3be910-f4ed-4890-9e66-aa8ffec144e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77976802-cbc1-4e99-ab5c-8fe12d04cb64",
        "cursor": {
          "ref": "022fc230-e039-4948-af47-df8888cf68eb",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a1e7633a-2b20-47f0-81ef-dde047441762"
        },
        "item": {
          "id": "77976802-cbc1-4e99-ab5c-8fe12d04cb64",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8def3745-84db-4684-8b54-a83d33c41d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e078cb8-182a-4f91-8724-d99d2cee78a7",
        "cursor": {
          "ref": "902ec8ce-393c-4821-9127-625a127d528c",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9f3211a5-6732-4dab-ad96-97baae8c7818"
        },
        "item": {
          "id": "3e078cb8-182a-4f91-8724-d99d2cee78a7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "53839ef0-6d66-401f-a376-181ea285f2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05118909-6ab1-446c-a2d2-1236c2a6ad0b",
        "cursor": {
          "ref": "254c1701-163f-473c-8ac7-0c0af3429d66",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "cb5d916f-633f-4a82-80d1-ef6ba674cf5b"
        },
        "item": {
          "id": "05118909-6ab1-446c-a2d2-1236c2a6ad0b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2232fc53-10fd-48f4-b7d9-688751fb824b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19c8868-af1e-4ad0-86ff-79ff5170453b",
        "cursor": {
          "ref": "316b0e49-ec5b-402c-8e5b-e325e45aa5ec",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fd7f1528-d628-46ab-837e-6fb8de83480f"
        },
        "item": {
          "id": "a19c8868-af1e-4ad0-86ff-79ff5170453b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "36505dfe-1e75-4814-967f-04c170d29303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c8bcd9-baa2-40b3-9b57-f8548c674e4e",
        "cursor": {
          "ref": "c9c00200-e8ce-4c62-b765-4a1e8c6d1875",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b621c1b4-2671-47a0-ac06-08918870d7ae"
        },
        "item": {
          "id": "c4c8bcd9-baa2-40b3-9b57-f8548c674e4e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4c6ee7f9-dbec-4d5a-81d0-a45aa626a854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e27384-ac83-4f55-8dae-8772c7616564",
        "cursor": {
          "ref": "9784c34b-c765-40a3-af7d-f50ad1e5eb23",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "669cebef-9124-4b5f-b040-aa55edf5b10f"
        },
        "item": {
          "id": "c5e27384-ac83-4f55-8dae-8772c7616564",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "19ef0959-36fa-43e1-922a-c9e442237cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93bbbe01-1297-42c6-ad05-01841472bf0f",
        "cursor": {
          "ref": "01c0cfbe-c6b7-44e1-a0f8-612b1af53ee8",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8a47b579-e8b0-41f7-872e-a380f8606328"
        },
        "item": {
          "id": "93bbbe01-1297-42c6-ad05-01841472bf0f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "04600f36-d52f-4259-ad62-415667d9eb6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866404e0-c350-48a2-809f-391eade4cef8",
        "cursor": {
          "ref": "eb6704b2-f169-4f6d-88c0-f578d59c2a8b",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8ff189f8-da8b-46d8-84e6-8953974cdb33"
        },
        "item": {
          "id": "866404e0-c350-48a2-809f-391eade4cef8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "740c4abb-aa9d-486c-8c09-859d1b19ca5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6488482-a26e-4f70-a938-33b78c4dbbf2",
        "cursor": {
          "ref": "9eebd0e5-f70e-45c6-b965-cbae535099fb",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e0ab0d9b-d9a7-472b-a015-0c58b857ecd6"
        },
        "item": {
          "id": "e6488482-a26e-4f70-a938-33b78c4dbbf2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "52570711-a9cd-49f2-ac09-89c19216a1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5acae0f6-3d42-4e64-a2a0-334db9c5d486",
        "cursor": {
          "ref": "7f92447c-2dd0-47a1-a3c5-1e48cc20150f",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4e356620-1f0f-4af3-a2f6-407256a666a6"
        },
        "item": {
          "id": "5acae0f6-3d42-4e64-a2a0-334db9c5d486",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "250dd365-be27-44e1-8ed1-ed4095caf46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf3e227-cccd-4811-8fa1-c1f688270a45",
        "cursor": {
          "ref": "af00a6ee-a07c-4dbb-90ac-e4ad6d4173e2",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b01a6b98-2de5-4fa6-8a11-54156d61047a"
        },
        "item": {
          "id": "baf3e227-cccd-4811-8fa1-c1f688270a45",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "dc5c68d1-04e2-40a1-bed2-a2a0c741419e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87febaf9-8f23-495d-ba6d-284da7e2c295",
        "cursor": {
          "ref": "b7914781-54a3-4a62-9e52-c85f3b6d8062",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "946129ea-40e4-4e56-bf36-0de4e272f0ae"
        },
        "item": {
          "id": "87febaf9-8f23-495d-ba6d-284da7e2c295",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "873ca18a-d2cd-4d17-97c1-c9d42e0e69c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e491d751-a039-4032-b4d4-133d415b6818",
        "cursor": {
          "ref": "fe068a8f-d9c8-4fdb-aa43-5f924a54d01f",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "56289a52-37d4-4287-88f9-2503cd34d346"
        },
        "item": {
          "id": "e491d751-a039-4032-b4d4-133d415b6818",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "07e4461d-d7d6-417d-9e37-84130243b8ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc14ad06-ef4f-47c5-be5d-9d3926056d57",
        "cursor": {
          "ref": "89fe42e5-deca-4193-8ee3-a1b70b10e482",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6f82c413-57da-4545-a01c-48e6f03e3fb1"
        },
        "item": {
          "id": "cc14ad06-ef4f-47c5-be5d-9d3926056d57",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ea4ea40f-6d3a-435a-af3d-8048b95ef0d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72dde3b5-1bbd-4c10-86a9-a21257eaa7d3",
        "cursor": {
          "ref": "ee7d4085-c284-458d-a770-daf1e971173f",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "89fd789d-5aae-446b-922e-e29a193413af"
        },
        "item": {
          "id": "72dde3b5-1bbd-4c10-86a9-a21257eaa7d3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d752184a-f0ed-4efa-b94b-9f54ded4d9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764e4af3-dbce-4607-bd85-af1fcd4cf18a",
        "cursor": {
          "ref": "97c24ef3-0a0c-42f3-9cc6-ab2fb719d86b",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "47192a58-ff2f-4083-963a-91d1f9ca8f87"
        },
        "item": {
          "id": "764e4af3-dbce-4607-bd85-af1fcd4cf18a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6c2ed304-1833-40e7-a0e4-2cbcfa646217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3271aee4-d4e1-4d00-86a0-11eb889ee7ec",
        "cursor": {
          "ref": "759ca476-51ea-462a-b4d5-a701dc53093c",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a751d388-e77a-4f18-b291-d4fc36060741"
        },
        "item": {
          "id": "3271aee4-d4e1-4d00-86a0-11eb889ee7ec",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "51eff866-61f2-43e3-ae94-8780a1baecb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d3e6e7-30b9-45f5-91f7-2845d5aaf612",
        "cursor": {
          "ref": "dbbb0eae-ef4b-4a46-8a23-c14ddf356e90",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "31b862ac-1af9-4552-8220-658dba3fa2a8"
        },
        "item": {
          "id": "05d3e6e7-30b9-45f5-91f7-2845d5aaf612",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f5eca62f-0f93-4fee-a622-97af0d1bc184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26eb5481-de69-4d59-a402-4b3ba819df6a",
        "cursor": {
          "ref": "0bea23d3-5f46-4c34-9e12-52e6e37d0585",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "17950366-200a-4c75-8acc-e53913308a49"
        },
        "item": {
          "id": "26eb5481-de69-4d59-a402-4b3ba819df6a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "453f7dc4-4a78-47fb-8a41-45a5a9b72b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1991f7c-520a-4702-b47f-38398ade915b",
        "cursor": {
          "ref": "7dfc20f2-d139-40c1-b1a3-701d01528394",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "525dccd1-2653-4bef-b50f-3ac9349172ac"
        },
        "item": {
          "id": "a1991f7c-520a-4702-b47f-38398ade915b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "cc1dc12e-3411-452a-b2c6-d0f8b42988e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc3476a-b5ba-4bba-a194-2917b0d1c8ac",
        "cursor": {
          "ref": "51ed356e-d8c0-4aec-b7fb-fffbdb0fc1b2",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8a922baa-9201-48bd-8bd9-9e57ef05170c"
        },
        "item": {
          "id": "7bc3476a-b5ba-4bba-a194-2917b0d1c8ac",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "515314a9-94a6-4d3d-b54e-82cdb90f8d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1907a99-b458-4228-8d79-06ae272dad64",
        "cursor": {
          "ref": "a137ddb8-872e-458d-9c91-3eaa17a6a60d",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b447e2c2-641c-491f-b6e3-79786bfc53dd"
        },
        "item": {
          "id": "a1907a99-b458-4228-8d79-06ae272dad64",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b30c4bbb-d48b-4b95-b534-dae7b5b17090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e421819-a816-4813-8f73-22335325f07f",
        "cursor": {
          "ref": "004dbf43-6e2f-4c47-a51f-5d4328f44202",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c34e001e-80c4-431c-9c52-52f6d7178a68"
        },
        "item": {
          "id": "9e421819-a816-4813-8f73-22335325f07f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "382540f1-7ee0-4100-9a58-914e27539cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3166bd63-03ff-481c-bd49-918678b71ace",
        "cursor": {
          "ref": "32ebd2c9-a628-4a15-8234-8aa62bb34871",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "70c1b861-10a2-461a-a620-0901f16af07d"
        },
        "item": {
          "id": "3166bd63-03ff-481c-bd49-918678b71ace",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "96781a52-273e-4799-9d24-8d175caf29a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37da766-1142-44fa-b50f-4164bf48787a",
        "cursor": {
          "ref": "7a981693-694d-4a31-9546-47a5d1ed4d38",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3dd993e4-e66f-456a-878b-5a8a1a3dad65"
        },
        "item": {
          "id": "c37da766-1142-44fa-b50f-4164bf48787a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9b9a3a1d-d2cf-420f-8c69-79c28c94db48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb3c3ed-3e53-4640-9352-5a52bf670cff",
        "cursor": {
          "ref": "b86da668-e9e3-4880-9230-4c30d9dfe6d5",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b97a9880-6205-4b59-b518-8511135d818d"
        },
        "item": {
          "id": "4fb3c3ed-3e53-4640-9352-5a52bf670cff",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4d3dac0c-37fa-4afb-8702-3a89a43198b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ea933a-55fc-473b-8b7f-f5dd91265ff5",
        "cursor": {
          "ref": "c862f29d-687e-4ac9-87d3-c2f2e75c4d9b",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "56b1e193-5b2f-4838-bf8a-1c122f0207d7"
        },
        "item": {
          "id": "b8ea933a-55fc-473b-8b7f-f5dd91265ff5",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f8c483e4-32b9-4d43-85bc-c9a26381d69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183e8b30-81ed-4f8d-8031-3509cf49758b",
        "cursor": {
          "ref": "346a44b4-fb01-4b33-b4f5-717fbcfaf877",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "83eae0f6-eb2f-4eac-9b76-3157f320767d"
        },
        "item": {
          "id": "183e8b30-81ed-4f8d-8031-3509cf49758b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4f466693-ee66-4206-959d-61ae41c87d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f7326d-63bb-4e2e-ab09-22945cb2576c",
        "cursor": {
          "ref": "f55c67ad-21a6-4e7e-bbd1-d04c5e023c91",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "fe9b17e4-d17f-46c8-b243-98a4fe6dbd3c"
        },
        "item": {
          "id": "d3f7326d-63bb-4e2e-ab09-22945cb2576c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7781f121-6a37-4c23-8890-69e5abfa3b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3092397b-df3b-4034-81e1-4b71b5a4e740",
        "cursor": {
          "ref": "d381296d-cbda-4aae-a214-52fc7e404cf5",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "adfbb6b7-8269-4f6c-89c7-5851ef5e7573"
        },
        "item": {
          "id": "3092397b-df3b-4034-81e1-4b71b5a4e740",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "080dee2f-ddfb-45b1-9908-6bfc146bd9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af0fb1ef-210d-4162-9bc7-0bdb9242c089",
        "cursor": {
          "ref": "26dd2a70-ef89-401a-9b7c-7199e7acd707",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b50fd4ac-dba9-44bf-bada-296acd1d1938"
        },
        "item": {
          "id": "af0fb1ef-210d-4162-9bc7-0bdb9242c089",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "84c6f7c9-7cd7-424a-985e-98836a03d634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db096d0b-e5c3-48cf-9296-a9d96f264025",
        "cursor": {
          "ref": "de756660-cd09-492b-997a-504a1433e6fb",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6202cc97-61b8-4a03-a9e3-e1e8512f1578"
        },
        "item": {
          "id": "db096d0b-e5c3-48cf-9296-a9d96f264025",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0152d16a-217d-4133-879e-6cd7bccf33a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a989db4-69a3-4a26-aa83-f678286c410b",
        "cursor": {
          "ref": "90895c5d-842a-4bb8-8d8a-cb95ef29efb6",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1f031d18-cb8a-4b7d-a8c0-62906c9edcf5"
        },
        "item": {
          "id": "8a989db4-69a3-4a26-aa83-f678286c410b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8a804667-6b62-4f36-9749-2f498e85a6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26c08be-c6b2-4094-b48e-49e79f2166f5",
        "cursor": {
          "ref": "51d52697-6c48-40a5-ad7d-9f7815ae1dc4",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1d42b055-de85-4342-b19a-12f0052baee2"
        },
        "item": {
          "id": "a26c08be-c6b2-4094-b48e-49e79f2166f5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "cf4b2af6-63b3-4685-99fe-145ab3ba84f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286940c3-d20a-41d8-a9d9-f5f2a47879ac",
        "cursor": {
          "ref": "e9e92810-39e7-4ea3-b020-e674e41ac4b6",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "649718ce-e7b7-493f-87bb-e6dc59b90f69"
        },
        "item": {
          "id": "286940c3-d20a-41d8-a9d9-f5f2a47879ac",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b4ad376b-331a-4e93-b9d1-5e3593ce69b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0328b73b-57cc-47d0-ab58-9afcac0b12a2",
        "cursor": {
          "ref": "65ec2454-a69c-4bfe-b505-b11cb848932e",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f3539bed-f214-44bb-8292-80e41125e230"
        },
        "item": {
          "id": "0328b73b-57cc-47d0-ab58-9afcac0b12a2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e44c96ae-c6bf-416f-87a4-2c8b97fb19a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1bfbbde-1ffc-4caf-b010-1af334ba8238",
        "cursor": {
          "ref": "14dc3889-45ca-4e5d-ab09-3cdcd029c5d4",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5f2dfa27-0cea-4575-98a5-5e69ff498561"
        },
        "item": {
          "id": "a1bfbbde-1ffc-4caf-b010-1af334ba8238",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "bdc6d604-7f87-4c8a-a5eb-0242a0670e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21caf4b2-576d-4670-abb2-bb429597407d",
        "cursor": {
          "ref": "3e3998d6-c8e8-4b00-91df-13e773038a5d",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d7b94ca5-4de6-4a1d-a2ac-74763a304888"
        },
        "item": {
          "id": "21caf4b2-576d-4670-abb2-bb429597407d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5896dcd6-251c-4c25-87ec-ea25d3c8f94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334a5ed8-ffc5-4e48-b2f4-40ede7405ed1",
        "cursor": {
          "ref": "19c8d46f-f9e1-4e44-99b4-8ae96d5757d4",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8e8aaa30-4997-45f6-807c-12ca711fef0c"
        },
        "item": {
          "id": "334a5ed8-ffc5-4e48-b2f4-40ede7405ed1",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "30ac00f5-1f0c-4d71-879e-aaeca9f48bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4554a9e2-bfa1-40a3-b9ca-f0d189e1d5ba",
        "cursor": {
          "ref": "726901ee-21ec-4da0-a2aa-8c97ad7c9587",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ed58bba0-25e2-49be-aac8-33c2e7d3bf9e"
        },
        "item": {
          "id": "4554a9e2-bfa1-40a3-b9ca-f0d189e1d5ba",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2e7fb9c2-7b2e-4750-8457-b3504f887fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d411b0f4-a9b0-4b91-aac8-8499090dbcd1",
        "cursor": {
          "ref": "c79145fb-9080-4cdc-9ace-80fcc224f439",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ea8950a3-fe06-4d86-9e3b-ec49ace6cb45"
        },
        "item": {
          "id": "d411b0f4-a9b0-4b91-aac8-8499090dbcd1",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "442f0cc4-90d1-4996-a5e9-7131bbc1c802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2d8572-4869-450a-9360-3d2fd3e4d778",
        "cursor": {
          "ref": "5e1483ff-cd3f-460b-9582-6036eb5ec21d",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8d92bb38-9096-4d20-9e3b-8a6cafb19c65"
        },
        "item": {
          "id": "8c2d8572-4869-450a-9360-3d2fd3e4d778",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d24c8522-30d3-4710-91e3-c84b4dadfc76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de641637-87a4-42b7-b855-41d576cf4c89",
        "cursor": {
          "ref": "2ed701fa-d928-4971-993f-81f2b781a37f",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2e42178b-1b7f-4be6-8b87-0a5206be13ff"
        },
        "item": {
          "id": "de641637-87a4-42b7-b855-41d576cf4c89",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6a1bf2ef-66bc-4966-9367-6db9b58a6e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db68dff8-1dfd-4cb6-a13e-65d0c7a15056",
        "cursor": {
          "ref": "7852cf82-6b47-4bdd-b583-1a3e6e9ede46",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6a521329-4ff8-4feb-8db8-d3c3abfdf5ea"
        },
        "item": {
          "id": "db68dff8-1dfd-4cb6-a13e-65d0c7a15056",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "76cea842-c3cd-4e35-82a7-2cea326fbf2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5734195b-b014-4975-b298-a8415ba2a88f",
        "cursor": {
          "ref": "ecf55bef-a822-4904-8a7e-caa04886a922",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3f83f15a-d6f5-4399-85c5-15ad80e8901f"
        },
        "item": {
          "id": "5734195b-b014-4975-b298-a8415ba2a88f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6a26bb50-7f8e-4596-bba6-716676756ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c342c0-0b0c-43ba-bb62-f4012b55bf77",
        "cursor": {
          "ref": "c0770707-dcf0-41be-a834-9278f7ca4fb2",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f2ec968f-2e3a-4230-973a-82a7c939f8d9"
        },
        "item": {
          "id": "16c342c0-0b0c-43ba-bb62-f4012b55bf77",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ff762b20-f255-4cb5-a1db-d8f3380d9659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d58403-093d-46c6-9381-d9aa9344c38f",
        "cursor": {
          "ref": "73016f0d-7f41-4217-8cd0-1b51802f5fc1",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4aa42f00-a5ec-486f-a902-1875ab15b6bb"
        },
        "item": {
          "id": "d7d58403-093d-46c6-9381-d9aa9344c38f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ec59478a-34b1-4adb-be2f-aa7733a9333e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd25032-0aae-4ae1-856a-fac2e51f9529",
        "cursor": {
          "ref": "fa21a708-6eb1-4215-a1e1-14b21c04487b",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "14fad84e-9efc-4e6a-a73c-1ea8429f6e2e"
        },
        "item": {
          "id": "0bd25032-0aae-4ae1-856a-fac2e51f9529",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "becc418a-c41e-4cbd-9947-6b1d44188060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7bc05a8-2d9d-40dd-9640-9a3458c721a4",
        "cursor": {
          "ref": "520b3394-90ba-4369-bb2d-df80eb2c6c1b",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e4c3b1b6-4d65-4607-8275-b9179f53ff72"
        },
        "item": {
          "id": "e7bc05a8-2d9d-40dd-9640-9a3458c721a4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f484f403-bcd0-4015-bda2-eca4e9b7994c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4ada33-a37a-4d73-bdad-904d2122d960",
        "cursor": {
          "ref": "1872d3f0-4139-48d6-8b8d-3075e375e7af",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ec13a1a3-4f94-4765-890c-37c2815b3670"
        },
        "item": {
          "id": "6e4ada33-a37a-4d73-bdad-904d2122d960",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c52dbd29-335b-43a0-9eb8-2304de29b59d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331f5549-28e7-4899-9cf4-7ef1e978c21c",
        "cursor": {
          "ref": "e46dc319-6e1e-4774-ad99-34975ddf785f",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c53d4e94-1d6c-4702-ad91-6b8da18d1928"
        },
        "item": {
          "id": "331f5549-28e7-4899-9cf4-7ef1e978c21c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "596addd1-e0fa-4436-b63b-ed19140d33d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5057b3-ac09-41f5-bab9-25696466b881",
        "cursor": {
          "ref": "e74b4b5d-db71-4d68-ad08-20a54aa9b208",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "fa2bb328-4634-4850-b31e-b1e74fe01192"
        },
        "item": {
          "id": "ff5057b3-ac09-41f5-bab9-25696466b881",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "66d296b5-209b-452c-a425-d78b9809450b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c69fa2a-93ce-4c28-9525-80239c52ac76",
        "cursor": {
          "ref": "bca7ff4c-ad51-4be0-aad8-a03639a47b69",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e590b763-1b55-4de9-9229-728c7af8fc54"
        },
        "item": {
          "id": "1c69fa2a-93ce-4c28-9525-80239c52ac76",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "71f9a378-693d-4127-b009-fbabb732b66f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8ceead-879e-4c7d-bdc1-d49f0bb1109e",
        "cursor": {
          "ref": "bddaeaf2-9729-49fb-b2ee-3d1fcc9e8b3c",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7085f859-ca92-4505-9c09-d3b12bcb6af7"
        },
        "item": {
          "id": "6f8ceead-879e-4c7d-bdc1-d49f0bb1109e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "391ad2d8-4741-4d98-a29e-f58904fc50d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad01245-f279-4814-bfb5-1330ab43679f",
        "cursor": {
          "ref": "4fa6414d-723e-4d3d-8d35-7e04196b916e",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3031c50b-030f-49ec-b58c-958a784efac7"
        },
        "item": {
          "id": "8ad01245-f279-4814-bfb5-1330ab43679f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "deb70c82-53dd-4c7d-b76e-8165e7c2c843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d52143-8c86-49a6-b091-e19f319ec3d0",
        "cursor": {
          "ref": "9be1ffa7-71da-44b5-8550-5216f15f2e5c",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "aa0793d4-13b3-4e98-9283-afb3d8b8b603"
        },
        "item": {
          "id": "80d52143-8c86-49a6-b091-e19f319ec3d0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f4d899a8-373c-4c12-b769-21736176cf72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471f7fed-3f46-4cf2-bad5-28b1f5d47c8d",
        "cursor": {
          "ref": "e59451ed-3a5a-4a13-a592-528c06067019",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "37f7b1cc-fc5e-4235-84ab-6e0214f1437e"
        },
        "item": {
          "id": "471f7fed-3f46-4cf2-bad5-28b1f5d47c8d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3fd4d93f-bb9b-4323-b99d-38dc160bcbd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c276202-0d61-4af1-acb4-5dc8a2152841",
        "cursor": {
          "ref": "652e668b-8f9a-40b9-a8c7-ec39c392f637",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3ab4b87f-7749-4d48-ac1e-8011226e680d"
        },
        "item": {
          "id": "5c276202-0d61-4af1-acb4-5dc8a2152841",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "31eaa098-90a4-491d-b111-f0413b57cbc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37da74de-95b2-40cf-b83e-31a75b7f1d7c",
        "cursor": {
          "ref": "090b6d04-03c8-4b3a-9670-03e0faac1e9c",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f36c7c28-38f5-4f6c-b7c9-2955656e22e0"
        },
        "item": {
          "id": "37da74de-95b2-40cf-b83e-31a75b7f1d7c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "46064d26-dc95-4ca9-b0f9-adca8717c535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff65129-7002-4420-846b-a8b812908220",
        "cursor": {
          "ref": "76ae03ed-ef64-44cf-90a3-bb444c6bf8df",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6a6bd5fa-ebc3-4a93-bde2-e37d34ff8416"
        },
        "item": {
          "id": "fff65129-7002-4420-846b-a8b812908220",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7972e1f9-769c-4de3-976b-9751b28af0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe307015-61ba-4116-88f5-04315a323ad5",
        "cursor": {
          "ref": "39052604-fdcd-4125-ae39-4db6abc3ca47",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7dc861cf-90da-476f-a633-e50e57bef18a"
        },
        "item": {
          "id": "fe307015-61ba-4116-88f5-04315a323ad5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "84a592b8-5ee3-4877-bd00-0cb31eaf1b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a8b39c-4253-4267-b028-faf41b7c3ce8",
        "cursor": {
          "ref": "b0c66a6a-ef0e-44f1-b1e5-8141fe53b632",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "68e6f7ab-f4d5-4ef9-bc3f-4f69eb59fb09"
        },
        "item": {
          "id": "68a8b39c-4253-4267-b028-faf41b7c3ce8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "25a61aab-4ac6-4a3f-9970-2eea2d891b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d19562a-4979-4a32-811a-2614e8e6b51f",
        "cursor": {
          "ref": "85eb5bcf-ec23-44d7-a9c5-0ca3d26f2e26",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "cb276224-faa4-42a6-b7e0-d74b77e0bc41"
        },
        "item": {
          "id": "3d19562a-4979-4a32-811a-2614e8e6b51f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "bb68671a-aee0-4d8f-84c6-b6336a7330fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84595dbc-f661-4d2d-8808-b4a719bc0d09",
        "cursor": {
          "ref": "9aeb6020-63c7-4b97-8f58-6a94d924f606",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e5e2f23c-6f82-46d0-9c32-0d3c1ff165b1"
        },
        "item": {
          "id": "84595dbc-f661-4d2d-8808-b4a719bc0d09",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c55adcff-56e5-4aad-952e-436c911880c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc292e4-270a-4e22-bd60-e7267e0d28c6",
        "cursor": {
          "ref": "f77b0ff0-1408-4cc8-bd33-064a9b3d0989",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3bef1976-fc85-48b3-a736-c4569acb53c1"
        },
        "item": {
          "id": "7cc292e4-270a-4e22-bd60-e7267e0d28c6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "98725614-3526-4f47-801d-eb9697fae020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462152ca-aa24-4c0d-8e5e-255b0f2aa759",
        "cursor": {
          "ref": "a5e4245c-709f-46fe-a7c9-d3b785a12c41",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "db6611b8-5394-4d6b-b07c-8b13fb345b51"
        },
        "item": {
          "id": "462152ca-aa24-4c0d-8e5e-255b0f2aa759",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f5d33ecb-8d27-4fb7-9524-06ca20d250e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57a2f34-3c97-4224-971e-a55b68ec8437",
        "cursor": {
          "ref": "5f1f31c5-921f-46f8-8f72-5467820b1b8c",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "996176d4-b548-47ff-8186-63a2f69c5fe4"
        },
        "item": {
          "id": "c57a2f34-3c97-4224-971e-a55b68ec8437",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e423cf6f-e116-48a5-b6bf-042a06142c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95779d0d-f973-4731-b342-cbd7d0297e3b",
        "cursor": {
          "ref": "70ccf234-e0e2-4f5b-af7c-893892f6ab64",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "52b83ac3-4bc8-4bed-bb23-7d0a3ca7c62c"
        },
        "item": {
          "id": "95779d0d-f973-4731-b342-cbd7d0297e3b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f0742535-2b5b-4209-a4a1-39e9f6bc681c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10109a16-5629-4fd8-b200-8c039e4feacd",
        "cursor": {
          "ref": "34536854-b9d9-46e1-96f8-0167130b461b",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "16c4b93b-a56f-4801-a48b-cf7aff2a449f"
        },
        "item": {
          "id": "10109a16-5629-4fd8-b200-8c039e4feacd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "da1563b5-b653-46cc-bbe4-bc15d072eca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0119094-58a0-4ca7-a6d6-f87d09300e40",
        "cursor": {
          "ref": "3b53be91-9730-4884-bcd0-578978933a39",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5f3fc7a5-3f18-4c69-86ac-de091896ba9f"
        },
        "item": {
          "id": "e0119094-58a0-4ca7-a6d6-f87d09300e40",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "76ae5713-892c-4051-b245-a5c0e13e88ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360a49a3-f487-4060-b910-6994c4d53804",
        "cursor": {
          "ref": "d1804f0d-b0f2-496e-8197-656a4f5d8524",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d03a99f2-94f7-4ca5-b817-493db580babd"
        },
        "item": {
          "id": "360a49a3-f487-4060-b910-6994c4d53804",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1400ebaa-752d-4fc6-9d21-5f90aa6c9dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c3016a-6dc1-4691-afac-b1ca47ca83c3",
        "cursor": {
          "ref": "90ddf5b9-d298-4323-bfc7-97d1369cfa34",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "428b4a3a-8b06-4e1f-bd26-6bffa498dc2e"
        },
        "item": {
          "id": "a0c3016a-6dc1-4691-afac-b1ca47ca83c3",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7adfeb92-3d19-4593-96e8-c8b1f883b1fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c525cc-5c7b-433d-9bd8-17812c9fb5aa",
        "cursor": {
          "ref": "4182e9d8-c0f8-4890-914f-73e1a317971a",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "22c849ae-07a5-4d48-86f7-4c0d9b39e545"
        },
        "item": {
          "id": "a0c525cc-5c7b-433d-9bd8-17812c9fb5aa",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "470d0194-02dd-4c48-a064-1081d267fd33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483fbf51-d039-43df-9fde-adf1ebb70c37",
        "cursor": {
          "ref": "b5580dc2-cba1-4774-9b5d-0a84122603a3",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b00f5c4f-3c8a-43c3-b6e3-7dbc3f51f255"
        },
        "item": {
          "id": "483fbf51-d039-43df-9fde-adf1ebb70c37",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "87ff18d2-d481-4109-bddf-01ed413d0d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73da9cda-5e88-4d3c-b66e-52c7e606f7d5",
        "cursor": {
          "ref": "304664dc-d286-405a-b5b2-c0b0a0f7a754",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c50c75ae-2b5e-417b-ad6d-622929216d1c"
        },
        "item": {
          "id": "73da9cda-5e88-4d3c-b66e-52c7e606f7d5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9f7b24d3-1e90-4ecc-8b6d-a9593617392f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aef3c40-e710-42dc-8780-2b03eaca09e5",
        "cursor": {
          "ref": "88a5c947-a649-4ee6-b64d-ac1d1ea53ffd",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a25d3295-510d-4e34-beaf-816f254b6f72"
        },
        "item": {
          "id": "8aef3c40-e710-42dc-8780-2b03eaca09e5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f98faff0-0b03-4157-9ab5-be52ba6b4385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9428ad17-2cf4-4491-b624-97d28ff0d1b1",
        "cursor": {
          "ref": "566371cc-17a8-4e49-aa58-dcb1a81bdf79",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "293f6931-f1a2-4fd9-b8b2-2a800a3ad731"
        },
        "item": {
          "id": "9428ad17-2cf4-4491-b624-97d28ff0d1b1",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "63b118f5-9d0b-4ad5-8bf9-22dcb7311228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f065e411-0ad8-4eab-9593-998a27d24afb",
        "cursor": {
          "ref": "43bdb969-9053-4ba1-9e1f-25e9a7962e54",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e820dc30-3e13-4243-9421-3ddb3184b491"
        },
        "item": {
          "id": "f065e411-0ad8-4eab-9593-998a27d24afb",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "174c0971-09f5-4371-9cef-fa503bfb9c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c227ebcb-f0c6-418c-9b7c-2109a14af9cd",
        "cursor": {
          "ref": "e62107eb-60d6-4c4a-abc7-79f37f36e680",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "79442787-1663-4f8c-a33e-856d366bd6d9"
        },
        "item": {
          "id": "c227ebcb-f0c6-418c-9b7c-2109a14af9cd",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d71abbe9-1149-4b6e-98c9-974d9b5d9063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796bfe5d-c9ae-4c5d-8c81-6f8f5bae0874",
        "cursor": {
          "ref": "3a4cb91e-e9b8-44c6-843e-909b8bf957ff",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0abc8a79-7d6a-4ea2-8b45-95f35343d76f"
        },
        "item": {
          "id": "796bfe5d-c9ae-4c5d-8c81-6f8f5bae0874",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ec4dff6b-719f-478b-80f3-11f3145d12a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b8e2a6-7f08-4875-b292-7f376c0b6e53",
        "cursor": {
          "ref": "c7ac08ec-4a48-4cc4-acf2-99f2f64fd83b",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9fb78748-402c-4144-a82b-b3175213fc90"
        },
        "item": {
          "id": "e7b8e2a6-7f08-4875-b292-7f376c0b6e53",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "66e7f057-1473-4ce2-88cb-f58d6add579f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff87976c-27a5-4dde-aa19-c2b8caef29a3",
        "cursor": {
          "ref": "74f99ae3-0443-4d87-a7c3-5134a3fd0cf6",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8f178eba-0f9c-4499-a4a0-d837c0d53ce0"
        },
        "item": {
          "id": "ff87976c-27a5-4dde-aa19-c2b8caef29a3",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5707cafb-09fa-4e68-bc54-bceca0d3cf85",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9a96c0-e3cd-46f4-803b-83c0379668a1",
        "cursor": {
          "ref": "b8659015-1c01-46c3-bff7-ea0822e250c8",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "908362de-ec7f-4964-9f09-ec439b8b6732"
        },
        "item": {
          "id": "be9a96c0-e3cd-46f4-803b-83c0379668a1",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "9c391490-ee45-45b6-8bd3-5910b9a5adcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "96430d6b-5fe1-431f-853f-73ebed86bba6",
        "cursor": {
          "ref": "e7c38aef-d55b-4f1a-978c-388da3d3a88c",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b1342556-3d98-4ac5-8626-2c1c23b99d13"
        },
        "item": {
          "id": "96430d6b-5fe1-431f-853f-73ebed86bba6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "59b9870b-aab6-412d-8f2d-5373709e06b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "2a1d3926-80a2-4298-8df9-c8a4ae662f89",
        "cursor": {
          "ref": "67e2bac9-2373-4c30-aaa5-d2b9ea5799ae",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0e0025c1-ee2b-4057-9caf-051ea859f0fb"
        },
        "item": {
          "id": "2a1d3926-80a2-4298-8df9-c8a4ae662f89",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e459063b-0c88-4ce2-8418-9ffb69fe6ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "3bca30e8-f3e2-4cad-8807-183019009e2e",
        "cursor": {
          "ref": "59a9fe6d-ea17-4118-9209-c7fb0c59b8af",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "10ae3dfa-f190-4ba5-9ebd-c29d195e8b59"
        },
        "item": {
          "id": "3bca30e8-f3e2-4cad-8807-183019009e2e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "23c80653-a5b6-46f1-8015-64e5bba524e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "bbd33024-2d49-424b-af44-45aaefd1e513",
        "cursor": {
          "ref": "2190bca9-feaf-4667-9f53-af919eef5eca",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9d61da52-c035-4104-b0da-cfd29b8dc9a8"
        },
        "item": {
          "id": "bbd33024-2d49-424b-af44-45aaefd1e513",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "948a5a15-a2bf-44bd-a067-b935f2acc845",
          "status": "Created",
          "code": 201,
          "responseTime": 12193,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3428923d-4287-483b-806f-7f314ea66b91",
        "cursor": {
          "ref": "766872e1-3d5f-439a-93dc-76b621f68680",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5ec8db53-62f4-48f5-b7a1-84327e9c69f1"
        },
        "item": {
          "id": "3428923d-4287-483b-806f-7f314ea66b91",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2e57e754-a5ae-4b18-ae6a-83b49ef2aecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "e2bd6277-b8e2-4dbf-9013-e74c63369247",
        "cursor": {
          "ref": "85704c18-55c8-4498-8957-0a62daa88672",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "04b038be-003c-459b-a2cf-24aa4cd33a4b"
        },
        "item": {
          "id": "e2bd6277-b8e2-4dbf-9013-e74c63369247",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f07bf07f-98bd-40fe-9ed8-169c4cb675f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "8c1ce9ff-24a8-4b62-923f-d254c0cfdf33",
        "cursor": {
          "ref": "2fa7fcc9-dacb-48e8-9e2f-6cfa8b42a9d4",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "61da28fc-0c70-4cd5-8398-b38b3873d86b"
        },
        "item": {
          "id": "8c1ce9ff-24a8-4b62-923f-d254c0cfdf33",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3780bb54-30a0-489c-abe3-5874e359ac9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba905082-fa9a-4eff-841c-46160d941001",
        "cursor": {
          "ref": "e6017eb0-c7d9-49fd-9b0c-4de3d67f24e4",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9de221cf-fbd1-4f98-8a66-ca13b1694bdc"
        },
        "item": {
          "id": "ba905082-fa9a-4eff-841c-46160d941001",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bc2ddc3a-a992-42f6-bbde-29dc34cd1178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2216b2a6-d33e-4a3b-8ab7-245eb28805df",
        "cursor": {
          "ref": "dd3ae207-869c-4853-b2eb-e25129491b9b",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1699748c-5b0b-4a98-849d-94bef900e1ce"
        },
        "item": {
          "id": "2216b2a6-d33e-4a3b-8ab7-245eb28805df",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "30cfc056-575f-4081-ba6e-74df0288680f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954d4df8-ea13-4572-a5a6-5ef324de85c6",
        "cursor": {
          "ref": "058cbbc2-8675-41a0-a295-d59fa3300e04",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ea7d22c7-cd41-4fec-98fd-7e74918c70ae"
        },
        "item": {
          "id": "954d4df8-ea13-4572-a5a6-5ef324de85c6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "06791267-b745-4da2-b453-cf4c52fc9ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600b6135-f952-4c41-86c5-f647087d1a14",
        "cursor": {
          "ref": "cc4f8a69-ce75-4e46-8de2-a707a996545c",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ffd5b2c3-bd8b-4dfa-b00c-d29c10968e4e"
        },
        "item": {
          "id": "600b6135-f952-4c41-86c5-f647087d1a14",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9c2bd943-613a-421c-a170-be543076dec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fcc9d06-9d72-4b7b-8942-3e2dd3eac3c8",
        "cursor": {
          "ref": "11622853-5e87-4f8c-9319-ef847c1ff00d",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8c63d546-dd8e-46b6-8099-1cb1a0b545a8"
        },
        "item": {
          "id": "1fcc9d06-9d72-4b7b-8942-3e2dd3eac3c8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9e9f680b-fa6e-4c8b-9fe3-58537b62b34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29fe1c5-ea0c-4f3c-880b-1d275b55d27a",
        "cursor": {
          "ref": "031589eb-816e-4a5d-8b7b-6e91b3817fce",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5ddebbba-10d2-435c-bacc-59b97a401cfc"
        },
        "item": {
          "id": "c29fe1c5-ea0c-4f3c-880b-1d275b55d27a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "dc0f4523-b5f8-44a3-ad16-370cff59da53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e89afd4-dc9a-41db-abe0-0d5aedc68e04",
        "cursor": {
          "ref": "bbc47677-f598-4421-bb3b-ecee3966b4a2",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "939e1ddc-a307-4d3f-9b9e-5a1516069199"
        },
        "item": {
          "id": "7e89afd4-dc9a-41db-abe0-0d5aedc68e04",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7ebb18a5-8d8c-411e-9024-5562f4e63811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d40683-b764-436d-8e36-0ca0461e16df",
        "cursor": {
          "ref": "2c331e19-9af1-4d26-b5c3-5d82dc370a34",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "713d84f6-3680-4d0e-b7fb-7e73fbfa43ba"
        },
        "item": {
          "id": "51d40683-b764-436d-8e36-0ca0461e16df",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f41c3733-de56-40c2-b2ac-979bb23869f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f89f19-94b5-4dd8-b6d4-0234012f5db4",
        "cursor": {
          "ref": "4f11eb24-40b5-4997-9dd7-9ac87cf63dab",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "76f6e2ef-c4e3-4ea0-968d-583ff3740985"
        },
        "item": {
          "id": "03f89f19-94b5-4dd8-b6d4-0234012f5db4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0080978a-3b39-4d3b-b3a6-2df35e0e18ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7ec8e0-0054-47b5-bc32-d58a9f9a3f0e",
        "cursor": {
          "ref": "4b058f3f-c198-4ae4-a49a-ebb880f59bb1",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "be779d74-34ad-477b-b604-b7453f732221"
        },
        "item": {
          "id": "be7ec8e0-0054-47b5-bc32-d58a9f9a3f0e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "450c6400-d01c-411d-a88b-94d289f19890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 142,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8494868-0300-4d70-bf22-34f275bbc80f",
        "cursor": {
          "ref": "90d2f5aa-6441-4b81-b8b3-4de70b25ec82",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a415bf51-f2a8-4be6-8127-65b2b706c585"
        },
        "item": {
          "id": "a8494868-0300-4d70-bf22-34f275bbc80f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "774d46af-7c16-4ec3-a257-ec513bbde12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7665b0c8-067c-4eb3-9d2e-cf33513bbd0d",
        "cursor": {
          "ref": "4571092e-ac8b-4813-9bfd-8e7c7a17457a",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1fc4febb-9b0a-4f47-b91b-4071fb1a7ef4"
        },
        "item": {
          "id": "7665b0c8-067c-4eb3-9d2e-cf33513bbd0d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7cd86c99-49b9-4278-bea6-c73774e7aec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561018a4-e6e6-4fdc-b0fa-759556ea34cb",
        "cursor": {
          "ref": "1d051c09-7e23-4f11-9514-afcad9b04081",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "889844d2-e886-4acf-bf35-741291db7309"
        },
        "item": {
          "id": "561018a4-e6e6-4fdc-b0fa-759556ea34cb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a2f5f1bd-8acb-4140-9f87-e8530f92ae44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3e50fb-39b9-46dd-afa6-176657ad905a",
        "cursor": {
          "ref": "50f63820-7935-41e4-937d-b99388bc5ee2",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "565ac596-4806-4aac-9cc7-8e106dc321e0"
        },
        "item": {
          "id": "cb3e50fb-39b9-46dd-afa6-176657ad905a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e118bd84-78a3-4d23-8632-f1467c8312a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90970d60-f8e9-4a14-ab22-b5022b1a044c",
        "cursor": {
          "ref": "7073f7a7-cd48-47f5-b9e8-75f548bf96cf",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1c81ff15-740f-4f81-8e57-058fb8bfa207"
        },
        "item": {
          "id": "90970d60-f8e9-4a14-ab22-b5022b1a044c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f49b51f0-528e-4980-9735-ba3003a3aced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9c954e-4a6f-4b31-b593-c6f71b64455f",
        "cursor": {
          "ref": "e2688805-524a-47de-8325-7433030b975a",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "391190a5-8714-4c9b-b1e7-907b4ce3b19b"
        },
        "item": {
          "id": "6b9c954e-4a6f-4b31-b593-c6f71b64455f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "724bb559-e8ad-4433-b4ae-20b5b74e82f1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "aa9d75a1-ff47-4cb8-b553-c2896df66885",
        "cursor": {
          "ref": "295be8a9-5932-4a5d-823f-53747d8c0103",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "fa97b428-c1f5-492f-81e8-254e743104fe"
        },
        "item": {
          "id": "aa9d75a1-ff47-4cb8-b553-c2896df66885",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a7869acc-f3e1-46de-8c1b-c587b1ed636f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2031b64-e09d-469a-9f7d-449dca06edfc",
        "cursor": {
          "ref": "4c24b892-83e8-4e52-8f3c-cbd0e5e76892",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "77216e83-11ac-438d-a892-aff8eaf20bab"
        },
        "item": {
          "id": "b2031b64-e09d-469a-9f7d-449dca06edfc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3c2160be-41a5-4fe7-8a2e-1c66fd17585e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a946bb-ec69-426c-8cd3-cdcf0adf0820",
        "cursor": {
          "ref": "ac5d71a4-9bc9-401a-9555-4e605c510a3b",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "02248bf8-9f4c-47e0-ad28-0bef80738c5b"
        },
        "item": {
          "id": "c2a946bb-ec69-426c-8cd3-cdcf0adf0820",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2a87f2d6-5d56-445d-8b70-d3b32bc5e516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddc1e07-27bc-42c6-bb55-ea11116af487",
        "cursor": {
          "ref": "285e4d07-8d0f-49ac-b88f-cdf5f2c71eb5",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "74bb6933-9e5f-4942-9e29-aa32a0ae4d89"
        },
        "item": {
          "id": "2ddc1e07-27bc-42c6-bb55-ea11116af487",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b855d15a-0d05-4e71-b83c-831f622b27a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c9e976-da2c-4195-8e1b-5db243f9d5df",
        "cursor": {
          "ref": "0b2bcfff-3ae6-4b4e-bacf-a7e5bbccb373",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "93d49eec-d061-472e-b237-b8c602b6e5fd"
        },
        "item": {
          "id": "45c9e976-da2c-4195-8e1b-5db243f9d5df",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fbc194ec-44f9-43c3-b6a0-2fffeb925987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a919db-18ff-4a6d-9294-f9ff0d6f83e6",
        "cursor": {
          "ref": "5d162dc3-8b2a-4c06-b91d-9ca64f78cc95",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "80810abc-1a32-4ffa-bca3-5ad069e7488c"
        },
        "item": {
          "id": "87a919db-18ff-4a6d-9294-f9ff0d6f83e6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5607ddc3-5900-40aa-a5f3-7bcc2a7d62b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a5316a-d87f-4116-ab9b-99a9b9e0d786",
        "cursor": {
          "ref": "7ab24abd-adb5-4802-914b-5694e1bf539d",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "66218d59-f7b7-4f6b-a8d1-c983cdb13502"
        },
        "item": {
          "id": "73a5316a-d87f-4116-ab9b-99a9b9e0d786",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6878a99b-a4af-4f1c-b0c9-9eeccc443c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba74d471-8f87-45f8-819f-ccf0589d0a06",
        "cursor": {
          "ref": "c624a218-87c6-4848-a47b-3f65245d6681",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1178b85c-ba9c-440a-9b9e-52ff63e78555"
        },
        "item": {
          "id": "ba74d471-8f87-45f8-819f-ccf0589d0a06",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9e92e614-16e8-4dc1-a53a-e93daff6c9be",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "915d3a49-e105-4244-b879-a7370e6d21cd",
        "cursor": {
          "ref": "891e0fc9-9450-423e-b7c5-67c0fef9eb6b",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "111884b3-9735-410d-bf8f-5325c3b10d48"
        },
        "item": {
          "id": "915d3a49-e105-4244-b879-a7370e6d21cd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d1f4bc29-f379-4e29-ab4b-6cc7c8e9090c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f84fb2-6cda-411f-9283-bc0abcc0634a",
        "cursor": {
          "ref": "377123d1-1c3e-4b45-bcb6-ed42f9dce349",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "218aed1e-2047-4a04-8b42-44deec3a29f7"
        },
        "item": {
          "id": "25f84fb2-6cda-411f-9283-bc0abcc0634a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ad2e74f1-5560-49b1-b739-5c874989bde8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c95050-ff1b-4bd5-a407-929ec6598044",
        "cursor": {
          "ref": "0961393a-62a6-40ca-88d1-390f3ef3cc98",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "552deffa-fe33-4b2a-88d6-b0e5f2a7436d"
        },
        "item": {
          "id": "b4c95050-ff1b-4bd5-a407-929ec6598044",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c8023802-90eb-4232-b353-1316880e5f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec246df8-3ad1-445f-b401-ec23b5d05e2e",
        "cursor": {
          "ref": "ddcde3d7-87c6-41b0-8947-48c4e4cf7d21",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9feca20f-2101-4e28-9716-8fca427dba6f"
        },
        "item": {
          "id": "ec246df8-3ad1-445f-b401-ec23b5d05e2e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "135cf176-652d-4fa3-81b7-689f0702b4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bec6aed-153d-49c4-81da-aaef77326e95",
        "cursor": {
          "ref": "601b3985-206b-4993-9ed2-2be94a8c6552",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7406ae0f-1b0d-43a9-9da6-796de946b55a"
        },
        "item": {
          "id": "9bec6aed-153d-49c4-81da-aaef77326e95",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "11371715-c06f-4d81-8cf7-d18365598746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e953cceb-1311-4c2b-a3ef-375e66edbe1e",
        "cursor": {
          "ref": "e7f1f29b-d24d-49dc-b4fb-0b406d0be0e6",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4bfb5547-20c8-4983-a470-2fc89b4800e6"
        },
        "item": {
          "id": "e953cceb-1311-4c2b-a3ef-375e66edbe1e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "961bf42f-6cc7-4594-b937-d9841f8748e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6005e9ec-b624-4990-966c-84052166493a",
        "cursor": {
          "ref": "38988993-855f-4a39-a4b8-9172bb97cc0f",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fb1e9f33-0a8d-4249-bd53-e7c4b3f6ab14"
        },
        "item": {
          "id": "6005e9ec-b624-4990-966c-84052166493a",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ef9cf5d8-c462-4743-b770-19fc31d9b5e0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "eefb6444-66c3-4317-9749-2eb6af44a47a",
        "cursor": {
          "ref": "fa8ce4d4-014f-4563-bccb-b1574dc3505e",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9f6a270d-b06a-4459-b893-a2e1e1ed7488"
        },
        "item": {
          "id": "eefb6444-66c3-4317-9749-2eb6af44a47a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "94dbf186-6c3a-45f3-8d0c-e1f4fcc76f8c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "59552227-3b9b-446e-984f-637dd4d22939",
        "cursor": {
          "ref": "4a0c0a11-e3b1-4f91-8740-9bfe49860991",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e7577b4b-e49a-49b3-91d6-74ebf64c317e"
        },
        "item": {
          "id": "59552227-3b9b-446e-984f-637dd4d22939",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c0611558-184d-4113-a1fb-4f4e31977f54",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "696608c7-2536-45d3-b1bf-423ec6177314",
        "cursor": {
          "ref": "b53baa7a-5cd2-47e2-9d4b-a60a4d04a1e8",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a410ca93-bb98-44c3-8f4e-a531b7459616"
        },
        "item": {
          "id": "696608c7-2536-45d3-b1bf-423ec6177314",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f8ace66c-a010-43a0-bbca-c7ed49f87718",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "0c03f19f-d552-4d87-b2ea-ab76aa3de77f",
        "cursor": {
          "ref": "6babd2f7-afb8-4ca3-a4ff-63388efa57b7",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "798afca7-3d28-49e5-8df2-46e06113536e"
        },
        "item": {
          "id": "0c03f19f-d552-4d87-b2ea-ab76aa3de77f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a09133be-8b67-4267-b24b-39327ebb5b97",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 58,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "191125f8-8251-46bc-b5aa-2356d38abfd6",
        "cursor": {
          "ref": "f56ceba3-cc94-4b87-afff-f8ce1e8e5fab",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9aa0dae6-e643-4c88-ad8c-f202ccf69103"
        },
        "item": {
          "id": "191125f8-8251-46bc-b5aa-2356d38abfd6",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2b837b9a-fc19-463c-9c85-687b8d277249",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 48,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "9f6c6bc1-d577-4433-b8a2-387b4324de86",
        "cursor": {
          "ref": "1b00be26-ad53-4122-b7f1-1a1bd85c87d2",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "180d7f5e-6724-40e8-8a69-18f35c20da51"
        },
        "item": {
          "id": "9f6c6bc1-d577-4433-b8a2-387b4324de86",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "34ed5076-4b72-4030-8cbf-8d82071dab1b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f7bf6d-b91c-4b95-86c2-2eb734e0c977",
        "cursor": {
          "ref": "ec841b0f-4c66-42d9-875c-aeefdb47b9e9",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7f45fc1a-75db-4f84-b17a-a2162d4b95c8"
        },
        "item": {
          "id": "48f7bf6d-b91c-4b95-86c2-2eb734e0c977",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "beacebe9-17c1-4ba7-99f6-66efdc1b9b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56bae0a-775b-4a8c-b0a7-9e97a51a815e",
        "cursor": {
          "ref": "5e789ee7-ce87-40e7-ae75-d905577e8d5b",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "95617ecb-fc19-4469-bb0f-351cd8dcf897"
        },
        "item": {
          "id": "e56bae0a-775b-4a8c-b0a7-9e97a51a815e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d28f0600-8540-4ddc-a7b7-adc0f6e9e048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c788980-7089-4f3b-ae13-16e72e7f3372",
        "cursor": {
          "ref": "2551f4d8-8e4b-4df4-9ddf-1909a9c51dc6",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b8a90045-0674-483e-b3c0-0faac54a1f63"
        },
        "item": {
          "id": "1c788980-7089-4f3b-ae13-16e72e7f3372",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "30f29f46-4f9d-4681-9ac0-b54c66e67cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05508eef-8592-476b-9e29-0abaa42e88bd",
        "cursor": {
          "ref": "fa74cb8b-b8b4-4228-935b-6e61a338ba7b",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4c900856-029f-407b-8b46-659992e43153"
        },
        "item": {
          "id": "05508eef-8592-476b-9e29-0abaa42e88bd",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "95b91fa2-55dc-4711-93bd-f89b8b1936a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52608598-cc39-4d86-b16d-772d6ac01676",
        "cursor": {
          "ref": "90c78034-bed3-40aa-85c2-856037a61e84",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "672bceff-40ed-4c19-a4d5-5d8ea13a69ec"
        },
        "item": {
          "id": "52608598-cc39-4d86-b16d-772d6ac01676",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d2d74e10-65d2-4f8e-8c87-8d8912972c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f274f78-f587-4f22-8301-f6c566016992",
        "cursor": {
          "ref": "497a7e82-e615-4020-a2d1-949dda3594ac",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c5982c95-26a1-4e19-8250-17ba39481f13"
        },
        "item": {
          "id": "1f274f78-f587-4f22-8301-f6c566016992",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "719e2c03-f38f-48df-b620-e6500c304017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfce15e1-db3c-4284-8af1-6f7f78657b67",
        "cursor": {
          "ref": "4ea899a9-d078-45bb-aa55-485c23448da7",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f8aee9a6-fba0-4b89-90fa-1a206c6a426b"
        },
        "item": {
          "id": "bfce15e1-db3c-4284-8af1-6f7f78657b67",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3d186e4e-de60-45d3-b305-e271412a2843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5921cd-b124-4937-91fd-f847779b6502",
        "cursor": {
          "ref": "4b69f344-bceb-459e-b46e-c56c2caed9ac",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2f1126f0-3996-4ec8-8237-b42f258597e6"
        },
        "item": {
          "id": "1b5921cd-b124-4937-91fd-f847779b6502",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e2599ee0-fb7e-411e-beb4-d5338cc248cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b990f0-1bcc-49e7-bd13-47a33aea4186",
        "cursor": {
          "ref": "149714c9-230e-4417-83b5-bd3d3d8de38d",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "bd02c71e-ac66-43b0-b3d4-b8ddcd174766"
        },
        "item": {
          "id": "84b990f0-1bcc-49e7-bd13-47a33aea4186",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c171cb3d-f1c8-49b9-9822-761b2b195749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33062a18-c579-4008-b1ac-b7eeffe4cf1f",
        "cursor": {
          "ref": "897f5bdb-4c55-43c9-b60a-4c8df31cf3f5",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d27a89cb-fd93-4df3-96a2-3135f214f789"
        },
        "item": {
          "id": "33062a18-c579-4008-b1ac-b7eeffe4cf1f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5888c034-f99f-4c6c-8972-90009e27c7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ac4227-0130-4fe1-8b97-b916a5aa698b",
        "cursor": {
          "ref": "054d2324-e043-4110-aca2-ba74ab715f41",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1cd73842-15dc-41d7-a8a3-cd48af7f9a09"
        },
        "item": {
          "id": "b3ac4227-0130-4fe1-8b97-b916a5aa698b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "76f87b75-c423-4e6e-b0e9-dd2b46ea4951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae5c8be-32ad-4a19-b95b-77a45e540ab3",
        "cursor": {
          "ref": "3f5b6470-3465-4960-b096-83e6ee493b1e",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "414229d0-20db-40a4-9929-9c60898a8459"
        },
        "item": {
          "id": "1ae5c8be-32ad-4a19-b95b-77a45e540ab3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "79f81225-d143-444a-b92b-7226a61461ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb456146-57b8-4a19-99d1-2e053d17a9ef",
        "cursor": {
          "ref": "cb91e05c-c89c-479a-9b30-7a0b3e7ac1cc",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8391167b-99f7-4f7b-b54f-95d01ef76c1e"
        },
        "item": {
          "id": "cb456146-57b8-4a19-99d1-2e053d17a9ef",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "30336828-bdb2-4be6-acd3-aae5e637ff8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1871fd-b484-40cf-a7c1-d6bcf45793ca",
        "cursor": {
          "ref": "d41cd1ae-77ea-4113-9c01-b61ea9ca6df7",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3d3d1c75-d0b0-4ca9-923b-ddb6aef5a93b"
        },
        "item": {
          "id": "9e1871fd-b484-40cf-a7c1-d6bcf45793ca",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "78169bdb-6f00-4b7b-a0bf-7c394e566cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b8d0cc-8aa1-4795-94c4-95c5d49582a7",
        "cursor": {
          "ref": "f6f62b5e-e3f8-4550-b324-a1e2411ead11",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e96ae7c3-2081-4f8a-8ff5-e608649a84e6"
        },
        "item": {
          "id": "e1b8d0cc-8aa1-4795-94c4-95c5d49582a7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a0b6ecff-bd1b-4109-a118-5013b6df146b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97066f04-a07e-4b14-974b-7199f1141aad",
        "cursor": {
          "ref": "c43f99c6-7c7a-45b4-9fbd-3bde9c9bfd32",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9826661d-3dfc-4fd7-a2f2-b3a613c8409b"
        },
        "item": {
          "id": "97066f04-a07e-4b14-974b-7199f1141aad",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d07911f8-3d5f-447d-bdcc-800f83568f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9957ad19-16b1-4166-9d04-0a052b5e76ef",
        "cursor": {
          "ref": "71128ac4-3327-45ad-a156-5402f238c564",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5be6e8cb-8e0d-426f-84ca-9eb524cac7e7"
        },
        "item": {
          "id": "9957ad19-16b1-4166-9d04-0a052b5e76ef",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ead30335-9608-4511-8515-951f70532a9f",
          "status": "OK",
          "code": 200,
          "responseTime": 131,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "e1dc6010-2eae-4cdb-b875-15754a1ab3f1",
        "cursor": {
          "ref": "9dea9513-58f1-4d1b-a804-7bdedd3ec5bb",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8dcc0b54-a6f3-4948-9cd2-de583dfab86a"
        },
        "item": {
          "id": "e1dc6010-2eae-4cdb-b875-15754a1ab3f1",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ed793a34-e3e2-4a51-b7b5-fdf6f3965153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65cc7ef-cdea-4a64-9def-e3acd5d72dd7",
        "cursor": {
          "ref": "d52fd818-f7aa-4c0d-a403-e6b333f3ac1c",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4df15f47-c420-4639-a08a-b9da01ea645b"
        },
        "item": {
          "id": "d65cc7ef-cdea-4a64-9def-e3acd5d72dd7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "37cf9e47-9b12-4eec-a687-3ea3c2f7dacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e6d256-112e-49fc-a37b-8d918ba0c071",
        "cursor": {
          "ref": "00605f31-f0c8-4c32-9b3e-32f1ae66b40c",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8952765f-5a15-4b90-9340-404901c8f716"
        },
        "item": {
          "id": "97e6d256-112e-49fc-a37b-8d918ba0c071",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3904d7b4-b2c0-45fd-a8c8-165aa4bb4e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6fc69a-c76b-4c92-9610-96df782809d2",
        "cursor": {
          "ref": "3260de91-ee1c-490d-ac3d-8fbf656702e5",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "98dc592c-66aa-4446-8ca4-5e08ab941793"
        },
        "item": {
          "id": "cf6fc69a-c76b-4c92-9610-96df782809d2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "314b347a-7290-497a-a119-8d83e7fd02e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0047f1-6d01-4011-988f-36e375e8e82d",
        "cursor": {
          "ref": "dc51dc67-657f-4f93-bce8-e11338bd29b0",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "bfa9c7c9-5de3-4583-a484-4d24dfd02a2d"
        },
        "item": {
          "id": "df0047f1-6d01-4011-988f-36e375e8e82d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "84372e51-bb4b-4c5a-87c9-fa533d4cabdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ecaaa5d-cbf7-4e59-9a69-64a920e19252",
        "cursor": {
          "ref": "aa691362-54e1-407c-803b-2203cc045108",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "911d181c-b4c5-4eb0-b91f-b3f1cba1bfd8"
        },
        "item": {
          "id": "3ecaaa5d-cbf7-4e59-9a69-64a920e19252",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9c850266-0224-42e8-a289-748562db1444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9edd8b-69a4-4aee-ab34-948675c3deda",
        "cursor": {
          "ref": "9e9ab88d-b973-4e56-9392-63b8f0eeb38a",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b33b10de-da1e-4c2e-b120-b53a6b6c4400"
        },
        "item": {
          "id": "9a9edd8b-69a4-4aee-ab34-948675c3deda",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7e54b674-06a8-4a96-a3fb-025b027a9136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9596a613-32ba-4651-b79f-5931538bf7f4",
        "cursor": {
          "ref": "f7bca816-eb23-4bf8-94ee-12b98c487a39",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d2be5bd7-e246-4413-b058-382e7c9b12db"
        },
        "item": {
          "id": "9596a613-32ba-4651-b79f-5931538bf7f4",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2870b430-bd8d-4474-b6a7-e50af85e1ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba0477c-e48e-4cf4-82ef-89e585215778",
        "cursor": {
          "ref": "67f06767-b30a-4a78-b0bf-6f7b087a7330",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "bc4698e9-5496-4001-994d-1f2a075424c7"
        },
        "item": {
          "id": "dba0477c-e48e-4cf4-82ef-89e585215778",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ceb34cea-dd1c-4bcd-966a-8baf7eac0486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e80cc5-45ef-4e97-b75d-4430ea1f8f79",
        "cursor": {
          "ref": "35577ad7-0f02-4825-81c2-b9aa8e9a26a6",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "591965ed-9574-41de-83c8-02d7c321c0b2"
        },
        "item": {
          "id": "f9e80cc5-45ef-4e97-b75d-4430ea1f8f79",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ca64d218-41eb-4590-9a16-a9637370cff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2cd3088-46bc-40e6-b9d5-f0749a0335d2",
        "cursor": {
          "ref": "0554b11d-59ca-49a4-9897-f9ccaffef72e",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8e98ce27-2ee2-4b0f-a64d-ad3fb27357d1"
        },
        "item": {
          "id": "e2cd3088-46bc-40e6-b9d5-f0749a0335d2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "faba35cb-a881-4cc0-a1a1-ca33a92da8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb64977e-9aac-4860-a303-c0628f904567",
        "cursor": {
          "ref": "8d1e86de-d3d6-48a4-8d52-87ba67eb87ab",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c0691dd0-4378-4b84-a1db-aa7035e43423"
        },
        "item": {
          "id": "cb64977e-9aac-4860-a303-c0628f904567",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "37097096-df7f-4c7d-a961-2907d4910873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610dcf24-91e9-43a9-bb1d-ba582f96d6a3",
        "cursor": {
          "ref": "07b19896-d419-4f87-9bfd-a73db933bb2f",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "04291284-1812-46e4-9e24-95f59e1138f4"
        },
        "item": {
          "id": "610dcf24-91e9-43a9-bb1d-ba582f96d6a3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "58470d06-6ac7-465c-994d-1a6f49102d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3828fa2-68fd-43b9-be42-e2387caf30b2",
        "cursor": {
          "ref": "d9c5304f-0cc3-4937-82fb-3d4588624d63",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "80508ea6-aec7-4c98-ab98-91e91263b5bd"
        },
        "item": {
          "id": "a3828fa2-68fd-43b9-be42-e2387caf30b2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "725fa9e9-959f-415f-afd8-f2aeec47a6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5839f6d7-ee81-477f-a106-10d1a2356bb5",
        "cursor": {
          "ref": "fa845189-9f6b-4f0e-9da5-3986edc2d1aa",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "97d7caeb-9b76-40a1-8791-9626176fa347"
        },
        "item": {
          "id": "5839f6d7-ee81-477f-a106-10d1a2356bb5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6a7be4e2-a6de-4796-bea3-c8398ef93a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9747772-232d-4ac7-8612-150035134760",
        "cursor": {
          "ref": "3f41d210-94df-4564-881e-7329364501f5",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1d576e10-dd34-4006-885c-abe89826d7ab"
        },
        "item": {
          "id": "b9747772-232d-4ac7-8612-150035134760",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "922303ac-993f-4952-aabc-48db509f7e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70dbe467-5ff9-4435-8fef-4503582c7ffe",
        "cursor": {
          "ref": "8a34bf21-d9e4-4ae2-9169-3c3a30773b86",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "98e822cc-63d4-4e4f-8a55-d4ddad1315e1"
        },
        "item": {
          "id": "70dbe467-5ff9-4435-8fef-4503582c7ffe",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0e8af329-bd70-41a7-b501-e5030557671e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ba9e8a-31e4-4ce6-8dfd-8451f8b3a73e",
        "cursor": {
          "ref": "4961e71c-a401-4cbb-8c72-5ddc863170e6",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5fa5eafc-3faf-481a-b0fd-315b0087a765"
        },
        "item": {
          "id": "e5ba9e8a-31e4-4ce6-8dfd-8451f8b3a73e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4b409cef-ae1b-4f40-9f0e-5f7aa0c077bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63aa948-cde3-4bb4-975d-8699a72faf15",
        "cursor": {
          "ref": "58647dce-a9df-4878-8105-0968440d75ec",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a0e77b24-3a1a-4351-bfc3-b75231e3dafa"
        },
        "item": {
          "id": "c63aa948-cde3-4bb4-975d-8699a72faf15",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e5d413a0-21f4-4c1d-98c3-b1bbe270cb3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337aa496-f465-432a-abd9-6ebe05db2d58",
        "cursor": {
          "ref": "50a435b9-0d65-4f2c-93ac-9cf0a95e1576",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4a6ae445-3b29-4858-97ae-cf2ba79f7b13"
        },
        "item": {
          "id": "337aa496-f465-432a-abd9-6ebe05db2d58",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b7b46d5f-20d4-461e-a91c-d6426b48d227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a1ea70-a6d8-483f-8723-4af0ee99aa53",
        "cursor": {
          "ref": "086d619b-6233-4926-bf75-1014fb5879c9",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e4dcd3d9-cafe-461b-b581-86ee3d1895b1"
        },
        "item": {
          "id": "72a1ea70-a6d8-483f-8723-4af0ee99aa53",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8faab7c1-d41d-4a07-93f3-8279f64b61dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75460f44-a158-430c-86cd-76323ae8c7c1",
        "cursor": {
          "ref": "a05a0c55-ba76-48ee-adc6-44b49287d4a5",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "78399a68-07aa-4f87-a334-a23df94fbd31"
        },
        "item": {
          "id": "75460f44-a158-430c-86cd-76323ae8c7c1",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a4938eca-10a2-4d1c-b437-f3285df135c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b7d80a-f1cc-4ab2-8c9c-fb54e78f1fb7",
        "cursor": {
          "ref": "7d8bd909-5103-4039-b319-bb18b7a7782c",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "17b0a858-98a6-4dab-b29f-92969c76b2a6"
        },
        "item": {
          "id": "d8b7d80a-f1cc-4ab2-8c9c-fb54e78f1fb7",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "028ad607-1152-41c0-b856-38a083bd2386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37924e96-684b-4d12-a533-da00906045b1",
        "cursor": {
          "ref": "651a9316-0096-482e-903f-df88560c6249",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "afe17a7e-1a38-4e95-9b32-b79d1c6172f7"
        },
        "item": {
          "id": "37924e96-684b-4d12-a533-da00906045b1",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a9e15edb-81b4-48e0-8f20-ea37f75f8de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6257da40-6359-4127-8a69-304194ecacbd",
        "cursor": {
          "ref": "8e83d4c1-eda7-490d-bedc-9b1c6b5b3608",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c6e6af21-450f-48a7-abdd-d93c9719b975"
        },
        "item": {
          "id": "6257da40-6359-4127-8a69-304194ecacbd",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a8fa50aa-1730-42f3-a118-5e09c4606cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0f4ad7-bd93-4eb9-a086-d83419ac824f",
        "cursor": {
          "ref": "7cef610c-79c5-4802-bce2-b35a31c9a48e",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7bd32df2-997e-4e62-be69-0c204a1cb697"
        },
        "item": {
          "id": "5a0f4ad7-bd93-4eb9-a086-d83419ac824f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "fd434df1-2155-4956-994f-b6492f0470a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e49f74-49d1-443b-993f-a6323fb28d2b",
        "cursor": {
          "ref": "17dfaa62-4d92-4859-98ec-f18e2b055ca2",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7c5e50a3-b0ec-434a-a699-80ed9596eb0e"
        },
        "item": {
          "id": "d1e49f74-49d1-443b-993f-a6323fb28d2b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "92245e7c-4140-4023-ad91-5bf1999629fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0c2f22-2574-4932-ba11-b41fbeb072cc",
        "cursor": {
          "ref": "184d1612-1777-4e24-98c8-92f03847d34b",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "27fbd955-b114-43a4-a47e-7b08feebbefe"
        },
        "item": {
          "id": "9c0c2f22-2574-4932-ba11-b41fbeb072cc",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6f45de89-8aed-460c-b28d-f33a6dc44bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497e5f01-c677-4403-a6e5-abdb616755b9",
        "cursor": {
          "ref": "fce5e958-4204-4c78-a302-7db09fbac28f",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "fa774a9c-1e87-4437-8edc-fdae134d5cfd"
        },
        "item": {
          "id": "497e5f01-c677-4403-a6e5-abdb616755b9",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bd722f7c-4452-4cef-a6be-dd1f5d6d547f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce5ff6a-760d-461e-a59d-5945a3993466",
        "cursor": {
          "ref": "39e8952d-e4dc-4d27-b3bf-396b5d8c371b",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "60ef9eb1-e288-44d7-9b5b-060f94c34869"
        },
        "item": {
          "id": "0ce5ff6a-760d-461e-a59d-5945a3993466",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "20af668c-0e3a-4392-bcd5-1fa52d6ba169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4546a3-2426-4c55-bb88-3d4fdfa52c0b",
        "cursor": {
          "ref": "cfb9adff-c56c-4ace-ba86-141c697ce4b0",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b19b08cc-859f-4b19-bdef-e23a8a846dcb"
        },
        "item": {
          "id": "7f4546a3-2426-4c55-bb88-3d4fdfa52c0b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0ed49080-fbf3-4153-a009-d66d89f8f523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d592b1-6dc6-45b2-85b6-d9bb74885884",
        "cursor": {
          "ref": "7f97da46-a402-4d5c-b7d1-d72797ac8736",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c3dfe8c3-f956-49cb-8625-c205c0284388"
        },
        "item": {
          "id": "21d592b1-6dc6-45b2-85b6-d9bb74885884",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "fd2f400e-bc99-49d6-ad0e-1d3d9a7fcf36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbe1c44-a4ea-46eb-b681-cf30611a225d",
        "cursor": {
          "ref": "a7e2db0a-6352-4e4e-9abd-e541525aaf47",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "df7cbc79-5380-4b5d-985e-57d660e6215e"
        },
        "item": {
          "id": "4bbe1c44-a4ea-46eb-b681-cf30611a225d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6b1fd2eb-b567-4774-a35f-d40e2c31a0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b995f3-91ac-42ed-badd-12716ed7a29c",
        "cursor": {
          "ref": "7aca8a0b-49a8-4064-ab2f-9ef33218de39",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4c8fe00b-0957-4921-ae22-c36ef6845361"
        },
        "item": {
          "id": "96b995f3-91ac-42ed-badd-12716ed7a29c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2482fc0b-a1cd-4187-aa9e-f8c578bc3ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8efc7d25-6c1f-4e58-b39c-6f35af50ad9e",
        "cursor": {
          "ref": "5a7bae07-f7ec-4f0f-abd0-593da9763ab4",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b5a48f89-5d4a-4ba7-8169-513b6b597de9"
        },
        "item": {
          "id": "8efc7d25-6c1f-4e58-b39c-6f35af50ad9e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2ab69501-6e9d-49f7-9fd0-ecc6f1ed4eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82570ad-c32a-48c6-9576-46a38c252c4b",
        "cursor": {
          "ref": "3bcef800-49ce-4b5b-96cf-827f688bd01d",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9e4a2076-1c95-4093-9f1b-9a0e0567eb0a"
        },
        "item": {
          "id": "b82570ad-c32a-48c6-9576-46a38c252c4b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ebcdcb02-afb5-40f9-89e0-d77e074c9503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd977dd7-0b27-42eb-b3de-ee53a8c88bbb",
        "cursor": {
          "ref": "e26eff68-7090-44de-883b-6edc16a40d96",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "45766f64-40b1-4389-9662-c612053906c6"
        },
        "item": {
          "id": "cd977dd7-0b27-42eb-b3de-ee53a8c88bbb",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1e3205dc-8da0-475a-ad79-0ecd1d785020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36986112-f970-4117-ac71-d090266c583b",
        "cursor": {
          "ref": "0f2a7241-7fa8-48a0-87d6-de8186c1ea84",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b3cc1f4c-75c2-490d-a6f9-9f8b14716f87"
        },
        "item": {
          "id": "36986112-f970-4117-ac71-d090266c583b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ed19d712-4bcd-4eb6-b457-7e3a8e3ddc74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18590cb1-f38b-45fa-a443-01ee8a9ccf37",
        "cursor": {
          "ref": "28db484e-c69f-433b-abaf-32a8d4b20669",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2c9d4b14-3309-4bc7-81ca-babe4c6914cc"
        },
        "item": {
          "id": "18590cb1-f38b-45fa-a443-01ee8a9ccf37",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "64828a7b-4909-4339-8593-e4949431c1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9b9e83-e0e2-4b23-9adf-f9b80f7c3dee",
        "cursor": {
          "ref": "8d326301-0a34-4b8a-aa9f-ab83e8703baa",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e0c6af4d-59ca-4aeb-827c-44ecb24bb88e"
        },
        "item": {
          "id": "3f9b9e83-e0e2-4b23-9adf-f9b80f7c3dee",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "61d47656-5bfd-4782-ae78-512c1c181cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342a99bb-20e8-46c2-bd54-8ed1fc305abc",
        "cursor": {
          "ref": "86b2fb57-c0c1-4f85-a57b-0f367bfc2f1c",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9c443cd1-940a-4222-b7b3-a032334dd597"
        },
        "item": {
          "id": "342a99bb-20e8-46c2-bd54-8ed1fc305abc",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e242dd87-7028-49bb-b5e6-ab499f9efcf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a2dbfe-20f9-493b-bff1-fd2fa0752cf9",
        "cursor": {
          "ref": "53163534-2f4c-483a-a243-58637875f4f7",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "20e48994-f3f1-48fe-bdb2-a13c470b52ec"
        },
        "item": {
          "id": "54a2dbfe-20f9-493b-bff1-fd2fa0752cf9",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7c06a2f4-1dce-4832-b269-34c9abd71fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e114b9-2092-490c-8d1a-eaa5a6d337f7",
        "cursor": {
          "ref": "60acb66f-ffed-4c52-97fc-7c4fec6f34e7",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5a9af418-8a8b-48d2-8e84-17365fc0fe9c"
        },
        "item": {
          "id": "94e114b9-2092-490c-8d1a-eaa5a6d337f7",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d4fea4b6-2ae3-4f8e-afbf-6666fc24c10e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0ea574-e319-41b7-a6dd-b939f486be12",
        "cursor": {
          "ref": "ab17a2dd-a779-4ccc-a047-e7f5f19ad297",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "dbae999d-5851-42cb-af4f-2bbe8139c7d6"
        },
        "item": {
          "id": "4f0ea574-e319-41b7-a6dd-b939f486be12",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e5d709f6-535f-48a0-a0b1-59d4c82958a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b8f33b-30c9-4720-9032-d126095eb52f",
        "cursor": {
          "ref": "d54e2599-6fbc-4416-9aa9-706792cbdaa5",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "636c1fa2-1c5f-4dff-a5de-5798b7fc1f57"
        },
        "item": {
          "id": "67b8f33b-30c9-4720-9032-d126095eb52f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1a2fdf66-a3f6-4eb5-bc6b-0c8333aea34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866a6847-b767-4114-9d6a-7f089e2e27eb",
        "cursor": {
          "ref": "8ccef19b-7db5-424a-bcda-5d6d52b4c126",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "95f3ee12-19e8-47e9-8095-1812c7331f0c"
        },
        "item": {
          "id": "866a6847-b767-4114-9d6a-7f089e2e27eb",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e958d3fe-bde5-4a7e-abfd-ee0202e083ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e32cf13-9c2a-4d72-bb4f-a1f2c6a02647",
        "cursor": {
          "ref": "8d58fdb4-3415-45fe-8d71-208d4184a710",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4e97ffe8-0d76-4ba6-b5bb-42b7feed7d2b"
        },
        "item": {
          "id": "0e32cf13-9c2a-4d72-bb4f-a1f2c6a02647",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d474670a-fbbe-4ac7-986d-db82565fefa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95a8bb6-1d72-428d-a6a0-4c060cb1a433",
        "cursor": {
          "ref": "ee122ac7-26b4-4918-aebb-79efcc00d536",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "914bc08a-941f-4237-84e8-e6787bbdf525"
        },
        "item": {
          "id": "c95a8bb6-1d72-428d-a6a0-4c060cb1a433",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7ad2eba9-6f22-49b5-9ced-c09a8c71fd33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f0cc18-0ab0-41b5-9cea-4016935d8a35",
        "cursor": {
          "ref": "3f092b51-4820-47eb-b118-25377a795f37",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7da06f14-92c8-406e-ad61-e78152f32654"
        },
        "item": {
          "id": "90f0cc18-0ab0-41b5-9cea-4016935d8a35",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0c9e9fc5-3378-49c5-a389-8c39c730d988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a614e1c3-9f6c-4d32-9ba7-7bc68f922194",
        "cursor": {
          "ref": "e2622f04-1afa-486a-a646-ce25ca73f052",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "37f9ef73-fd89-4ab1-af50-a7188228179c"
        },
        "item": {
          "id": "a614e1c3-9f6c-4d32-9ba7-7bc68f922194",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5ab39e52-f33b-4ac1-bc7d-c40226566ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed81e97-c06a-4fb9-bb88-09fc612d32d8",
        "cursor": {
          "ref": "bd7ff576-c957-4712-9680-bd0fe2dd0584",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e946bd83-bc97-41d0-8e3d-38c5e9443d62"
        },
        "item": {
          "id": "1ed81e97-c06a-4fb9-bb88-09fc612d32d8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "431a5d4b-ffe0-4606-a6c2-4cc48544666d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c48a6f4-95a5-47f3-a7bd-8b82590a3b18",
        "cursor": {
          "ref": "36c2f08c-f159-41ab-ad7e-8b4ce76f8f6e",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1efbdf31-0d17-4453-a195-10300b0ee719"
        },
        "item": {
          "id": "7c48a6f4-95a5-47f3-a7bd-8b82590a3b18",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "fb94abf5-3023-4965-9782-dc92f6fee3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e66a06-f988-414b-a014-da9e4db29bd4",
        "cursor": {
          "ref": "8b9f5862-d37a-4d38-ab6c-8b9fbc03b564",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9f7b531a-b180-466d-8c52-1293fb7087f6"
        },
        "item": {
          "id": "d2e66a06-f988-414b-a014-da9e4db29bd4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e8724656-e783-4439-911e-cbcd2489fd83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e64ede-e0d1-4a00-b362-d18c592160b6",
        "cursor": {
          "ref": "1c7153ac-5180-4654-9005-c7d070367d49",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "73901a79-484f-4b28-8662-420395f35fa2"
        },
        "item": {
          "id": "a4e64ede-e0d1-4a00-b362-d18c592160b6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "991a8db0-687b-425e-871a-86be7fe01a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7b616a-09af-4c27-870f-652df0b17f57",
        "cursor": {
          "ref": "493340e7-e381-45a4-a2b4-3a77068a127e",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "eb1bd31a-0721-4281-be72-e17af86e2a3d"
        },
        "item": {
          "id": "4c7b616a-09af-4c27-870f-652df0b17f57",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "56d5fd2c-e3e4-41e4-9839-298c6144786c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bc6b90-21a3-4e44-868b-5775377d1e0a",
        "cursor": {
          "ref": "cc544944-4ae7-48a2-8686-9123a1d2c9cd",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "37b6db72-7b54-456a-845b-7a195ef75d14"
        },
        "item": {
          "id": "d2bc6b90-21a3-4e44-868b-5775377d1e0a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "69dbe72c-f936-49e6-aa24-f5cad2bfa08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc46cda-1e47-4249-9550-a04f6745e45b",
        "cursor": {
          "ref": "0ac690da-72aa-4107-b4c8-1aa334552fa4",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7ca11597-c556-4e69-92ee-7505353d9693"
        },
        "item": {
          "id": "0cc46cda-1e47-4249-9550-a04f6745e45b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "50b6b1be-fa81-4598-abd1-a95bf5bcb9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8171c42-4f41-4a26-b3a5-93515a8c284e",
        "cursor": {
          "ref": "dcae6119-a0e0-4a25-8970-fffe1ca58845",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "49a9b68f-f0fa-4b2a-abca-5c722550548f"
        },
        "item": {
          "id": "c8171c42-4f41-4a26-b3a5-93515a8c284e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3e065d23-171e-4d44-99f7-65acd2ca4af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b44b9ca-6608-435b-b86a-ade34cbc0f11",
        "cursor": {
          "ref": "b50d1795-d3fd-4d7b-8556-089a3c90a82a",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7f3995b2-abd6-4dd7-9a4e-cb01a512dd38"
        },
        "item": {
          "id": "6b44b9ca-6608-435b-b86a-ade34cbc0f11",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "34e14807-831f-4bfa-a3c8-d27b4845f7a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866bbcfd-3bf2-45ea-b1a3-c4768d2bb9ea",
        "cursor": {
          "ref": "d2bfe293-2e6f-4d5e-9979-dc79765990a2",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "725c4a89-2c5e-4108-929e-6e67ce8ee3dc"
        },
        "item": {
          "id": "866bbcfd-3bf2-45ea-b1a3-c4768d2bb9ea",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "93df5e3e-20e3-4d3f-937c-f205995e0d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e636b38-cef0-4be5-aec4-379a60e3bc4a",
        "cursor": {
          "ref": "d5e1f10a-e15d-46e3-a49e-d4429e007555",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e03c3357-9095-4413-9df7-8ff9d1468800"
        },
        "item": {
          "id": "3e636b38-cef0-4be5-aec4-379a60e3bc4a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1be75714-19ac-4691-b5ad-800d31881435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce25f3e4-ca92-4657-8ab8-c71189c68f35",
        "cursor": {
          "ref": "cce71592-8475-46b0-b3d3-8f6fcd6e0626",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "145d1b6c-e4c7-4af0-809d-305707bbae5f"
        },
        "item": {
          "id": "ce25f3e4-ca92-4657-8ab8-c71189c68f35",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c7f7a278-4944-407f-bf27-d0d961cf6fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911a4ecf-db5a-4365-ab0d-0d6241bee77c",
        "cursor": {
          "ref": "344c8811-1971-4991-b93c-85bb06fdca63",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2663e712-7123-4f56-b229-30b8d249b611"
        },
        "item": {
          "id": "911a4ecf-db5a-4365-ab0d-0d6241bee77c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f12c68ae-045b-4a46-bcf9-f7fb7288975b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295acb06-9b0b-4345-893a-7fb8f4d1df6a",
        "cursor": {
          "ref": "b5eeaf91-531f-454b-adcd-cd084b0f574e",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "68ff6300-ca4f-4d9d-a112-ae9d1e8cc4a0"
        },
        "item": {
          "id": "295acb06-9b0b-4345-893a-7fb8f4d1df6a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b2a65298-8a43-48a3-bbc1-212601802317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba8c823-c424-4335-b958-aa42107ec294",
        "cursor": {
          "ref": "16735d8e-e8cc-4afa-bf00-d276ca144ed3",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "56845475-02ef-42a6-8a23-42c4f18052ac"
        },
        "item": {
          "id": "6ba8c823-c424-4335-b958-aa42107ec294",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "817c74ec-d0a1-4871-a26d-eea1a7346ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7d3bd6-bed4-41a1-a355-ad2a82fcfff9",
        "cursor": {
          "ref": "66920b2d-5b47-471c-92eb-b88a9a91ff73",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "500d66d4-8b56-4174-83ca-a4be215c5343"
        },
        "item": {
          "id": "dc7d3bd6-bed4-41a1-a355-ad2a82fcfff9",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1090c202-808a-4d9d-91a6-4b4780526a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d92336-1403-4ae8-bb36-fb18ab23362b",
        "cursor": {
          "ref": "3422796c-d4c5-4931-923f-6af15fa42500",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3815038b-59d1-448e-ba36-4a09f5dcaf5f"
        },
        "item": {
          "id": "d5d92336-1403-4ae8-bb36-fb18ab23362b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b7241463-0dbf-465f-99ef-ad17decea125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ccdb61-54c0-47d4-b61b-d9fa9902507a",
        "cursor": {
          "ref": "651a0224-aca2-4b88-a7f8-e42819d6f7c4",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ef28082c-dc60-41c3-9fd7-c097ace94d62"
        },
        "item": {
          "id": "c2ccdb61-54c0-47d4-b61b-d9fa9902507a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2c06ca26-aa18-40da-b16e-84ebde1f6a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30cab13a-e1b4-41a2-92d0-cb0b03c4d9a3",
        "cursor": {
          "ref": "b04668fa-029f-4414-8c32-984c5de6ac2c",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "937ebf9c-97ab-4b9c-9cea-ca8a30f586fb"
        },
        "item": {
          "id": "30cab13a-e1b4-41a2-92d0-cb0b03c4d9a3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "76e68fcb-144f-46cd-a576-c2600839734a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285cc760-2186-409d-a6bc-e3fe5c7fe571",
        "cursor": {
          "ref": "c27f96f7-1f68-4dd9-8b90-09dc1c7cfaeb",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "05d4eab2-bcb2-4592-8f2c-47774e3950da"
        },
        "item": {
          "id": "285cc760-2186-409d-a6bc-e3fe5c7fe571",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "38f2f366-7aec-4499-949d-3080a8ae8025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5636143-56bc-4754-8ae5-3320c6a07f7f",
        "cursor": {
          "ref": "d1c75be4-d2e9-40b1-ba69-b5b0ff88a8e8",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5f925162-4c08-409d-ba48-c0c2a6403187"
        },
        "item": {
          "id": "f5636143-56bc-4754-8ae5-3320c6a07f7f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "eba3156d-e16f-4998-b907-b7cbafc5deb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3080152-fd9f-4a9f-b5e2-819e779c3fbd",
        "cursor": {
          "ref": "4c649cfa-00f6-4463-8b94-20df2dca5774",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "06f6967c-f446-419c-91b4-134147da9047"
        },
        "item": {
          "id": "a3080152-fd9f-4a9f-b5e2-819e779c3fbd",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "83f2c610-5c18-462e-869a-9bb31600b922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40e0a22-aed1-482c-ae3d-26760d023a4b",
        "cursor": {
          "ref": "ab721b83-01df-4ebc-af20-3c296e355710",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d1d312b6-edad-44c2-91a0-e5de2980f6d5"
        },
        "item": {
          "id": "e40e0a22-aed1-482c-ae3d-26760d023a4b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b15ffde8-daaa-422d-a144-e199420cf861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87858956-a7e9-42a5-b644-68c7179123a5",
        "cursor": {
          "ref": "8d24a2c4-d09c-42a9-a8bd-80c1e0a3206f",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0bf70b03-8eb9-4867-9cb9-116c952a3433"
        },
        "item": {
          "id": "87858956-a7e9-42a5-b644-68c7179123a5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "37ad66a4-bcfb-455a-afa2-49017440da97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4563ec41-f480-415c-a1ae-abb9ce5aaac2",
        "cursor": {
          "ref": "b88eefd8-3885-46ac-9228-31d9deadcd77",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5a70bd3a-0495-4161-b54d-b55cb6821a5c"
        },
        "item": {
          "id": "4563ec41-f480-415c-a1ae-abb9ce5aaac2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c8ba30db-af1e-405e-8d61-4d916afa83df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f057b87-6d42-4694-aec1-3b9b5d95a0c1",
        "cursor": {
          "ref": "40ae59fc-54a1-43f8-a2e5-645d1ff2955f",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "77311ca5-051c-4d62-bc91-07bcf769b542"
        },
        "item": {
          "id": "5f057b87-6d42-4694-aec1-3b9b5d95a0c1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2beb2469-5b8e-42e6-951e-eb04418895f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7983eb27-b5f1-46ef-94ff-a8c1373369d1",
        "cursor": {
          "ref": "a9101826-b5e7-4acd-9f46-657d36f9758e",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1bcd2fd5-aa50-4c12-86f5-1cfa770c4523"
        },
        "item": {
          "id": "7983eb27-b5f1-46ef-94ff-a8c1373369d1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2dc8038f-4556-4d4e-93cb-c4321149a698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499180d1-b268-49e6-b805-2236e0068dad",
        "cursor": {
          "ref": "40698b1c-cb41-444a-9aa2-7daeac9fad9b",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9cef1cde-bcea-4b06-8685-009f643352fa"
        },
        "item": {
          "id": "499180d1-b268-49e6-b805-2236e0068dad",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8ccb7a18-177d-46e0-8665-ebce0b724e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39011ff-05e9-45f8-a667-fa1b98467502",
        "cursor": {
          "ref": "0cc3a027-0035-4c93-bff3-9aa203412daa",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "822fa029-9a24-403d-b771-cd4d5584dac4"
        },
        "item": {
          "id": "b39011ff-05e9-45f8-a667-fa1b98467502",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "31fb16c4-5e99-4f72-89a5-bbac763c55c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7266d92a-002f-482a-9f95-c60c2dfd896d",
        "cursor": {
          "ref": "e615b724-9bc0-4df1-a371-9878e74a133c",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "61cc7d08-2a54-44fe-9983-bbaa733578b6"
        },
        "item": {
          "id": "7266d92a-002f-482a-9f95-c60c2dfd896d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b798afc3-0ffb-4284-9558-2e5c9838896c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8470d398-353e-4179-bcd2-412a964483a1",
        "cursor": {
          "ref": "c95e53af-acee-4b77-9fc5-c70ea898ad6d",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "198d6cba-79ef-4cde-9247-aca4d805ee97"
        },
        "item": {
          "id": "8470d398-353e-4179-bcd2-412a964483a1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "000fb565-5f97-4060-8e40-28eb4dca1acd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ee20ad-5899-4c27-9537-942d5a63fc8e",
        "cursor": {
          "ref": "8db94464-b8fc-477d-92e6-7ede176aada0",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3ca2cfe5-6431-471f-bf02-0cfe06bac1ec"
        },
        "item": {
          "id": "e9ee20ad-5899-4c27-9537-942d5a63fc8e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a8cbfb4f-0b90-4510-9125-6d88adf41cb3",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a225cf79-6824-450b-b1d9-b0fb7b74d979",
        "cursor": {
          "ref": "753aef5e-70f1-4f01-9c3f-fce5a20e9041",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "41a5b8fe-3aca-48cc-91e5-c0788e1f1e46"
        },
        "item": {
          "id": "a225cf79-6824-450b-b1d9-b0fb7b74d979",
          "name": "credentials_verify"
        },
        "response": {
          "id": "850605b8-4fc3-4414-9f5f-a0716dcc5d25",
          "status": "OK",
          "code": 200,
          "responseTime": 2897,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cdc6482-eaec-4ece-8c6e-f81939f70573",
        "cursor": {
          "ref": "49d7e6e1-bb49-4af8-b518-da7a7fffe6dc",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "59cdff47-154e-43ed-9ad8-9950d1c265b9"
        },
        "item": {
          "id": "0cdc6482-eaec-4ece-8c6e-f81939f70573",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3d3aea95-58ba-486c-8b13-517a3cdec576",
          "status": "OK",
          "code": 200,
          "responseTime": 3029,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "55aabeaf-f5ea-46a7-b1ea-d851db971737",
        "cursor": {
          "ref": "d7f63d87-54d8-414c-bd4b-644048696184",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5e36dc13-203a-4987-9177-b863b8108a6f"
        },
        "item": {
          "id": "55aabeaf-f5ea-46a7-b1ea-d851db971737",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "39744221-13b7-4f24-9308-54c510e245ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55aabeaf-f5ea-46a7-b1ea-d851db971737",
        "cursor": {
          "ref": "d7f63d87-54d8-414c-bd4b-644048696184",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5e36dc13-203a-4987-9177-b863b8108a6f"
        },
        "item": {
          "id": "55aabeaf-f5ea-46a7-b1ea-d851db971737",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "39744221-13b7-4f24-9308-54c510e245ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36fee90-4e9b-4c5b-8135-11f25e03f5fd",
        "cursor": {
          "ref": "3895cea7-8269-471f-b7e8-a849d566ba72",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6b17c32c-ffe4-45a7-8ee7-ebc69a2a6bde"
        },
        "item": {
          "id": "d36fee90-4e9b-4c5b-8135-11f25e03f5fd",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9d4521a8-7bf2-475d-bd05-1e21e9798ce0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89780c85-f9cb-4523-b8a8-ea6b32aad6cd",
        "cursor": {
          "ref": "770b2c1a-6484-433c-9d29-9b38095f3982",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "424b144f-5f2a-41d2-b16b-59db8d045029"
        },
        "item": {
          "id": "89780c85-f9cb-4523-b8a8-ea6b32aad6cd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "eac3d702-6f84-463e-93af-a9da2f907125",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}